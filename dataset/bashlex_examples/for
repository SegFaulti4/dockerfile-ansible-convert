1) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


2) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


3) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libmagickcore-dev   libmagickwand-dev   libmariadbclient-dev   libpq-dev   libsqlite3-dev   make   patch     libssl1.0-dev  ;  rm -rf /var/lib/apt/lists/*;   wget -O freetds.tar.bz2 'http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2';  echo '8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2' | md5sum -c -;  mkdir freetds;  tar -xf freetds.tar.bz2 -C freetds --strip-components=1;  rm freetds.tar.bz2;  ( cd freetds && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && ./configure --build="$gnuArch" --enable-silent-rules && make -j "$(nproc)" && make -C src install && make -C include install );  rm -rf freetds;  gosu redmine bundle config build.tiny_tds --enable-system-freetds;   gosu redmine bundle install --without development test;  for adapter in mysql2 postgresql sqlserver sqlite3; do   echo "$RAILS_ENV:" > ./config/database.yml;   echo "  adapter: $adapter" >> ./config/database.yml;   gosu redmine bundle install --without development test;   cp Gemfile.lock "Gemfile.lock.${adapter}";  done;  rm ./config/database.yml;  chmod -R ugo=rwX Gemfile.lock "$GEM_HOME";  rm -rf ~redmine/.bundle;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | grep -v '^/usr/local/'   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

ListNode(pos=(0, 1647), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 253), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 87), word='-y'),
    WordNode(pos=(88, 111), word='--no-install-recommends'),
    WordNode(pos=(114, 122), word='dpkg-dev'),
    WordNode(pos=(125, 128), word='gcc'),
    WordNode(pos=(131, 148), word='libmagickcore-dev'),
    WordNode(pos=(151, 168), word='libmagickwand-dev'),
    WordNode(pos=(171, 191), word='libmariadbclient-dev'),
    WordNode(pos=(194, 203), word='libpq-dev'),
    WordNode(pos=(206, 220), word='libsqlite3-dev'),
    WordNode(pos=(223, 227), word='make'),
    WordNode(pos=(230, 235), word='patch'),
    WordNode(pos=(240, 253), word='libssl1.0-dev'),
  ]),
  OperatorNode(op=';', pos=(255, 256)),
  CommandNode(pos=(258, 285), parts=[
    WordNode(pos=(258, 260), word='rm'),
    WordNode(pos=(261, 264), word='-rf'),
    WordNode(pos=(265, 285), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(285, 286)),
  CommandNode(pos=(289, 374), parts=[
    WordNode(pos=(289, 293), word='wget'),
    WordNode(pos=(294, 296), word='-O'),
    WordNode(pos=(297, 312), word='freetds.tar.bz2'),
    WordNode(pos=(313, 374), word='http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(374, 375)),
  PipelineNode(pos=(377, 447), parts=[
    CommandNode(pos=(377, 433), parts=[
      WordNode(pos=(377, 381), word='echo'),
      WordNode(pos=(382, 433), word='8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2'),
    ]),
    PipeNode(pipe='|', pos=(434, 435)),
    CommandNode(pos=(436, 447), parts=[
      WordNode(pos=(436, 442), word='md5sum'),
      WordNode(pos=(443, 445), word='-c'),
      WordNode(pos=(446, 447), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(447, 448)),
  CommandNode(pos=(450, 463), parts=[
    WordNode(pos=(450, 455), word='mkdir'),
    WordNode(pos=(456, 463), word='freetds'),
  ]),
  OperatorNode(op=';', pos=(463, 464)),
  CommandNode(pos=(466, 521), parts=[
    WordNode(pos=(466, 469), word='tar'),
    WordNode(pos=(470, 473), word='-xf'),
    WordNode(pos=(474, 489), word='freetds.tar.bz2'),
    WordNode(pos=(490, 492), word='-C'),
    WordNode(pos=(493, 500), word='freetds'),
    WordNode(pos=(501, 521), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(521, 522)),
  CommandNode(pos=(524, 542), parts=[
    WordNode(pos=(524, 526), word='rm'),
    WordNode(pos=(527, 542), word='freetds.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(542, 543)),
  CompoundNode(list=[
    ReservedwordNode(pos=(545, 546), word='('),
    ListNode(pos=(547, 746), parts=[
        CommandNode(pos=(547, 557), parts=[
          WordNode(pos=(547, 549), word='cd'),
          WordNode(pos=(550, 557), word='freetds'),
        ]),
        OperatorNode(op='&&', pos=(558, 560)),
        CommandNode(pos=(561, 618), parts=[
          AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(572, 616), parts=[
                WordNode(pos=(572, 589), word='dpkg-architecture'),
                WordNode(pos=(590, 597), word='--query'),
                WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(570, 617)),
          ]),
        ]),
        OperatorNode(op='&&', pos=(619, 621)),
        CommandNode(pos=(622, 674), parts=[
          WordNode(pos=(622, 633), word='./configure'),
          WordNode(pos=(634, 652), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(643, 651), value='gnuArch'),
          ]),
          WordNode(pos=(653, 674), word='--enable-silent-rules'),
        ]),
        OperatorNode(op='&&', pos=(675, 677)),
        CommandNode(pos=(678, 696), parts=[
          WordNode(pos=(678, 682), word='make'),
          WordNode(pos=(683, 685), word='-j'),
          WordNode(pos=(686, 696), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(689, 694), parts=[
                WordNode(pos=(689, 694), word='nproc'),
              ]), pos=(687, 695)),
          ]),
        ]),
        OperatorNode(op='&&', pos=(697, 699)),
        CommandNode(pos=(700, 719), parts=[
          WordNode(pos=(700, 704), word='make'),
          WordNode(pos=(705, 707), word='-C'),
          WordNode(pos=(708, 711), word='src'),
          WordNode(pos=(712, 719), word='install'),
        ]),
        OperatorNode(op='&&', pos=(720, 722)),
        CommandNode(pos=(723, 746), parts=[
          WordNode(pos=(723, 727), word='make'),
          WordNode(pos=(728, 730), word='-C'),
          WordNode(pos=(731, 738), word='include'),
          WordNode(pos=(739, 746), word='install'),
        ]),
      ]),
    ReservedwordNode(pos=(747, 748), word=')'),
  ], pos=(545, 748)),
  OperatorNode(op=';', pos=(748, 749)),
  CommandNode(pos=(751, 765), parts=[
    WordNode(pos=(751, 753), word='rm'),
    WordNode(pos=(754, 757), word='-rf'),
    WordNode(pos=(758, 765), word='freetds'),
  ]),
  OperatorNode(op=';', pos=(765, 766)),
  CommandNode(pos=(768, 833), parts=[
    WordNode(pos=(768, 772), word='gosu'),
    WordNode(pos=(773, 780), word='redmine'),
    WordNode(pos=(781, 787), word='bundle'),
    WordNode(pos=(788, 794), word='config'),
    WordNode(pos=(795, 809), word='build.tiny_tds'),
    WordNode(pos=(810, 833), word='--enable-system-freetds'),
  ]),
  OperatorNode(op=';', pos=(833, 834)),
  CommandNode(pos=(837, 891), parts=[
    WordNode(pos=(837, 841), word='gosu'),
    WordNode(pos=(842, 849), word='redmine'),
    WordNode(pos=(850, 856), word='bundle'),
    WordNode(pos=(857, 864), word='install'),
    WordNode(pos=(865, 874), word='--without'),
    WordNode(pos=(875, 886), word='development'),
    WordNode(pos=(887, 891), word='test'),
  ]),
  OperatorNode(op=';', pos=(891, 892)),
  CompoundNode(list=[
    ForNode(pos=(894, 1158), parts=[
      ReservedwordNode(pos=(894, 897), word='for'),
      WordNode(pos=(898, 905), word='adapter'),
      ReservedwordNode(pos=(906, 908), word='in'),
      WordNode(pos=(909, 915), word='mysql2'),
      WordNode(pos=(916, 926), word='postgresql'),
      WordNode(pos=(927, 936), word='sqlserver'),
      WordNode(pos=(937, 944), word='sqlite3'),
      ReservedwordNode(pos=(944, 945), word=';'),
      ReservedwordNode(pos=(946, 948), word='do'),
      ListNode(pos=(951, 1152), parts=[
          CommandNode(pos=(951, 993), parts=[
            WordNode(pos=(951, 955), word='echo'),
            WordNode(pos=(956, 969), word='$RAILS_ENV:', parts=[
              ParameterNode(pos=(957, 967), value='RAILS_ENV'),
            ]),
            RedirectNode(output=
              WordNode(pos=(972, 993), word='./config/database.yml'), pos=(970, 993), type='>'),
          ]),
          OperatorNode(op=';', pos=(993, 994)),
          CommandNode(pos=(997, 1048), parts=[
            WordNode(pos=(997, 1001), word='echo'),
            WordNode(pos=(1002, 1023), word='  adapter: $adapter', parts=[
              ParameterNode(pos=(1014, 1022), value='adapter'),
            ]),
            RedirectNode(output=
              WordNode(pos=(1027, 1048), word='./config/database.yml'), pos=(1024, 1048), type='>>'),
          ]),
          OperatorNode(op=';', pos=(1048, 1049)),
          CommandNode(pos=(1052, 1106), parts=[
            WordNode(pos=(1052, 1056), word='gosu'),
            WordNode(pos=(1057, 1064), word='redmine'),
            WordNode(pos=(1065, 1071), word='bundle'),
            WordNode(pos=(1072, 1079), word='install'),
            WordNode(pos=(1080, 1089), word='--without'),
            WordNode(pos=(1090, 1101), word='development'),
            WordNode(pos=(1102, 1106), word='test'),
          ]),
          OperatorNode(op=';', pos=(1106, 1107)),
          CommandNode(pos=(1110, 1151), parts=[
            WordNode(pos=(1110, 1112), word='cp'),
            WordNode(pos=(1113, 1125), word='Gemfile.lock'),
            WordNode(pos=(1126, 1151), word='Gemfile.lock.${adapter}', parts=[
              ParameterNode(pos=(1140, 1150), value='adapter'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1151, 1152)),
        ]),
      ReservedwordNode(pos=(1154, 1158), word='done'),
    ]),
  ], pos=(894, 1158)),
  OperatorNode(op=';', pos=(1158, 1159)),
  CommandNode(pos=(1161, 1185), parts=[
    WordNode(pos=(1161, 1163), word='rm'),
    WordNode(pos=(1164, 1185), word='./config/database.yml'),
  ]),
  OperatorNode(op=';', pos=(1185, 1186)),
  CommandNode(pos=(1188, 1229), parts=[
    WordNode(pos=(1188, 1193), word='chmod'),
    WordNode(pos=(1194, 1196), word='-R'),
    WordNode(pos=(1197, 1204), word='ugo=rwX'),
    WordNode(pos=(1205, 1217), word='Gemfile.lock'),
    WordNode(pos=(1218, 1229), word='$GEM_HOME', parts=[
      ParameterNode(pos=(1219, 1228), value='GEM_HOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1229, 1230)),
  CommandNode(pos=(1232, 1255), parts=[
    WordNode(pos=(1232, 1234), word='rm'),
    WordNode(pos=(1235, 1238), word='-rf'),
    WordNode(pos=(1239, 1255), word='~redmine/.bundle', parts=[
      TildeNode(pos=(1239, 1247), value='~redmine'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1255, 1256)),
  CommandNode(pos=(1259, 1289), parts=[
    WordNode(pos=(1259, 1267), word='apt-mark'),
    WordNode(pos=(1268, 1272), word='auto'),
    WordNode(pos=(1273, 1277), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1280, 1289), word='/dev/null'), pos=(1278, 1289), type='>'),
  ]),
  OperatorNode(op=';', pos=(1289, 1290)),
  CommandNode(pos=(1292, 1314), parts=[
    WordNode(pos=(1292, 1293), word='['),
    WordNode(pos=(1294, 1296), word='-z'),
    WordNode(pos=(1297, 1312), word='$savedAptMark', parts=[
      ParameterNode(pos=(1298, 1311), value='savedAptMark'),
    ]),
    WordNode(pos=(1313, 1314), word=']'),
  ]),
  OperatorNode(op='||', pos=(1315, 1317)),
  CommandNode(pos=(1318, 1347), parts=[
    WordNode(pos=(1318, 1326), word='apt-mark'),
    WordNode(pos=(1327, 1333), word='manual'),
    WordNode(pos=(1334, 1347), word='$savedAptMark', parts=[
      ParameterNode(pos=(1334, 1347), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1347, 1348)),
  PipelineNode(pos=(1350, 1566), parts=[
    CommandNode(pos=(1350, 1404), parts=[
      WordNode(pos=(1350, 1354), word='find'),
      WordNode(pos=(1355, 1365), word='/usr/local'),
      WordNode(pos=(1366, 1371), word='-type'),
      WordNode(pos=(1372, 1373), word='f'),
      WordNode(pos=(1374, 1385), word='-executable'),
      WordNode(pos=(1386, 1391), word='-exec'),
      WordNode(pos=(1392, 1395), word='ldd'),
      WordNode(pos=(1396, 1400), word='{}'),
      WordNode(pos=(1401, 1404), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1407, 1408)),
    CommandNode(pos=(1409, 1437), parts=[
      WordNode(pos=(1409, 1412), word='awk'),
      WordNode(pos=(1413, 1437), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1440, 1441)),
    CommandNode(pos=(1442, 1449), parts=[
      WordNode(pos=(1442, 1446), word='sort'),
      WordNode(pos=(1447, 1449), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1452, 1453)),
    CommandNode(pos=(1454, 1476), parts=[
      WordNode(pos=(1454, 1458), word='grep'),
      WordNode(pos=(1459, 1461), word='-v'),
      WordNode(pos=(1462, 1476), word='^/usr/local/'),
    ]),
    PipeNode(pipe='|', pos=(1479, 1480)),
    CommandNode(pos=(1481, 1509), parts=[
      WordNode(pos=(1481, 1486), word='xargs'),
      WordNode(pos=(1487, 1489), word='-r'),
      WordNode(pos=(1490, 1500), word='dpkg-query'),
      WordNode(pos=(1501, 1509), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1512, 1513)),
    CommandNode(pos=(1514, 1525), parts=[
      WordNode(pos=(1514, 1517), word='cut'),
      WordNode(pos=(1518, 1521), word='-d:'),
      WordNode(pos=(1522, 1525), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1528, 1529)),
    CommandNode(pos=(1530, 1537), parts=[
      WordNode(pos=(1530, 1534), word='sort'),
      WordNode(pos=(1535, 1537), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1540, 1541)),
    CommandNode(pos=(1542, 1566), parts=[
      WordNode(pos=(1542, 1547), word='xargs'),
      WordNode(pos=(1548, 1550), word='-r'),
      WordNode(pos=(1551, 1559), word='apt-mark'),
      WordNode(pos=(1560, 1566), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1568, 1569)),
  CommandNode(pos=(1571, 1647), parts=[
    WordNode(pos=(1571, 1578), word='apt-get'),
    WordNode(pos=(1579, 1584), word='purge'),
    WordNode(pos=(1585, 1587), word='-y'),
    WordNode(pos=(1588, 1601), word='--auto-remove'),
    WordNode(pos=(1602, 1604), word='-o'),
    WordNode(pos=(1605, 1647), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
])


4) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


5) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


6) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


7) set -ex;  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done

ListNode(pos=(0, 113), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    ForNode(pos=(10, 113), parts=[
      ReservedwordNode(pos=(10, 13), word='for'),
      WordNode(pos=(14, 17), word='key'),
      ReservedwordNode(pos=(18, 20), word='in'),
      WordNode(pos=(21, 30), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(21, 30), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(30, 31), word=';'),
      ReservedwordNode(pos=(32, 34), word='do'),
      ListNode(pos=(37, 107), parts=[
          CommandNode(pos=(37, 106), parts=[
            WordNode(pos=(37, 40), word='gpg'),
            WordNode(pos=(41, 48), word='--batch'),
            WordNode(pos=(49, 60), word='--keyserver'),
            WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(88, 99), word='--recv-keys'),
            WordNode(pos=(100, 106), word='$key', parts=[
              ParameterNode(pos=(101, 105), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
        ]),
      ReservedwordNode(pos=(109, 113), word='done'),
    ]),
  ], pos=(10, 113)),
])


8) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


9) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


10) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


11) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


12) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


13) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


14) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


15) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 304), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 219), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 240), parts=[
    WordNode(pos=(222, 229), word='command'),
    WordNode(pos=(230, 232), word='-v'),
    WordNode(pos=(233, 240), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(241, 243)),
  CommandNode(pos=(244, 262), parts=[
    WordNode(pos=(244, 251), word='gpgconf'),
    WordNode(pos=(252, 258), word='--kill'),
    WordNode(pos=(259, 262), word='all'),
  ]),
  OperatorNode(op='||', pos=(263, 265)),
  CommandNode(pos=(266, 267), parts=[
    WordNode(pos=(266, 267), word=':'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 289), parts=[
    WordNode(pos=(270, 272), word='rm'),
    WordNode(pos=(273, 276), word='-rf'),
    WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(278, 288), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(289, 290)),
  CommandNode(pos=(292, 304), parts=[
    WordNode(pos=(292, 299), word='apt-key'),
    WordNode(pos=(300, 304), word='list'),
  ]),
])


16) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


17) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


18) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


19) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


20) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


21) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


22) set -ex;  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done

ListNode(pos=(0, 113), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    ForNode(pos=(10, 113), parts=[
      ReservedwordNode(pos=(10, 13), word='for'),
      WordNode(pos=(14, 17), word='key'),
      ReservedwordNode(pos=(18, 20), word='in'),
      WordNode(pos=(21, 30), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(21, 30), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(30, 31), word=';'),
      ReservedwordNode(pos=(32, 34), word='do'),
      ListNode(pos=(37, 107), parts=[
          CommandNode(pos=(37, 106), parts=[
            WordNode(pos=(37, 40), word='gpg'),
            WordNode(pos=(41, 48), word='--batch'),
            WordNode(pos=(49, 60), word='--keyserver'),
            WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(88, 99), word='--recv-keys'),
            WordNode(pos=(100, 106), word='$key', parts=[
              ParameterNode(pos=(101, 105), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
        ]),
      ReservedwordNode(pos=(109, 113), word='done'),
    ]),
  ], pos=(10, 113)),
])


23) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


24) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


25) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


26) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


27) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


28) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


29) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


30) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


31) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


32) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


33) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


34) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


35) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


36) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


37) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


38) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


39) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


40) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


41) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 697), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 201), parts=[
    AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(205, 219), parts=[
    WordNode(pos=(205, 209), word='make'),
    WordNode(pos=(210, 219), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CompoundNode(list=[
    ForNode(pos=(223, 319), parts=[
      ReservedwordNode(pos=(223, 226), word='for'),
      WordNode(pos=(227, 231), word='conf'),
      ReservedwordNode(pos=(232, 234), word='in'),
      WordNode(pos=(235, 246), word='$unsetConfs', parts=[
        ParameterNode(pos=(235, 246), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(246, 247), word=';'),
      ReservedwordNode(pos=(248, 250), word='do'),
      ListNode(pos=(253, 313), parts=[
          CommandNode(pos=(253, 312), parts=[
            WordNode(pos=(253, 256), word='sed'),
            WordNode(pos=(257, 259), word='-i'),
            WordNode(pos=(263, 265), word='-e'),
            WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(270, 275), value='conf'),
              ParameterNode(pos=(283, 288), value='conf'),
            ]),
            WordNode(pos=(305, 312), word='.config'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(315, 319), word='done'),
    ]),
  ], pos=(223, 319)),
  OperatorNode(op=';', pos=(319, 320)),
  CompoundNode(list=[
    ForNode(pos=(323, 544), parts=[
      ReservedwordNode(pos=(323, 326), word='for'),
      WordNode(pos=(327, 332), word='confV'),
      ReservedwordNode(pos=(333, 335), word='in'),
      WordNode(pos=(336, 345), word='$setConfs', parts=[
        ParameterNode(pos=(336, 345), value='setConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 538), parts=[
          CommandNode(pos=(352, 370), parts=[
            AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(358, 369), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(370, 371)),
          CommandNode(pos=(374, 461), parts=[
            WordNode(pos=(374, 377), word='sed'),
            WordNode(pos=(378, 380), word='-i'),
            WordNode(pos=(384, 386), word='-e'),
            WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(391, 396), value='conf'),
              ParameterNode(pos=(402, 408), value='confV'),
            ]),
            WordNode(pos=(414, 416), word='-e'),
            WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(423, 428), value='conf'),
              ParameterNode(pos=(442, 448), value='confV'),
            ]),
            WordNode(pos=(454, 461), word='.config'),
          ]),
          OperatorNode(op=';', pos=(461, 462)),
          CompoundNode(list=[
            IfNode(pos=(465, 537), parts=[
              ReservedwordNode(pos=(465, 467), word='if'),
              ListNode(pos=(468, 498), parts=[
                  PipelineNode(pos=(468, 497), parts=[
                    ReservedwordNode(pos=(468, 469), word='!'),
                    CommandNode(pos=(470, 497), parts=[
                      WordNode(pos=(470, 474), word='grep'),
                      WordNode(pos=(475, 477), word='-q'),
                      WordNode(pos=(478, 489), word='^$confV$', parts=[
                        ParameterNode(pos=(480, 486), value='confV'),
                      ]),
                      WordNode(pos=(490, 497), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(497, 498)),
                ]),
              ReservedwordNode(pos=(499, 503), word='then'),
              ListNode(pos=(507, 532), parts=[
                  CommandNode(pos=(507, 531), parts=[
                    WordNode(pos=(507, 511), word='echo'),
                    WordNode(pos=(512, 520), word='$confV', parts=[
                      ParameterNode(pos=(513, 519), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(531, 532)),
                ]),
              ReservedwordNode(pos=(535, 537), word='fi'),
            ]),
          ], pos=(465, 537)),
          OperatorNode(op=';', pos=(537, 538)),
        ]),
      ReservedwordNode(pos=(540, 544), word='done'),
    ]),
  ], pos=(323, 544)),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(548, 562), parts=[
    WordNode(pos=(548, 552), word='make'),
    WordNode(pos=(553, 562), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(562, 563)),
  CompoundNode(list=[
    ForNode(pos=(566, 630), parts=[
      ReservedwordNode(pos=(566, 569), word='for'),
      WordNode(pos=(570, 574), word='conf'),
      ReservedwordNode(pos=(575, 577), word='in'),
      WordNode(pos=(578, 589), word='$unsetConfs', parts=[
        ParameterNode(pos=(578, 589), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 624), parts=[
          PipelineNode(pos=(596, 623), parts=[
            ReservedwordNode(pos=(596, 597), word='!'),
            CommandNode(pos=(598, 623), parts=[
              WordNode(pos=(598, 602), word='grep'),
              WordNode(pos=(603, 605), word='-q'),
              WordNode(pos=(606, 615), word='^$conf=', parts=[
                ParameterNode(pos=(608, 613), value='conf'),
              ]),
              WordNode(pos=(616, 623), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(623, 624)),
        ]),
      ReservedwordNode(pos=(626, 630), word='done'),
    ]),
  ], pos=(566, 630)),
  OperatorNode(op=';', pos=(630, 631)),
  CompoundNode(list=[
    ForNode(pos=(633, 696), parts=[
      ReservedwordNode(pos=(633, 636), word='for'),
      WordNode(pos=(637, 642), word='confV'),
      ReservedwordNode(pos=(643, 645), word='in'),
      WordNode(pos=(646, 655), word='$setConfs', parts=[
        ParameterNode(pos=(646, 655), value='setConfs'),
      ]),
      ReservedwordNode(pos=(655, 656), word=';'),
      ReservedwordNode(pos=(657, 659), word='do'),
      ListNode(pos=(662, 690), parts=[
          CommandNode(pos=(662, 689), parts=[
            WordNode(pos=(662, 666), word='grep'),
            WordNode(pos=(667, 669), word='-q'),
            WordNode(pos=(670, 681), word='^$confV$', parts=[
              ParameterNode(pos=(672, 678), value='confV'),
            ]),
            WordNode(pos=(682, 689), word='.config'),
          ]),
          OperatorNode(op=';', pos=(689, 690)),
        ]),
      ReservedwordNode(pos=(692, 696), word='done'),
    ]),
  ], pos=(633, 696)),
  OperatorNode(op=';', pos=(696, 697)),
])


42) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 697), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 201), parts=[
    AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(205, 219), parts=[
    WordNode(pos=(205, 209), word='make'),
    WordNode(pos=(210, 219), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CompoundNode(list=[
    ForNode(pos=(223, 319), parts=[
      ReservedwordNode(pos=(223, 226), word='for'),
      WordNode(pos=(227, 231), word='conf'),
      ReservedwordNode(pos=(232, 234), word='in'),
      WordNode(pos=(235, 246), word='$unsetConfs', parts=[
        ParameterNode(pos=(235, 246), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(246, 247), word=';'),
      ReservedwordNode(pos=(248, 250), word='do'),
      ListNode(pos=(253, 313), parts=[
          CommandNode(pos=(253, 312), parts=[
            WordNode(pos=(253, 256), word='sed'),
            WordNode(pos=(257, 259), word='-i'),
            WordNode(pos=(263, 265), word='-e'),
            WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(270, 275), value='conf'),
              ParameterNode(pos=(283, 288), value='conf'),
            ]),
            WordNode(pos=(305, 312), word='.config'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(315, 319), word='done'),
    ]),
  ], pos=(223, 319)),
  OperatorNode(op=';', pos=(319, 320)),
  CompoundNode(list=[
    ForNode(pos=(323, 544), parts=[
      ReservedwordNode(pos=(323, 326), word='for'),
      WordNode(pos=(327, 332), word='confV'),
      ReservedwordNode(pos=(333, 335), word='in'),
      WordNode(pos=(336, 345), word='$setConfs', parts=[
        ParameterNode(pos=(336, 345), value='setConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 538), parts=[
          CommandNode(pos=(352, 370), parts=[
            AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(358, 369), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(370, 371)),
          CommandNode(pos=(374, 461), parts=[
            WordNode(pos=(374, 377), word='sed'),
            WordNode(pos=(378, 380), word='-i'),
            WordNode(pos=(384, 386), word='-e'),
            WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(391, 396), value='conf'),
              ParameterNode(pos=(402, 408), value='confV'),
            ]),
            WordNode(pos=(414, 416), word='-e'),
            WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(423, 428), value='conf'),
              ParameterNode(pos=(442, 448), value='confV'),
            ]),
            WordNode(pos=(454, 461), word='.config'),
          ]),
          OperatorNode(op=';', pos=(461, 462)),
          CompoundNode(list=[
            IfNode(pos=(465, 537), parts=[
              ReservedwordNode(pos=(465, 467), word='if'),
              ListNode(pos=(468, 498), parts=[
                  PipelineNode(pos=(468, 497), parts=[
                    ReservedwordNode(pos=(468, 469), word='!'),
                    CommandNode(pos=(470, 497), parts=[
                      WordNode(pos=(470, 474), word='grep'),
                      WordNode(pos=(475, 477), word='-q'),
                      WordNode(pos=(478, 489), word='^$confV$', parts=[
                        ParameterNode(pos=(480, 486), value='confV'),
                      ]),
                      WordNode(pos=(490, 497), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(497, 498)),
                ]),
              ReservedwordNode(pos=(499, 503), word='then'),
              ListNode(pos=(507, 532), parts=[
                  CommandNode(pos=(507, 531), parts=[
                    WordNode(pos=(507, 511), word='echo'),
                    WordNode(pos=(512, 520), word='$confV', parts=[
                      ParameterNode(pos=(513, 519), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(531, 532)),
                ]),
              ReservedwordNode(pos=(535, 537), word='fi'),
            ]),
          ], pos=(465, 537)),
          OperatorNode(op=';', pos=(537, 538)),
        ]),
      ReservedwordNode(pos=(540, 544), word='done'),
    ]),
  ], pos=(323, 544)),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(548, 562), parts=[
    WordNode(pos=(548, 552), word='make'),
    WordNode(pos=(553, 562), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(562, 563)),
  CompoundNode(list=[
    ForNode(pos=(566, 630), parts=[
      ReservedwordNode(pos=(566, 569), word='for'),
      WordNode(pos=(570, 574), word='conf'),
      ReservedwordNode(pos=(575, 577), word='in'),
      WordNode(pos=(578, 589), word='$unsetConfs', parts=[
        ParameterNode(pos=(578, 589), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 624), parts=[
          PipelineNode(pos=(596, 623), parts=[
            ReservedwordNode(pos=(596, 597), word='!'),
            CommandNode(pos=(598, 623), parts=[
              WordNode(pos=(598, 602), word='grep'),
              WordNode(pos=(603, 605), word='-q'),
              WordNode(pos=(606, 615), word='^$conf=', parts=[
                ParameterNode(pos=(608, 613), value='conf'),
              ]),
              WordNode(pos=(616, 623), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(623, 624)),
        ]),
      ReservedwordNode(pos=(626, 630), word='done'),
    ]),
  ], pos=(566, 630)),
  OperatorNode(op=';', pos=(630, 631)),
  CompoundNode(list=[
    ForNode(pos=(633, 696), parts=[
      ReservedwordNode(pos=(633, 636), word='for'),
      WordNode(pos=(637, 642), word='confV'),
      ReservedwordNode(pos=(643, 645), word='in'),
      WordNode(pos=(646, 655), word='$setConfs', parts=[
        ParameterNode(pos=(646, 655), value='setConfs'),
      ]),
      ReservedwordNode(pos=(655, 656), word=';'),
      ReservedwordNode(pos=(657, 659), word='do'),
      ListNode(pos=(662, 690), parts=[
          CommandNode(pos=(662, 689), parts=[
            WordNode(pos=(662, 666), word='grep'),
            WordNode(pos=(667, 669), word='-q'),
            WordNode(pos=(670, 681), word='^$confV$', parts=[
              ParameterNode(pos=(672, 678), value='confV'),
            ]),
            WordNode(pos=(682, 689), word='.config'),
          ]),
          OperatorNode(op=';', pos=(689, 690)),
        ]),
      ReservedwordNode(pos=(692, 696), word='done'),
    ]),
  ], pos=(633, 696)),
  OperatorNode(op=';', pos=(696, 697)),
])


43) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 697), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 201), parts=[
    AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(205, 219), parts=[
    WordNode(pos=(205, 209), word='make'),
    WordNode(pos=(210, 219), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CompoundNode(list=[
    ForNode(pos=(223, 319), parts=[
      ReservedwordNode(pos=(223, 226), word='for'),
      WordNode(pos=(227, 231), word='conf'),
      ReservedwordNode(pos=(232, 234), word='in'),
      WordNode(pos=(235, 246), word='$unsetConfs', parts=[
        ParameterNode(pos=(235, 246), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(246, 247), word=';'),
      ReservedwordNode(pos=(248, 250), word='do'),
      ListNode(pos=(253, 313), parts=[
          CommandNode(pos=(253, 312), parts=[
            WordNode(pos=(253, 256), word='sed'),
            WordNode(pos=(257, 259), word='-i'),
            WordNode(pos=(263, 265), word='-e'),
            WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(270, 275), value='conf'),
              ParameterNode(pos=(283, 288), value='conf'),
            ]),
            WordNode(pos=(305, 312), word='.config'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(315, 319), word='done'),
    ]),
  ], pos=(223, 319)),
  OperatorNode(op=';', pos=(319, 320)),
  CompoundNode(list=[
    ForNode(pos=(323, 544), parts=[
      ReservedwordNode(pos=(323, 326), word='for'),
      WordNode(pos=(327, 332), word='confV'),
      ReservedwordNode(pos=(333, 335), word='in'),
      WordNode(pos=(336, 345), word='$setConfs', parts=[
        ParameterNode(pos=(336, 345), value='setConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 538), parts=[
          CommandNode(pos=(352, 370), parts=[
            AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(358, 369), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(370, 371)),
          CommandNode(pos=(374, 461), parts=[
            WordNode(pos=(374, 377), word='sed'),
            WordNode(pos=(378, 380), word='-i'),
            WordNode(pos=(384, 386), word='-e'),
            WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(391, 396), value='conf'),
              ParameterNode(pos=(402, 408), value='confV'),
            ]),
            WordNode(pos=(414, 416), word='-e'),
            WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(423, 428), value='conf'),
              ParameterNode(pos=(442, 448), value='confV'),
            ]),
            WordNode(pos=(454, 461), word='.config'),
          ]),
          OperatorNode(op=';', pos=(461, 462)),
          CompoundNode(list=[
            IfNode(pos=(465, 537), parts=[
              ReservedwordNode(pos=(465, 467), word='if'),
              ListNode(pos=(468, 498), parts=[
                  PipelineNode(pos=(468, 497), parts=[
                    ReservedwordNode(pos=(468, 469), word='!'),
                    CommandNode(pos=(470, 497), parts=[
                      WordNode(pos=(470, 474), word='grep'),
                      WordNode(pos=(475, 477), word='-q'),
                      WordNode(pos=(478, 489), word='^$confV$', parts=[
                        ParameterNode(pos=(480, 486), value='confV'),
                      ]),
                      WordNode(pos=(490, 497), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(497, 498)),
                ]),
              ReservedwordNode(pos=(499, 503), word='then'),
              ListNode(pos=(507, 532), parts=[
                  CommandNode(pos=(507, 531), parts=[
                    WordNode(pos=(507, 511), word='echo'),
                    WordNode(pos=(512, 520), word='$confV', parts=[
                      ParameterNode(pos=(513, 519), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(531, 532)),
                ]),
              ReservedwordNode(pos=(535, 537), word='fi'),
            ]),
          ], pos=(465, 537)),
          OperatorNode(op=';', pos=(537, 538)),
        ]),
      ReservedwordNode(pos=(540, 544), word='done'),
    ]),
  ], pos=(323, 544)),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(548, 562), parts=[
    WordNode(pos=(548, 552), word='make'),
    WordNode(pos=(553, 562), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(562, 563)),
  CompoundNode(list=[
    ForNode(pos=(566, 630), parts=[
      ReservedwordNode(pos=(566, 569), word='for'),
      WordNode(pos=(570, 574), word='conf'),
      ReservedwordNode(pos=(575, 577), word='in'),
      WordNode(pos=(578, 589), word='$unsetConfs', parts=[
        ParameterNode(pos=(578, 589), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 624), parts=[
          PipelineNode(pos=(596, 623), parts=[
            ReservedwordNode(pos=(596, 597), word='!'),
            CommandNode(pos=(598, 623), parts=[
              WordNode(pos=(598, 602), word='grep'),
              WordNode(pos=(603, 605), word='-q'),
              WordNode(pos=(606, 615), word='^$conf=', parts=[
                ParameterNode(pos=(608, 613), value='conf'),
              ]),
              WordNode(pos=(616, 623), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(623, 624)),
        ]),
      ReservedwordNode(pos=(626, 630), word='done'),
    ]),
  ], pos=(566, 630)),
  OperatorNode(op=';', pos=(630, 631)),
  CompoundNode(list=[
    ForNode(pos=(633, 696), parts=[
      ReservedwordNode(pos=(633, 636), word='for'),
      WordNode(pos=(637, 642), word='confV'),
      ReservedwordNode(pos=(643, 645), word='in'),
      WordNode(pos=(646, 655), word='$setConfs', parts=[
        ParameterNode(pos=(646, 655), value='setConfs'),
      ]),
      ReservedwordNode(pos=(655, 656), word=';'),
      ReservedwordNode(pos=(657, 659), word='do'),
      ListNode(pos=(662, 690), parts=[
          CommandNode(pos=(662, 689), parts=[
            WordNode(pos=(662, 666), word='grep'),
            WordNode(pos=(667, 669), word='-q'),
            WordNode(pos=(670, 681), word='^$confV$', parts=[
              ParameterNode(pos=(672, 678), value='confV'),
            ]),
            WordNode(pos=(682, 689), word='.config'),
          ]),
          OperatorNode(op=';', pos=(689, 690)),
        ]),
      ReservedwordNode(pos=(692, 696), word='done'),
    ]),
  ], pos=(633, 696)),
  OperatorNode(op=';', pos=(696, 697)),
])


44) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 697), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 201), parts=[
    AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(205, 219), parts=[
    WordNode(pos=(205, 209), word='make'),
    WordNode(pos=(210, 219), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CompoundNode(list=[
    ForNode(pos=(223, 319), parts=[
      ReservedwordNode(pos=(223, 226), word='for'),
      WordNode(pos=(227, 231), word='conf'),
      ReservedwordNode(pos=(232, 234), word='in'),
      WordNode(pos=(235, 246), word='$unsetConfs', parts=[
        ParameterNode(pos=(235, 246), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(246, 247), word=';'),
      ReservedwordNode(pos=(248, 250), word='do'),
      ListNode(pos=(253, 313), parts=[
          CommandNode(pos=(253, 312), parts=[
            WordNode(pos=(253, 256), word='sed'),
            WordNode(pos=(257, 259), word='-i'),
            WordNode(pos=(263, 265), word='-e'),
            WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(270, 275), value='conf'),
              ParameterNode(pos=(283, 288), value='conf'),
            ]),
            WordNode(pos=(305, 312), word='.config'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(315, 319), word='done'),
    ]),
  ], pos=(223, 319)),
  OperatorNode(op=';', pos=(319, 320)),
  CompoundNode(list=[
    ForNode(pos=(323, 544), parts=[
      ReservedwordNode(pos=(323, 326), word='for'),
      WordNode(pos=(327, 332), word='confV'),
      ReservedwordNode(pos=(333, 335), word='in'),
      WordNode(pos=(336, 345), word='$setConfs', parts=[
        ParameterNode(pos=(336, 345), value='setConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 538), parts=[
          CommandNode(pos=(352, 370), parts=[
            AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(358, 369), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(370, 371)),
          CommandNode(pos=(374, 461), parts=[
            WordNode(pos=(374, 377), word='sed'),
            WordNode(pos=(378, 380), word='-i'),
            WordNode(pos=(384, 386), word='-e'),
            WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(391, 396), value='conf'),
              ParameterNode(pos=(402, 408), value='confV'),
            ]),
            WordNode(pos=(414, 416), word='-e'),
            WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(423, 428), value='conf'),
              ParameterNode(pos=(442, 448), value='confV'),
            ]),
            WordNode(pos=(454, 461), word='.config'),
          ]),
          OperatorNode(op=';', pos=(461, 462)),
          CompoundNode(list=[
            IfNode(pos=(465, 537), parts=[
              ReservedwordNode(pos=(465, 467), word='if'),
              ListNode(pos=(468, 498), parts=[
                  PipelineNode(pos=(468, 497), parts=[
                    ReservedwordNode(pos=(468, 469), word='!'),
                    CommandNode(pos=(470, 497), parts=[
                      WordNode(pos=(470, 474), word='grep'),
                      WordNode(pos=(475, 477), word='-q'),
                      WordNode(pos=(478, 489), word='^$confV$', parts=[
                        ParameterNode(pos=(480, 486), value='confV'),
                      ]),
                      WordNode(pos=(490, 497), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(497, 498)),
                ]),
              ReservedwordNode(pos=(499, 503), word='then'),
              ListNode(pos=(507, 532), parts=[
                  CommandNode(pos=(507, 531), parts=[
                    WordNode(pos=(507, 511), word='echo'),
                    WordNode(pos=(512, 520), word='$confV', parts=[
                      ParameterNode(pos=(513, 519), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(531, 532)),
                ]),
              ReservedwordNode(pos=(535, 537), word='fi'),
            ]),
          ], pos=(465, 537)),
          OperatorNode(op=';', pos=(537, 538)),
        ]),
      ReservedwordNode(pos=(540, 544), word='done'),
    ]),
  ], pos=(323, 544)),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(548, 562), parts=[
    WordNode(pos=(548, 552), word='make'),
    WordNode(pos=(553, 562), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(562, 563)),
  CompoundNode(list=[
    ForNode(pos=(566, 630), parts=[
      ReservedwordNode(pos=(566, 569), word='for'),
      WordNode(pos=(570, 574), word='conf'),
      ReservedwordNode(pos=(575, 577), word='in'),
      WordNode(pos=(578, 589), word='$unsetConfs', parts=[
        ParameterNode(pos=(578, 589), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 624), parts=[
          PipelineNode(pos=(596, 623), parts=[
            ReservedwordNode(pos=(596, 597), word='!'),
            CommandNode(pos=(598, 623), parts=[
              WordNode(pos=(598, 602), word='grep'),
              WordNode(pos=(603, 605), word='-q'),
              WordNode(pos=(606, 615), word='^$conf=', parts=[
                ParameterNode(pos=(608, 613), value='conf'),
              ]),
              WordNode(pos=(616, 623), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(623, 624)),
        ]),
      ReservedwordNode(pos=(626, 630), word='done'),
    ]),
  ], pos=(566, 630)),
  OperatorNode(op=';', pos=(630, 631)),
  CompoundNode(list=[
    ForNode(pos=(633, 696), parts=[
      ReservedwordNode(pos=(633, 636), word='for'),
      WordNode(pos=(637, 642), word='confV'),
      ReservedwordNode(pos=(643, 645), word='in'),
      WordNode(pos=(646, 655), word='$setConfs', parts=[
        ParameterNode(pos=(646, 655), value='setConfs'),
      ]),
      ReservedwordNode(pos=(655, 656), word=';'),
      ReservedwordNode(pos=(657, 659), word='do'),
      ListNode(pos=(662, 690), parts=[
          CommandNode(pos=(662, 689), parts=[
            WordNode(pos=(662, 666), word='grep'),
            WordNode(pos=(667, 669), word='-q'),
            WordNode(pos=(670, 681), word='^$confV$', parts=[
              ParameterNode(pos=(672, 678), value='confV'),
            ]),
            WordNode(pos=(682, 689), word='.config'),
          ]),
          OperatorNode(op=';', pos=(689, 690)),
        ]),
      ReservedwordNode(pos=(692, 696), word='done'),
    ]),
  ], pos=(633, 696)),
  OperatorNode(op=';', pos=(696, 697)),
])


45) set -ex;  mkdir -p rootfs/etc;  for f in passwd shadow group; do   ln -vL    "../buildroot/system/skeleton/etc/$f"    "rootfs/etc/$f";  done;  grep -E '^root::' rootfs/etc/shadow;  sed -ri -e 's/^root::/root:*:/' rootfs/etc/shadow;  grep -E '^root:[*]:' rootfs/etc/shadow;  awk '   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \"%s\" encountered in line %d: %s\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\n", $1;    }    printf "chmod %s %s\n", $3, $1;   }  ' ../buildroot/system/device_table.txt | bash -Eeuo pipefail -x

ListNode(pos=(0, 629), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 29), parts=[
    WordNode(pos=(10, 15), word='mkdir'),
    WordNode(pos=(16, 18), word='-p'),
    WordNode(pos=(19, 29), word='rootfs/etc'),
  ]),
  OperatorNode(op=';', pos=(29, 30)),
  CompoundNode(list=[
    ForNode(pos=(32, 140), parts=[
      ReservedwordNode(pos=(32, 35), word='for'),
      WordNode(pos=(36, 37), word='f'),
      ReservedwordNode(pos=(38, 40), word='in'),
      WordNode(pos=(41, 47), word='passwd'),
      WordNode(pos=(48, 54), word='shadow'),
      WordNode(pos=(55, 60), word='group'),
      ReservedwordNode(pos=(60, 61), word=';'),
      ReservedwordNode(pos=(62, 64), word='do'),
      ListNode(pos=(67, 134), parts=[
          CommandNode(pos=(67, 133), parts=[
            WordNode(pos=(67, 69), word='ln'),
            WordNode(pos=(70, 73), word='-vL'),
            WordNode(pos=(77, 114), word='../buildroot/system/skeleton/etc/$f', parts=[
              ParameterNode(pos=(111, 113), value='f'),
            ]),
            WordNode(pos=(118, 133), word='rootfs/etc/$f', parts=[
              ParameterNode(pos=(130, 132), value='f'),
            ]),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
        ]),
      ReservedwordNode(pos=(136, 140), word='done'),
    ]),
  ], pos=(32, 140)),
  OperatorNode(op=';', pos=(140, 141)),
  CommandNode(pos=(143, 178), parts=[
    WordNode(pos=(143, 147), word='grep'),
    WordNode(pos=(148, 150), word='-E'),
    WordNode(pos=(151, 160), word='^root::'),
    WordNode(pos=(161, 178), word='rootfs/etc/shadow'),
  ]),
  OperatorNode(op=';', pos=(178, 179)),
  CommandNode(pos=(181, 230), parts=[
    WordNode(pos=(181, 184), word='sed'),
    WordNode(pos=(185, 188), word='-ri'),
    WordNode(pos=(189, 191), word='-e'),
    WordNode(pos=(192, 212), word='s/^root::/root:*:/'),
    WordNode(pos=(213, 230), word='rootfs/etc/shadow'),
  ]),
  OperatorNode(op=';', pos=(230, 231)),
  CommandNode(pos=(233, 271), parts=[
    WordNode(pos=(233, 237), word='grep'),
    WordNode(pos=(238, 240), word='-E'),
    WordNode(pos=(241, 253), word='^root:[*]:'),
    WordNode(pos=(254, 271), word='rootfs/etc/shadow'),
  ]),
  OperatorNode(op=';', pos=(271, 272)),
  PipelineNode(pos=(274, 629), parts=[
    CommandNode(pos=(274, 604), parts=[
      WordNode(pos=(274, 277), word='awk'),
      WordNode(pos=(278, 567), word='   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \\"%s\\" encountered in line %d: %s\\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\\n", $1;    }    printf "chmod %s %s\\n", $3, $1;   }  '),
      WordNode(pos=(568, 604), word='../buildroot/system/device_table.txt'),
    ]),
    PipeNode(pipe='|', pos=(605, 606)),
    CommandNode(pos=(607, 629), parts=[
      WordNode(pos=(607, 611), word='bash'),
      WordNode(pos=(612, 617), word='-Eeuo'),
      WordNode(pos=(618, 626), word='pipefail'),
      WordNode(pos=(627, 629), word='-x'),
    ]),
  ]),
])


46) set -ex  && cd rootfs  && for userHome in $(awk -F ':' '{ print $3 ":" $4 "=" $6 }' etc/passwd); do   user="${userHome%%=*}";   home="${userHome#*=}";   home="./${home#/}";   if [ ! -d "$home" ]; then    mkdir -p "$home";    chown "$user" "$home";    chmod 755 "$home";   fi;  done

ListNode(pos=(0, 281), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 21), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 21), word='rootfs'),
  ]),
  OperatorNode(op='&&', pos=(23, 25)),
  CompoundNode(list=[
    ForNode(pos=(26, 281), parts=[
      ReservedwordNode(pos=(26, 29), word='for'),
      WordNode(pos=(30, 38), word='userHome'),
      ReservedwordNode(pos=(39, 41), word='in'),
      WordNode(pos=(42, 95), word='$(awk -F \':\' \'{ print $3 ":" $4 "=" $6 }\' etc/passwd)', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(44, 94), parts=[
            WordNode(pos=(44, 47), word='awk'),
            WordNode(pos=(48, 50), word='-F'),
            WordNode(pos=(51, 54), word=':'),
            WordNode(pos=(55, 83), word='{ print $3 ":" $4 "=" $6 }'),
            WordNode(pos=(84, 94), word='etc/passwd'),
          ]), pos=(42, 95)),
      ]),
      ReservedwordNode(pos=(95, 96), word=';'),
      ReservedwordNode(pos=(97, 99), word='do'),
      ListNode(pos=(102, 275), parts=[
          CommandNode(pos=(102, 124), parts=[
            AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
              ParameterNode(pos=(108, 123), value='userHome%%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(124, 125)),
          CommandNode(pos=(128, 149), parts=[
            AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
              ParameterNode(pos=(134, 148), value='userHome#*='),
            ]),
          ]),
          OperatorNode(op=';', pos=(149, 150)),
          CommandNode(pos=(153, 171), parts=[
            AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
              ParameterNode(pos=(161, 170), value='home#/'),
            ]),
          ]),
          OperatorNode(op=';', pos=(171, 172)),
          CompoundNode(list=[
            IfNode(pos=(175, 274), parts=[
              ReservedwordNode(pos=(175, 177), word='if'),
              ListNode(pos=(178, 195), parts=[
                  CommandNode(pos=(178, 194), parts=[
                    WordNode(pos=(178, 179), word='['),
                    WordNode(pos=(180, 181), word='!'),
                    WordNode(pos=(182, 184), word='-d'),
                    WordNode(pos=(185, 192), word='$home', parts=[
                      ParameterNode(pos=(186, 191), value='home'),
                    ]),
                    WordNode(pos=(193, 194), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(194, 195)),
                ]),
              ReservedwordNode(pos=(196, 200), word='then'),
              ListNode(pos=(204, 269), parts=[
                  CommandNode(pos=(204, 220), parts=[
                    WordNode(pos=(204, 209), word='mkdir'),
                    WordNode(pos=(210, 212), word='-p'),
                    WordNode(pos=(213, 220), word='$home', parts=[
                      ParameterNode(pos=(214, 219), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(220, 221)),
                  CommandNode(pos=(225, 246), parts=[
                    WordNode(pos=(225, 230), word='chown'),
                    WordNode(pos=(231, 238), word='$user', parts=[
                      ParameterNode(pos=(232, 237), value='user'),
                    ]),
                    WordNode(pos=(239, 246), word='$home', parts=[
                      ParameterNode(pos=(240, 245), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(246, 247)),
                  CommandNode(pos=(251, 268), parts=[
                    WordNode(pos=(251, 256), word='chmod'),
                    WordNode(pos=(257, 260), word='755'),
                    WordNode(pos=(261, 268), word='$home', parts=[
                      ParameterNode(pos=(262, 267), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(268, 269)),
                ]),
              ReservedwordNode(pos=(272, 274), word='fi'),
            ]),
          ], pos=(175, 274)),
          OperatorNode(op=';', pos=(274, 275)),
        ]),
      ReservedwordNode(pos=(277, 281), word='done'),
    ]),
  ], pos=(26, 281)),
])


47) set -eux;   runDeps='   apr-dev   apr-util-dev   apr-util-ldap   perl  ';  apk add --no-cache --virtual .build-deps   $runDeps   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gnupg   libc-dev   curl-dev   jansson-dev   libxml2-dev   lua-dev   make   nghttp2-dev   openssl   openssl-dev   pcre-dev   tar   zlib-dev  ;   ddist() {   local f="$1"; shift;   local distFile="$1"; shift;   local success=;   local distUrl=;   for distUrl in $APACHE_DIST_URLS; do    if wget -O "$f" "$distUrl$distFile" && [ -s "$f" ]; then     success=1;     break;    fi;   done;   [ -n "$success" ];  };   ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2";  echo "$HTTPD_SHA256 *httpd.tar.bz2" | sha256sum -c -;   ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc";  export GNUPGHOME="$(mktemp -d)";  for key in   A93D62ECC3C8EA12DB220EC934EA76E6791485A8   B9E8213AEFB861AF35A41F2C995E35221AD84DFF  ; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME" httpd.tar.bz2.asc;   mkdir -p src;  tar -xf httpd.tar.bz2 -C src --strip-components=1;  rm httpd.tar.bz2;  cd src;   patches() {   while [ "$#" -gt 0 ]; do    local patchFile="$1"; shift;    local patchSha256="$1"; shift;    ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile";    echo "$patchSha256 *$patchFile" | sha256sum -c -;    patch -p0 < "$patchFile";    rm -f "$patchFile";   done;  };  patches $HTTPD_PATCHES;   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all  ;  make -j "$(nproc)";  make install;   cd ..;  rm -r src man manual;   sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"  ;   runDeps="$runDeps $(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --virtual .httpd-rundeps $runDeps;  apk del .build-deps;   httpd -v

ListNode(pos=(0, 2343), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 72), parts=[
    AssignmentNode(pos=(12, 72), word='runDeps=   apr-dev   apr-util-dev   apr-util-ldap   perl  '),
  ]),
  OperatorNode(op=';', pos=(72, 73)),
  CommandNode(pos=(75, 319), parts=[
    WordNode(pos=(75, 78), word='apk'),
    WordNode(pos=(79, 82), word='add'),
    WordNode(pos=(83, 93), word='--no-cache'),
    WordNode(pos=(94, 103), word='--virtual'),
    WordNode(pos=(104, 115), word='.build-deps'),
    WordNode(pos=(118, 126), word='$runDeps', parts=[
      ParameterNode(pos=(118, 126), value='runDeps'),
    ]),
    WordNode(pos=(129, 144), word='ca-certificates'),
    WordNode(pos=(147, 156), word='coreutils'),
    WordNode(pos=(159, 167), word='dpkg-dev'),
    WordNode(pos=(168, 172), word='dpkg'),
    WordNode(pos=(175, 178), word='gcc'),
    WordNode(pos=(181, 186), word='gnupg'),
    WordNode(pos=(189, 197), word='libc-dev'),
    WordNode(pos=(200, 208), word='curl-dev'),
    WordNode(pos=(211, 222), word='jansson-dev'),
    WordNode(pos=(225, 236), word='libxml2-dev'),
    WordNode(pos=(239, 246), word='lua-dev'),
    WordNode(pos=(249, 253), word='make'),
    WordNode(pos=(256, 267), word='nghttp2-dev'),
    WordNode(pos=(270, 277), word='openssl'),
    WordNode(pos=(280, 291), word='openssl-dev'),
    WordNode(pos=(294, 302), word='pcre-dev'),
    WordNode(pos=(305, 308), word='tar'),
    WordNode(pos=(311, 319), word='zlib-dev'),
  ]),
  OperatorNode(op=';', pos=(321, 322)),
  FunctionNode(pos=(325, 587), parts=[
    WordNode(pos=(325, 330), word='ddist'),
    ReservedwordNode(pos=(330, 331), word='('),
    ReservedwordNode(pos=(331, 332), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(333, 334), word='{'),
      ListNode(pos=(337, 584), parts=[
          CommandNode(pos=(337, 349), parts=[
            WordNode(pos=(337, 342), word='local'),
            WordNode(pos=(343, 349), word='f=$1', parts=[
              ParameterNode(pos=(346, 348), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(349, 350)),
          CommandNode(pos=(351, 356), parts=[
            WordNode(pos=(351, 356), word='shift'),
          ]),
          OperatorNode(op=';', pos=(356, 357)),
          CommandNode(pos=(360, 379), parts=[
            WordNode(pos=(360, 365), word='local'),
            WordNode(pos=(366, 379), word='distFile=$1', parts=[
              ParameterNode(pos=(376, 378), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(381, 386), parts=[
            WordNode(pos=(381, 386), word='shift'),
          ]),
          OperatorNode(op=';', pos=(386, 387)),
          CommandNode(pos=(390, 404), parts=[
            WordNode(pos=(390, 395), word='local'),
            WordNode(pos=(396, 404), word='success='),
          ]),
          OperatorNode(op=';', pos=(404, 405)),
          CommandNode(pos=(408, 422), parts=[
            WordNode(pos=(408, 413), word='local'),
            WordNode(pos=(414, 422), word='distUrl='),
          ]),
          OperatorNode(op=';', pos=(422, 423)),
          CompoundNode(list=[
            ForNode(pos=(426, 562), parts=[
              ReservedwordNode(pos=(426, 429), word='for'),
              WordNode(pos=(430, 437), word='distUrl'),
              ReservedwordNode(pos=(438, 440), word='in'),
              WordNode(pos=(441, 458), word='$APACHE_DIST_URLS', parts=[
                ParameterNode(pos=(441, 458), value='APACHE_DIST_URLS'),
              ]),
              ReservedwordNode(pos=(458, 459), word=';'),
              ReservedwordNode(pos=(460, 462), word='do'),
              ListNode(pos=(466, 555), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(466, 554), parts=[
                      ReservedwordNode(pos=(466, 468), word='if'),
                      ListNode(pos=(469, 517), parts=[
                          CommandNode(pos=(469, 501), parts=[
                            WordNode(pos=(469, 473), word='wget'),
                            WordNode(pos=(474, 476), word='-O'),
                            WordNode(pos=(477, 481), word='$f', parts=[
                              ParameterNode(pos=(478, 480), value='f'),
                            ]),
                            WordNode(pos=(482, 501), word='$distUrl$distFile', parts=[
                              ParameterNode(pos=(483, 491), value='distUrl'),
                              ParameterNode(pos=(491, 500), value='distFile'),
                            ]),
                          ]),
                          OperatorNode(op='&&', pos=(502, 504)),
                          CommandNode(pos=(505, 516), parts=[
                            WordNode(pos=(505, 506), word='['),
                            WordNode(pos=(507, 509), word='-s'),
                            WordNode(pos=(510, 514), word='$f', parts=[
                              ParameterNode(pos=(511, 513), value='f'),
                            ]),
                            WordNode(pos=(515, 516), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(516, 517)),
                        ]),
                      ReservedwordNode(pos=(518, 522), word='then'),
                      ListNode(pos=(527, 548), parts=[
                          CommandNode(pos=(527, 536), parts=[
                            AssignmentNode(pos=(527, 536), word='success=1'),
                          ]),
                          OperatorNode(op=';', pos=(536, 537)),
                          CommandNode(pos=(542, 547), parts=[
                            WordNode(pos=(542, 547), word='break'),
                          ]),
                          OperatorNode(op=';', pos=(547, 548)),
                        ]),
                      ReservedwordNode(pos=(552, 554), word='fi'),
                    ]),
                  ], pos=(466, 554)),
                  OperatorNode(op=';', pos=(554, 555)),
                ]),
              ReservedwordNode(pos=(558, 562), word='done'),
            ]),
          ], pos=(426, 562)),
          OperatorNode(op=';', pos=(562, 563)),
          CommandNode(pos=(566, 583), parts=[
            WordNode(pos=(566, 567), word='['),
            WordNode(pos=(568, 570), word='-n'),
            WordNode(pos=(571, 581), word='$success', parts=[
              ParameterNode(pos=(572, 580), value='success'),
            ]),
            WordNode(pos=(582, 583), word=']'),
          ]),
          OperatorNode(op=';', pos=(583, 584)),
        ]),
      ReservedwordNode(pos=(586, 587), word='}'),
    ], pos=(333, 587)),
  ]),
  OperatorNode(op=';', pos=(587, 588)),
  CommandNode(pos=(591, 649), parts=[
    WordNode(pos=(591, 596), word='ddist'),
    WordNode(pos=(597, 612), word='httpd.tar.bz2'),
    WordNode(pos=(613, 649), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
      ParameterNode(pos=(626, 640), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 704), parts=[
    CommandNode(pos=(652, 687), parts=[
      WordNode(pos=(652, 656), word='echo'),
      WordNode(pos=(657, 687), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
        ParameterNode(pos=(658, 671), value='HTTPD_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(688, 689)),
    CommandNode(pos=(690, 704), parts=[
      WordNode(pos=(690, 699), word='sha256sum'),
      WordNode(pos=(700, 702), word='-c'),
      WordNode(pos=(703, 704), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(708, 774), parts=[
    WordNode(pos=(708, 713), word='ddist'),
    WordNode(pos=(714, 733), word='httpd.tar.bz2.asc'),
    WordNode(pos=(734, 774), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
      ParameterNode(pos=(747, 761), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(774, 775)),
  CommandNode(pos=(777, 808), parts=[
    WordNode(pos=(777, 783), word='export'),
    WordNode(pos=(784, 808), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(797, 806), parts=[
          WordNode(pos=(797, 803), word='mktemp'),
          WordNode(pos=(804, 806), word='-d'),
        ]), pos=(795, 807)),
    ]),
  ]),
  OperatorNode(op=';', pos=(808, 809)),
  CompoundNode(list=[
    ForNode(pos=(811, 992), parts=[
      ReservedwordNode(pos=(811, 814), word='for'),
      WordNode(pos=(815, 818), word='key'),
      ReservedwordNode(pos=(819, 821), word='in'),
      WordNode(pos=(824, 864), word='A93D62ECC3C8EA12DB220EC934EA76E6791485A8'),
      WordNode(pos=(867, 907), word='B9E8213AEFB861AF35A41F2C995E35221AD84DFF'),
      ReservedwordNode(pos=(909, 910), word=';'),
      ReservedwordNode(pos=(911, 913), word='do'),
      ListNode(pos=(916, 986), parts=[
          CommandNode(pos=(916, 985), parts=[
            WordNode(pos=(916, 919), word='gpg'),
            WordNode(pos=(920, 927), word='--batch'),
            WordNode(pos=(928, 939), word='--keyserver'),
            WordNode(pos=(940, 966), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(967, 978), word='--recv-keys'),
            WordNode(pos=(979, 985), word='$key', parts=[
              ParameterNode(pos=(980, 984), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(985, 986)),
        ]),
      ReservedwordNode(pos=(988, 992), word='done'),
    ]),
  ], pos=(811, 992)),
  OperatorNode(op=';', pos=(992, 993)),
  CommandNode(pos=(995, 1047), parts=[
    WordNode(pos=(995, 998), word='gpg'),
    WordNode(pos=(999, 1006), word='--batch'),
    WordNode(pos=(1007, 1015), word='--verify'),
    WordNode(pos=(1016, 1033), word='httpd.tar.bz2.asc'),
    WordNode(pos=(1034, 1047), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1047, 1048)),
  CommandNode(pos=(1050, 1068), parts=[
    WordNode(pos=(1050, 1057), word='command'),
    WordNode(pos=(1058, 1060), word='-v'),
    WordNode(pos=(1061, 1068), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(1069, 1071)),
  CommandNode(pos=(1072, 1090), parts=[
    WordNode(pos=(1072, 1079), word='gpgconf'),
    WordNode(pos=(1080, 1086), word='--kill'),
    WordNode(pos=(1087, 1090), word='all'),
  ]),
  OperatorNode(op='||', pos=(1091, 1093)),
  CommandNode(pos=(1094, 1095), parts=[
    WordNode(pos=(1094, 1095), word=':'),
  ]),
  OperatorNode(op=';', pos=(1095, 1096)),
  CommandNode(pos=(1098, 1135), parts=[
    WordNode(pos=(1098, 1100), word='rm'),
    WordNode(pos=(1101, 1104), word='-rf'),
    WordNode(pos=(1105, 1117), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(1106, 1116), value='GNUPGHOME'),
    ]),
    WordNode(pos=(1118, 1135), word='httpd.tar.bz2.asc'),
  ]),
  OperatorNode(op=';', pos=(1135, 1136)),
  CommandNode(pos=(1139, 1151), parts=[
    WordNode(pos=(1139, 1144), word='mkdir'),
    WordNode(pos=(1145, 1147), word='-p'),
    WordNode(pos=(1148, 1151), word='src'),
  ]),
  OperatorNode(op=';', pos=(1151, 1152)),
  CommandNode(pos=(1154, 1203), parts=[
    WordNode(pos=(1154, 1157), word='tar'),
    WordNode(pos=(1158, 1161), word='-xf'),
    WordNode(pos=(1162, 1175), word='httpd.tar.bz2'),
    WordNode(pos=(1176, 1178), word='-C'),
    WordNode(pos=(1179, 1182), word='src'),
    WordNode(pos=(1183, 1203), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1203, 1204)),
  CommandNode(pos=(1206, 1222), parts=[
    WordNode(pos=(1206, 1208), word='rm'),
    WordNode(pos=(1209, 1222), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1222, 1223)),
  CommandNode(pos=(1225, 1231), parts=[
    WordNode(pos=(1225, 1227), word='cd'),
    WordNode(pos=(1228, 1231), word='src'),
  ]),
  OperatorNode(op=';', pos=(1231, 1232)),
  FunctionNode(pos=(1235, 1529), parts=[
    WordNode(pos=(1235, 1242), word='patches'),
    ReservedwordNode(pos=(1242, 1243), word='('),
    ReservedwordNode(pos=(1243, 1244), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(1245, 1246), word='{'),
      ListNode(pos=(1249, 1526), parts=[
          CompoundNode(list=[
            WhileNode(pos=(1249, 1525), parts=[
              ReservedwordNode(pos=(1249, 1254), word='while'),
              ListNode(pos=(1255, 1270), parts=[
                  CommandNode(pos=(1255, 1269), parts=[
                    WordNode(pos=(1255, 1256), word='['),
                    WordNode(pos=(1257, 1261), word='$#', parts=[
                      ParameterNode(pos=(1258, 1260), value='#'),
                    ]),
                    WordNode(pos=(1262, 1265), word='-gt'),
                    WordNode(pos=(1266, 1267), word='0'),
                    WordNode(pos=(1268, 1269), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(1269, 1270)),
                ]),
              ReservedwordNode(pos=(1271, 1273), word='do'),
              ListNode(pos=(1277, 1518), parts=[
                  CommandNode(pos=(1277, 1297), parts=[
                    WordNode(pos=(1277, 1282), word='local'),
                    WordNode(pos=(1283, 1297), word='patchFile=$1', parts=[
                      ParameterNode(pos=(1294, 1296), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1297, 1298)),
                  CommandNode(pos=(1299, 1304), parts=[
                    WordNode(pos=(1299, 1304), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1304, 1305)),
                  CommandNode(pos=(1309, 1331), parts=[
                    WordNode(pos=(1309, 1314), word='local'),
                    WordNode(pos=(1315, 1331), word='patchSha256=$1', parts=[
                      ParameterNode(pos=(1328, 1330), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1331, 1332)),
                  CommandNode(pos=(1333, 1338), parts=[
                    WordNode(pos=(1333, 1338), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1338, 1339)),
                  CommandNode(pos=(1343, 1412), parts=[
                    WordNode(pos=(1343, 1348), word='ddist'),
                    WordNode(pos=(1349, 1361), word='$patchFile', parts=[
                      ParameterNode(pos=(1350, 1360), value='patchFile'),
                    ]),
                    WordNode(pos=(1362, 1412), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
                      ParameterNode(pos=(1386, 1400), value='HTTPD_VERSION'),
                      ParameterNode(pos=(1401, 1411), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1412, 1413)),
                  PipelineNode(pos=(1417, 1465), parts=[
                    CommandNode(pos=(1417, 1448), parts=[
                      WordNode(pos=(1417, 1421), word='echo'),
                      WordNode(pos=(1422, 1448), word='$patchSha256 *$patchFile', parts=[
                        ParameterNode(pos=(1423, 1435), value='patchSha256'),
                        ParameterNode(pos=(1437, 1447), value='patchFile'),
                      ]),
                    ]),
                    PipeNode(pipe='|', pos=(1449, 1450)),
                    CommandNode(pos=(1451, 1465), parts=[
                      WordNode(pos=(1451, 1460), word='sha256sum'),
                      WordNode(pos=(1461, 1463), word='-c'),
                      WordNode(pos=(1464, 1465), word='-'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1465, 1466)),
                  CommandNode(pos=(1470, 1494), parts=[
                    WordNode(pos=(1470, 1475), word='patch'),
                    WordNode(pos=(1476, 1479), word='-p0'),
                    RedirectNode(output=
                      WordNode(pos=(1482, 1494), word='$patchFile', parts=[
                        ParameterNode(pos=(1483, 1493), value='patchFile'),
                      ]), pos=(1480, 1494), type='<'),
                  ]),
                  OperatorNode(op=';', pos=(1494, 1495)),
                  CommandNode(pos=(1499, 1517), parts=[
                    WordNode(pos=(1499, 1501), word='rm'),
                    WordNode(pos=(1502, 1504), word='-f'),
                    WordNode(pos=(1505, 1517), word='$patchFile', parts=[
                      ParameterNode(pos=(1506, 1516), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1517, 1518)),
                ]),
              ReservedwordNode(pos=(1521, 1525), word='done'),
            ]),
          ], pos=(1249, 1525)),
          OperatorNode(op=';', pos=(1525, 1526)),
        ]),
      ReservedwordNode(pos=(1528, 1529), word='}'),
    ], pos=(1245, 1529)),
  ]),
  OperatorNode(op=';', pos=(1529, 1530)),
  CommandNode(pos=(1532, 1554), parts=[
    WordNode(pos=(1532, 1539), word='patches'),
    WordNode(pos=(1540, 1554), word='$HTTPD_PATCHES', parts=[
      ParameterNode(pos=(1540, 1554), value='HTTPD_PATCHES'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1554, 1555)),
  CommandNode(pos=(1558, 1615), parts=[
    AssignmentNode(pos=(1558, 1615), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1569, 1613), parts=[
          WordNode(pos=(1569, 1586), word='dpkg-architecture'),
          WordNode(pos=(1587, 1594), word='--query'),
          WordNode(pos=(1595, 1613), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1567, 1614)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1615, 1616)),
  CommandNode(pos=(1618, 1737), parts=[
    WordNode(pos=(1618, 1629), word='./configure'),
    WordNode(pos=(1632, 1650), word='--build=$gnuArch', parts=[
      ParameterNode(pos=(1641, 1649), value='gnuArch'),
    ]),
    WordNode(pos=(1653, 1677), word='--prefix=$HTTPD_PREFIX', parts=[
      ParameterNode(pos=(1663, 1676), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(1680, 1710), word='--enable-mods-shared=reallyall'),
    WordNode(pos=(1713, 1737), word='--enable-mpms-shared=all'),
  ]),
  OperatorNode(op=';', pos=(1739, 1740)),
  CommandNode(pos=(1742, 1760), parts=[
    WordNode(pos=(1742, 1746), word='make'),
    WordNode(pos=(1747, 1749), word='-j'),
    WordNode(pos=(1750, 1760), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1753, 1758), parts=[
          WordNode(pos=(1753, 1758), word='nproc'),
        ]), pos=(1751, 1759)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1760, 1761)),
  CommandNode(pos=(1763, 1775), parts=[
    WordNode(pos=(1763, 1767), word='make'),
    WordNode(pos=(1768, 1775), word='install'),
  ]),
  OperatorNode(op=';', pos=(1775, 1776)),
  CommandNode(pos=(1779, 1784), parts=[
    WordNode(pos=(1779, 1781), word='cd'),
    WordNode(pos=(1782, 1784), word='..'),
  ]),
  OperatorNode(op=';', pos=(1784, 1785)),
  CommandNode(pos=(1787, 1807), parts=[
    WordNode(pos=(1787, 1789), word='rm'),
    WordNode(pos=(1790, 1792), word='-r'),
    WordNode(pos=(1793, 1796), word='src'),
    WordNode(pos=(1797, 1800), word='man'),
    WordNode(pos=(1801, 1807), word='manual'),
  ]),
  OperatorNode(op=';', pos=(1807, 1808)),
  CommandNode(pos=(1811, 2053), parts=[
    WordNode(pos=(1811, 1814), word='sed'),
    WordNode(pos=(1815, 1818), word='-ri'),
    WordNode(pos=(1821, 1823), word='-e'),
    WordNode(pos=(1824, 1870), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(1873, 1875), word='-e'),
    WordNode(pos=(1876, 1921), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
    WordNode(pos=(1924, 1926), word='-e'),
    WordNode(pos=(1927, 1975), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(1978, 2009), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
      ParameterNode(pos=(1979, 1992), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(2012, 2053), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
      ParameterNode(pos=(2013, 2026), value='HTTPD_PREFIX'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2055, 2056)),
  CommandNode(pos=(2059, 2265), parts=[
    AssignmentNode(pos=(2059, 2265), word='runDeps=$runDeps $(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      ParameterNode(pos=(2068, 2076), value='runDeps'),
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2082, 2261), parts=[
          CommandNode(pos=(2082, 2148), parts=[
            WordNode(pos=(2082, 2089), word='scanelf'),
            WordNode(pos=(2090, 2098), word='--needed'),
            WordNode(pos=(2099, 2109), word='--nobanner'),
            WordNode(pos=(2110, 2118), word='--format'),
            WordNode(pos=(2119, 2125), word='%n#p'),
            WordNode(pos=(2126, 2137), word='--recursive'),
            WordNode(pos=(2138, 2148), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(2152, 2153)),
          CommandNode(pos=(2154, 2165), parts=[
            WordNode(pos=(2154, 2156), word='tr'),
            WordNode(pos=(2157, 2160), word=','),
            WordNode(pos=(2161, 2165), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(2169, 2170)),
          CommandNode(pos=(2171, 2178), parts=[
            WordNode(pos=(2171, 2175), word='sort'),
            WordNode(pos=(2176, 2178), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(2182, 2183)),
          CommandNode(pos=(2184, 2261), parts=[
            WordNode(pos=(2184, 2187), word='awk'),
            WordNode(pos=(2188, 2261), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2077, 2262)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2265, 2266)),
  CommandNode(pos=(2268, 2309), parts=[
    WordNode(pos=(2268, 2271), word='apk'),
    WordNode(pos=(2272, 2275), word='add'),
    WordNode(pos=(2276, 2285), word='--virtual'),
    WordNode(pos=(2286, 2300), word='.httpd-rundeps'),
    WordNode(pos=(2301, 2309), word='$runDeps', parts=[
      ParameterNode(pos=(2301, 2309), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2309, 2310)),
  CommandNode(pos=(2312, 2331), parts=[
    WordNode(pos=(2312, 2315), word='apk'),
    WordNode(pos=(2316, 2319), word='del'),
    WordNode(pos=(2320, 2331), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(2331, 2332)),
  CommandNode(pos=(2335, 2343), parts=[
    WordNode(pos=(2335, 2340), word='httpd'),
    WordNode(pos=(2341, 2343), word='-v'),
  ]),
])


48) set -eux;   runDeps='   apr-dev   apr-util-dev   apr-util-ldap   perl  ';  apk add --no-cache --virtual .build-deps   $runDeps   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gnupg   libc-dev   curl-dev   jansson-dev   libxml2-dev   lua-dev   make   nghttp2-dev   openssl   openssl-dev   pcre-dev   tar   zlib-dev  ;   ddist() {   local f="$1"; shift;   local distFile="$1"; shift;   local success=;   local distUrl=;   for distUrl in $APACHE_DIST_URLS; do    if wget -O "$f" "$distUrl$distFile" && [ -s "$f" ]; then     success=1;     break;    fi;   done;   [ -n "$success" ];  };   ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2";  echo "$HTTPD_SHA256 *httpd.tar.bz2" | sha256sum -c -;   ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc";  export GNUPGHOME="$(mktemp -d)";  for key in   A93D62ECC3C8EA12DB220EC934EA76E6791485A8   B9E8213AEFB861AF35A41F2C995E35221AD84DFF  ; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME" httpd.tar.bz2.asc;   mkdir -p src;  tar -xf httpd.tar.bz2 -C src --strip-components=1;  rm httpd.tar.bz2;  cd src;   patches() {   while [ "$#" -gt 0 ]; do    local patchFile="$1"; shift;    local patchSha256="$1"; shift;    ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile";    echo "$patchSha256 *$patchFile" | sha256sum -c -;    patch -p0 < "$patchFile";    rm -f "$patchFile";   done;  };  patches $HTTPD_PATCHES;   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all  ;  make -j "$(nproc)";  make install;   cd ..;  rm -r src man manual;   sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"  ;   runDeps="$runDeps $(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --virtual .httpd-rundeps $runDeps;  apk del .build-deps;   httpd -v

ListNode(pos=(0, 2343), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 72), parts=[
    AssignmentNode(pos=(12, 72), word='runDeps=   apr-dev   apr-util-dev   apr-util-ldap   perl  '),
  ]),
  OperatorNode(op=';', pos=(72, 73)),
  CommandNode(pos=(75, 319), parts=[
    WordNode(pos=(75, 78), word='apk'),
    WordNode(pos=(79, 82), word='add'),
    WordNode(pos=(83, 93), word='--no-cache'),
    WordNode(pos=(94, 103), word='--virtual'),
    WordNode(pos=(104, 115), word='.build-deps'),
    WordNode(pos=(118, 126), word='$runDeps', parts=[
      ParameterNode(pos=(118, 126), value='runDeps'),
    ]),
    WordNode(pos=(129, 144), word='ca-certificates'),
    WordNode(pos=(147, 156), word='coreutils'),
    WordNode(pos=(159, 167), word='dpkg-dev'),
    WordNode(pos=(168, 172), word='dpkg'),
    WordNode(pos=(175, 178), word='gcc'),
    WordNode(pos=(181, 186), word='gnupg'),
    WordNode(pos=(189, 197), word='libc-dev'),
    WordNode(pos=(200, 208), word='curl-dev'),
    WordNode(pos=(211, 222), word='jansson-dev'),
    WordNode(pos=(225, 236), word='libxml2-dev'),
    WordNode(pos=(239, 246), word='lua-dev'),
    WordNode(pos=(249, 253), word='make'),
    WordNode(pos=(256, 267), word='nghttp2-dev'),
    WordNode(pos=(270, 277), word='openssl'),
    WordNode(pos=(280, 291), word='openssl-dev'),
    WordNode(pos=(294, 302), word='pcre-dev'),
    WordNode(pos=(305, 308), word='tar'),
    WordNode(pos=(311, 319), word='zlib-dev'),
  ]),
  OperatorNode(op=';', pos=(321, 322)),
  FunctionNode(pos=(325, 587), parts=[
    WordNode(pos=(325, 330), word='ddist'),
    ReservedwordNode(pos=(330, 331), word='('),
    ReservedwordNode(pos=(331, 332), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(333, 334), word='{'),
      ListNode(pos=(337, 584), parts=[
          CommandNode(pos=(337, 349), parts=[
            WordNode(pos=(337, 342), word='local'),
            WordNode(pos=(343, 349), word='f=$1', parts=[
              ParameterNode(pos=(346, 348), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(349, 350)),
          CommandNode(pos=(351, 356), parts=[
            WordNode(pos=(351, 356), word='shift'),
          ]),
          OperatorNode(op=';', pos=(356, 357)),
          CommandNode(pos=(360, 379), parts=[
            WordNode(pos=(360, 365), word='local'),
            WordNode(pos=(366, 379), word='distFile=$1', parts=[
              ParameterNode(pos=(376, 378), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(381, 386), parts=[
            WordNode(pos=(381, 386), word='shift'),
          ]),
          OperatorNode(op=';', pos=(386, 387)),
          CommandNode(pos=(390, 404), parts=[
            WordNode(pos=(390, 395), word='local'),
            WordNode(pos=(396, 404), word='success='),
          ]),
          OperatorNode(op=';', pos=(404, 405)),
          CommandNode(pos=(408, 422), parts=[
            WordNode(pos=(408, 413), word='local'),
            WordNode(pos=(414, 422), word='distUrl='),
          ]),
          OperatorNode(op=';', pos=(422, 423)),
          CompoundNode(list=[
            ForNode(pos=(426, 562), parts=[
              ReservedwordNode(pos=(426, 429), word='for'),
              WordNode(pos=(430, 437), word='distUrl'),
              ReservedwordNode(pos=(438, 440), word='in'),
              WordNode(pos=(441, 458), word='$APACHE_DIST_URLS', parts=[
                ParameterNode(pos=(441, 458), value='APACHE_DIST_URLS'),
              ]),
              ReservedwordNode(pos=(458, 459), word=';'),
              ReservedwordNode(pos=(460, 462), word='do'),
              ListNode(pos=(466, 555), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(466, 554), parts=[
                      ReservedwordNode(pos=(466, 468), word='if'),
                      ListNode(pos=(469, 517), parts=[
                          CommandNode(pos=(469, 501), parts=[
                            WordNode(pos=(469, 473), word='wget'),
                            WordNode(pos=(474, 476), word='-O'),
                            WordNode(pos=(477, 481), word='$f', parts=[
                              ParameterNode(pos=(478, 480), value='f'),
                            ]),
                            WordNode(pos=(482, 501), word='$distUrl$distFile', parts=[
                              ParameterNode(pos=(483, 491), value='distUrl'),
                              ParameterNode(pos=(491, 500), value='distFile'),
                            ]),
                          ]),
                          OperatorNode(op='&&', pos=(502, 504)),
                          CommandNode(pos=(505, 516), parts=[
                            WordNode(pos=(505, 506), word='['),
                            WordNode(pos=(507, 509), word='-s'),
                            WordNode(pos=(510, 514), word='$f', parts=[
                              ParameterNode(pos=(511, 513), value='f'),
                            ]),
                            WordNode(pos=(515, 516), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(516, 517)),
                        ]),
                      ReservedwordNode(pos=(518, 522), word='then'),
                      ListNode(pos=(527, 548), parts=[
                          CommandNode(pos=(527, 536), parts=[
                            AssignmentNode(pos=(527, 536), word='success=1'),
                          ]),
                          OperatorNode(op=';', pos=(536, 537)),
                          CommandNode(pos=(542, 547), parts=[
                            WordNode(pos=(542, 547), word='break'),
                          ]),
                          OperatorNode(op=';', pos=(547, 548)),
                        ]),
                      ReservedwordNode(pos=(552, 554), word='fi'),
                    ]),
                  ], pos=(466, 554)),
                  OperatorNode(op=';', pos=(554, 555)),
                ]),
              ReservedwordNode(pos=(558, 562), word='done'),
            ]),
          ], pos=(426, 562)),
          OperatorNode(op=';', pos=(562, 563)),
          CommandNode(pos=(566, 583), parts=[
            WordNode(pos=(566, 567), word='['),
            WordNode(pos=(568, 570), word='-n'),
            WordNode(pos=(571, 581), word='$success', parts=[
              ParameterNode(pos=(572, 580), value='success'),
            ]),
            WordNode(pos=(582, 583), word=']'),
          ]),
          OperatorNode(op=';', pos=(583, 584)),
        ]),
      ReservedwordNode(pos=(586, 587), word='}'),
    ], pos=(333, 587)),
  ]),
  OperatorNode(op=';', pos=(587, 588)),
  CommandNode(pos=(591, 649), parts=[
    WordNode(pos=(591, 596), word='ddist'),
    WordNode(pos=(597, 612), word='httpd.tar.bz2'),
    WordNode(pos=(613, 649), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
      ParameterNode(pos=(626, 640), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 704), parts=[
    CommandNode(pos=(652, 687), parts=[
      WordNode(pos=(652, 656), word='echo'),
      WordNode(pos=(657, 687), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
        ParameterNode(pos=(658, 671), value='HTTPD_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(688, 689)),
    CommandNode(pos=(690, 704), parts=[
      WordNode(pos=(690, 699), word='sha256sum'),
      WordNode(pos=(700, 702), word='-c'),
      WordNode(pos=(703, 704), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(708, 774), parts=[
    WordNode(pos=(708, 713), word='ddist'),
    WordNode(pos=(714, 733), word='httpd.tar.bz2.asc'),
    WordNode(pos=(734, 774), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
      ParameterNode(pos=(747, 761), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(774, 775)),
  CommandNode(pos=(777, 808), parts=[
    WordNode(pos=(777, 783), word='export'),
    WordNode(pos=(784, 808), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(797, 806), parts=[
          WordNode(pos=(797, 803), word='mktemp'),
          WordNode(pos=(804, 806), word='-d'),
        ]), pos=(795, 807)),
    ]),
  ]),
  OperatorNode(op=';', pos=(808, 809)),
  CompoundNode(list=[
    ForNode(pos=(811, 992), parts=[
      ReservedwordNode(pos=(811, 814), word='for'),
      WordNode(pos=(815, 818), word='key'),
      ReservedwordNode(pos=(819, 821), word='in'),
      WordNode(pos=(824, 864), word='A93D62ECC3C8EA12DB220EC934EA76E6791485A8'),
      WordNode(pos=(867, 907), word='B9E8213AEFB861AF35A41F2C995E35221AD84DFF'),
      ReservedwordNode(pos=(909, 910), word=';'),
      ReservedwordNode(pos=(911, 913), word='do'),
      ListNode(pos=(916, 986), parts=[
          CommandNode(pos=(916, 985), parts=[
            WordNode(pos=(916, 919), word='gpg'),
            WordNode(pos=(920, 927), word='--batch'),
            WordNode(pos=(928, 939), word='--keyserver'),
            WordNode(pos=(940, 966), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(967, 978), word='--recv-keys'),
            WordNode(pos=(979, 985), word='$key', parts=[
              ParameterNode(pos=(980, 984), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(985, 986)),
        ]),
      ReservedwordNode(pos=(988, 992), word='done'),
    ]),
  ], pos=(811, 992)),
  OperatorNode(op=';', pos=(992, 993)),
  CommandNode(pos=(995, 1047), parts=[
    WordNode(pos=(995, 998), word='gpg'),
    WordNode(pos=(999, 1006), word='--batch'),
    WordNode(pos=(1007, 1015), word='--verify'),
    WordNode(pos=(1016, 1033), word='httpd.tar.bz2.asc'),
    WordNode(pos=(1034, 1047), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1047, 1048)),
  CommandNode(pos=(1050, 1068), parts=[
    WordNode(pos=(1050, 1057), word='command'),
    WordNode(pos=(1058, 1060), word='-v'),
    WordNode(pos=(1061, 1068), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(1069, 1071)),
  CommandNode(pos=(1072, 1090), parts=[
    WordNode(pos=(1072, 1079), word='gpgconf'),
    WordNode(pos=(1080, 1086), word='--kill'),
    WordNode(pos=(1087, 1090), word='all'),
  ]),
  OperatorNode(op='||', pos=(1091, 1093)),
  CommandNode(pos=(1094, 1095), parts=[
    WordNode(pos=(1094, 1095), word=':'),
  ]),
  OperatorNode(op=';', pos=(1095, 1096)),
  CommandNode(pos=(1098, 1135), parts=[
    WordNode(pos=(1098, 1100), word='rm'),
    WordNode(pos=(1101, 1104), word='-rf'),
    WordNode(pos=(1105, 1117), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(1106, 1116), value='GNUPGHOME'),
    ]),
    WordNode(pos=(1118, 1135), word='httpd.tar.bz2.asc'),
  ]),
  OperatorNode(op=';', pos=(1135, 1136)),
  CommandNode(pos=(1139, 1151), parts=[
    WordNode(pos=(1139, 1144), word='mkdir'),
    WordNode(pos=(1145, 1147), word='-p'),
    WordNode(pos=(1148, 1151), word='src'),
  ]),
  OperatorNode(op=';', pos=(1151, 1152)),
  CommandNode(pos=(1154, 1203), parts=[
    WordNode(pos=(1154, 1157), word='tar'),
    WordNode(pos=(1158, 1161), word='-xf'),
    WordNode(pos=(1162, 1175), word='httpd.tar.bz2'),
    WordNode(pos=(1176, 1178), word='-C'),
    WordNode(pos=(1179, 1182), word='src'),
    WordNode(pos=(1183, 1203), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1203, 1204)),
  CommandNode(pos=(1206, 1222), parts=[
    WordNode(pos=(1206, 1208), word='rm'),
    WordNode(pos=(1209, 1222), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1222, 1223)),
  CommandNode(pos=(1225, 1231), parts=[
    WordNode(pos=(1225, 1227), word='cd'),
    WordNode(pos=(1228, 1231), word='src'),
  ]),
  OperatorNode(op=';', pos=(1231, 1232)),
  FunctionNode(pos=(1235, 1529), parts=[
    WordNode(pos=(1235, 1242), word='patches'),
    ReservedwordNode(pos=(1242, 1243), word='('),
    ReservedwordNode(pos=(1243, 1244), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(1245, 1246), word='{'),
      ListNode(pos=(1249, 1526), parts=[
          CompoundNode(list=[
            WhileNode(pos=(1249, 1525), parts=[
              ReservedwordNode(pos=(1249, 1254), word='while'),
              ListNode(pos=(1255, 1270), parts=[
                  CommandNode(pos=(1255, 1269), parts=[
                    WordNode(pos=(1255, 1256), word='['),
                    WordNode(pos=(1257, 1261), word='$#', parts=[
                      ParameterNode(pos=(1258, 1260), value='#'),
                    ]),
                    WordNode(pos=(1262, 1265), word='-gt'),
                    WordNode(pos=(1266, 1267), word='0'),
                    WordNode(pos=(1268, 1269), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(1269, 1270)),
                ]),
              ReservedwordNode(pos=(1271, 1273), word='do'),
              ListNode(pos=(1277, 1518), parts=[
                  CommandNode(pos=(1277, 1297), parts=[
                    WordNode(pos=(1277, 1282), word='local'),
                    WordNode(pos=(1283, 1297), word='patchFile=$1', parts=[
                      ParameterNode(pos=(1294, 1296), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1297, 1298)),
                  CommandNode(pos=(1299, 1304), parts=[
                    WordNode(pos=(1299, 1304), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1304, 1305)),
                  CommandNode(pos=(1309, 1331), parts=[
                    WordNode(pos=(1309, 1314), word='local'),
                    WordNode(pos=(1315, 1331), word='patchSha256=$1', parts=[
                      ParameterNode(pos=(1328, 1330), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1331, 1332)),
                  CommandNode(pos=(1333, 1338), parts=[
                    WordNode(pos=(1333, 1338), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1338, 1339)),
                  CommandNode(pos=(1343, 1412), parts=[
                    WordNode(pos=(1343, 1348), word='ddist'),
                    WordNode(pos=(1349, 1361), word='$patchFile', parts=[
                      ParameterNode(pos=(1350, 1360), value='patchFile'),
                    ]),
                    WordNode(pos=(1362, 1412), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
                      ParameterNode(pos=(1386, 1400), value='HTTPD_VERSION'),
                      ParameterNode(pos=(1401, 1411), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1412, 1413)),
                  PipelineNode(pos=(1417, 1465), parts=[
                    CommandNode(pos=(1417, 1448), parts=[
                      WordNode(pos=(1417, 1421), word='echo'),
                      WordNode(pos=(1422, 1448), word='$patchSha256 *$patchFile', parts=[
                        ParameterNode(pos=(1423, 1435), value='patchSha256'),
                        ParameterNode(pos=(1437, 1447), value='patchFile'),
                      ]),
                    ]),
                    PipeNode(pipe='|', pos=(1449, 1450)),
                    CommandNode(pos=(1451, 1465), parts=[
                      WordNode(pos=(1451, 1460), word='sha256sum'),
                      WordNode(pos=(1461, 1463), word='-c'),
                      WordNode(pos=(1464, 1465), word='-'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1465, 1466)),
                  CommandNode(pos=(1470, 1494), parts=[
                    WordNode(pos=(1470, 1475), word='patch'),
                    WordNode(pos=(1476, 1479), word='-p0'),
                    RedirectNode(output=
                      WordNode(pos=(1482, 1494), word='$patchFile', parts=[
                        ParameterNode(pos=(1483, 1493), value='patchFile'),
                      ]), pos=(1480, 1494), type='<'),
                  ]),
                  OperatorNode(op=';', pos=(1494, 1495)),
                  CommandNode(pos=(1499, 1517), parts=[
                    WordNode(pos=(1499, 1501), word='rm'),
                    WordNode(pos=(1502, 1504), word='-f'),
                    WordNode(pos=(1505, 1517), word='$patchFile', parts=[
                      ParameterNode(pos=(1506, 1516), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1517, 1518)),
                ]),
              ReservedwordNode(pos=(1521, 1525), word='done'),
            ]),
          ], pos=(1249, 1525)),
          OperatorNode(op=';', pos=(1525, 1526)),
        ]),
      ReservedwordNode(pos=(1528, 1529), word='}'),
    ], pos=(1245, 1529)),
  ]),
  OperatorNode(op=';', pos=(1529, 1530)),
  CommandNode(pos=(1532, 1554), parts=[
    WordNode(pos=(1532, 1539), word='patches'),
    WordNode(pos=(1540, 1554), word='$HTTPD_PATCHES', parts=[
      ParameterNode(pos=(1540, 1554), value='HTTPD_PATCHES'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1554, 1555)),
  CommandNode(pos=(1558, 1615), parts=[
    AssignmentNode(pos=(1558, 1615), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1569, 1613), parts=[
          WordNode(pos=(1569, 1586), word='dpkg-architecture'),
          WordNode(pos=(1587, 1594), word='--query'),
          WordNode(pos=(1595, 1613), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1567, 1614)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1615, 1616)),
  CommandNode(pos=(1618, 1737), parts=[
    WordNode(pos=(1618, 1629), word='./configure'),
    WordNode(pos=(1632, 1650), word='--build=$gnuArch', parts=[
      ParameterNode(pos=(1641, 1649), value='gnuArch'),
    ]),
    WordNode(pos=(1653, 1677), word='--prefix=$HTTPD_PREFIX', parts=[
      ParameterNode(pos=(1663, 1676), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(1680, 1710), word='--enable-mods-shared=reallyall'),
    WordNode(pos=(1713, 1737), word='--enable-mpms-shared=all'),
  ]),
  OperatorNode(op=';', pos=(1739, 1740)),
  CommandNode(pos=(1742, 1760), parts=[
    WordNode(pos=(1742, 1746), word='make'),
    WordNode(pos=(1747, 1749), word='-j'),
    WordNode(pos=(1750, 1760), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1753, 1758), parts=[
          WordNode(pos=(1753, 1758), word='nproc'),
        ]), pos=(1751, 1759)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1760, 1761)),
  CommandNode(pos=(1763, 1775), parts=[
    WordNode(pos=(1763, 1767), word='make'),
    WordNode(pos=(1768, 1775), word='install'),
  ]),
  OperatorNode(op=';', pos=(1775, 1776)),
  CommandNode(pos=(1779, 1784), parts=[
    WordNode(pos=(1779, 1781), word='cd'),
    WordNode(pos=(1782, 1784), word='..'),
  ]),
  OperatorNode(op=';', pos=(1784, 1785)),
  CommandNode(pos=(1787, 1807), parts=[
    WordNode(pos=(1787, 1789), word='rm'),
    WordNode(pos=(1790, 1792), word='-r'),
    WordNode(pos=(1793, 1796), word='src'),
    WordNode(pos=(1797, 1800), word='man'),
    WordNode(pos=(1801, 1807), word='manual'),
  ]),
  OperatorNode(op=';', pos=(1807, 1808)),
  CommandNode(pos=(1811, 2053), parts=[
    WordNode(pos=(1811, 1814), word='sed'),
    WordNode(pos=(1815, 1818), word='-ri'),
    WordNode(pos=(1821, 1823), word='-e'),
    WordNode(pos=(1824, 1870), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(1873, 1875), word='-e'),
    WordNode(pos=(1876, 1921), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
    WordNode(pos=(1924, 1926), word='-e'),
    WordNode(pos=(1927, 1975), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(1978, 2009), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
      ParameterNode(pos=(1979, 1992), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(2012, 2053), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
      ParameterNode(pos=(2013, 2026), value='HTTPD_PREFIX'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2055, 2056)),
  CommandNode(pos=(2059, 2265), parts=[
    AssignmentNode(pos=(2059, 2265), word='runDeps=$runDeps $(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      ParameterNode(pos=(2068, 2076), value='runDeps'),
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2082, 2261), parts=[
          CommandNode(pos=(2082, 2148), parts=[
            WordNode(pos=(2082, 2089), word='scanelf'),
            WordNode(pos=(2090, 2098), word='--needed'),
            WordNode(pos=(2099, 2109), word='--nobanner'),
            WordNode(pos=(2110, 2118), word='--format'),
            WordNode(pos=(2119, 2125), word='%n#p'),
            WordNode(pos=(2126, 2137), word='--recursive'),
            WordNode(pos=(2138, 2148), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(2152, 2153)),
          CommandNode(pos=(2154, 2165), parts=[
            WordNode(pos=(2154, 2156), word='tr'),
            WordNode(pos=(2157, 2160), word=','),
            WordNode(pos=(2161, 2165), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(2169, 2170)),
          CommandNode(pos=(2171, 2178), parts=[
            WordNode(pos=(2171, 2175), word='sort'),
            WordNode(pos=(2176, 2178), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(2182, 2183)),
          CommandNode(pos=(2184, 2261), parts=[
            WordNode(pos=(2184, 2187), word='awk'),
            WordNode(pos=(2188, 2261), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2077, 2262)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2265, 2266)),
  CommandNode(pos=(2268, 2309), parts=[
    WordNode(pos=(2268, 2271), word='apk'),
    WordNode(pos=(2272, 2275), word='add'),
    WordNode(pos=(2276, 2285), word='--virtual'),
    WordNode(pos=(2286, 2300), word='.httpd-rundeps'),
    WordNode(pos=(2301, 2309), word='$runDeps', parts=[
      ParameterNode(pos=(2301, 2309), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2309, 2310)),
  CommandNode(pos=(2312, 2331), parts=[
    WordNode(pos=(2312, 2315), word='apk'),
    WordNode(pos=(2316, 2319), word='del'),
    WordNode(pos=(2320, 2331), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(2331, 2332)),
  CommandNode(pos=(2335, 2343), parts=[
    WordNode(pos=(2335, 2340), word='httpd'),
    WordNode(pos=(2341, 2343), word='-v'),
  ]),
])


49) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget  ;  rm -rf /var/lib/apt/lists/*;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum --check --strict -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf;  ldconfig;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum --check --strict -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3761), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 200), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 90), word='--yes'),
    WordNode(pos=(91, 114), word='--no-install-recommends'),
    WordNode(pos=(117, 125), word='autoconf'),
    WordNode(pos=(128, 143), word='ca-certificates'),
    WordNode(pos=(146, 154), word='dpkg-dev'),
    WordNode(pos=(157, 160), word='gcc'),
    WordNode(pos=(163, 168), word='gnupg'),
    WordNode(pos=(171, 186), word='libncurses5-dev'),
    WordNode(pos=(189, 193), word='make'),
    WordNode(pos=(196, 200), word='wget'),
  ]),
  OperatorNode(op=';', pos=(202, 203)),
  CommandNode(pos=(205, 232), parts=[
    WordNode(pos=(205, 207), word='rm'),
    WordNode(pos=(208, 211), word='-rf'),
    WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(232, 233)),
  CommandNode(pos=(236, 319), parts=[
    AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(319, 320)),
  CommandNode(pos=(322, 376), parts=[
    AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(376, 377)),
  CommandNode(pos=(379, 416), parts=[
    AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(416, 417)),
  CommandNode(pos=(420, 515), parts=[
    WordNode(pos=(420, 424), word='wget'),
    WordNode(pos=(425, 435), word='--progress'),
    WordNode(pos=(436, 444), word='dot:giga'),
    WordNode(pos=(445, 462), word='--output-document'),
    WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(515, 516)),
  CommandNode(pos=(518, 605), parts=[
    WordNode(pos=(518, 522), word='wget'),
    WordNode(pos=(523, 533), word='--progress'),
    WordNode(pos=(534, 542), word='dot:giga'),
    WordNode(pos=(543, 560), word='--output-document'),
    WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(605, 606)),
  CommandNode(pos=(608, 639), parts=[
    WordNode(pos=(608, 614), word='export'),
    WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(628, 637), parts=[
          WordNode(pos=(628, 634), word='mktemp'),
          WordNode(pos=(635, 637), word='-d'),
        ]), pos=(626, 638)),
    ]),
  ]),
  OperatorNode(op=';', pos=(639, 640)),
  CompoundNode(list=[
    ForNode(pos=(642, 746), parts=[
      ReservedwordNode(pos=(642, 645), word='for'),
      WordNode(pos=(646, 649), word='key'),
      ReservedwordNode(pos=(650, 652), word='in'),
      WordNode(pos=(653, 673), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(653, 673), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(673, 674), word=';'),
      ReservedwordNode(pos=(675, 677), word='do'),
      ListNode(pos=(680, 740), parts=[
          CommandNode(pos=(680, 739), parts=[
            WordNode(pos=(680, 683), word='gpg'),
            WordNode(pos=(684, 691), word='--batch'),
            WordNode(pos=(692, 703), word='--keyserver'),
            WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(721, 732), word='--recv-keys'),
            WordNode(pos=(733, 739), word='$key', parts=[
              ParameterNode(pos=(734, 738), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(739, 740)),
        ]),
      ReservedwordNode(pos=(742, 746), word='done'),
    ]),
  ], pos=(642, 746)),
  OperatorNode(op=';', pos=(746, 747)),
  CommandNode(pos=(749, 819), parts=[
    WordNode(pos=(749, 752), word='gpg'),
    WordNode(pos=(753, 760), word='--batch'),
    WordNode(pos=(761, 769), word='--verify'),
    WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(819, 820)),
  CommandNode(pos=(822, 840), parts=[
    WordNode(pos=(822, 829), word='gpgconf'),
    WordNode(pos=(830, 836), word='--kill'),
    WordNode(pos=(837, 840), word='all'),
  ]),
  OperatorNode(op=';', pos=(840, 841)),
  CommandNode(pos=(843, 862), parts=[
    WordNode(pos=(843, 845), word='rm'),
    WordNode(pos=(846, 849), word='-rf'),
    WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(851, 861), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(862, 863)),
  PipelineNode(pos=(865, 947), parts=[
    CommandNode(pos=(865, 916), parts=[
      WordNode(pos=(865, 869), word='echo'),
      WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(917, 918)),
    CommandNode(pos=(919, 947), parts=[
      WordNode(pos=(919, 928), word='sha256sum'),
      WordNode(pos=(929, 936), word='--check'),
      WordNode(pos=(937, 945), word='--strict'),
      WordNode(pos=(946, 947), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(947, 948)),
  CommandNode(pos=(950, 974), parts=[
    WordNode(pos=(950, 955), word='mkdir'),
    WordNode(pos=(956, 958), word='-p'),
    WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(977, 1069), parts=[
    WordNode(pos=(977, 980), word='tar'),
    WordNode(pos=(981, 990), word='--extract'),
    WordNode(pos=(991, 997), word='--file'),
    WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1021, 1032), word='--directory'),
    WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1049, 1067), word='--strip-components'),
    WordNode(pos=(1068, 1069), word='1'),
  ]),
  OperatorNode(op=';', pos=(1069, 1070)),
  CommandNode(pos=(1073, 1091), parts=[
    WordNode(pos=(1073, 1075), word='cd'),
    WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1091, 1092)),
  CommandNode(pos=(1094, 1156), parts=[
    AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1110, 1154), parts=[
          WordNode(pos=(1110, 1127), word='dpkg-architecture'),
          WordNode(pos=(1128, 1135), word='--query'),
          WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
        ]), pos=(1108, 1155)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1156, 1157)),
  CommandNode(pos=(1159, 1337), parts=[
    AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1170, 1213), parts=[
          WordNode(pos=(1170, 1187), word='dpkg-architecture'),
          WordNode(pos=(1188, 1195), word='--query'),
          WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1168, 1214)),
    ]),
    AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
    WordNode(pos=(1265, 1273), word='./config'),
    WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
      ParameterNode(pos=(1323, 1336), value='debMultiarch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1337, 1338)),
  CommandNode(pos=(1340, 1378), parts=[
    WordNode(pos=(1340, 1344), word='make'),
    WordNode(pos=(1345, 1347), word='-j'),
    WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1351, 1376), parts=[
          WordNode(pos=(1351, 1358), word='getconf'),
          WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
        ]), pos=(1349, 1377)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1378, 1379)),
  CommandNode(pos=(1381, 1412), parts=[
    WordNode(pos=(1381, 1385), word='make'),
    WordNode(pos=(1386, 1396), word='install_sw'),
    WordNode(pos=(1397, 1412), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1412, 1413)),
  CommandNode(pos=(1415, 1420), parts=[
    WordNode(pos=(1415, 1417), word='cd'),
    WordNode(pos=(1418, 1420), word='..'),
  ]),
  OperatorNode(op=';', pos=(1420, 1421)),
  CommandNode(pos=(1423, 1446), parts=[
    WordNode(pos=(1423, 1425), word='rm'),
    WordNode(pos=(1426, 1429), word='-rf'),
    WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1446, 1447)),
  CommandNode(pos=(1449, 1512), parts=[
    WordNode(pos=(1449, 1453), word='echo'),
    WordNode(pos=(1454, 1470), word='/usr/local/lib'),
    RedirectNode(output=
      WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
  ]),
  OperatorNode(op=';', pos=(1512, 1513)),
  CommandNode(pos=(1515, 1523), parts=[
    WordNode(pos=(1515, 1523), word='ldconfig'),
  ]),
  OperatorNode(op=';', pos=(1523, 1524)),
  CommandNode(pos=(1526, 1589), parts=[
    WordNode(pos=(1526, 1531), word='rmdir'),
    WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1589, 1590)),
  CommandNode(pos=(1592, 1652), parts=[
    WordNode(pos=(1592, 1594), word='ln'),
    WordNode(pos=(1595, 1598), word='-sf'),
    WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
    WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
    WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1652, 1653)),
  CommandNode(pos=(1655, 1670), parts=[
    WordNode(pos=(1655, 1662), word='openssl'),
    WordNode(pos=(1663, 1670), word='version'),
  ]),
  OperatorNode(op=';', pos=(1670, 1671)),
  CommandNode(pos=(1674, 1752), parts=[
    AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1752, 1753)),
  CommandNode(pos=(1755, 1797), parts=[
    AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1797, 1798)),
  CommandNode(pos=(1801, 1821), parts=[
    WordNode(pos=(1801, 1806), word='mkdir'),
    WordNode(pos=(1807, 1809), word='-p'),
    WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1821, 1822)),
  CommandNode(pos=(1824, 1903), parts=[
    WordNode(pos=(1824, 1828), word='wget'),
    WordNode(pos=(1829, 1839), word='--progress'),
    WordNode(pos=(1840, 1848), word='dot:giga'),
    WordNode(pos=(1849, 1866), word='--output-document'),
    WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
    ]),
    WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1903, 1904)),
  PipelineNode(pos=(1906, 1980), parts=[
    CommandNode(pos=(1906, 1949), parts=[
      WordNode(pos=(1906, 1910), word='echo'),
      WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1950, 1951)),
    CommandNode(pos=(1952, 1980), parts=[
      WordNode(pos=(1952, 1961), word='sha256sum'),
      WordNode(pos=(1962, 1969), word='--check'),
      WordNode(pos=(1970, 1978), word='--strict'),
      WordNode(pos=(1979, 1980), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1980, 1981)),
  CommandNode(pos=(1983, 2067), parts=[
    WordNode(pos=(1983, 1986), word='tar'),
    WordNode(pos=(1987, 1996), word='--extract'),
    WordNode(pos=(1997, 2003), word='--file'),
    WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
    ]),
    WordNode(pos=(2023, 2034), word='--directory'),
    WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
    ]),
    WordNode(pos=(2047, 2065), word='--strip-components'),
    WordNode(pos=(2066, 2067), word='1'),
  ]),
  OperatorNode(op=';', pos=(2067, 2068)),
  CommandNode(pos=(2071, 2085), parts=[
    WordNode(pos=(2071, 2073), word='cd'),
    WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2085, 2086)),
  CommandNode(pos=(2088, 2114), parts=[
    WordNode(pos=(2088, 2094), word='export'),
    WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2114, 2115)),
  CommandNode(pos=(2117, 2137), parts=[
    WordNode(pos=(2117, 2128), word='./otp_build'),
    WordNode(pos=(2129, 2137), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(2137, 2138)),
  CommandNode(pos=(2140, 2180), parts=[
    AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2150, 2178), parts=[
          WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
          WordNode(pos=(2166, 2171), word='--get'),
          WordNode(pos=(2172, 2178), word='CFLAGS'),
        ]), pos=(2148, 2179)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2180, 2181)),
  CommandNode(pos=(2182, 2195), parts=[
    WordNode(pos=(2182, 2188), word='export'),
    WordNode(pos=(2189, 2195), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(2195, 2196)),
  CommandNode(pos=(2198, 2255), parts=[
    AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2210, 2253), parts=[
          WordNode(pos=(2210, 2227), word='dpkg-architecture'),
          WordNode(pos=(2228, 2235), word='--query'),
          WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(2208, 2254)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2255, 2256)),
  CommandNode(pos=(2258, 2317), parts=[
    AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2271, 2315), parts=[
          WordNode(pos=(2271, 2288), word='dpkg-architecture'),
          WordNode(pos=(2289, 2296), word='--query'),
          WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(2269, 2316)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2317, 2318)),
  CommandNode(pos=(2320, 2359), parts=[
    AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2332, 2357), parts=[
          WordNode(pos=(2332, 2336), word='dpkg'),
          WordNode(pos=(2337, 2357), word='--print-architecture'),
        ]), pos=(2330, 2358)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2359, 2360)),
  CommandNode(pos=(2361, 2387), parts=[
    AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2387, 2388)),
  CommandNode(pos=(2390, 3072), parts=[
    WordNode(pos=(2390, 2401), word='./configure'),
    WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2412, 2421), value='hostArch'),
    ]),
    WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2434, 2444), value='buildArch'),
    ]),
    WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2476, 2490), word='--disable-hipe'),
    WordNode(pos=(2493, 2507), word='--disable-sctp'),
    WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
    WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
    WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
    WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
    WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
    WordNode(pos=(2629, 2649), word='--enable-smp-support'),
    WordNode(pos=(2652, 2668), word='--enable-threads'),
    WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2708, 2729), word='--without-common_test'),
    WordNode(pos=(2732, 2750), word='--without-debugger'),
    WordNode(pos=(2753, 2771), word='--without-dialyzer'),
    WordNode(pos=(2774, 2792), word='--without-diameter'),
    WordNode(pos=(2795, 2809), word='--without-edoc'),
    WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
    WordNode(pos=(2835, 2858), word='--without-erl_interface'),
    WordNode(pos=(2861, 2873), word='--without-et'),
    WordNode(pos=(2876, 2891), word='--without-eunit'),
    WordNode(pos=(2894, 2907), word='--without-ftp'),
    WordNode(pos=(2910, 2924), word='--without-hipe'),
    WordNode(pos=(2927, 2947), word='--without-jinterface'),
    WordNode(pos=(2950, 2966), word='--without-megaco'),
    WordNode(pos=(2969, 2987), word='--without-observer'),
    WordNode(pos=(2990, 3004), word='--without-odbc'),
    WordNode(pos=(3007, 3024), word='--without-reltool'),
    WordNode(pos=(3027, 3040), word='--without-ssh'),
    WordNode(pos=(3043, 3057), word='--without-tftp'),
    WordNode(pos=(3060, 3072), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(3074, 3075)),
  CommandNode(pos=(3077, 3155), parts=[
    WordNode(pos=(3077, 3081), word='make'),
    WordNode(pos=(3082, 3084), word='-j'),
    WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(3088, 3113), parts=[
          WordNode(pos=(3088, 3095), word='getconf'),
          WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
        ]), pos=(3086, 3114)),
    ]),
    WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(3155, 3156)),
  CommandNode(pos=(3158, 3170), parts=[
    WordNode(pos=(3158, 3162), word='make'),
    WordNode(pos=(3163, 3170), word='install'),
  ]),
  OperatorNode(op=';', pos=(3170, 3171)),
  CommandNode(pos=(3173, 3178), parts=[
    WordNode(pos=(3173, 3175), word='cd'),
    WordNode(pos=(3176, 3178), word='..'),
  ]),
  OperatorNode(op=';', pos=(3178, 3179)),
  CommandNode(pos=(3181, 3275), parts=[
    WordNode(pos=(3181, 3183), word='rm'),
    WordNode(pos=(3184, 3187), word='-rf'),
    WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
    ]),
    WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(3277, 3278)),
  CommandNode(pos=(3281, 3311), parts=[
    WordNode(pos=(3281, 3289), word='apt-mark'),
    WordNode(pos=(3290, 3294), word='auto'),
    WordNode(pos=(3295, 3299), word='.*'),
    RedirectNode(output=
      WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
  ]),
  OperatorNode(op=';', pos=(3311, 3312)),
  CommandNode(pos=(3314, 3336), parts=[
    WordNode(pos=(3314, 3315), word='['),
    WordNode(pos=(3316, 3318), word='-z'),
    WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
      ParameterNode(pos=(3320, 3333), value='savedAptMark'),
    ]),
    WordNode(pos=(3335, 3336), word=']'),
  ]),
  OperatorNode(op='||', pos=(3337, 3339)),
  CommandNode(pos=(3340, 3369), parts=[
    WordNode(pos=(3340, 3348), word='apt-mark'),
    WordNode(pos=(3349, 3355), word='manual'),
    WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
      ParameterNode(pos=(3356, 3369), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3369, 3370)),
  PipelineNode(pos=(3372, 3561), parts=[
    CommandNode(pos=(3372, 3426), parts=[
      WordNode(pos=(3372, 3376), word='find'),
      WordNode(pos=(3377, 3387), word='/usr/local'),
      WordNode(pos=(3388, 3393), word='-type'),
      WordNode(pos=(3394, 3395), word='f'),
      WordNode(pos=(3396, 3407), word='-executable'),
      WordNode(pos=(3408, 3413), word='-exec'),
      WordNode(pos=(3414, 3417), word='ldd'),
      WordNode(pos=(3418, 3422), word='{}'),
      WordNode(pos=(3423, 3426), word=';'),
    ]),
    PipeNode(pipe='|', pos=(3429, 3430)),
    CommandNode(pos=(3431, 3459), parts=[
      WordNode(pos=(3431, 3434), word='awk'),
      WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(3462, 3463)),
    CommandNode(pos=(3464, 3471), parts=[
      WordNode(pos=(3464, 3468), word='sort'),
      WordNode(pos=(3469, 3471), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3474, 3475)),
    CommandNode(pos=(3476, 3504), parts=[
      WordNode(pos=(3476, 3481), word='xargs'),
      WordNode(pos=(3482, 3484), word='-r'),
      WordNode(pos=(3485, 3495), word='dpkg-query'),
      WordNode(pos=(3496, 3504), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(3507, 3508)),
    CommandNode(pos=(3509, 3520), parts=[
      WordNode(pos=(3509, 3512), word='cut'),
      WordNode(pos=(3513, 3516), word='-d:'),
      WordNode(pos=(3517, 3520), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(3523, 3524)),
    CommandNode(pos=(3525, 3532), parts=[
      WordNode(pos=(3525, 3529), word='sort'),
      WordNode(pos=(3530, 3532), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3535, 3536)),
    CommandNode(pos=(3537, 3561), parts=[
      WordNode(pos=(3537, 3542), word='xargs'),
      WordNode(pos=(3543, 3545), word='-r'),
      WordNode(pos=(3546, 3554), word='apt-mark'),
      WordNode(pos=(3555, 3561), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3563, 3564)),
  CommandNode(pos=(3566, 3642), parts=[
    WordNode(pos=(3566, 3573), word='apt-get'),
    WordNode(pos=(3574, 3579), word='purge'),
    WordNode(pos=(3580, 3582), word='-y'),
    WordNode(pos=(3583, 3596), word='--auto-remove'),
    WordNode(pos=(3597, 3599), word='-o'),
    WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(3642, 3643)),
  CommandNode(pos=(3646, 3661), parts=[
    WordNode(pos=(3646, 3653), word='openssl'),
    WordNode(pos=(3654, 3661), word='version'),
  ]),
  OperatorNode(op=';', pos=(3661, 3662)),
  CommandNode(pos=(3664, 3761), parts=[
    WordNode(pos=(3664, 3667), word='erl'),
    WordNode(pos=(3668, 3676), word='-noshell'),
    WordNode(pos=(3677, 3682), word='-eval'),
    WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


50) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


51) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


52) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 796), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 300), parts=[
    AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
  ]),
  OperatorNode(op=';', pos=(300, 301)),
  CommandNode(pos=(304, 318), parts=[
    WordNode(pos=(304, 308), word='make'),
    WordNode(pos=(309, 318), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(318, 319)),
  CompoundNode(list=[
    ForNode(pos=(322, 418), parts=[
      ReservedwordNode(pos=(322, 325), word='for'),
      WordNode(pos=(326, 330), word='conf'),
      ReservedwordNode(pos=(331, 333), word='in'),
      WordNode(pos=(334, 345), word='$unsetConfs', parts=[
        ParameterNode(pos=(334, 345), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 412), parts=[
          CommandNode(pos=(352, 411), parts=[
            WordNode(pos=(352, 355), word='sed'),
            WordNode(pos=(356, 358), word='-i'),
            WordNode(pos=(362, 364), word='-e'),
            WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(369, 374), value='conf'),
              ParameterNode(pos=(382, 387), value='conf'),
            ]),
            WordNode(pos=(404, 411), word='.config'),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
        ]),
      ReservedwordNode(pos=(414, 418), word='done'),
    ]),
  ], pos=(322, 418)),
  OperatorNode(op=';', pos=(418, 419)),
  CompoundNode(list=[
    ForNode(pos=(422, 643), parts=[
      ReservedwordNode(pos=(422, 425), word='for'),
      WordNode(pos=(426, 431), word='confV'),
      ReservedwordNode(pos=(432, 434), word='in'),
      WordNode(pos=(435, 444), word='$setConfs', parts=[
        ParameterNode(pos=(435, 444), value='setConfs'),
      ]),
      ReservedwordNode(pos=(444, 445), word=';'),
      ReservedwordNode(pos=(446, 448), word='do'),
      ListNode(pos=(451, 637), parts=[
          CommandNode(pos=(451, 469), parts=[
            AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(457, 468), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(469, 470)),
          CommandNode(pos=(473, 560), parts=[
            WordNode(pos=(473, 476), word='sed'),
            WordNode(pos=(477, 479), word='-i'),
            WordNode(pos=(483, 485), word='-e'),
            WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(490, 495), value='conf'),
              ParameterNode(pos=(501, 507), value='confV'),
            ]),
            WordNode(pos=(513, 515), word='-e'),
            WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(522, 527), value='conf'),
              ParameterNode(pos=(541, 547), value='confV'),
            ]),
            WordNode(pos=(553, 560), word='.config'),
          ]),
          OperatorNode(op=';', pos=(560, 561)),
          CompoundNode(list=[
            IfNode(pos=(564, 636), parts=[
              ReservedwordNode(pos=(564, 566), word='if'),
              ListNode(pos=(567, 597), parts=[
                  PipelineNode(pos=(567, 596), parts=[
                    ReservedwordNode(pos=(567, 568), word='!'),
                    CommandNode(pos=(569, 596), parts=[
                      WordNode(pos=(569, 573), word='grep'),
                      WordNode(pos=(574, 576), word='-q'),
                      WordNode(pos=(577, 588), word='^$confV$', parts=[
                        ParameterNode(pos=(579, 585), value='confV'),
                      ]),
                      WordNode(pos=(589, 596), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(596, 597)),
                ]),
              ReservedwordNode(pos=(598, 602), word='then'),
              ListNode(pos=(606, 631), parts=[
                  CommandNode(pos=(606, 630), parts=[
                    WordNode(pos=(606, 610), word='echo'),
                    WordNode(pos=(611, 619), word='$confV', parts=[
                      ParameterNode(pos=(612, 618), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(630, 631)),
                ]),
              ReservedwordNode(pos=(634, 636), word='fi'),
            ]),
          ], pos=(564, 636)),
          OperatorNode(op=';', pos=(636, 637)),
        ]),
      ReservedwordNode(pos=(639, 643), word='done'),
    ]),
  ], pos=(422, 643)),
  OperatorNode(op=';', pos=(643, 644)),
  CommandNode(pos=(647, 661), parts=[
    WordNode(pos=(647, 651), word='make'),
    WordNode(pos=(652, 661), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(661, 662)),
  CompoundNode(list=[
    ForNode(pos=(665, 729), parts=[
      ReservedwordNode(pos=(665, 668), word='for'),
      WordNode(pos=(669, 673), word='conf'),
      ReservedwordNode(pos=(674, 676), word='in'),
      WordNode(pos=(677, 688), word='$unsetConfs', parts=[
        ParameterNode(pos=(677, 688), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(688, 689), word=';'),
      ReservedwordNode(pos=(690, 692), word='do'),
      ListNode(pos=(695, 723), parts=[
          PipelineNode(pos=(695, 722), parts=[
            ReservedwordNode(pos=(695, 696), word='!'),
            CommandNode(pos=(697, 722), parts=[
              WordNode(pos=(697, 701), word='grep'),
              WordNode(pos=(702, 704), word='-q'),
              WordNode(pos=(705, 714), word='^$conf=', parts=[
                ParameterNode(pos=(707, 712), value='conf'),
              ]),
              WordNode(pos=(715, 722), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(722, 723)),
        ]),
      ReservedwordNode(pos=(725, 729), word='done'),
    ]),
  ], pos=(665, 729)),
  OperatorNode(op=';', pos=(729, 730)),
  CompoundNode(list=[
    ForNode(pos=(732, 795), parts=[
      ReservedwordNode(pos=(732, 735), word='for'),
      WordNode(pos=(736, 741), word='confV'),
      ReservedwordNode(pos=(742, 744), word='in'),
      WordNode(pos=(745, 754), word='$setConfs', parts=[
        ParameterNode(pos=(745, 754), value='setConfs'),
      ]),
      ReservedwordNode(pos=(754, 755), word=';'),
      ReservedwordNode(pos=(756, 758), word='do'),
      ListNode(pos=(761, 789), parts=[
          CommandNode(pos=(761, 788), parts=[
            WordNode(pos=(761, 765), word='grep'),
            WordNode(pos=(766, 768), word='-q'),
            WordNode(pos=(769, 780), word='^$confV$', parts=[
              ParameterNode(pos=(771, 777), value='confV'),
            ]),
            WordNode(pos=(781, 788), word='.config'),
          ]),
          OperatorNode(op=';', pos=(788, 789)),
        ]),
      ReservedwordNode(pos=(791, 795), word='done'),
    ]),
  ], pos=(732, 795)),
  OperatorNode(op=';', pos=(795, 796)),
])


53) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 796), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 300), parts=[
    AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
  ]),
  OperatorNode(op=';', pos=(300, 301)),
  CommandNode(pos=(304, 318), parts=[
    WordNode(pos=(304, 308), word='make'),
    WordNode(pos=(309, 318), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(318, 319)),
  CompoundNode(list=[
    ForNode(pos=(322, 418), parts=[
      ReservedwordNode(pos=(322, 325), word='for'),
      WordNode(pos=(326, 330), word='conf'),
      ReservedwordNode(pos=(331, 333), word='in'),
      WordNode(pos=(334, 345), word='$unsetConfs', parts=[
        ParameterNode(pos=(334, 345), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 412), parts=[
          CommandNode(pos=(352, 411), parts=[
            WordNode(pos=(352, 355), word='sed'),
            WordNode(pos=(356, 358), word='-i'),
            WordNode(pos=(362, 364), word='-e'),
            WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(369, 374), value='conf'),
              ParameterNode(pos=(382, 387), value='conf'),
            ]),
            WordNode(pos=(404, 411), word='.config'),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
        ]),
      ReservedwordNode(pos=(414, 418), word='done'),
    ]),
  ], pos=(322, 418)),
  OperatorNode(op=';', pos=(418, 419)),
  CompoundNode(list=[
    ForNode(pos=(422, 643), parts=[
      ReservedwordNode(pos=(422, 425), word='for'),
      WordNode(pos=(426, 431), word='confV'),
      ReservedwordNode(pos=(432, 434), word='in'),
      WordNode(pos=(435, 444), word='$setConfs', parts=[
        ParameterNode(pos=(435, 444), value='setConfs'),
      ]),
      ReservedwordNode(pos=(444, 445), word=';'),
      ReservedwordNode(pos=(446, 448), word='do'),
      ListNode(pos=(451, 637), parts=[
          CommandNode(pos=(451, 469), parts=[
            AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(457, 468), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(469, 470)),
          CommandNode(pos=(473, 560), parts=[
            WordNode(pos=(473, 476), word='sed'),
            WordNode(pos=(477, 479), word='-i'),
            WordNode(pos=(483, 485), word='-e'),
            WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(490, 495), value='conf'),
              ParameterNode(pos=(501, 507), value='confV'),
            ]),
            WordNode(pos=(513, 515), word='-e'),
            WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(522, 527), value='conf'),
              ParameterNode(pos=(541, 547), value='confV'),
            ]),
            WordNode(pos=(553, 560), word='.config'),
          ]),
          OperatorNode(op=';', pos=(560, 561)),
          CompoundNode(list=[
            IfNode(pos=(564, 636), parts=[
              ReservedwordNode(pos=(564, 566), word='if'),
              ListNode(pos=(567, 597), parts=[
                  PipelineNode(pos=(567, 596), parts=[
                    ReservedwordNode(pos=(567, 568), word='!'),
                    CommandNode(pos=(569, 596), parts=[
                      WordNode(pos=(569, 573), word='grep'),
                      WordNode(pos=(574, 576), word='-q'),
                      WordNode(pos=(577, 588), word='^$confV$', parts=[
                        ParameterNode(pos=(579, 585), value='confV'),
                      ]),
                      WordNode(pos=(589, 596), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(596, 597)),
                ]),
              ReservedwordNode(pos=(598, 602), word='then'),
              ListNode(pos=(606, 631), parts=[
                  CommandNode(pos=(606, 630), parts=[
                    WordNode(pos=(606, 610), word='echo'),
                    WordNode(pos=(611, 619), word='$confV', parts=[
                      ParameterNode(pos=(612, 618), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(630, 631)),
                ]),
              ReservedwordNode(pos=(634, 636), word='fi'),
            ]),
          ], pos=(564, 636)),
          OperatorNode(op=';', pos=(636, 637)),
        ]),
      ReservedwordNode(pos=(639, 643), word='done'),
    ]),
  ], pos=(422, 643)),
  OperatorNode(op=';', pos=(643, 644)),
  CommandNode(pos=(647, 661), parts=[
    WordNode(pos=(647, 651), word='make'),
    WordNode(pos=(652, 661), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(661, 662)),
  CompoundNode(list=[
    ForNode(pos=(665, 729), parts=[
      ReservedwordNode(pos=(665, 668), word='for'),
      WordNode(pos=(669, 673), word='conf'),
      ReservedwordNode(pos=(674, 676), word='in'),
      WordNode(pos=(677, 688), word='$unsetConfs', parts=[
        ParameterNode(pos=(677, 688), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(688, 689), word=';'),
      ReservedwordNode(pos=(690, 692), word='do'),
      ListNode(pos=(695, 723), parts=[
          PipelineNode(pos=(695, 722), parts=[
            ReservedwordNode(pos=(695, 696), word='!'),
            CommandNode(pos=(697, 722), parts=[
              WordNode(pos=(697, 701), word='grep'),
              WordNode(pos=(702, 704), word='-q'),
              WordNode(pos=(705, 714), word='^$conf=', parts=[
                ParameterNode(pos=(707, 712), value='conf'),
              ]),
              WordNode(pos=(715, 722), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(722, 723)),
        ]),
      ReservedwordNode(pos=(725, 729), word='done'),
    ]),
  ], pos=(665, 729)),
  OperatorNode(op=';', pos=(729, 730)),
  CompoundNode(list=[
    ForNode(pos=(732, 795), parts=[
      ReservedwordNode(pos=(732, 735), word='for'),
      WordNode(pos=(736, 741), word='confV'),
      ReservedwordNode(pos=(742, 744), word='in'),
      WordNode(pos=(745, 754), word='$setConfs', parts=[
        ParameterNode(pos=(745, 754), value='setConfs'),
      ]),
      ReservedwordNode(pos=(754, 755), word=';'),
      ReservedwordNode(pos=(756, 758), word='do'),
      ListNode(pos=(761, 789), parts=[
          CommandNode(pos=(761, 788), parts=[
            WordNode(pos=(761, 765), word='grep'),
            WordNode(pos=(766, 768), word='-q'),
            WordNode(pos=(769, 780), word='^$confV$', parts=[
              ParameterNode(pos=(771, 777), value='confV'),
            ]),
            WordNode(pos=(781, 788), word='.config'),
          ]),
          OperatorNode(op=';', pos=(788, 789)),
        ]),
      ReservedwordNode(pos=(791, 795), word='done'),
    ]),
  ], pos=(732, 795)),
  OperatorNode(op=';', pos=(795, 796)),
])


54) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 796), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 300), parts=[
    AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
  ]),
  OperatorNode(op=';', pos=(300, 301)),
  CommandNode(pos=(304, 318), parts=[
    WordNode(pos=(304, 308), word='make'),
    WordNode(pos=(309, 318), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(318, 319)),
  CompoundNode(list=[
    ForNode(pos=(322, 418), parts=[
      ReservedwordNode(pos=(322, 325), word='for'),
      WordNode(pos=(326, 330), word='conf'),
      ReservedwordNode(pos=(331, 333), word='in'),
      WordNode(pos=(334, 345), word='$unsetConfs', parts=[
        ParameterNode(pos=(334, 345), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 412), parts=[
          CommandNode(pos=(352, 411), parts=[
            WordNode(pos=(352, 355), word='sed'),
            WordNode(pos=(356, 358), word='-i'),
            WordNode(pos=(362, 364), word='-e'),
            WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(369, 374), value='conf'),
              ParameterNode(pos=(382, 387), value='conf'),
            ]),
            WordNode(pos=(404, 411), word='.config'),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
        ]),
      ReservedwordNode(pos=(414, 418), word='done'),
    ]),
  ], pos=(322, 418)),
  OperatorNode(op=';', pos=(418, 419)),
  CompoundNode(list=[
    ForNode(pos=(422, 643), parts=[
      ReservedwordNode(pos=(422, 425), word='for'),
      WordNode(pos=(426, 431), word='confV'),
      ReservedwordNode(pos=(432, 434), word='in'),
      WordNode(pos=(435, 444), word='$setConfs', parts=[
        ParameterNode(pos=(435, 444), value='setConfs'),
      ]),
      ReservedwordNode(pos=(444, 445), word=';'),
      ReservedwordNode(pos=(446, 448), word='do'),
      ListNode(pos=(451, 637), parts=[
          CommandNode(pos=(451, 469), parts=[
            AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(457, 468), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(469, 470)),
          CommandNode(pos=(473, 560), parts=[
            WordNode(pos=(473, 476), word='sed'),
            WordNode(pos=(477, 479), word='-i'),
            WordNode(pos=(483, 485), word='-e'),
            WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(490, 495), value='conf'),
              ParameterNode(pos=(501, 507), value='confV'),
            ]),
            WordNode(pos=(513, 515), word='-e'),
            WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(522, 527), value='conf'),
              ParameterNode(pos=(541, 547), value='confV'),
            ]),
            WordNode(pos=(553, 560), word='.config'),
          ]),
          OperatorNode(op=';', pos=(560, 561)),
          CompoundNode(list=[
            IfNode(pos=(564, 636), parts=[
              ReservedwordNode(pos=(564, 566), word='if'),
              ListNode(pos=(567, 597), parts=[
                  PipelineNode(pos=(567, 596), parts=[
                    ReservedwordNode(pos=(567, 568), word='!'),
                    CommandNode(pos=(569, 596), parts=[
                      WordNode(pos=(569, 573), word='grep'),
                      WordNode(pos=(574, 576), word='-q'),
                      WordNode(pos=(577, 588), word='^$confV$', parts=[
                        ParameterNode(pos=(579, 585), value='confV'),
                      ]),
                      WordNode(pos=(589, 596), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(596, 597)),
                ]),
              ReservedwordNode(pos=(598, 602), word='then'),
              ListNode(pos=(606, 631), parts=[
                  CommandNode(pos=(606, 630), parts=[
                    WordNode(pos=(606, 610), word='echo'),
                    WordNode(pos=(611, 619), word='$confV', parts=[
                      ParameterNode(pos=(612, 618), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(630, 631)),
                ]),
              ReservedwordNode(pos=(634, 636), word='fi'),
            ]),
          ], pos=(564, 636)),
          OperatorNode(op=';', pos=(636, 637)),
        ]),
      ReservedwordNode(pos=(639, 643), word='done'),
    ]),
  ], pos=(422, 643)),
  OperatorNode(op=';', pos=(643, 644)),
  CommandNode(pos=(647, 661), parts=[
    WordNode(pos=(647, 651), word='make'),
    WordNode(pos=(652, 661), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(661, 662)),
  CompoundNode(list=[
    ForNode(pos=(665, 729), parts=[
      ReservedwordNode(pos=(665, 668), word='for'),
      WordNode(pos=(669, 673), word='conf'),
      ReservedwordNode(pos=(674, 676), word='in'),
      WordNode(pos=(677, 688), word='$unsetConfs', parts=[
        ParameterNode(pos=(677, 688), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(688, 689), word=';'),
      ReservedwordNode(pos=(690, 692), word='do'),
      ListNode(pos=(695, 723), parts=[
          PipelineNode(pos=(695, 722), parts=[
            ReservedwordNode(pos=(695, 696), word='!'),
            CommandNode(pos=(697, 722), parts=[
              WordNode(pos=(697, 701), word='grep'),
              WordNode(pos=(702, 704), word='-q'),
              WordNode(pos=(705, 714), word='^$conf=', parts=[
                ParameterNode(pos=(707, 712), value='conf'),
              ]),
              WordNode(pos=(715, 722), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(722, 723)),
        ]),
      ReservedwordNode(pos=(725, 729), word='done'),
    ]),
  ], pos=(665, 729)),
  OperatorNode(op=';', pos=(729, 730)),
  CompoundNode(list=[
    ForNode(pos=(732, 795), parts=[
      ReservedwordNode(pos=(732, 735), word='for'),
      WordNode(pos=(736, 741), word='confV'),
      ReservedwordNode(pos=(742, 744), word='in'),
      WordNode(pos=(745, 754), word='$setConfs', parts=[
        ParameterNode(pos=(745, 754), value='setConfs'),
      ]),
      ReservedwordNode(pos=(754, 755), word=';'),
      ReservedwordNode(pos=(756, 758), word='do'),
      ListNode(pos=(761, 789), parts=[
          CommandNode(pos=(761, 788), parts=[
            WordNode(pos=(761, 765), word='grep'),
            WordNode(pos=(766, 768), word='-q'),
            WordNode(pos=(769, 780), word='^$confV$', parts=[
              ParameterNode(pos=(771, 777), value='confV'),
            ]),
            WordNode(pos=(781, 788), word='.config'),
          ]),
          OperatorNode(op=';', pos=(788, 789)),
        ]),
      ReservedwordNode(pos=(791, 795), word='done'),
    ]),
  ], pos=(732, 795)),
  OperatorNode(op=';', pos=(795, 796)),
])


55) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 796), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 300), parts=[
    AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
  ]),
  OperatorNode(op=';', pos=(300, 301)),
  CommandNode(pos=(304, 318), parts=[
    WordNode(pos=(304, 308), word='make'),
    WordNode(pos=(309, 318), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(318, 319)),
  CompoundNode(list=[
    ForNode(pos=(322, 418), parts=[
      ReservedwordNode(pos=(322, 325), word='for'),
      WordNode(pos=(326, 330), word='conf'),
      ReservedwordNode(pos=(331, 333), word='in'),
      WordNode(pos=(334, 345), word='$unsetConfs', parts=[
        ParameterNode(pos=(334, 345), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 412), parts=[
          CommandNode(pos=(352, 411), parts=[
            WordNode(pos=(352, 355), word='sed'),
            WordNode(pos=(356, 358), word='-i'),
            WordNode(pos=(362, 364), word='-e'),
            WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(369, 374), value='conf'),
              ParameterNode(pos=(382, 387), value='conf'),
            ]),
            WordNode(pos=(404, 411), word='.config'),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
        ]),
      ReservedwordNode(pos=(414, 418), word='done'),
    ]),
  ], pos=(322, 418)),
  OperatorNode(op=';', pos=(418, 419)),
  CompoundNode(list=[
    ForNode(pos=(422, 643), parts=[
      ReservedwordNode(pos=(422, 425), word='for'),
      WordNode(pos=(426, 431), word='confV'),
      ReservedwordNode(pos=(432, 434), word='in'),
      WordNode(pos=(435, 444), word='$setConfs', parts=[
        ParameterNode(pos=(435, 444), value='setConfs'),
      ]),
      ReservedwordNode(pos=(444, 445), word=';'),
      ReservedwordNode(pos=(446, 448), word='do'),
      ListNode(pos=(451, 637), parts=[
          CommandNode(pos=(451, 469), parts=[
            AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(457, 468), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(469, 470)),
          CommandNode(pos=(473, 560), parts=[
            WordNode(pos=(473, 476), word='sed'),
            WordNode(pos=(477, 479), word='-i'),
            WordNode(pos=(483, 485), word='-e'),
            WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(490, 495), value='conf'),
              ParameterNode(pos=(501, 507), value='confV'),
            ]),
            WordNode(pos=(513, 515), word='-e'),
            WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(522, 527), value='conf'),
              ParameterNode(pos=(541, 547), value='confV'),
            ]),
            WordNode(pos=(553, 560), word='.config'),
          ]),
          OperatorNode(op=';', pos=(560, 561)),
          CompoundNode(list=[
            IfNode(pos=(564, 636), parts=[
              ReservedwordNode(pos=(564, 566), word='if'),
              ListNode(pos=(567, 597), parts=[
                  PipelineNode(pos=(567, 596), parts=[
                    ReservedwordNode(pos=(567, 568), word='!'),
                    CommandNode(pos=(569, 596), parts=[
                      WordNode(pos=(569, 573), word='grep'),
                      WordNode(pos=(574, 576), word='-q'),
                      WordNode(pos=(577, 588), word='^$confV$', parts=[
                        ParameterNode(pos=(579, 585), value='confV'),
                      ]),
                      WordNode(pos=(589, 596), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(596, 597)),
                ]),
              ReservedwordNode(pos=(598, 602), word='then'),
              ListNode(pos=(606, 631), parts=[
                  CommandNode(pos=(606, 630), parts=[
                    WordNode(pos=(606, 610), word='echo'),
                    WordNode(pos=(611, 619), word='$confV', parts=[
                      ParameterNode(pos=(612, 618), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(630, 631)),
                ]),
              ReservedwordNode(pos=(634, 636), word='fi'),
            ]),
          ], pos=(564, 636)),
          OperatorNode(op=';', pos=(636, 637)),
        ]),
      ReservedwordNode(pos=(639, 643), word='done'),
    ]),
  ], pos=(422, 643)),
  OperatorNode(op=';', pos=(643, 644)),
  CommandNode(pos=(647, 661), parts=[
    WordNode(pos=(647, 651), word='make'),
    WordNode(pos=(652, 661), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(661, 662)),
  CompoundNode(list=[
    ForNode(pos=(665, 729), parts=[
      ReservedwordNode(pos=(665, 668), word='for'),
      WordNode(pos=(669, 673), word='conf'),
      ReservedwordNode(pos=(674, 676), word='in'),
      WordNode(pos=(677, 688), word='$unsetConfs', parts=[
        ParameterNode(pos=(677, 688), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(688, 689), word=';'),
      ReservedwordNode(pos=(690, 692), word='do'),
      ListNode(pos=(695, 723), parts=[
          PipelineNode(pos=(695, 722), parts=[
            ReservedwordNode(pos=(695, 696), word='!'),
            CommandNode(pos=(697, 722), parts=[
              WordNode(pos=(697, 701), word='grep'),
              WordNode(pos=(702, 704), word='-q'),
              WordNode(pos=(705, 714), word='^$conf=', parts=[
                ParameterNode(pos=(707, 712), value='conf'),
              ]),
              WordNode(pos=(715, 722), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(722, 723)),
        ]),
      ReservedwordNode(pos=(725, 729), word='done'),
    ]),
  ], pos=(665, 729)),
  OperatorNode(op=';', pos=(729, 730)),
  CompoundNode(list=[
    ForNode(pos=(732, 795), parts=[
      ReservedwordNode(pos=(732, 735), word='for'),
      WordNode(pos=(736, 741), word='confV'),
      ReservedwordNode(pos=(742, 744), word='in'),
      WordNode(pos=(745, 754), word='$setConfs', parts=[
        ParameterNode(pos=(745, 754), value='setConfs'),
      ]),
      ReservedwordNode(pos=(754, 755), word=';'),
      ReservedwordNode(pos=(756, 758), word='do'),
      ListNode(pos=(761, 789), parts=[
          CommandNode(pos=(761, 788), parts=[
            WordNode(pos=(761, 765), word='grep'),
            WordNode(pos=(766, 768), word='-q'),
            WordNode(pos=(769, 780), word='^$confV$', parts=[
              ParameterNode(pos=(771, 777), value='confV'),
            ]),
            WordNode(pos=(781, 788), word='.config'),
          ]),
          OperatorNode(op=';', pos=(788, 789)),
        ]),
      ReservedwordNode(pos=(791, 795), word='done'),
    ]),
  ], pos=(732, 795)),
  OperatorNode(op=';', pos=(795, 796)),
])


56) set -ex;  buildrootVersion='2019.05';  mkdir -p rootfs/etc;  for f in passwd shadow group; do   curl -fL -o "rootfs/etc/$f" "https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion";  done;  grep -E '^root::' rootfs/etc/shadow;  sed -ri -e 's/^root::/root:*:/' rootfs/etc/shadow;  grep -E '^root:[*]:' rootfs/etc/shadow;  curl -fL -o buildroot-device-table.txt "https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion";  awk '   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \"%s\" encountered in line %d: %s\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\n", $1;    }    printf "chmod %s %s\n", $3, $1;   }  ' buildroot-device-table.txt | sh -eux;  rm buildroot-device-table.txt

ListNode(pos=(0, 840), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 36), parts=[
    AssignmentNode(pos=(10, 36), word='buildrootVersion=2019.05'),
  ]),
  OperatorNode(op=';', pos=(36, 37)),
  CommandNode(pos=(39, 58), parts=[
    WordNode(pos=(39, 44), word='mkdir'),
    WordNode(pos=(45, 47), word='-p'),
    WordNode(pos=(48, 58), word='rootfs/etc'),
  ]),
  OperatorNode(op=';', pos=(58, 59)),
  CompoundNode(list=[
    ForNode(pos=(61, 216), parts=[
      ReservedwordNode(pos=(61, 64), word='for'),
      WordNode(pos=(65, 66), word='f'),
      ReservedwordNode(pos=(67, 69), word='in'),
      WordNode(pos=(70, 76), word='passwd'),
      WordNode(pos=(77, 83), word='shadow'),
      WordNode(pos=(84, 89), word='group'),
      ReservedwordNode(pos=(89, 90), word=';'),
      ReservedwordNode(pos=(91, 93), word='do'),
      ListNode(pos=(96, 210), parts=[
          CommandNode(pos=(96, 209), parts=[
            WordNode(pos=(96, 100), word='curl'),
            WordNode(pos=(101, 104), word='-fL'),
            WordNode(pos=(105, 107), word='-o'),
            WordNode(pos=(108, 123), word='rootfs/etc/$f', parts=[
              ParameterNode(pos=(120, 122), value='f'),
            ]),
            WordNode(pos=(124, 209), word='https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion', parts=[
              ParameterNode(pos=(185, 187), value='f'),
              ParameterNode(pos=(191, 208), value='buildrootVersion'),
            ]),
          ]),
          OperatorNode(op=';', pos=(209, 210)),
        ]),
      ReservedwordNode(pos=(212, 216), word='done'),
    ]),
  ], pos=(61, 216)),
  OperatorNode(op=';', pos=(216, 217)),
  CommandNode(pos=(219, 254), parts=[
    WordNode(pos=(219, 223), word='grep'),
    WordNode(pos=(224, 226), word='-E'),
    WordNode(pos=(227, 236), word='^root::'),
    WordNode(pos=(237, 254), word='rootfs/etc/shadow'),
  ]),
  OperatorNode(op=';', pos=(254, 255)),
  CommandNode(pos=(257, 306), parts=[
    WordNode(pos=(257, 260), word='sed'),
    WordNode(pos=(261, 264), word='-ri'),
    WordNode(pos=(265, 267), word='-e'),
    WordNode(pos=(268, 288), word='s/^root::/root:*:/'),
    WordNode(pos=(289, 306), word='rootfs/etc/shadow'),
  ]),
  OperatorNode(op=';', pos=(306, 307)),
  CommandNode(pos=(309, 347), parts=[
    WordNode(pos=(309, 313), word='grep'),
    WordNode(pos=(314, 316), word='-E'),
    WordNode(pos=(317, 329), word='^root:[*]:'),
    WordNode(pos=(330, 347), word='rootfs/etc/shadow'),
  ]),
  OperatorNode(op=';', pos=(347, 348)),
  CommandNode(pos=(350, 475), parts=[
    WordNode(pos=(350, 354), word='curl'),
    WordNode(pos=(355, 358), word='-fL'),
    WordNode(pos=(359, 361), word='-o'),
    WordNode(pos=(362, 388), word='buildroot-device-table.txt'),
    WordNode(pos=(389, 475), word='https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion', parts=[
      ParameterNode(pos=(457, 474), value='buildrootVersion'),
    ]),
  ]),
  OperatorNode(op=';', pos=(475, 476)),
  PipelineNode(pos=(478, 808), parts=[
    CommandNode(pos=(478, 798), parts=[
      WordNode(pos=(478, 481), word='awk'),
      WordNode(pos=(482, 771), word='   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \\"%s\\" encountered in line %d: %s\\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\\n", $1;    }    printf "chmod %s %s\\n", $3, $1;   }  '),
      WordNode(pos=(772, 798), word='buildroot-device-table.txt'),
    ]),
    PipeNode(pipe='|', pos=(799, 800)),
    CommandNode(pos=(801, 808), parts=[
      WordNode(pos=(801, 803), word='sh'),
      WordNode(pos=(804, 808), word='-eux'),
    ]),
  ]),
  OperatorNode(op=';', pos=(808, 809)),
  CommandNode(pos=(811, 840), parts=[
    WordNode(pos=(811, 813), word='rm'),
    WordNode(pos=(814, 840), word='buildroot-device-table.txt'),
  ]),
])


57) set -ex  && cd rootfs  && for userHome in $(awk -F ':' '{ print $3 ":" $4 "=" $6 }' etc/passwd); do   user="${userHome%%=*}";   home="${userHome#*=}";   home="./${home#/}";   if [ ! -d "$home" ]; then    mkdir -p "$home";    chown "$user" "$home";    chmod 755 "$home";   fi;  done

ListNode(pos=(0, 281), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 21), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 21), word='rootfs'),
  ]),
  OperatorNode(op='&&', pos=(23, 25)),
  CompoundNode(list=[
    ForNode(pos=(26, 281), parts=[
      ReservedwordNode(pos=(26, 29), word='for'),
      WordNode(pos=(30, 38), word='userHome'),
      ReservedwordNode(pos=(39, 41), word='in'),
      WordNode(pos=(42, 95), word='$(awk -F \':\' \'{ print $3 ":" $4 "=" $6 }\' etc/passwd)', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(44, 94), parts=[
            WordNode(pos=(44, 47), word='awk'),
            WordNode(pos=(48, 50), word='-F'),
            WordNode(pos=(51, 54), word=':'),
            WordNode(pos=(55, 83), word='{ print $3 ":" $4 "=" $6 }'),
            WordNode(pos=(84, 94), word='etc/passwd'),
          ]), pos=(42, 95)),
      ]),
      ReservedwordNode(pos=(95, 96), word=';'),
      ReservedwordNode(pos=(97, 99), word='do'),
      ListNode(pos=(102, 275), parts=[
          CommandNode(pos=(102, 124), parts=[
            AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
              ParameterNode(pos=(108, 123), value='userHome%%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(124, 125)),
          CommandNode(pos=(128, 149), parts=[
            AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
              ParameterNode(pos=(134, 148), value='userHome#*='),
            ]),
          ]),
          OperatorNode(op=';', pos=(149, 150)),
          CommandNode(pos=(153, 171), parts=[
            AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
              ParameterNode(pos=(161, 170), value='home#/'),
            ]),
          ]),
          OperatorNode(op=';', pos=(171, 172)),
          CompoundNode(list=[
            IfNode(pos=(175, 274), parts=[
              ReservedwordNode(pos=(175, 177), word='if'),
              ListNode(pos=(178, 195), parts=[
                  CommandNode(pos=(178, 194), parts=[
                    WordNode(pos=(178, 179), word='['),
                    WordNode(pos=(180, 181), word='!'),
                    WordNode(pos=(182, 184), word='-d'),
                    WordNode(pos=(185, 192), word='$home', parts=[
                      ParameterNode(pos=(186, 191), value='home'),
                    ]),
                    WordNode(pos=(193, 194), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(194, 195)),
                ]),
              ReservedwordNode(pos=(196, 200), word='then'),
              ListNode(pos=(204, 269), parts=[
                  CommandNode(pos=(204, 220), parts=[
                    WordNode(pos=(204, 209), word='mkdir'),
                    WordNode(pos=(210, 212), word='-p'),
                    WordNode(pos=(213, 220), word='$home', parts=[
                      ParameterNode(pos=(214, 219), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(220, 221)),
                  CommandNode(pos=(225, 246), parts=[
                    WordNode(pos=(225, 230), word='chown'),
                    WordNode(pos=(231, 238), word='$user', parts=[
                      ParameterNode(pos=(232, 237), value='user'),
                    ]),
                    WordNode(pos=(239, 246), word='$home', parts=[
                      ParameterNode(pos=(240, 245), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(246, 247)),
                  CommandNode(pos=(251, 268), parts=[
                    WordNode(pos=(251, 256), word='chmod'),
                    WordNode(pos=(257, 260), word='755'),
                    WordNode(pos=(261, 268), word='$home', parts=[
                      ParameterNode(pos=(262, 267), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(268, 269)),
                ]),
              ReservedwordNode(pos=(272, 274), word='fi'),
            ]),
          ], pos=(175, 274)),
          OperatorNode(op=';', pos=(274, 275)),
        ]),
      ReservedwordNode(pos=(277, 281), word='done'),
    ]),
  ], pos=(26, 281)),
])


58) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


59) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


60) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 679), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 136), parts=[
    AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CommandNode(pos=(140, 183), parts=[
    AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(187, 201), parts=[
    WordNode(pos=(187, 191), word='make'),
    WordNode(pos=(192, 201), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CompoundNode(list=[
    ForNode(pos=(205, 301), parts=[
      ReservedwordNode(pos=(205, 208), word='for'),
      WordNode(pos=(209, 213), word='conf'),
      ReservedwordNode(pos=(214, 216), word='in'),
      WordNode(pos=(217, 228), word='$unsetConfs', parts=[
        ParameterNode(pos=(217, 228), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(228, 229), word=';'),
      ReservedwordNode(pos=(230, 232), word='do'),
      ListNode(pos=(235, 295), parts=[
          CommandNode(pos=(235, 294), parts=[
            WordNode(pos=(235, 238), word='sed'),
            WordNode(pos=(239, 241), word='-i'),
            WordNode(pos=(245, 247), word='-e'),
            WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(252, 257), value='conf'),
              ParameterNode(pos=(265, 270), value='conf'),
            ]),
            WordNode(pos=(287, 294), word='.config'),
          ]),
          OperatorNode(op=';', pos=(294, 295)),
        ]),
      ReservedwordNode(pos=(297, 301), word='done'),
    ]),
  ], pos=(205, 301)),
  OperatorNode(op=';', pos=(301, 302)),
  CompoundNode(list=[
    ForNode(pos=(305, 526), parts=[
      ReservedwordNode(pos=(305, 308), word='for'),
      WordNode(pos=(309, 314), word='confV'),
      ReservedwordNode(pos=(315, 317), word='in'),
      WordNode(pos=(318, 327), word='$setConfs', parts=[
        ParameterNode(pos=(318, 327), value='setConfs'),
      ]),
      ReservedwordNode(pos=(327, 328), word=';'),
      ReservedwordNode(pos=(329, 331), word='do'),
      ListNode(pos=(334, 520), parts=[
          CommandNode(pos=(334, 352), parts=[
            AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(340, 351), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(352, 353)),
          CommandNode(pos=(356, 443), parts=[
            WordNode(pos=(356, 359), word='sed'),
            WordNode(pos=(360, 362), word='-i'),
            WordNode(pos=(366, 368), word='-e'),
            WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(373, 378), value='conf'),
              ParameterNode(pos=(384, 390), value='confV'),
            ]),
            WordNode(pos=(396, 398), word='-e'),
            WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(405, 410), value='conf'),
              ParameterNode(pos=(424, 430), value='confV'),
            ]),
            WordNode(pos=(436, 443), word='.config'),
          ]),
          OperatorNode(op=';', pos=(443, 444)),
          CompoundNode(list=[
            IfNode(pos=(447, 519), parts=[
              ReservedwordNode(pos=(447, 449), word='if'),
              ListNode(pos=(450, 480), parts=[
                  PipelineNode(pos=(450, 479), parts=[
                    ReservedwordNode(pos=(450, 451), word='!'),
                    CommandNode(pos=(452, 479), parts=[
                      WordNode(pos=(452, 456), word='grep'),
                      WordNode(pos=(457, 459), word='-q'),
                      WordNode(pos=(460, 471), word='^$confV$', parts=[
                        ParameterNode(pos=(462, 468), value='confV'),
                      ]),
                      WordNode(pos=(472, 479), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(479, 480)),
                ]),
              ReservedwordNode(pos=(481, 485), word='then'),
              ListNode(pos=(489, 514), parts=[
                  CommandNode(pos=(489, 513), parts=[
                    WordNode(pos=(489, 493), word='echo'),
                    WordNode(pos=(494, 502), word='$confV', parts=[
                      ParameterNode(pos=(495, 501), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(513, 514)),
                ]),
              ReservedwordNode(pos=(517, 519), word='fi'),
            ]),
          ], pos=(447, 519)),
          OperatorNode(op=';', pos=(519, 520)),
        ]),
      ReservedwordNode(pos=(522, 526), word='done'),
    ]),
  ], pos=(305, 526)),
  OperatorNode(op=';', pos=(526, 527)),
  CommandNode(pos=(530, 544), parts=[
    WordNode(pos=(530, 534), word='make'),
    WordNode(pos=(535, 544), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CompoundNode(list=[
    ForNode(pos=(548, 612), parts=[
      ReservedwordNode(pos=(548, 551), word='for'),
      WordNode(pos=(552, 556), word='conf'),
      ReservedwordNode(pos=(557, 559), word='in'),
      WordNode(pos=(560, 571), word='$unsetConfs', parts=[
        ParameterNode(pos=(560, 571), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(571, 572), word=';'),
      ReservedwordNode(pos=(573, 575), word='do'),
      ListNode(pos=(578, 606), parts=[
          PipelineNode(pos=(578, 605), parts=[
            ReservedwordNode(pos=(578, 579), word='!'),
            CommandNode(pos=(580, 605), parts=[
              WordNode(pos=(580, 584), word='grep'),
              WordNode(pos=(585, 587), word='-q'),
              WordNode(pos=(588, 597), word='^$conf=', parts=[
                ParameterNode(pos=(590, 595), value='conf'),
              ]),
              WordNode(pos=(598, 605), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(605, 606)),
        ]),
      ReservedwordNode(pos=(608, 612), word='done'),
    ]),
  ], pos=(548, 612)),
  OperatorNode(op=';', pos=(612, 613)),
  CompoundNode(list=[
    ForNode(pos=(615, 678), parts=[
      ReservedwordNode(pos=(615, 618), word='for'),
      WordNode(pos=(619, 624), word='confV'),
      ReservedwordNode(pos=(625, 627), word='in'),
      WordNode(pos=(628, 637), word='$setConfs', parts=[
        ParameterNode(pos=(628, 637), value='setConfs'),
      ]),
      ReservedwordNode(pos=(637, 638), word=';'),
      ReservedwordNode(pos=(639, 641), word='do'),
      ListNode(pos=(644, 672), parts=[
          CommandNode(pos=(644, 671), parts=[
            WordNode(pos=(644, 648), word='grep'),
            WordNode(pos=(649, 651), word='-q'),
            WordNode(pos=(652, 663), word='^$confV$', parts=[
              ParameterNode(pos=(654, 660), value='confV'),
            ]),
            WordNode(pos=(664, 671), word='.config'),
          ]),
          OperatorNode(op=';', pos=(671, 672)),
        ]),
      ReservedwordNode(pos=(674, 678), word='done'),
    ]),
  ], pos=(615, 678)),
  OperatorNode(op=';', pos=(678, 679)),
])


61) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 679), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 136), parts=[
    AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CommandNode(pos=(140, 183), parts=[
    AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(187, 201), parts=[
    WordNode(pos=(187, 191), word='make'),
    WordNode(pos=(192, 201), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CompoundNode(list=[
    ForNode(pos=(205, 301), parts=[
      ReservedwordNode(pos=(205, 208), word='for'),
      WordNode(pos=(209, 213), word='conf'),
      ReservedwordNode(pos=(214, 216), word='in'),
      WordNode(pos=(217, 228), word='$unsetConfs', parts=[
        ParameterNode(pos=(217, 228), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(228, 229), word=';'),
      ReservedwordNode(pos=(230, 232), word='do'),
      ListNode(pos=(235, 295), parts=[
          CommandNode(pos=(235, 294), parts=[
            WordNode(pos=(235, 238), word='sed'),
            WordNode(pos=(239, 241), word='-i'),
            WordNode(pos=(245, 247), word='-e'),
            WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(252, 257), value='conf'),
              ParameterNode(pos=(265, 270), value='conf'),
            ]),
            WordNode(pos=(287, 294), word='.config'),
          ]),
          OperatorNode(op=';', pos=(294, 295)),
        ]),
      ReservedwordNode(pos=(297, 301), word='done'),
    ]),
  ], pos=(205, 301)),
  OperatorNode(op=';', pos=(301, 302)),
  CompoundNode(list=[
    ForNode(pos=(305, 526), parts=[
      ReservedwordNode(pos=(305, 308), word='for'),
      WordNode(pos=(309, 314), word='confV'),
      ReservedwordNode(pos=(315, 317), word='in'),
      WordNode(pos=(318, 327), word='$setConfs', parts=[
        ParameterNode(pos=(318, 327), value='setConfs'),
      ]),
      ReservedwordNode(pos=(327, 328), word=';'),
      ReservedwordNode(pos=(329, 331), word='do'),
      ListNode(pos=(334, 520), parts=[
          CommandNode(pos=(334, 352), parts=[
            AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(340, 351), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(352, 353)),
          CommandNode(pos=(356, 443), parts=[
            WordNode(pos=(356, 359), word='sed'),
            WordNode(pos=(360, 362), word='-i'),
            WordNode(pos=(366, 368), word='-e'),
            WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(373, 378), value='conf'),
              ParameterNode(pos=(384, 390), value='confV'),
            ]),
            WordNode(pos=(396, 398), word='-e'),
            WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(405, 410), value='conf'),
              ParameterNode(pos=(424, 430), value='confV'),
            ]),
            WordNode(pos=(436, 443), word='.config'),
          ]),
          OperatorNode(op=';', pos=(443, 444)),
          CompoundNode(list=[
            IfNode(pos=(447, 519), parts=[
              ReservedwordNode(pos=(447, 449), word='if'),
              ListNode(pos=(450, 480), parts=[
                  PipelineNode(pos=(450, 479), parts=[
                    ReservedwordNode(pos=(450, 451), word='!'),
                    CommandNode(pos=(452, 479), parts=[
                      WordNode(pos=(452, 456), word='grep'),
                      WordNode(pos=(457, 459), word='-q'),
                      WordNode(pos=(460, 471), word='^$confV$', parts=[
                        ParameterNode(pos=(462, 468), value='confV'),
                      ]),
                      WordNode(pos=(472, 479), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(479, 480)),
                ]),
              ReservedwordNode(pos=(481, 485), word='then'),
              ListNode(pos=(489, 514), parts=[
                  CommandNode(pos=(489, 513), parts=[
                    WordNode(pos=(489, 493), word='echo'),
                    WordNode(pos=(494, 502), word='$confV', parts=[
                      ParameterNode(pos=(495, 501), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(513, 514)),
                ]),
              ReservedwordNode(pos=(517, 519), word='fi'),
            ]),
          ], pos=(447, 519)),
          OperatorNode(op=';', pos=(519, 520)),
        ]),
      ReservedwordNode(pos=(522, 526), word='done'),
    ]),
  ], pos=(305, 526)),
  OperatorNode(op=';', pos=(526, 527)),
  CommandNode(pos=(530, 544), parts=[
    WordNode(pos=(530, 534), word='make'),
    WordNode(pos=(535, 544), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CompoundNode(list=[
    ForNode(pos=(548, 612), parts=[
      ReservedwordNode(pos=(548, 551), word='for'),
      WordNode(pos=(552, 556), word='conf'),
      ReservedwordNode(pos=(557, 559), word='in'),
      WordNode(pos=(560, 571), word='$unsetConfs', parts=[
        ParameterNode(pos=(560, 571), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(571, 572), word=';'),
      ReservedwordNode(pos=(573, 575), word='do'),
      ListNode(pos=(578, 606), parts=[
          PipelineNode(pos=(578, 605), parts=[
            ReservedwordNode(pos=(578, 579), word='!'),
            CommandNode(pos=(580, 605), parts=[
              WordNode(pos=(580, 584), word='grep'),
              WordNode(pos=(585, 587), word='-q'),
              WordNode(pos=(588, 597), word='^$conf=', parts=[
                ParameterNode(pos=(590, 595), value='conf'),
              ]),
              WordNode(pos=(598, 605), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(605, 606)),
        ]),
      ReservedwordNode(pos=(608, 612), word='done'),
    ]),
  ], pos=(548, 612)),
  OperatorNode(op=';', pos=(612, 613)),
  CompoundNode(list=[
    ForNode(pos=(615, 678), parts=[
      ReservedwordNode(pos=(615, 618), word='for'),
      WordNode(pos=(619, 624), word='confV'),
      ReservedwordNode(pos=(625, 627), word='in'),
      WordNode(pos=(628, 637), word='$setConfs', parts=[
        ParameterNode(pos=(628, 637), value='setConfs'),
      ]),
      ReservedwordNode(pos=(637, 638), word=';'),
      ReservedwordNode(pos=(639, 641), word='do'),
      ListNode(pos=(644, 672), parts=[
          CommandNode(pos=(644, 671), parts=[
            WordNode(pos=(644, 648), word='grep'),
            WordNode(pos=(649, 651), word='-q'),
            WordNode(pos=(652, 663), word='^$confV$', parts=[
              ParameterNode(pos=(654, 660), value='confV'),
            ]),
            WordNode(pos=(664, 671), word='.config'),
          ]),
          OperatorNode(op=';', pos=(671, 672)),
        ]),
      ReservedwordNode(pos=(674, 678), word='done'),
    ]),
  ], pos=(615, 678)),
  OperatorNode(op=';', pos=(678, 679)),
])


62) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 679), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 136), parts=[
    AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CommandNode(pos=(140, 183), parts=[
    AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(187, 201), parts=[
    WordNode(pos=(187, 191), word='make'),
    WordNode(pos=(192, 201), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CompoundNode(list=[
    ForNode(pos=(205, 301), parts=[
      ReservedwordNode(pos=(205, 208), word='for'),
      WordNode(pos=(209, 213), word='conf'),
      ReservedwordNode(pos=(214, 216), word='in'),
      WordNode(pos=(217, 228), word='$unsetConfs', parts=[
        ParameterNode(pos=(217, 228), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(228, 229), word=';'),
      ReservedwordNode(pos=(230, 232), word='do'),
      ListNode(pos=(235, 295), parts=[
          CommandNode(pos=(235, 294), parts=[
            WordNode(pos=(235, 238), word='sed'),
            WordNode(pos=(239, 241), word='-i'),
            WordNode(pos=(245, 247), word='-e'),
            WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(252, 257), value='conf'),
              ParameterNode(pos=(265, 270), value='conf'),
            ]),
            WordNode(pos=(287, 294), word='.config'),
          ]),
          OperatorNode(op=';', pos=(294, 295)),
        ]),
      ReservedwordNode(pos=(297, 301), word='done'),
    ]),
  ], pos=(205, 301)),
  OperatorNode(op=';', pos=(301, 302)),
  CompoundNode(list=[
    ForNode(pos=(305, 526), parts=[
      ReservedwordNode(pos=(305, 308), word='for'),
      WordNode(pos=(309, 314), word='confV'),
      ReservedwordNode(pos=(315, 317), word='in'),
      WordNode(pos=(318, 327), word='$setConfs', parts=[
        ParameterNode(pos=(318, 327), value='setConfs'),
      ]),
      ReservedwordNode(pos=(327, 328), word=';'),
      ReservedwordNode(pos=(329, 331), word='do'),
      ListNode(pos=(334, 520), parts=[
          CommandNode(pos=(334, 352), parts=[
            AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(340, 351), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(352, 353)),
          CommandNode(pos=(356, 443), parts=[
            WordNode(pos=(356, 359), word='sed'),
            WordNode(pos=(360, 362), word='-i'),
            WordNode(pos=(366, 368), word='-e'),
            WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(373, 378), value='conf'),
              ParameterNode(pos=(384, 390), value='confV'),
            ]),
            WordNode(pos=(396, 398), word='-e'),
            WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(405, 410), value='conf'),
              ParameterNode(pos=(424, 430), value='confV'),
            ]),
            WordNode(pos=(436, 443), word='.config'),
          ]),
          OperatorNode(op=';', pos=(443, 444)),
          CompoundNode(list=[
            IfNode(pos=(447, 519), parts=[
              ReservedwordNode(pos=(447, 449), word='if'),
              ListNode(pos=(450, 480), parts=[
                  PipelineNode(pos=(450, 479), parts=[
                    ReservedwordNode(pos=(450, 451), word='!'),
                    CommandNode(pos=(452, 479), parts=[
                      WordNode(pos=(452, 456), word='grep'),
                      WordNode(pos=(457, 459), word='-q'),
                      WordNode(pos=(460, 471), word='^$confV$', parts=[
                        ParameterNode(pos=(462, 468), value='confV'),
                      ]),
                      WordNode(pos=(472, 479), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(479, 480)),
                ]),
              ReservedwordNode(pos=(481, 485), word='then'),
              ListNode(pos=(489, 514), parts=[
                  CommandNode(pos=(489, 513), parts=[
                    WordNode(pos=(489, 493), word='echo'),
                    WordNode(pos=(494, 502), word='$confV', parts=[
                      ParameterNode(pos=(495, 501), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(513, 514)),
                ]),
              ReservedwordNode(pos=(517, 519), word='fi'),
            ]),
          ], pos=(447, 519)),
          OperatorNode(op=';', pos=(519, 520)),
        ]),
      ReservedwordNode(pos=(522, 526), word='done'),
    ]),
  ], pos=(305, 526)),
  OperatorNode(op=';', pos=(526, 527)),
  CommandNode(pos=(530, 544), parts=[
    WordNode(pos=(530, 534), word='make'),
    WordNode(pos=(535, 544), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CompoundNode(list=[
    ForNode(pos=(548, 612), parts=[
      ReservedwordNode(pos=(548, 551), word='for'),
      WordNode(pos=(552, 556), word='conf'),
      ReservedwordNode(pos=(557, 559), word='in'),
      WordNode(pos=(560, 571), word='$unsetConfs', parts=[
        ParameterNode(pos=(560, 571), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(571, 572), word=';'),
      ReservedwordNode(pos=(573, 575), word='do'),
      ListNode(pos=(578, 606), parts=[
          PipelineNode(pos=(578, 605), parts=[
            ReservedwordNode(pos=(578, 579), word='!'),
            CommandNode(pos=(580, 605), parts=[
              WordNode(pos=(580, 584), word='grep'),
              WordNode(pos=(585, 587), word='-q'),
              WordNode(pos=(588, 597), word='^$conf=', parts=[
                ParameterNode(pos=(590, 595), value='conf'),
              ]),
              WordNode(pos=(598, 605), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(605, 606)),
        ]),
      ReservedwordNode(pos=(608, 612), word='done'),
    ]),
  ], pos=(548, 612)),
  OperatorNode(op=';', pos=(612, 613)),
  CompoundNode(list=[
    ForNode(pos=(615, 678), parts=[
      ReservedwordNode(pos=(615, 618), word='for'),
      WordNode(pos=(619, 624), word='confV'),
      ReservedwordNode(pos=(625, 627), word='in'),
      WordNode(pos=(628, 637), word='$setConfs', parts=[
        ParameterNode(pos=(628, 637), value='setConfs'),
      ]),
      ReservedwordNode(pos=(637, 638), word=';'),
      ReservedwordNode(pos=(639, 641), word='do'),
      ListNode(pos=(644, 672), parts=[
          CommandNode(pos=(644, 671), parts=[
            WordNode(pos=(644, 648), word='grep'),
            WordNode(pos=(649, 651), word='-q'),
            WordNode(pos=(652, 663), word='^$confV$', parts=[
              ParameterNode(pos=(654, 660), value='confV'),
            ]),
            WordNode(pos=(664, 671), word='.config'),
          ]),
          OperatorNode(op=';', pos=(671, 672)),
        ]),
      ReservedwordNode(pos=(674, 678), word='done'),
    ]),
  ], pos=(615, 678)),
  OperatorNode(op=';', pos=(678, 679)),
])


63) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 679), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 136), parts=[
    AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CommandNode(pos=(140, 183), parts=[
    AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(187, 201), parts=[
    WordNode(pos=(187, 191), word='make'),
    WordNode(pos=(192, 201), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CompoundNode(list=[
    ForNode(pos=(205, 301), parts=[
      ReservedwordNode(pos=(205, 208), word='for'),
      WordNode(pos=(209, 213), word='conf'),
      ReservedwordNode(pos=(214, 216), word='in'),
      WordNode(pos=(217, 228), word='$unsetConfs', parts=[
        ParameterNode(pos=(217, 228), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(228, 229), word=';'),
      ReservedwordNode(pos=(230, 232), word='do'),
      ListNode(pos=(235, 295), parts=[
          CommandNode(pos=(235, 294), parts=[
            WordNode(pos=(235, 238), word='sed'),
            WordNode(pos=(239, 241), word='-i'),
            WordNode(pos=(245, 247), word='-e'),
            WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(252, 257), value='conf'),
              ParameterNode(pos=(265, 270), value='conf'),
            ]),
            WordNode(pos=(287, 294), word='.config'),
          ]),
          OperatorNode(op=';', pos=(294, 295)),
        ]),
      ReservedwordNode(pos=(297, 301), word='done'),
    ]),
  ], pos=(205, 301)),
  OperatorNode(op=';', pos=(301, 302)),
  CompoundNode(list=[
    ForNode(pos=(305, 526), parts=[
      ReservedwordNode(pos=(305, 308), word='for'),
      WordNode(pos=(309, 314), word='confV'),
      ReservedwordNode(pos=(315, 317), word='in'),
      WordNode(pos=(318, 327), word='$setConfs', parts=[
        ParameterNode(pos=(318, 327), value='setConfs'),
      ]),
      ReservedwordNode(pos=(327, 328), word=';'),
      ReservedwordNode(pos=(329, 331), word='do'),
      ListNode(pos=(334, 520), parts=[
          CommandNode(pos=(334, 352), parts=[
            AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(340, 351), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(352, 353)),
          CommandNode(pos=(356, 443), parts=[
            WordNode(pos=(356, 359), word='sed'),
            WordNode(pos=(360, 362), word='-i'),
            WordNode(pos=(366, 368), word='-e'),
            WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(373, 378), value='conf'),
              ParameterNode(pos=(384, 390), value='confV'),
            ]),
            WordNode(pos=(396, 398), word='-e'),
            WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(405, 410), value='conf'),
              ParameterNode(pos=(424, 430), value='confV'),
            ]),
            WordNode(pos=(436, 443), word='.config'),
          ]),
          OperatorNode(op=';', pos=(443, 444)),
          CompoundNode(list=[
            IfNode(pos=(447, 519), parts=[
              ReservedwordNode(pos=(447, 449), word='if'),
              ListNode(pos=(450, 480), parts=[
                  PipelineNode(pos=(450, 479), parts=[
                    ReservedwordNode(pos=(450, 451), word='!'),
                    CommandNode(pos=(452, 479), parts=[
                      WordNode(pos=(452, 456), word='grep'),
                      WordNode(pos=(457, 459), word='-q'),
                      WordNode(pos=(460, 471), word='^$confV$', parts=[
                        ParameterNode(pos=(462, 468), value='confV'),
                      ]),
                      WordNode(pos=(472, 479), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(479, 480)),
                ]),
              ReservedwordNode(pos=(481, 485), word='then'),
              ListNode(pos=(489, 514), parts=[
                  CommandNode(pos=(489, 513), parts=[
                    WordNode(pos=(489, 493), word='echo'),
                    WordNode(pos=(494, 502), word='$confV', parts=[
                      ParameterNode(pos=(495, 501), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(513, 514)),
                ]),
              ReservedwordNode(pos=(517, 519), word='fi'),
            ]),
          ], pos=(447, 519)),
          OperatorNode(op=';', pos=(519, 520)),
        ]),
      ReservedwordNode(pos=(522, 526), word='done'),
    ]),
  ], pos=(305, 526)),
  OperatorNode(op=';', pos=(526, 527)),
  CommandNode(pos=(530, 544), parts=[
    WordNode(pos=(530, 534), word='make'),
    WordNode(pos=(535, 544), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CompoundNode(list=[
    ForNode(pos=(548, 612), parts=[
      ReservedwordNode(pos=(548, 551), word='for'),
      WordNode(pos=(552, 556), word='conf'),
      ReservedwordNode(pos=(557, 559), word='in'),
      WordNode(pos=(560, 571), word='$unsetConfs', parts=[
        ParameterNode(pos=(560, 571), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(571, 572), word=';'),
      ReservedwordNode(pos=(573, 575), word='do'),
      ListNode(pos=(578, 606), parts=[
          PipelineNode(pos=(578, 605), parts=[
            ReservedwordNode(pos=(578, 579), word='!'),
            CommandNode(pos=(580, 605), parts=[
              WordNode(pos=(580, 584), word='grep'),
              WordNode(pos=(585, 587), word='-q'),
              WordNode(pos=(588, 597), word='^$conf=', parts=[
                ParameterNode(pos=(590, 595), value='conf'),
              ]),
              WordNode(pos=(598, 605), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(605, 606)),
        ]),
      ReservedwordNode(pos=(608, 612), word='done'),
    ]),
  ], pos=(548, 612)),
  OperatorNode(op=';', pos=(612, 613)),
  CompoundNode(list=[
    ForNode(pos=(615, 678), parts=[
      ReservedwordNode(pos=(615, 618), word='for'),
      WordNode(pos=(619, 624), word='confV'),
      ReservedwordNode(pos=(625, 627), word='in'),
      WordNode(pos=(628, 637), word='$setConfs', parts=[
        ParameterNode(pos=(628, 637), value='setConfs'),
      ]),
      ReservedwordNode(pos=(637, 638), word=';'),
      ReservedwordNode(pos=(639, 641), word='do'),
      ListNode(pos=(644, 672), parts=[
          CommandNode(pos=(644, 671), parts=[
            WordNode(pos=(644, 648), word='grep'),
            WordNode(pos=(649, 651), word='-q'),
            WordNode(pos=(652, 663), word='^$confV$', parts=[
              ParameterNode(pos=(654, 660), value='confV'),
            ]),
            WordNode(pos=(664, 671), word='.config'),
          ]),
          OperatorNode(op=';', pos=(671, 672)),
        ]),
      ReservedwordNode(pos=(674, 678), word='done'),
    ]),
  ], pos=(615, 678)),
  OperatorNode(op=';', pos=(678, 679)),
])


64) set -ex;  buildrootVersion='2019.05';  mkdir -p rootfs/etc;  for f in passwd shadow group; do   curl -fL -o "rootfs/etc/$f" "https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion";  done;  grep -E '^root::' rootfs/etc/shadow;  sed -ri -e 's/^root::/root:*:/' rootfs/etc/shadow;  grep -E '^root:[*]:' rootfs/etc/shadow;  curl -fL -o buildroot-device-table.txt "https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion";  awk '   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \"%s\" encountered in line %d: %s\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\n", $1;    }    printf "chmod %s %s\n", $3, $1;   }  ' buildroot-device-table.txt | bash -Eeuo pipefail -x;  rm buildroot-device-table.txt

ListNode(pos=(0, 855), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 36), parts=[
    AssignmentNode(pos=(10, 36), word='buildrootVersion=2019.05'),
  ]),
  OperatorNode(op=';', pos=(36, 37)),
  CommandNode(pos=(39, 58), parts=[
    WordNode(pos=(39, 44), word='mkdir'),
    WordNode(pos=(45, 47), word='-p'),
    WordNode(pos=(48, 58), word='rootfs/etc'),
  ]),
  OperatorNode(op=';', pos=(58, 59)),
  CompoundNode(list=[
    ForNode(pos=(61, 216), parts=[
      ReservedwordNode(pos=(61, 64), word='for'),
      WordNode(pos=(65, 66), word='f'),
      ReservedwordNode(pos=(67, 69), word='in'),
      WordNode(pos=(70, 76), word='passwd'),
      WordNode(pos=(77, 83), word='shadow'),
      WordNode(pos=(84, 89), word='group'),
      ReservedwordNode(pos=(89, 90), word=';'),
      ReservedwordNode(pos=(91, 93), word='do'),
      ListNode(pos=(96, 210), parts=[
          CommandNode(pos=(96, 209), parts=[
            WordNode(pos=(96, 100), word='curl'),
            WordNode(pos=(101, 104), word='-fL'),
            WordNode(pos=(105, 107), word='-o'),
            WordNode(pos=(108, 123), word='rootfs/etc/$f', parts=[
              ParameterNode(pos=(120, 122), value='f'),
            ]),
            WordNode(pos=(124, 209), word='https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion', parts=[
              ParameterNode(pos=(185, 187), value='f'),
              ParameterNode(pos=(191, 208), value='buildrootVersion'),
            ]),
          ]),
          OperatorNode(op=';', pos=(209, 210)),
        ]),
      ReservedwordNode(pos=(212, 216), word='done'),
    ]),
  ], pos=(61, 216)),
  OperatorNode(op=';', pos=(216, 217)),
  CommandNode(pos=(219, 254), parts=[
    WordNode(pos=(219, 223), word='grep'),
    WordNode(pos=(224, 226), word='-E'),
    WordNode(pos=(227, 236), word='^root::'),
    WordNode(pos=(237, 254), word='rootfs/etc/shadow'),
  ]),
  OperatorNode(op=';', pos=(254, 255)),
  CommandNode(pos=(257, 306), parts=[
    WordNode(pos=(257, 260), word='sed'),
    WordNode(pos=(261, 264), word='-ri'),
    WordNode(pos=(265, 267), word='-e'),
    WordNode(pos=(268, 288), word='s/^root::/root:*:/'),
    WordNode(pos=(289, 306), word='rootfs/etc/shadow'),
  ]),
  OperatorNode(op=';', pos=(306, 307)),
  CommandNode(pos=(309, 347), parts=[
    WordNode(pos=(309, 313), word='grep'),
    WordNode(pos=(314, 316), word='-E'),
    WordNode(pos=(317, 329), word='^root:[*]:'),
    WordNode(pos=(330, 347), word='rootfs/etc/shadow'),
  ]),
  OperatorNode(op=';', pos=(347, 348)),
  CommandNode(pos=(350, 475), parts=[
    WordNode(pos=(350, 354), word='curl'),
    WordNode(pos=(355, 358), word='-fL'),
    WordNode(pos=(359, 361), word='-o'),
    WordNode(pos=(362, 388), word='buildroot-device-table.txt'),
    WordNode(pos=(389, 475), word='https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion', parts=[
      ParameterNode(pos=(457, 474), value='buildrootVersion'),
    ]),
  ]),
  OperatorNode(op=';', pos=(475, 476)),
  PipelineNode(pos=(478, 823), parts=[
    CommandNode(pos=(478, 798), parts=[
      WordNode(pos=(478, 481), word='awk'),
      WordNode(pos=(482, 771), word='   !/^#/ {    if ($2 != "d" && $2 != "f") {     printf "error: unknown type \\"%s\\" encountered in line %d: %s\\n", $2, NR, $0 > "/dev/stderr";     exit 1;    }    sub(/^\\/?/, "rootfs/", $1);    if ($2 == "d") {     printf "mkdir -p %s\\n", $1;    }    printf "chmod %s %s\\n", $3, $1;   }  '),
      WordNode(pos=(772, 798), word='buildroot-device-table.txt'),
    ]),
    PipeNode(pipe='|', pos=(799, 800)),
    CommandNode(pos=(801, 823), parts=[
      WordNode(pos=(801, 805), word='bash'),
      WordNode(pos=(806, 811), word='-Eeuo'),
      WordNode(pos=(812, 820), word='pipefail'),
      WordNode(pos=(821, 823), word='-x'),
    ]),
  ]),
  OperatorNode(op=';', pos=(823, 824)),
  CommandNode(pos=(826, 855), parts=[
    WordNode(pos=(826, 828), word='rm'),
    WordNode(pos=(829, 855), word='buildroot-device-table.txt'),
  ]),
])


65) set -ex  && cd rootfs  && for userHome in $(awk -F ':' '{ print $3 ":" $4 "=" $6 }' etc/passwd); do   user="${userHome%%=*}";   home="${userHome#*=}";   home="./${home#/}";   if [ ! -d "$home" ]; then    mkdir -p "$home";    chown "$user" "$home";    chmod 755 "$home";   fi;  done

ListNode(pos=(0, 281), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 21), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 21), word='rootfs'),
  ]),
  OperatorNode(op='&&', pos=(23, 25)),
  CompoundNode(list=[
    ForNode(pos=(26, 281), parts=[
      ReservedwordNode(pos=(26, 29), word='for'),
      WordNode(pos=(30, 38), word='userHome'),
      ReservedwordNode(pos=(39, 41), word='in'),
      WordNode(pos=(42, 95), word='$(awk -F \':\' \'{ print $3 ":" $4 "=" $6 }\' etc/passwd)', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(44, 94), parts=[
            WordNode(pos=(44, 47), word='awk'),
            WordNode(pos=(48, 50), word='-F'),
            WordNode(pos=(51, 54), word=':'),
            WordNode(pos=(55, 83), word='{ print $3 ":" $4 "=" $6 }'),
            WordNode(pos=(84, 94), word='etc/passwd'),
          ]), pos=(42, 95)),
      ]),
      ReservedwordNode(pos=(95, 96), word=';'),
      ReservedwordNode(pos=(97, 99), word='do'),
      ListNode(pos=(102, 275), parts=[
          CommandNode(pos=(102, 124), parts=[
            AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
              ParameterNode(pos=(108, 123), value='userHome%%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(124, 125)),
          CommandNode(pos=(128, 149), parts=[
            AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
              ParameterNode(pos=(134, 148), value='userHome#*='),
            ]),
          ]),
          OperatorNode(op=';', pos=(149, 150)),
          CommandNode(pos=(153, 171), parts=[
            AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
              ParameterNode(pos=(161, 170), value='home#/'),
            ]),
          ]),
          OperatorNode(op=';', pos=(171, 172)),
          CompoundNode(list=[
            IfNode(pos=(175, 274), parts=[
              ReservedwordNode(pos=(175, 177), word='if'),
              ListNode(pos=(178, 195), parts=[
                  CommandNode(pos=(178, 194), parts=[
                    WordNode(pos=(178, 179), word='['),
                    WordNode(pos=(180, 181), word='!'),
                    WordNode(pos=(182, 184), word='-d'),
                    WordNode(pos=(185, 192), word='$home', parts=[
                      ParameterNode(pos=(186, 191), value='home'),
                    ]),
                    WordNode(pos=(193, 194), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(194, 195)),
                ]),
              ReservedwordNode(pos=(196, 200), word='then'),
              ListNode(pos=(204, 269), parts=[
                  CommandNode(pos=(204, 220), parts=[
                    WordNode(pos=(204, 209), word='mkdir'),
                    WordNode(pos=(210, 212), word='-p'),
                    WordNode(pos=(213, 220), word='$home', parts=[
                      ParameterNode(pos=(214, 219), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(220, 221)),
                  CommandNode(pos=(225, 246), parts=[
                    WordNode(pos=(225, 230), word='chown'),
                    WordNode(pos=(231, 238), word='$user', parts=[
                      ParameterNode(pos=(232, 237), value='user'),
                    ]),
                    WordNode(pos=(239, 246), word='$home', parts=[
                      ParameterNode(pos=(240, 245), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(246, 247)),
                  CommandNode(pos=(251, 268), parts=[
                    WordNode(pos=(251, 256), word='chmod'),
                    WordNode(pos=(257, 260), word='755'),
                    WordNode(pos=(261, 268), word='$home', parts=[
                      ParameterNode(pos=(262, 267), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(268, 269)),
                ]),
              ReservedwordNode(pos=(272, 274), word='fi'),
            ]),
          ], pos=(175, 274)),
          OperatorNode(op=';', pos=(274, 275)),
        ]),
      ReservedwordNode(pos=(277, 281), word='done'),
    ]),
  ], pos=(26, 281)),
])


66) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libmagickcore-dev   libmagickwand-dev   libmariadbclient-dev   libpq-dev   libsqlite3-dev   make   patch     libssl1.0-dev  ;  rm -rf /var/lib/apt/lists/*;   wget -O freetds.tar.bz2 'http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2';  echo '8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2' | md5sum -c -;  mkdir freetds;  tar -xf freetds.tar.bz2 -C freetds --strip-components=1;  rm freetds.tar.bz2;  ( cd freetds && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && ./configure --build="$gnuArch" --enable-silent-rules && make -j "$(nproc)" && make -C src install && make -C include install );  rm -rf freetds;  gosu redmine bundle config build.tiny_tds --enable-system-freetds;   gosu redmine bundle install --without development test;  for adapter in mysql2 postgresql sqlserver sqlite3; do   echo "$RAILS_ENV:" > ./config/database.yml;   echo "  adapter: $adapter" >> ./config/database.yml;   gosu redmine bundle install --without development test;   cp Gemfile.lock "Gemfile.lock.${adapter}";  done;  rm ./config/database.yml;  chmod -R ugo=rwX Gemfile.lock "$GEM_HOME";  rm -rf ~redmine/.bundle;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | grep -v '^/usr/local/'   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

ListNode(pos=(0, 1647), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 253), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 87), word='-y'),
    WordNode(pos=(88, 111), word='--no-install-recommends'),
    WordNode(pos=(114, 122), word='dpkg-dev'),
    WordNode(pos=(125, 128), word='gcc'),
    WordNode(pos=(131, 148), word='libmagickcore-dev'),
    WordNode(pos=(151, 168), word='libmagickwand-dev'),
    WordNode(pos=(171, 191), word='libmariadbclient-dev'),
    WordNode(pos=(194, 203), word='libpq-dev'),
    WordNode(pos=(206, 220), word='libsqlite3-dev'),
    WordNode(pos=(223, 227), word='make'),
    WordNode(pos=(230, 235), word='patch'),
    WordNode(pos=(240, 253), word='libssl1.0-dev'),
  ]),
  OperatorNode(op=';', pos=(255, 256)),
  CommandNode(pos=(258, 285), parts=[
    WordNode(pos=(258, 260), word='rm'),
    WordNode(pos=(261, 264), word='-rf'),
    WordNode(pos=(265, 285), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(285, 286)),
  CommandNode(pos=(289, 374), parts=[
    WordNode(pos=(289, 293), word='wget'),
    WordNode(pos=(294, 296), word='-O'),
    WordNode(pos=(297, 312), word='freetds.tar.bz2'),
    WordNode(pos=(313, 374), word='http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(374, 375)),
  PipelineNode(pos=(377, 447), parts=[
    CommandNode(pos=(377, 433), parts=[
      WordNode(pos=(377, 381), word='echo'),
      WordNode(pos=(382, 433), word='8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2'),
    ]),
    PipeNode(pipe='|', pos=(434, 435)),
    CommandNode(pos=(436, 447), parts=[
      WordNode(pos=(436, 442), word='md5sum'),
      WordNode(pos=(443, 445), word='-c'),
      WordNode(pos=(446, 447), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(447, 448)),
  CommandNode(pos=(450, 463), parts=[
    WordNode(pos=(450, 455), word='mkdir'),
    WordNode(pos=(456, 463), word='freetds'),
  ]),
  OperatorNode(op=';', pos=(463, 464)),
  CommandNode(pos=(466, 521), parts=[
    WordNode(pos=(466, 469), word='tar'),
    WordNode(pos=(470, 473), word='-xf'),
    WordNode(pos=(474, 489), word='freetds.tar.bz2'),
    WordNode(pos=(490, 492), word='-C'),
    WordNode(pos=(493, 500), word='freetds'),
    WordNode(pos=(501, 521), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(521, 522)),
  CommandNode(pos=(524, 542), parts=[
    WordNode(pos=(524, 526), word='rm'),
    WordNode(pos=(527, 542), word='freetds.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(542, 543)),
  CompoundNode(list=[
    ReservedwordNode(pos=(545, 546), word='('),
    ListNode(pos=(547, 746), parts=[
        CommandNode(pos=(547, 557), parts=[
          WordNode(pos=(547, 549), word='cd'),
          WordNode(pos=(550, 557), word='freetds'),
        ]),
        OperatorNode(op='&&', pos=(558, 560)),
        CommandNode(pos=(561, 618), parts=[
          AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(572, 616), parts=[
                WordNode(pos=(572, 589), word='dpkg-architecture'),
                WordNode(pos=(590, 597), word='--query'),
                WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(570, 617)),
          ]),
        ]),
        OperatorNode(op='&&', pos=(619, 621)),
        CommandNode(pos=(622, 674), parts=[
          WordNode(pos=(622, 633), word='./configure'),
          WordNode(pos=(634, 652), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(643, 651), value='gnuArch'),
          ]),
          WordNode(pos=(653, 674), word='--enable-silent-rules'),
        ]),
        OperatorNode(op='&&', pos=(675, 677)),
        CommandNode(pos=(678, 696), parts=[
          WordNode(pos=(678, 682), word='make'),
          WordNode(pos=(683, 685), word='-j'),
          WordNode(pos=(686, 696), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(689, 694), parts=[
                WordNode(pos=(689, 694), word='nproc'),
              ]), pos=(687, 695)),
          ]),
        ]),
        OperatorNode(op='&&', pos=(697, 699)),
        CommandNode(pos=(700, 719), parts=[
          WordNode(pos=(700, 704), word='make'),
          WordNode(pos=(705, 707), word='-C'),
          WordNode(pos=(708, 711), word='src'),
          WordNode(pos=(712, 719), word='install'),
        ]),
        OperatorNode(op='&&', pos=(720, 722)),
        CommandNode(pos=(723, 746), parts=[
          WordNode(pos=(723, 727), word='make'),
          WordNode(pos=(728, 730), word='-C'),
          WordNode(pos=(731, 738), word='include'),
          WordNode(pos=(739, 746), word='install'),
        ]),
      ]),
    ReservedwordNode(pos=(747, 748), word=')'),
  ], pos=(545, 748)),
  OperatorNode(op=';', pos=(748, 749)),
  CommandNode(pos=(751, 765), parts=[
    WordNode(pos=(751, 753), word='rm'),
    WordNode(pos=(754, 757), word='-rf'),
    WordNode(pos=(758, 765), word='freetds'),
  ]),
  OperatorNode(op=';', pos=(765, 766)),
  CommandNode(pos=(768, 833), parts=[
    WordNode(pos=(768, 772), word='gosu'),
    WordNode(pos=(773, 780), word='redmine'),
    WordNode(pos=(781, 787), word='bundle'),
    WordNode(pos=(788, 794), word='config'),
    WordNode(pos=(795, 809), word='build.tiny_tds'),
    WordNode(pos=(810, 833), word='--enable-system-freetds'),
  ]),
  OperatorNode(op=';', pos=(833, 834)),
  CommandNode(pos=(837, 891), parts=[
    WordNode(pos=(837, 841), word='gosu'),
    WordNode(pos=(842, 849), word='redmine'),
    WordNode(pos=(850, 856), word='bundle'),
    WordNode(pos=(857, 864), word='install'),
    WordNode(pos=(865, 874), word='--without'),
    WordNode(pos=(875, 886), word='development'),
    WordNode(pos=(887, 891), word='test'),
  ]),
  OperatorNode(op=';', pos=(891, 892)),
  CompoundNode(list=[
    ForNode(pos=(894, 1158), parts=[
      ReservedwordNode(pos=(894, 897), word='for'),
      WordNode(pos=(898, 905), word='adapter'),
      ReservedwordNode(pos=(906, 908), word='in'),
      WordNode(pos=(909, 915), word='mysql2'),
      WordNode(pos=(916, 926), word='postgresql'),
      WordNode(pos=(927, 936), word='sqlserver'),
      WordNode(pos=(937, 944), word='sqlite3'),
      ReservedwordNode(pos=(944, 945), word=';'),
      ReservedwordNode(pos=(946, 948), word='do'),
      ListNode(pos=(951, 1152), parts=[
          CommandNode(pos=(951, 993), parts=[
            WordNode(pos=(951, 955), word='echo'),
            WordNode(pos=(956, 969), word='$RAILS_ENV:', parts=[
              ParameterNode(pos=(957, 967), value='RAILS_ENV'),
            ]),
            RedirectNode(output=
              WordNode(pos=(972, 993), word='./config/database.yml'), pos=(970, 993), type='>'),
          ]),
          OperatorNode(op=';', pos=(993, 994)),
          CommandNode(pos=(997, 1048), parts=[
            WordNode(pos=(997, 1001), word='echo'),
            WordNode(pos=(1002, 1023), word='  adapter: $adapter', parts=[
              ParameterNode(pos=(1014, 1022), value='adapter'),
            ]),
            RedirectNode(output=
              WordNode(pos=(1027, 1048), word='./config/database.yml'), pos=(1024, 1048), type='>>'),
          ]),
          OperatorNode(op=';', pos=(1048, 1049)),
          CommandNode(pos=(1052, 1106), parts=[
            WordNode(pos=(1052, 1056), word='gosu'),
            WordNode(pos=(1057, 1064), word='redmine'),
            WordNode(pos=(1065, 1071), word='bundle'),
            WordNode(pos=(1072, 1079), word='install'),
            WordNode(pos=(1080, 1089), word='--without'),
            WordNode(pos=(1090, 1101), word='development'),
            WordNode(pos=(1102, 1106), word='test'),
          ]),
          OperatorNode(op=';', pos=(1106, 1107)),
          CommandNode(pos=(1110, 1151), parts=[
            WordNode(pos=(1110, 1112), word='cp'),
            WordNode(pos=(1113, 1125), word='Gemfile.lock'),
            WordNode(pos=(1126, 1151), word='Gemfile.lock.${adapter}', parts=[
              ParameterNode(pos=(1140, 1150), value='adapter'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1151, 1152)),
        ]),
      ReservedwordNode(pos=(1154, 1158), word='done'),
    ]),
  ], pos=(894, 1158)),
  OperatorNode(op=';', pos=(1158, 1159)),
  CommandNode(pos=(1161, 1185), parts=[
    WordNode(pos=(1161, 1163), word='rm'),
    WordNode(pos=(1164, 1185), word='./config/database.yml'),
  ]),
  OperatorNode(op=';', pos=(1185, 1186)),
  CommandNode(pos=(1188, 1229), parts=[
    WordNode(pos=(1188, 1193), word='chmod'),
    WordNode(pos=(1194, 1196), word='-R'),
    WordNode(pos=(1197, 1204), word='ugo=rwX'),
    WordNode(pos=(1205, 1217), word='Gemfile.lock'),
    WordNode(pos=(1218, 1229), word='$GEM_HOME', parts=[
      ParameterNode(pos=(1219, 1228), value='GEM_HOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1229, 1230)),
  CommandNode(pos=(1232, 1255), parts=[
    WordNode(pos=(1232, 1234), word='rm'),
    WordNode(pos=(1235, 1238), word='-rf'),
    WordNode(pos=(1239, 1255), word='~redmine/.bundle', parts=[
      TildeNode(pos=(1239, 1247), value='~redmine'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1255, 1256)),
  CommandNode(pos=(1259, 1289), parts=[
    WordNode(pos=(1259, 1267), word='apt-mark'),
    WordNode(pos=(1268, 1272), word='auto'),
    WordNode(pos=(1273, 1277), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1280, 1289), word='/dev/null'), pos=(1278, 1289), type='>'),
  ]),
  OperatorNode(op=';', pos=(1289, 1290)),
  CommandNode(pos=(1292, 1314), parts=[
    WordNode(pos=(1292, 1293), word='['),
    WordNode(pos=(1294, 1296), word='-z'),
    WordNode(pos=(1297, 1312), word='$savedAptMark', parts=[
      ParameterNode(pos=(1298, 1311), value='savedAptMark'),
    ]),
    WordNode(pos=(1313, 1314), word=']'),
  ]),
  OperatorNode(op='||', pos=(1315, 1317)),
  CommandNode(pos=(1318, 1347), parts=[
    WordNode(pos=(1318, 1326), word='apt-mark'),
    WordNode(pos=(1327, 1333), word='manual'),
    WordNode(pos=(1334, 1347), word='$savedAptMark', parts=[
      ParameterNode(pos=(1334, 1347), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1347, 1348)),
  PipelineNode(pos=(1350, 1566), parts=[
    CommandNode(pos=(1350, 1404), parts=[
      WordNode(pos=(1350, 1354), word='find'),
      WordNode(pos=(1355, 1365), word='/usr/local'),
      WordNode(pos=(1366, 1371), word='-type'),
      WordNode(pos=(1372, 1373), word='f'),
      WordNode(pos=(1374, 1385), word='-executable'),
      WordNode(pos=(1386, 1391), word='-exec'),
      WordNode(pos=(1392, 1395), word='ldd'),
      WordNode(pos=(1396, 1400), word='{}'),
      WordNode(pos=(1401, 1404), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1407, 1408)),
    CommandNode(pos=(1409, 1437), parts=[
      WordNode(pos=(1409, 1412), word='awk'),
      WordNode(pos=(1413, 1437), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1440, 1441)),
    CommandNode(pos=(1442, 1449), parts=[
      WordNode(pos=(1442, 1446), word='sort'),
      WordNode(pos=(1447, 1449), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1452, 1453)),
    CommandNode(pos=(1454, 1476), parts=[
      WordNode(pos=(1454, 1458), word='grep'),
      WordNode(pos=(1459, 1461), word='-v'),
      WordNode(pos=(1462, 1476), word='^/usr/local/'),
    ]),
    PipeNode(pipe='|', pos=(1479, 1480)),
    CommandNode(pos=(1481, 1509), parts=[
      WordNode(pos=(1481, 1486), word='xargs'),
      WordNode(pos=(1487, 1489), word='-r'),
      WordNode(pos=(1490, 1500), word='dpkg-query'),
      WordNode(pos=(1501, 1509), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1512, 1513)),
    CommandNode(pos=(1514, 1525), parts=[
      WordNode(pos=(1514, 1517), word='cut'),
      WordNode(pos=(1518, 1521), word='-d:'),
      WordNode(pos=(1522, 1525), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1528, 1529)),
    CommandNode(pos=(1530, 1537), parts=[
      WordNode(pos=(1530, 1534), word='sort'),
      WordNode(pos=(1535, 1537), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1540, 1541)),
    CommandNode(pos=(1542, 1566), parts=[
      WordNode(pos=(1542, 1547), word='xargs'),
      WordNode(pos=(1548, 1550), word='-r'),
      WordNode(pos=(1551, 1559), word='apt-mark'),
      WordNode(pos=(1560, 1566), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1568, 1569)),
  CommandNode(pos=(1571, 1647), parts=[
    WordNode(pos=(1571, 1578), word='apt-get'),
    WordNode(pos=(1579, 1584), word='purge'),
    WordNode(pos=(1585, 1587), word='-y'),
    WordNode(pos=(1588, 1601), word='--auto-remove'),
    WordNode(pos=(1602, 1604), word='-o'),
    WordNode(pos=(1605, 1647), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
])


67) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


68) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


69) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


70) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


71) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


72) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


73) set -eux;   apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev  ;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   mkdir /usr/local/src;   wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum -c -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum -c -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --no-cache --virtual .otp-run-deps $runDeps;  apk del --no-network .build-deps;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3380), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 159), parts=[
    WordNode(pos=(12, 15), word='apk'),
    WordNode(pos=(16, 19), word='add'),
    WordNode(pos=(20, 30), word='--no-cache'),
    WordNode(pos=(31, 40), word='--virtual'),
    WordNode(pos=(41, 52), word='.build-deps'),
    WordNode(pos=(55, 63), word='autoconf'),
    WordNode(pos=(66, 81), word='ca-certificates'),
    WordNode(pos=(84, 92), word='dpkg-dev'),
    WordNode(pos=(93, 97), word='dpkg'),
    WordNode(pos=(100, 103), word='gcc'),
    WordNode(pos=(106, 111), word='gnupg'),
    WordNode(pos=(114, 122), word='libc-dev'),
    WordNode(pos=(125, 138), word='linux-headers'),
    WordNode(pos=(141, 145), word='make'),
    WordNode(pos=(148, 159), word='ncurses-dev'),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CommandNode(pos=(165, 248), parts=[
    AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(248, 249)),
  CommandNode(pos=(251, 305), parts=[
    AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(305, 306)),
  CommandNode(pos=(308, 345), parts=[
    AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(345, 346)),
  CommandNode(pos=(349, 369), parts=[
    WordNode(pos=(349, 354), word='mkdir'),
    WordNode(pos=(355, 369), word='/usr/local/src'),
  ]),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 448), parts=[
    WordNode(pos=(373, 377), word='wget'),
    WordNode(pos=(378, 395), word='--output-document'),
    WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(448, 449)),
  CommandNode(pos=(451, 518), parts=[
    WordNode(pos=(451, 455), word='wget'),
    WordNode(pos=(456, 473), word='--output-document'),
    WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(518, 519)),
  CommandNode(pos=(521, 552), parts=[
    WordNode(pos=(521, 527), word='export'),
    WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(541, 550), parts=[
          WordNode(pos=(541, 547), word='mktemp'),
          WordNode(pos=(548, 550), word='-d'),
        ]), pos=(539, 551)),
    ]),
  ]),
  OperatorNode(op=';', pos=(552, 553)),
  CompoundNode(list=[
    ForNode(pos=(555, 659), parts=[
      ReservedwordNode(pos=(555, 558), word='for'),
      WordNode(pos=(559, 562), word='key'),
      ReservedwordNode(pos=(563, 565), word='in'),
      WordNode(pos=(566, 586), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(566, 586), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(586, 587), word=';'),
      ReservedwordNode(pos=(588, 590), word='do'),
      ListNode(pos=(593, 653), parts=[
          CommandNode(pos=(593, 652), parts=[
            WordNode(pos=(593, 596), word='gpg'),
            WordNode(pos=(597, 604), word='--batch'),
            WordNode(pos=(605, 616), word='--keyserver'),
            WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(634, 645), word='--recv-keys'),
            WordNode(pos=(646, 652), word='$key', parts=[
              ParameterNode(pos=(647, 651), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(652, 653)),
        ]),
      ReservedwordNode(pos=(655, 659), word='done'),
    ]),
  ], pos=(555, 659)),
  OperatorNode(op=';', pos=(659, 660)),
  CommandNode(pos=(662, 732), parts=[
    WordNode(pos=(662, 665), word='gpg'),
    WordNode(pos=(666, 673), word='--batch'),
    WordNode(pos=(674, 682), word='--verify'),
    WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(732, 733)),
  CommandNode(pos=(735, 753), parts=[
    WordNode(pos=(735, 742), word='gpgconf'),
    WordNode(pos=(743, 749), word='--kill'),
    WordNode(pos=(750, 753), word='all'),
  ]),
  OperatorNode(op=';', pos=(753, 754)),
  CommandNode(pos=(756, 775), parts=[
    WordNode(pos=(756, 758), word='rm'),
    WordNode(pos=(759, 762), word='-rf'),
    WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(764, 774), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(775, 776)),
  PipelineNode(pos=(778, 846), parts=[
    CommandNode(pos=(778, 829), parts=[
      WordNode(pos=(778, 782), word='echo'),
      WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(830, 831)),
    CommandNode(pos=(832, 846), parts=[
      WordNode(pos=(832, 841), word='sha256sum'),
      WordNode(pos=(842, 844), word='-c'),
      WordNode(pos=(845, 846), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(846, 847)),
  CommandNode(pos=(849, 873), parts=[
    WordNode(pos=(849, 854), word='mkdir'),
    WordNode(pos=(855, 857), word='-p'),
    WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(873, 874)),
  CommandNode(pos=(876, 968), parts=[
    WordNode(pos=(876, 879), word='tar'),
    WordNode(pos=(880, 889), word='--extract'),
    WordNode(pos=(890, 896), word='--file'),
    WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(920, 931), word='--directory'),
    WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(948, 966), word='--strip-components'),
    WordNode(pos=(967, 968), word='1'),
  ]),
  OperatorNode(op=';', pos=(968, 969)),
  CommandNode(pos=(972, 990), parts=[
    WordNode(pos=(972, 974), word='cd'),
    WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(990, 991)),
  CommandNode(pos=(993, 1142), parts=[
    AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1004, 1047), parts=[
          WordNode(pos=(1004, 1021), word='dpkg-architecture'),
          WordNode(pos=(1022, 1029), word='--query'),
          WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1002, 1048)),
    ]),
    AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
    WordNode(pos=(1099, 1107), word='./config'),
    WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1142, 1143)),
  CommandNode(pos=(1145, 1183), parts=[
    WordNode(pos=(1145, 1149), word='make'),
    WordNode(pos=(1150, 1152), word='-j'),
    WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1156, 1181), parts=[
          WordNode(pos=(1156, 1163), word='getconf'),
          WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
        ]), pos=(1154, 1182)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1183, 1184)),
  CommandNode(pos=(1186, 1217), parts=[
    WordNode(pos=(1186, 1190), word='make'),
    WordNode(pos=(1191, 1201), word='install_sw'),
    WordNode(pos=(1202, 1217), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1217, 1218)),
  CommandNode(pos=(1220, 1225), parts=[
    WordNode(pos=(1220, 1222), word='cd'),
    WordNode(pos=(1223, 1225), word='..'),
  ]),
  OperatorNode(op=';', pos=(1225, 1226)),
  CommandNode(pos=(1228, 1251), parts=[
    WordNode(pos=(1228, 1230), word='rm'),
    WordNode(pos=(1231, 1234), word='-rf'),
    WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1251, 1252)),
  CommandNode(pos=(1254, 1317), parts=[
    WordNode(pos=(1254, 1259), word='rmdir'),
    WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1317, 1318)),
  CommandNode(pos=(1320, 1380), parts=[
    WordNode(pos=(1320, 1322), word='ln'),
    WordNode(pos=(1323, 1326), word='-sf'),
    WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
    WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
    WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1380, 1381)),
  CommandNode(pos=(1383, 1398), parts=[
    WordNode(pos=(1383, 1390), word='openssl'),
    WordNode(pos=(1391, 1398), word='version'),
  ]),
  OperatorNode(op=';', pos=(1398, 1399)),
  CommandNode(pos=(1402, 1480), parts=[
    AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1480, 1481)),
  CommandNode(pos=(1483, 1525), parts=[
    AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1525, 1526)),
  CommandNode(pos=(1529, 1549), parts=[
    WordNode(pos=(1529, 1534), word='mkdir'),
    WordNode(pos=(1535, 1537), word='-p'),
    WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1549, 1550)),
  CommandNode(pos=(1552, 1611), parts=[
    WordNode(pos=(1552, 1556), word='wget'),
    WordNode(pos=(1557, 1574), word='--output-document'),
    WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
    ]),
    WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1611, 1612)),
  PipelineNode(pos=(1614, 1674), parts=[
    CommandNode(pos=(1614, 1657), parts=[
      WordNode(pos=(1614, 1618), word='echo'),
      WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1658, 1659)),
    CommandNode(pos=(1660, 1674), parts=[
      WordNode(pos=(1660, 1669), word='sha256sum'),
      WordNode(pos=(1670, 1672), word='-c'),
      WordNode(pos=(1673, 1674), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1674, 1675)),
  CommandNode(pos=(1677, 1761), parts=[
    WordNode(pos=(1677, 1680), word='tar'),
    WordNode(pos=(1681, 1690), word='--extract'),
    WordNode(pos=(1691, 1697), word='--file'),
    WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
    ]),
    WordNode(pos=(1717, 1728), word='--directory'),
    WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
    ]),
    WordNode(pos=(1741, 1759), word='--strip-components'),
    WordNode(pos=(1760, 1761), word='1'),
  ]),
  OperatorNode(op=';', pos=(1761, 1762)),
  CommandNode(pos=(1765, 1779), parts=[
    WordNode(pos=(1765, 1767), word='cd'),
    WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1779, 1780)),
  CommandNode(pos=(1782, 1808), parts=[
    WordNode(pos=(1782, 1788), word='export'),
    WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1808, 1809)),
  CommandNode(pos=(1811, 1831), parts=[
    WordNode(pos=(1811, 1822), word='./otp_build'),
    WordNode(pos=(1823, 1831), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(1831, 1832)),
  CommandNode(pos=(1834, 1874), parts=[
    AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1844, 1872), parts=[
          WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
          WordNode(pos=(1860, 1865), word='--get'),
          WordNode(pos=(1866, 1872), word='CFLAGS'),
        ]), pos=(1842, 1873)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1874, 1875)),
  CommandNode(pos=(1876, 1889), parts=[
    WordNode(pos=(1876, 1882), word='export'),
    WordNode(pos=(1883, 1889), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(1889, 1890)),
  CommandNode(pos=(1892, 1949), parts=[
    AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1904, 1947), parts=[
          WordNode(pos=(1904, 1921), word='dpkg-architecture'),
          WordNode(pos=(1922, 1929), word='--query'),
          WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(1902, 1948)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1949, 1950)),
  CommandNode(pos=(1952, 2011), parts=[
    AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1965, 2009), parts=[
          WordNode(pos=(1965, 1982), word='dpkg-architecture'),
          WordNode(pos=(1983, 1990), word='--query'),
          WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1963, 2010)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2011, 2012)),
  CommandNode(pos=(2014, 2053), parts=[
    AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2026, 2051), parts=[
          WordNode(pos=(2026, 2030), word='dpkg'),
          WordNode(pos=(2031, 2051), word='--print-architecture'),
        ]), pos=(2024, 2052)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2053, 2054)),
  CommandNode(pos=(2055, 2081), parts=[
    AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2081, 2082)),
  CommandNode(pos=(2084, 2766), parts=[
    WordNode(pos=(2084, 2095), word='./configure'),
    WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2106, 2115), value='hostArch'),
    ]),
    WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2128, 2138), value='buildArch'),
    ]),
    WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2170, 2184), word='--disable-hipe'),
    WordNode(pos=(2187, 2201), word='--disable-sctp'),
    WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
    WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
    WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
    WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
    WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
    WordNode(pos=(2323, 2343), word='--enable-smp-support'),
    WordNode(pos=(2346, 2362), word='--enable-threads'),
    WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2402, 2423), word='--without-common_test'),
    WordNode(pos=(2426, 2444), word='--without-debugger'),
    WordNode(pos=(2447, 2465), word='--without-dialyzer'),
    WordNode(pos=(2468, 2486), word='--without-diameter'),
    WordNode(pos=(2489, 2503), word='--without-edoc'),
    WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
    WordNode(pos=(2529, 2552), word='--without-erl_interface'),
    WordNode(pos=(2555, 2567), word='--without-et'),
    WordNode(pos=(2570, 2585), word='--without-eunit'),
    WordNode(pos=(2588, 2601), word='--without-ftp'),
    WordNode(pos=(2604, 2618), word='--without-hipe'),
    WordNode(pos=(2621, 2641), word='--without-jinterface'),
    WordNode(pos=(2644, 2660), word='--without-megaco'),
    WordNode(pos=(2663, 2681), word='--without-observer'),
    WordNode(pos=(2684, 2698), word='--without-odbc'),
    WordNode(pos=(2701, 2718), word='--without-reltool'),
    WordNode(pos=(2721, 2734), word='--without-ssh'),
    WordNode(pos=(2737, 2751), word='--without-tftp'),
    WordNode(pos=(2754, 2766), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(2768, 2769)),
  CommandNode(pos=(2771, 2849), parts=[
    WordNode(pos=(2771, 2775), word='make'),
    WordNode(pos=(2776, 2778), word='-j'),
    WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2782, 2807), parts=[
          WordNode(pos=(2782, 2789), word='getconf'),
          WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
        ]), pos=(2780, 2808)),
    ]),
    WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(2849, 2850)),
  CommandNode(pos=(2852, 2864), parts=[
    WordNode(pos=(2852, 2856), word='make'),
    WordNode(pos=(2857, 2864), word='install'),
  ]),
  OperatorNode(op=';', pos=(2864, 2865)),
  CommandNode(pos=(2867, 2872), parts=[
    WordNode(pos=(2867, 2869), word='cd'),
    WordNode(pos=(2870, 2872), word='..'),
  ]),
  OperatorNode(op=';', pos=(2872, 2873)),
  CommandNode(pos=(2875, 2969), parts=[
    WordNode(pos=(2875, 2877), word='rm'),
    WordNode(pos=(2878, 2881), word='-rf'),
    WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
    ]),
    WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(2971, 2972)),
  CommandNode(pos=(2975, 3172), parts=[
    AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2989, 3168), parts=[
          CommandNode(pos=(2989, 3055), parts=[
            WordNode(pos=(2989, 2996), word='scanelf'),
            WordNode(pos=(2997, 3005), word='--needed'),
            WordNode(pos=(3006, 3016), word='--nobanner'),
            WordNode(pos=(3017, 3025), word='--format'),
            WordNode(pos=(3026, 3032), word='%n#p'),
            WordNode(pos=(3033, 3044), word='--recursive'),
            WordNode(pos=(3045, 3055), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(3059, 3060)),
          CommandNode(pos=(3061, 3072), parts=[
            WordNode(pos=(3061, 3063), word='tr'),
            WordNode(pos=(3064, 3067), word=','),
            WordNode(pos=(3068, 3072), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(3076, 3077)),
          CommandNode(pos=(3078, 3085), parts=[
            WordNode(pos=(3078, 3082), word='sort'),
            WordNode(pos=(3083, 3085), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(3089, 3090)),
          CommandNode(pos=(3091, 3168), parts=[
            WordNode(pos=(3091, 3094), word='awk'),
            WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2984, 3169)),
    ]),
  ]),
  OperatorNode(op=';', pos=(3172, 3173)),
  CommandNode(pos=(3175, 3226), parts=[
    WordNode(pos=(3175, 3178), word='apk'),
    WordNode(pos=(3179, 3182), word='add'),
    WordNode(pos=(3183, 3193), word='--no-cache'),
    WordNode(pos=(3194, 3203), word='--virtual'),
    WordNode(pos=(3204, 3217), word='.otp-run-deps'),
    WordNode(pos=(3218, 3226), word='$runDeps', parts=[
      ParameterNode(pos=(3218, 3226), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3226, 3227)),
  CommandNode(pos=(3229, 3261), parts=[
    WordNode(pos=(3229, 3232), word='apk'),
    WordNode(pos=(3233, 3236), word='del'),
    WordNode(pos=(3237, 3249), word='--no-network'),
    WordNode(pos=(3250, 3261), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(3261, 3262)),
  CommandNode(pos=(3265, 3280), parts=[
    WordNode(pos=(3265, 3272), word='openssl'),
    WordNode(pos=(3273, 3280), word='version'),
  ]),
  OperatorNode(op=';', pos=(3280, 3281)),
  CommandNode(pos=(3283, 3380), parts=[
    WordNode(pos=(3283, 3286), word='erl'),
    WordNode(pos=(3287, 3295), word='-noshell'),
    WordNode(pos=(3296, 3301), word='-eval'),
    WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


74) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


75) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget  ;  rm -rf /var/lib/apt/lists/*;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum --check --strict -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf;  ldconfig;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum --check --strict -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3761), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 200), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 90), word='--yes'),
    WordNode(pos=(91, 114), word='--no-install-recommends'),
    WordNode(pos=(117, 125), word='autoconf'),
    WordNode(pos=(128, 143), word='ca-certificates'),
    WordNode(pos=(146, 154), word='dpkg-dev'),
    WordNode(pos=(157, 160), word='gcc'),
    WordNode(pos=(163, 168), word='gnupg'),
    WordNode(pos=(171, 186), word='libncurses5-dev'),
    WordNode(pos=(189, 193), word='make'),
    WordNode(pos=(196, 200), word='wget'),
  ]),
  OperatorNode(op=';', pos=(202, 203)),
  CommandNode(pos=(205, 232), parts=[
    WordNode(pos=(205, 207), word='rm'),
    WordNode(pos=(208, 211), word='-rf'),
    WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(232, 233)),
  CommandNode(pos=(236, 319), parts=[
    AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(319, 320)),
  CommandNode(pos=(322, 376), parts=[
    AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(376, 377)),
  CommandNode(pos=(379, 416), parts=[
    AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(416, 417)),
  CommandNode(pos=(420, 515), parts=[
    WordNode(pos=(420, 424), word='wget'),
    WordNode(pos=(425, 435), word='--progress'),
    WordNode(pos=(436, 444), word='dot:giga'),
    WordNode(pos=(445, 462), word='--output-document'),
    WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(515, 516)),
  CommandNode(pos=(518, 605), parts=[
    WordNode(pos=(518, 522), word='wget'),
    WordNode(pos=(523, 533), word='--progress'),
    WordNode(pos=(534, 542), word='dot:giga'),
    WordNode(pos=(543, 560), word='--output-document'),
    WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(605, 606)),
  CommandNode(pos=(608, 639), parts=[
    WordNode(pos=(608, 614), word='export'),
    WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(628, 637), parts=[
          WordNode(pos=(628, 634), word='mktemp'),
          WordNode(pos=(635, 637), word='-d'),
        ]), pos=(626, 638)),
    ]),
  ]),
  OperatorNode(op=';', pos=(639, 640)),
  CompoundNode(list=[
    ForNode(pos=(642, 746), parts=[
      ReservedwordNode(pos=(642, 645), word='for'),
      WordNode(pos=(646, 649), word='key'),
      ReservedwordNode(pos=(650, 652), word='in'),
      WordNode(pos=(653, 673), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(653, 673), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(673, 674), word=';'),
      ReservedwordNode(pos=(675, 677), word='do'),
      ListNode(pos=(680, 740), parts=[
          CommandNode(pos=(680, 739), parts=[
            WordNode(pos=(680, 683), word='gpg'),
            WordNode(pos=(684, 691), word='--batch'),
            WordNode(pos=(692, 703), word='--keyserver'),
            WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(721, 732), word='--recv-keys'),
            WordNode(pos=(733, 739), word='$key', parts=[
              ParameterNode(pos=(734, 738), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(739, 740)),
        ]),
      ReservedwordNode(pos=(742, 746), word='done'),
    ]),
  ], pos=(642, 746)),
  OperatorNode(op=';', pos=(746, 747)),
  CommandNode(pos=(749, 819), parts=[
    WordNode(pos=(749, 752), word='gpg'),
    WordNode(pos=(753, 760), word='--batch'),
    WordNode(pos=(761, 769), word='--verify'),
    WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(819, 820)),
  CommandNode(pos=(822, 840), parts=[
    WordNode(pos=(822, 829), word='gpgconf'),
    WordNode(pos=(830, 836), word='--kill'),
    WordNode(pos=(837, 840), word='all'),
  ]),
  OperatorNode(op=';', pos=(840, 841)),
  CommandNode(pos=(843, 862), parts=[
    WordNode(pos=(843, 845), word='rm'),
    WordNode(pos=(846, 849), word='-rf'),
    WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(851, 861), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(862, 863)),
  PipelineNode(pos=(865, 947), parts=[
    CommandNode(pos=(865, 916), parts=[
      WordNode(pos=(865, 869), word='echo'),
      WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(917, 918)),
    CommandNode(pos=(919, 947), parts=[
      WordNode(pos=(919, 928), word='sha256sum'),
      WordNode(pos=(929, 936), word='--check'),
      WordNode(pos=(937, 945), word='--strict'),
      WordNode(pos=(946, 947), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(947, 948)),
  CommandNode(pos=(950, 974), parts=[
    WordNode(pos=(950, 955), word='mkdir'),
    WordNode(pos=(956, 958), word='-p'),
    WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(977, 1069), parts=[
    WordNode(pos=(977, 980), word='tar'),
    WordNode(pos=(981, 990), word='--extract'),
    WordNode(pos=(991, 997), word='--file'),
    WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1021, 1032), word='--directory'),
    WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1049, 1067), word='--strip-components'),
    WordNode(pos=(1068, 1069), word='1'),
  ]),
  OperatorNode(op=';', pos=(1069, 1070)),
  CommandNode(pos=(1073, 1091), parts=[
    WordNode(pos=(1073, 1075), word='cd'),
    WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1091, 1092)),
  CommandNode(pos=(1094, 1156), parts=[
    AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1110, 1154), parts=[
          WordNode(pos=(1110, 1127), word='dpkg-architecture'),
          WordNode(pos=(1128, 1135), word='--query'),
          WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
        ]), pos=(1108, 1155)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1156, 1157)),
  CommandNode(pos=(1159, 1337), parts=[
    AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1170, 1213), parts=[
          WordNode(pos=(1170, 1187), word='dpkg-architecture'),
          WordNode(pos=(1188, 1195), word='--query'),
          WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1168, 1214)),
    ]),
    AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
    WordNode(pos=(1265, 1273), word='./config'),
    WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
      ParameterNode(pos=(1323, 1336), value='debMultiarch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1337, 1338)),
  CommandNode(pos=(1340, 1378), parts=[
    WordNode(pos=(1340, 1344), word='make'),
    WordNode(pos=(1345, 1347), word='-j'),
    WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1351, 1376), parts=[
          WordNode(pos=(1351, 1358), word='getconf'),
          WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
        ]), pos=(1349, 1377)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1378, 1379)),
  CommandNode(pos=(1381, 1412), parts=[
    WordNode(pos=(1381, 1385), word='make'),
    WordNode(pos=(1386, 1396), word='install_sw'),
    WordNode(pos=(1397, 1412), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1412, 1413)),
  CommandNode(pos=(1415, 1420), parts=[
    WordNode(pos=(1415, 1417), word='cd'),
    WordNode(pos=(1418, 1420), word='..'),
  ]),
  OperatorNode(op=';', pos=(1420, 1421)),
  CommandNode(pos=(1423, 1446), parts=[
    WordNode(pos=(1423, 1425), word='rm'),
    WordNode(pos=(1426, 1429), word='-rf'),
    WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1446, 1447)),
  CommandNode(pos=(1449, 1512), parts=[
    WordNode(pos=(1449, 1453), word='echo'),
    WordNode(pos=(1454, 1470), word='/usr/local/lib'),
    RedirectNode(output=
      WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
  ]),
  OperatorNode(op=';', pos=(1512, 1513)),
  CommandNode(pos=(1515, 1523), parts=[
    WordNode(pos=(1515, 1523), word='ldconfig'),
  ]),
  OperatorNode(op=';', pos=(1523, 1524)),
  CommandNode(pos=(1526, 1589), parts=[
    WordNode(pos=(1526, 1531), word='rmdir'),
    WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1589, 1590)),
  CommandNode(pos=(1592, 1652), parts=[
    WordNode(pos=(1592, 1594), word='ln'),
    WordNode(pos=(1595, 1598), word='-sf'),
    WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
    WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
    WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1652, 1653)),
  CommandNode(pos=(1655, 1670), parts=[
    WordNode(pos=(1655, 1662), word='openssl'),
    WordNode(pos=(1663, 1670), word='version'),
  ]),
  OperatorNode(op=';', pos=(1670, 1671)),
  CommandNode(pos=(1674, 1752), parts=[
    AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1752, 1753)),
  CommandNode(pos=(1755, 1797), parts=[
    AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1797, 1798)),
  CommandNode(pos=(1801, 1821), parts=[
    WordNode(pos=(1801, 1806), word='mkdir'),
    WordNode(pos=(1807, 1809), word='-p'),
    WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1821, 1822)),
  CommandNode(pos=(1824, 1903), parts=[
    WordNode(pos=(1824, 1828), word='wget'),
    WordNode(pos=(1829, 1839), word='--progress'),
    WordNode(pos=(1840, 1848), word='dot:giga'),
    WordNode(pos=(1849, 1866), word='--output-document'),
    WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
    ]),
    WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1903, 1904)),
  PipelineNode(pos=(1906, 1980), parts=[
    CommandNode(pos=(1906, 1949), parts=[
      WordNode(pos=(1906, 1910), word='echo'),
      WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1950, 1951)),
    CommandNode(pos=(1952, 1980), parts=[
      WordNode(pos=(1952, 1961), word='sha256sum'),
      WordNode(pos=(1962, 1969), word='--check'),
      WordNode(pos=(1970, 1978), word='--strict'),
      WordNode(pos=(1979, 1980), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1980, 1981)),
  CommandNode(pos=(1983, 2067), parts=[
    WordNode(pos=(1983, 1986), word='tar'),
    WordNode(pos=(1987, 1996), word='--extract'),
    WordNode(pos=(1997, 2003), word='--file'),
    WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
    ]),
    WordNode(pos=(2023, 2034), word='--directory'),
    WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
    ]),
    WordNode(pos=(2047, 2065), word='--strip-components'),
    WordNode(pos=(2066, 2067), word='1'),
  ]),
  OperatorNode(op=';', pos=(2067, 2068)),
  CommandNode(pos=(2071, 2085), parts=[
    WordNode(pos=(2071, 2073), word='cd'),
    WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2085, 2086)),
  CommandNode(pos=(2088, 2114), parts=[
    WordNode(pos=(2088, 2094), word='export'),
    WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2114, 2115)),
  CommandNode(pos=(2117, 2137), parts=[
    WordNode(pos=(2117, 2128), word='./otp_build'),
    WordNode(pos=(2129, 2137), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(2137, 2138)),
  CommandNode(pos=(2140, 2180), parts=[
    AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2150, 2178), parts=[
          WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
          WordNode(pos=(2166, 2171), word='--get'),
          WordNode(pos=(2172, 2178), word='CFLAGS'),
        ]), pos=(2148, 2179)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2180, 2181)),
  CommandNode(pos=(2182, 2195), parts=[
    WordNode(pos=(2182, 2188), word='export'),
    WordNode(pos=(2189, 2195), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(2195, 2196)),
  CommandNode(pos=(2198, 2255), parts=[
    AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2210, 2253), parts=[
          WordNode(pos=(2210, 2227), word='dpkg-architecture'),
          WordNode(pos=(2228, 2235), word='--query'),
          WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(2208, 2254)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2255, 2256)),
  CommandNode(pos=(2258, 2317), parts=[
    AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2271, 2315), parts=[
          WordNode(pos=(2271, 2288), word='dpkg-architecture'),
          WordNode(pos=(2289, 2296), word='--query'),
          WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(2269, 2316)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2317, 2318)),
  CommandNode(pos=(2320, 2359), parts=[
    AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2332, 2357), parts=[
          WordNode(pos=(2332, 2336), word='dpkg'),
          WordNode(pos=(2337, 2357), word='--print-architecture'),
        ]), pos=(2330, 2358)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2359, 2360)),
  CommandNode(pos=(2361, 2387), parts=[
    AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2387, 2388)),
  CommandNode(pos=(2390, 3072), parts=[
    WordNode(pos=(2390, 2401), word='./configure'),
    WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2412, 2421), value='hostArch'),
    ]),
    WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2434, 2444), value='buildArch'),
    ]),
    WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2476, 2490), word='--disable-hipe'),
    WordNode(pos=(2493, 2507), word='--disable-sctp'),
    WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
    WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
    WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
    WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
    WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
    WordNode(pos=(2629, 2649), word='--enable-smp-support'),
    WordNode(pos=(2652, 2668), word='--enable-threads'),
    WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2708, 2729), word='--without-common_test'),
    WordNode(pos=(2732, 2750), word='--without-debugger'),
    WordNode(pos=(2753, 2771), word='--without-dialyzer'),
    WordNode(pos=(2774, 2792), word='--without-diameter'),
    WordNode(pos=(2795, 2809), word='--without-edoc'),
    WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
    WordNode(pos=(2835, 2858), word='--without-erl_interface'),
    WordNode(pos=(2861, 2873), word='--without-et'),
    WordNode(pos=(2876, 2891), word='--without-eunit'),
    WordNode(pos=(2894, 2907), word='--without-ftp'),
    WordNode(pos=(2910, 2924), word='--without-hipe'),
    WordNode(pos=(2927, 2947), word='--without-jinterface'),
    WordNode(pos=(2950, 2966), word='--without-megaco'),
    WordNode(pos=(2969, 2987), word='--without-observer'),
    WordNode(pos=(2990, 3004), word='--without-odbc'),
    WordNode(pos=(3007, 3024), word='--without-reltool'),
    WordNode(pos=(3027, 3040), word='--without-ssh'),
    WordNode(pos=(3043, 3057), word='--without-tftp'),
    WordNode(pos=(3060, 3072), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(3074, 3075)),
  CommandNode(pos=(3077, 3155), parts=[
    WordNode(pos=(3077, 3081), word='make'),
    WordNode(pos=(3082, 3084), word='-j'),
    WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(3088, 3113), parts=[
          WordNode(pos=(3088, 3095), word='getconf'),
          WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
        ]), pos=(3086, 3114)),
    ]),
    WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(3155, 3156)),
  CommandNode(pos=(3158, 3170), parts=[
    WordNode(pos=(3158, 3162), word='make'),
    WordNode(pos=(3163, 3170), word='install'),
  ]),
  OperatorNode(op=';', pos=(3170, 3171)),
  CommandNode(pos=(3173, 3178), parts=[
    WordNode(pos=(3173, 3175), word='cd'),
    WordNode(pos=(3176, 3178), word='..'),
  ]),
  OperatorNode(op=';', pos=(3178, 3179)),
  CommandNode(pos=(3181, 3275), parts=[
    WordNode(pos=(3181, 3183), word='rm'),
    WordNode(pos=(3184, 3187), word='-rf'),
    WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
    ]),
    WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(3277, 3278)),
  CommandNode(pos=(3281, 3311), parts=[
    WordNode(pos=(3281, 3289), word='apt-mark'),
    WordNode(pos=(3290, 3294), word='auto'),
    WordNode(pos=(3295, 3299), word='.*'),
    RedirectNode(output=
      WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
  ]),
  OperatorNode(op=';', pos=(3311, 3312)),
  CommandNode(pos=(3314, 3336), parts=[
    WordNode(pos=(3314, 3315), word='['),
    WordNode(pos=(3316, 3318), word='-z'),
    WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
      ParameterNode(pos=(3320, 3333), value='savedAptMark'),
    ]),
    WordNode(pos=(3335, 3336), word=']'),
  ]),
  OperatorNode(op='||', pos=(3337, 3339)),
  CommandNode(pos=(3340, 3369), parts=[
    WordNode(pos=(3340, 3348), word='apt-mark'),
    WordNode(pos=(3349, 3355), word='manual'),
    WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
      ParameterNode(pos=(3356, 3369), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3369, 3370)),
  PipelineNode(pos=(3372, 3561), parts=[
    CommandNode(pos=(3372, 3426), parts=[
      WordNode(pos=(3372, 3376), word='find'),
      WordNode(pos=(3377, 3387), word='/usr/local'),
      WordNode(pos=(3388, 3393), word='-type'),
      WordNode(pos=(3394, 3395), word='f'),
      WordNode(pos=(3396, 3407), word='-executable'),
      WordNode(pos=(3408, 3413), word='-exec'),
      WordNode(pos=(3414, 3417), word='ldd'),
      WordNode(pos=(3418, 3422), word='{}'),
      WordNode(pos=(3423, 3426), word=';'),
    ]),
    PipeNode(pipe='|', pos=(3429, 3430)),
    CommandNode(pos=(3431, 3459), parts=[
      WordNode(pos=(3431, 3434), word='awk'),
      WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(3462, 3463)),
    CommandNode(pos=(3464, 3471), parts=[
      WordNode(pos=(3464, 3468), word='sort'),
      WordNode(pos=(3469, 3471), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3474, 3475)),
    CommandNode(pos=(3476, 3504), parts=[
      WordNode(pos=(3476, 3481), word='xargs'),
      WordNode(pos=(3482, 3484), word='-r'),
      WordNode(pos=(3485, 3495), word='dpkg-query'),
      WordNode(pos=(3496, 3504), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(3507, 3508)),
    CommandNode(pos=(3509, 3520), parts=[
      WordNode(pos=(3509, 3512), word='cut'),
      WordNode(pos=(3513, 3516), word='-d:'),
      WordNode(pos=(3517, 3520), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(3523, 3524)),
    CommandNode(pos=(3525, 3532), parts=[
      WordNode(pos=(3525, 3529), word='sort'),
      WordNode(pos=(3530, 3532), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3535, 3536)),
    CommandNode(pos=(3537, 3561), parts=[
      WordNode(pos=(3537, 3542), word='xargs'),
      WordNode(pos=(3543, 3545), word='-r'),
      WordNode(pos=(3546, 3554), word='apt-mark'),
      WordNode(pos=(3555, 3561), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3563, 3564)),
  CommandNode(pos=(3566, 3642), parts=[
    WordNode(pos=(3566, 3573), word='apt-get'),
    WordNode(pos=(3574, 3579), word='purge'),
    WordNode(pos=(3580, 3582), word='-y'),
    WordNode(pos=(3583, 3596), word='--auto-remove'),
    WordNode(pos=(3597, 3599), word='-o'),
    WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(3642, 3643)),
  CommandNode(pos=(3646, 3661), parts=[
    WordNode(pos=(3646, 3653), word='openssl'),
    WordNode(pos=(3654, 3661), word='version'),
  ]),
  OperatorNode(op=';', pos=(3661, 3662)),
  CommandNode(pos=(3664, 3761), parts=[
    WordNode(pos=(3664, 3667), word='erl'),
    WordNode(pos=(3668, 3676), word='-noshell'),
    WordNode(pos=(3677, 3682), word='-eval'),
    WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


76) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 304), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 219), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 240), parts=[
    WordNode(pos=(222, 229), word='command'),
    WordNode(pos=(230, 232), word='-v'),
    WordNode(pos=(233, 240), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(241, 243)),
  CommandNode(pos=(244, 262), parts=[
    WordNode(pos=(244, 251), word='gpgconf'),
    WordNode(pos=(252, 258), word='--kill'),
    WordNode(pos=(259, 262), word='all'),
  ]),
  OperatorNode(op='||', pos=(263, 265)),
  CommandNode(pos=(266, 267), parts=[
    WordNode(pos=(266, 267), word=':'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 289), parts=[
    WordNode(pos=(270, 272), word='rm'),
    WordNode(pos=(273, 276), word='-rf'),
    WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(278, 288), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(289, 290)),
  CommandNode(pos=(292, 304), parts=[
    WordNode(pos=(292, 299), word='apt-key'),
    WordNode(pos=(300, 304), word='list'),
  ]),
])


77) set -ex;  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done

ListNode(pos=(0, 113), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    ForNode(pos=(10, 113), parts=[
      ReservedwordNode(pos=(10, 13), word='for'),
      WordNode(pos=(14, 17), word='key'),
      ReservedwordNode(pos=(18, 20), word='in'),
      WordNode(pos=(21, 30), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(21, 30), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(30, 31), word=';'),
      ReservedwordNode(pos=(32, 34), word='do'),
      ListNode(pos=(37, 107), parts=[
          CommandNode(pos=(37, 106), parts=[
            WordNode(pos=(37, 40), word='gpg'),
            WordNode(pos=(41, 48), word='--batch'),
            WordNode(pos=(49, 60), word='--keyserver'),
            WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(88, 99), word='--recv-keys'),
            WordNode(pos=(100, 106), word='$key', parts=[
              ParameterNode(pos=(101, 105), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
        ]),
      ReservedwordNode(pos=(109, 113), word='done'),
    ]),
  ], pos=(10, 113)),
])


78) set -euxo pipefail;   export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$MANIFEST_TOOL_GPG_KEY";   mkdir -p bin;   for bashbrewArch in $BASHBREW_ARCHES; do   (    goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"; eval "$goEnv";    srcBin="manifest-tool-$GOOS-$GOARCH";    if [ "$GOARCH" = 'arm' ]; then [ -n "$GOARM" ]; srcBin="${srcBin}v$GOARM"; fi;    [ "$GOOS" = 'windows' ] && ext='.exe' || ext=;    srcBin="$srcBin$ext";    targetBin="bin/manifest-tool-$bashbrewArch$ext";    wget -O "$targetBin.asc" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc";    wget -O "$targetBin" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin";    gpg --batch --verify "$targetBin.asc" "$targetBin";    ls -lAFh "$targetBin"*;    file "$targetBin"*;   )  done;   gpgconf --kill all;  rm -r "$GNUPGHOME";   ls -lAFh bin/manifest-tool-*;  file bin/manifest-tool-*

ListNode(pos=(0, 993), parts=[
  CommandNode(pos=(0, 18), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 9), word='-euxo'),
    WordNode(pos=(10, 18), word='pipefail'),
  ]),
  OperatorNode(op=';', pos=(18, 19)),
  CommandNode(pos=(22, 53), parts=[
    WordNode(pos=(22, 28), word='export'),
    WordNode(pos=(29, 53), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(42, 51), parts=[
          WordNode(pos=(42, 48), word='mktemp'),
          WordNode(pos=(49, 51), word='-d'),
        ]), pos=(40, 52)),
    ]),
  ]),
  OperatorNode(op=';', pos=(53, 54)),
  CommandNode(pos=(56, 143), parts=[
    WordNode(pos=(56, 59), word='gpg'),
    WordNode(pos=(60, 67), word='--batch'),
    WordNode(pos=(68, 79), word='--keyserver'),
    WordNode(pos=(80, 106), word='ha.pool.sks-keyservers.net'),
    WordNode(pos=(107, 118), word='--recv-keys'),
    WordNode(pos=(119, 143), word='$MANIFEST_TOOL_GPG_KEY', parts=[
      ParameterNode(pos=(120, 142), value='MANIFEST_TOOL_GPG_KEY'),
    ]),
  ]),
  OperatorNode(op=';', pos=(143, 144)),
  CommandNode(pos=(147, 159), parts=[
    WordNode(pos=(147, 152), word='mkdir'),
    WordNode(pos=(153, 155), word='-p'),
    WordNode(pos=(156, 159), word='bin'),
  ]),
  OperatorNode(op=';', pos=(159, 160)),
  CompoundNode(list=[
    ForNode(pos=(163, 891), parts=[
      ReservedwordNode(pos=(163, 166), word='for'),
      WordNode(pos=(167, 179), word='bashbrewArch'),
      ReservedwordNode(pos=(180, 182), word='in'),
      WordNode(pos=(183, 199), word='$BASHBREW_ARCHES', parts=[
        ParameterNode(pos=(183, 199), value='BASHBREW_ARCHES'),
      ]),
      ReservedwordNode(pos=(199, 200), word=';'),
      ReservedwordNode(pos=(201, 203), word='do'),
      CompoundNode(list=[
        ReservedwordNode(pos=(206, 207), word='('),
        ListNode(pos=(211, 881), parts=[
            CommandNode(pos=(211, 264), parts=[
              AssignmentNode(pos=(211, 264), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
                CommandsubstitutionNode(command=
                  CommandNode(pos=(220, 262), parts=[
                    WordNode(pos=(220, 246), word='.bashbrew-arch-to-goenv.sh'),
                    WordNode(pos=(247, 262), word='$bashbrewArch', parts=[
                      ParameterNode(pos=(248, 261), value='bashbrewArch'),
                    ]),
                  ]), pos=(218, 263)),
              ]),
            ]),
            OperatorNode(op=';', pos=(264, 265)),
            CommandNode(pos=(266, 279), parts=[
              WordNode(pos=(266, 270), word='eval'),
              WordNode(pos=(271, 279), word='$goEnv', parts=[
                ParameterNode(pos=(272, 278), value='goEnv'),
              ]),
            ]),
            OperatorNode(op=';', pos=(279, 280)),
            CommandNode(pos=(284, 320), parts=[
              AssignmentNode(pos=(284, 320), word='srcBin=manifest-tool-$GOOS-$GOARCH', parts=[
                ParameterNode(pos=(306, 311), value='GOOS'),
                ParameterNode(pos=(312, 319), value='GOARCH'),
              ]),
            ]),
            OperatorNode(op=';', pos=(320, 321)),
            CompoundNode(list=[
              IfNode(pos=(325, 402), parts=[
                ReservedwordNode(pos=(325, 327), word='if'),
                ListNode(pos=(328, 350), parts=[
                    CommandNode(pos=(328, 349), parts=[
                      WordNode(pos=(328, 329), word='['),
                      WordNode(pos=(330, 339), word='$GOARCH', parts=[
                        ParameterNode(pos=(331, 338), value='GOARCH'),
                      ]),
                      WordNode(pos=(340, 341), word='='),
                      WordNode(pos=(342, 347), word='arm'),
                      WordNode(pos=(348, 349), word=']'),
                    ]),
                    OperatorNode(op=';', pos=(349, 350)),
                  ]),
                ReservedwordNode(pos=(351, 355), word='then'),
                ListNode(pos=(356, 399), parts=[
                    CommandNode(pos=(356, 371), parts=[
                      WordNode(pos=(356, 357), word='['),
                      WordNode(pos=(358, 360), word='-n'),
                      WordNode(pos=(361, 369), word='$GOARM', parts=[
                        ParameterNode(pos=(362, 368), value='GOARM'),
                      ]),
                      WordNode(pos=(370, 371), word=']'),
                    ]),
                    OperatorNode(op=';', pos=(371, 372)),
                    CommandNode(pos=(373, 398), parts=[
                      AssignmentNode(pos=(373, 398), word='srcBin=${srcBin}v$GOARM', parts=[
                        ParameterNode(pos=(381, 390), value='srcBin'),
                        ParameterNode(pos=(391, 397), value='GOARM'),
                      ]),
                    ]),
                    OperatorNode(op=';', pos=(398, 399)),
                  ]),
                ReservedwordNode(pos=(400, 402), word='fi'),
              ]),
            ], pos=(325, 402)),
            OperatorNode(op=';', pos=(402, 403)),
            CommandNode(pos=(407, 430), parts=[
              WordNode(pos=(407, 408), word='['),
              WordNode(pos=(409, 416), word='$GOOS', parts=[
                ParameterNode(pos=(410, 415), value='GOOS'),
              ]),
              WordNode(pos=(417, 418), word='='),
              WordNode(pos=(419, 428), word='windows'),
              WordNode(pos=(429, 430), word=']'),
            ]),
            OperatorNode(op='&&', pos=(431, 433)),
            CommandNode(pos=(434, 444), parts=[
              AssignmentNode(pos=(434, 444), word='ext=.exe'),
            ]),
            OperatorNode(op='||', pos=(445, 447)),
            CommandNode(pos=(448, 452), parts=[
              AssignmentNode(pos=(448, 452), word='ext='),
            ]),
            OperatorNode(op=';', pos=(452, 453)),
            CommandNode(pos=(457, 477), parts=[
              AssignmentNode(pos=(457, 477), word='srcBin=$srcBin$ext', parts=[
                ParameterNode(pos=(465, 472), value='srcBin'),
                ParameterNode(pos=(472, 476), value='ext'),
              ]),
            ]),
            OperatorNode(op=';', pos=(477, 478)),
            CommandNode(pos=(482, 529), parts=[
              AssignmentNode(pos=(482, 529), word='targetBin=bin/manifest-tool-$bashbrewArch$ext', parts=[
                ParameterNode(pos=(511, 524), value='bashbrewArch'),
                ParameterNode(pos=(524, 528), value='ext'),
              ]),
            ]),
            OperatorNode(op=';', pos=(529, 530)),
            CommandNode(pos=(534, 656), parts=[
              WordNode(pos=(534, 538), word='wget'),
              WordNode(pos=(539, 541), word='-O'),
              WordNode(pos=(542, 558), word='$targetBin.asc', parts=[
                ParameterNode(pos=(543, 553), value='targetBin'),
              ]),
              WordNode(pos=(559, 656), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc', parts=[
                ParameterNode(pos=(619, 643), value='MANIFEST_TOOL_VERSION'),
                ParameterNode(pos=(644, 651), value='srcBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(656, 657)),
            CommandNode(pos=(661, 775), parts=[
              WordNode(pos=(661, 665), word='wget'),
              WordNode(pos=(666, 668), word='-O'),
              WordNode(pos=(669, 681), word='$targetBin', parts=[
                ParameterNode(pos=(670, 680), value='targetBin'),
              ]),
              WordNode(pos=(682, 775), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin', parts=[
                ParameterNode(pos=(742, 766), value='MANIFEST_TOOL_VERSION'),
                ParameterNode(pos=(767, 774), value='srcBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(775, 776)),
            CommandNode(pos=(780, 830), parts=[
              WordNode(pos=(780, 783), word='gpg'),
              WordNode(pos=(784, 791), word='--batch'),
              WordNode(pos=(792, 800), word='--verify'),
              WordNode(pos=(801, 817), word='$targetBin.asc', parts=[
                ParameterNode(pos=(802, 812), value='targetBin'),
              ]),
              WordNode(pos=(818, 830), word='$targetBin', parts=[
                ParameterNode(pos=(819, 829), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(830, 831)),
            CommandNode(pos=(835, 857), parts=[
              WordNode(pos=(835, 837), word='ls'),
              WordNode(pos=(838, 843), word='-lAFh'),
              WordNode(pos=(844, 857), word='$targetBin*', parts=[
                ParameterNode(pos=(845, 855), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(857, 858)),
            CommandNode(pos=(862, 880), parts=[
              WordNode(pos=(862, 866), word='file'),
              WordNode(pos=(867, 880), word='$targetBin*', parts=[
                ParameterNode(pos=(868, 878), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(880, 881)),
          ]),
        ReservedwordNode(pos=(884, 885), word=')'),
      ], pos=(206, 885)),
      ReservedwordNode(pos=(887, 891), word='done'),
    ]),
  ], pos=(163, 891)),
  OperatorNode(op=';', pos=(891, 892)),
  CommandNode(pos=(895, 913), parts=[
    WordNode(pos=(895, 902), word='gpgconf'),
    WordNode(pos=(903, 909), word='--kill'),
    WordNode(pos=(910, 913), word='all'),
  ]),
  OperatorNode(op=';', pos=(913, 914)),
  CommandNode(pos=(916, 934), parts=[
    WordNode(pos=(916, 918), word='rm'),
    WordNode(pos=(919, 921), word='-r'),
    WordNode(pos=(922, 934), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(923, 933), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(934, 935)),
  CommandNode(pos=(938, 966), parts=[
    WordNode(pos=(938, 940), word='ls'),
    WordNode(pos=(941, 946), word='-lAFh'),
    WordNode(pos=(947, 966), word='bin/manifest-tool-*'),
  ]),
  OperatorNode(op=';', pos=(966, 967)),
  CommandNode(pos=(969, 993), parts=[
    WordNode(pos=(969, 973), word='file'),
    WordNode(pos=(974, 993), word='bin/manifest-tool-*'),
  ]),
])


79) set -euxo pipefail;   mkdir -p bin;   for bashbrewArch in $BASHBREW_ARCHES; do   (    goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"; eval "$goEnv";    [ "$GOOS" = 'windows' ] && ext='.exe' || ext=;       targetBin="bin/bashbrew-$bashbrewArch$ext";    go build     -a -v     -ldflags '-s -w'     -tags netgo -installsuffix netgo     -o "$targetBin"     -mod vendor     bashbrew/src/bashbrew    ;    ls -lAFh "$targetBin";    file "$targetBin";   )  done;   ls -lAFh bin/bashbrew-*;  file bin/bashbrew-*

ListNode(pos=(0, 509), parts=[
  CommandNode(pos=(0, 18), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 9), word='-euxo'),
    WordNode(pos=(10, 18), word='pipefail'),
  ]),
  OperatorNode(op=';', pos=(18, 19)),
  CommandNode(pos=(22, 34), parts=[
    WordNode(pos=(22, 27), word='mkdir'),
    WordNode(pos=(28, 30), word='-p'),
    WordNode(pos=(31, 34), word='bin'),
  ]),
  OperatorNode(op=';', pos=(34, 35)),
  CompoundNode(list=[
    ForNode(pos=(38, 460), parts=[
      ReservedwordNode(pos=(38, 41), word='for'),
      WordNode(pos=(42, 54), word='bashbrewArch'),
      ReservedwordNode(pos=(55, 57), word='in'),
      WordNode(pos=(58, 74), word='$BASHBREW_ARCHES', parts=[
        ParameterNode(pos=(58, 74), value='BASHBREW_ARCHES'),
      ]),
      ReservedwordNode(pos=(74, 75), word=';'),
      ReservedwordNode(pos=(76, 78), word='do'),
      CompoundNode(list=[
        ReservedwordNode(pos=(81, 82), word='('),
        ListNode(pos=(86, 450), parts=[
            CommandNode(pos=(86, 139), parts=[
              AssignmentNode(pos=(86, 139), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
                CommandsubstitutionNode(command=
                  CommandNode(pos=(95, 137), parts=[
                    WordNode(pos=(95, 121), word='.bashbrew-arch-to-goenv.sh'),
                    WordNode(pos=(122, 137), word='$bashbrewArch', parts=[
                      ParameterNode(pos=(123, 136), value='bashbrewArch'),
                    ]),
                  ]), pos=(93, 138)),
              ]),
            ]),
            OperatorNode(op=';', pos=(139, 140)),
            CommandNode(pos=(141, 154), parts=[
              WordNode(pos=(141, 145), word='eval'),
              WordNode(pos=(146, 154), word='$goEnv', parts=[
                ParameterNode(pos=(147, 153), value='goEnv'),
              ]),
            ]),
            OperatorNode(op=';', pos=(154, 155)),
            CommandNode(pos=(159, 182), parts=[
              WordNode(pos=(159, 160), word='['),
              WordNode(pos=(161, 168), word='$GOOS', parts=[
                ParameterNode(pos=(162, 167), value='GOOS'),
              ]),
              WordNode(pos=(169, 170), word='='),
              WordNode(pos=(171, 180), word='windows'),
              WordNode(pos=(181, 182), word=']'),
            ]),
            OperatorNode(op='&&', pos=(183, 185)),
            CommandNode(pos=(186, 196), parts=[
              AssignmentNode(pos=(186, 196), word='ext=.exe'),
            ]),
            OperatorNode(op='||', pos=(197, 199)),
            CommandNode(pos=(200, 204), parts=[
              AssignmentNode(pos=(200, 204), word='ext='),
            ]),
            OperatorNode(op=';', pos=(204, 205)),
            CommandNode(pos=(212, 254), parts=[
              AssignmentNode(pos=(212, 254), word='targetBin=bin/bashbrew-$bashbrewArch$ext', parts=[
                ParameterNode(pos=(236, 249), value='bashbrewArch'),
                ParameterNode(pos=(249, 253), value='ext'),
              ]),
            ]),
            OperatorNode(op=';', pos=(254, 255)),
            CommandNode(pos=(259, 397), parts=[
              WordNode(pos=(259, 261), word='go'),
              WordNode(pos=(262, 267), word='build'),
              WordNode(pos=(272, 274), word='-a'),
              WordNode(pos=(275, 277), word='-v'),
              WordNode(pos=(282, 290), word='-ldflags'),
              WordNode(pos=(291, 298), word='-s -w'),
              WordNode(pos=(303, 308), word='-tags'),
              WordNode(pos=(309, 314), word='netgo'),
              WordNode(pos=(315, 329), word='-installsuffix'),
              WordNode(pos=(330, 335), word='netgo'),
              WordNode(pos=(340, 342), word='-o'),
              WordNode(pos=(343, 355), word='$targetBin', parts=[
                ParameterNode(pos=(344, 354), value='targetBin'),
              ]),
              WordNode(pos=(360, 364), word='-mod'),
              WordNode(pos=(365, 371), word='vendor'),
              WordNode(pos=(376, 397), word='bashbrew/src/bashbrew'),
            ]),
            OperatorNode(op=';', pos=(401, 402)),
            CommandNode(pos=(406, 427), parts=[
              WordNode(pos=(406, 408), word='ls'),
              WordNode(pos=(409, 414), word='-lAFh'),
              WordNode(pos=(415, 427), word='$targetBin', parts=[
                ParameterNode(pos=(416, 426), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(427, 428)),
            CommandNode(pos=(432, 449), parts=[
              WordNode(pos=(432, 436), word='file'),
              WordNode(pos=(437, 449), word='$targetBin', parts=[
                ParameterNode(pos=(438, 448), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(449, 450)),
          ]),
        ReservedwordNode(pos=(453, 454), word=')'),
      ], pos=(81, 454)),
      ReservedwordNode(pos=(456, 460), word='done'),
    ]),
  ], pos=(38, 460)),
  OperatorNode(op=';', pos=(460, 461)),
  CommandNode(pos=(464, 487), parts=[
    WordNode(pos=(464, 466), word='ls'),
    WordNode(pos=(467, 472), word='-lAFh'),
    WordNode(pos=(473, 487), word='bin/bashbrew-*'),
  ]),
  OperatorNode(op=';', pos=(487, 488)),
  CommandNode(pos=(490, 509), parts=[
    WordNode(pos=(490, 494), word='file'),
    WordNode(pos=(495, 509), word='bin/bashbrew-*'),
  ]),
])


80) set -eux;   apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev  ;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   mkdir /usr/local/src;   wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum -c -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum -c -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --no-cache --virtual .otp-run-deps $runDeps;  apk del --no-network .build-deps;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3380), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 159), parts=[
    WordNode(pos=(12, 15), word='apk'),
    WordNode(pos=(16, 19), word='add'),
    WordNode(pos=(20, 30), word='--no-cache'),
    WordNode(pos=(31, 40), word='--virtual'),
    WordNode(pos=(41, 52), word='.build-deps'),
    WordNode(pos=(55, 63), word='autoconf'),
    WordNode(pos=(66, 81), word='ca-certificates'),
    WordNode(pos=(84, 92), word='dpkg-dev'),
    WordNode(pos=(93, 97), word='dpkg'),
    WordNode(pos=(100, 103), word='gcc'),
    WordNode(pos=(106, 111), word='gnupg'),
    WordNode(pos=(114, 122), word='libc-dev'),
    WordNode(pos=(125, 138), word='linux-headers'),
    WordNode(pos=(141, 145), word='make'),
    WordNode(pos=(148, 159), word='ncurses-dev'),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CommandNode(pos=(165, 248), parts=[
    AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(248, 249)),
  CommandNode(pos=(251, 305), parts=[
    AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(305, 306)),
  CommandNode(pos=(308, 345), parts=[
    AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(345, 346)),
  CommandNode(pos=(349, 369), parts=[
    WordNode(pos=(349, 354), word='mkdir'),
    WordNode(pos=(355, 369), word='/usr/local/src'),
  ]),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 448), parts=[
    WordNode(pos=(373, 377), word='wget'),
    WordNode(pos=(378, 395), word='--output-document'),
    WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(448, 449)),
  CommandNode(pos=(451, 518), parts=[
    WordNode(pos=(451, 455), word='wget'),
    WordNode(pos=(456, 473), word='--output-document'),
    WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(518, 519)),
  CommandNode(pos=(521, 552), parts=[
    WordNode(pos=(521, 527), word='export'),
    WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(541, 550), parts=[
          WordNode(pos=(541, 547), word='mktemp'),
          WordNode(pos=(548, 550), word='-d'),
        ]), pos=(539, 551)),
    ]),
  ]),
  OperatorNode(op=';', pos=(552, 553)),
  CompoundNode(list=[
    ForNode(pos=(555, 659), parts=[
      ReservedwordNode(pos=(555, 558), word='for'),
      WordNode(pos=(559, 562), word='key'),
      ReservedwordNode(pos=(563, 565), word='in'),
      WordNode(pos=(566, 586), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(566, 586), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(586, 587), word=';'),
      ReservedwordNode(pos=(588, 590), word='do'),
      ListNode(pos=(593, 653), parts=[
          CommandNode(pos=(593, 652), parts=[
            WordNode(pos=(593, 596), word='gpg'),
            WordNode(pos=(597, 604), word='--batch'),
            WordNode(pos=(605, 616), word='--keyserver'),
            WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(634, 645), word='--recv-keys'),
            WordNode(pos=(646, 652), word='$key', parts=[
              ParameterNode(pos=(647, 651), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(652, 653)),
        ]),
      ReservedwordNode(pos=(655, 659), word='done'),
    ]),
  ], pos=(555, 659)),
  OperatorNode(op=';', pos=(659, 660)),
  CommandNode(pos=(662, 732), parts=[
    WordNode(pos=(662, 665), word='gpg'),
    WordNode(pos=(666, 673), word='--batch'),
    WordNode(pos=(674, 682), word='--verify'),
    WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(732, 733)),
  CommandNode(pos=(735, 753), parts=[
    WordNode(pos=(735, 742), word='gpgconf'),
    WordNode(pos=(743, 749), word='--kill'),
    WordNode(pos=(750, 753), word='all'),
  ]),
  OperatorNode(op=';', pos=(753, 754)),
  CommandNode(pos=(756, 775), parts=[
    WordNode(pos=(756, 758), word='rm'),
    WordNode(pos=(759, 762), word='-rf'),
    WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(764, 774), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(775, 776)),
  PipelineNode(pos=(778, 846), parts=[
    CommandNode(pos=(778, 829), parts=[
      WordNode(pos=(778, 782), word='echo'),
      WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(830, 831)),
    CommandNode(pos=(832, 846), parts=[
      WordNode(pos=(832, 841), word='sha256sum'),
      WordNode(pos=(842, 844), word='-c'),
      WordNode(pos=(845, 846), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(846, 847)),
  CommandNode(pos=(849, 873), parts=[
    WordNode(pos=(849, 854), word='mkdir'),
    WordNode(pos=(855, 857), word='-p'),
    WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(873, 874)),
  CommandNode(pos=(876, 968), parts=[
    WordNode(pos=(876, 879), word='tar'),
    WordNode(pos=(880, 889), word='--extract'),
    WordNode(pos=(890, 896), word='--file'),
    WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(920, 931), word='--directory'),
    WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(948, 966), word='--strip-components'),
    WordNode(pos=(967, 968), word='1'),
  ]),
  OperatorNode(op=';', pos=(968, 969)),
  CommandNode(pos=(972, 990), parts=[
    WordNode(pos=(972, 974), word='cd'),
    WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(990, 991)),
  CommandNode(pos=(993, 1142), parts=[
    AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1004, 1047), parts=[
          WordNode(pos=(1004, 1021), word='dpkg-architecture'),
          WordNode(pos=(1022, 1029), word='--query'),
          WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1002, 1048)),
    ]),
    AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
    WordNode(pos=(1099, 1107), word='./config'),
    WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1142, 1143)),
  CommandNode(pos=(1145, 1183), parts=[
    WordNode(pos=(1145, 1149), word='make'),
    WordNode(pos=(1150, 1152), word='-j'),
    WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1156, 1181), parts=[
          WordNode(pos=(1156, 1163), word='getconf'),
          WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
        ]), pos=(1154, 1182)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1183, 1184)),
  CommandNode(pos=(1186, 1217), parts=[
    WordNode(pos=(1186, 1190), word='make'),
    WordNode(pos=(1191, 1201), word='install_sw'),
    WordNode(pos=(1202, 1217), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1217, 1218)),
  CommandNode(pos=(1220, 1225), parts=[
    WordNode(pos=(1220, 1222), word='cd'),
    WordNode(pos=(1223, 1225), word='..'),
  ]),
  OperatorNode(op=';', pos=(1225, 1226)),
  CommandNode(pos=(1228, 1251), parts=[
    WordNode(pos=(1228, 1230), word='rm'),
    WordNode(pos=(1231, 1234), word='-rf'),
    WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1251, 1252)),
  CommandNode(pos=(1254, 1317), parts=[
    WordNode(pos=(1254, 1259), word='rmdir'),
    WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1317, 1318)),
  CommandNode(pos=(1320, 1380), parts=[
    WordNode(pos=(1320, 1322), word='ln'),
    WordNode(pos=(1323, 1326), word='-sf'),
    WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
    WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
    WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1380, 1381)),
  CommandNode(pos=(1383, 1398), parts=[
    WordNode(pos=(1383, 1390), word='openssl'),
    WordNode(pos=(1391, 1398), word='version'),
  ]),
  OperatorNode(op=';', pos=(1398, 1399)),
  CommandNode(pos=(1402, 1480), parts=[
    AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1480, 1481)),
  CommandNode(pos=(1483, 1525), parts=[
    AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1525, 1526)),
  CommandNode(pos=(1529, 1549), parts=[
    WordNode(pos=(1529, 1534), word='mkdir'),
    WordNode(pos=(1535, 1537), word='-p'),
    WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1549, 1550)),
  CommandNode(pos=(1552, 1611), parts=[
    WordNode(pos=(1552, 1556), word='wget'),
    WordNode(pos=(1557, 1574), word='--output-document'),
    WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
    ]),
    WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1611, 1612)),
  PipelineNode(pos=(1614, 1674), parts=[
    CommandNode(pos=(1614, 1657), parts=[
      WordNode(pos=(1614, 1618), word='echo'),
      WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1658, 1659)),
    CommandNode(pos=(1660, 1674), parts=[
      WordNode(pos=(1660, 1669), word='sha256sum'),
      WordNode(pos=(1670, 1672), word='-c'),
      WordNode(pos=(1673, 1674), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1674, 1675)),
  CommandNode(pos=(1677, 1761), parts=[
    WordNode(pos=(1677, 1680), word='tar'),
    WordNode(pos=(1681, 1690), word='--extract'),
    WordNode(pos=(1691, 1697), word='--file'),
    WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
    ]),
    WordNode(pos=(1717, 1728), word='--directory'),
    WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
    ]),
    WordNode(pos=(1741, 1759), word='--strip-components'),
    WordNode(pos=(1760, 1761), word='1'),
  ]),
  OperatorNode(op=';', pos=(1761, 1762)),
  CommandNode(pos=(1765, 1779), parts=[
    WordNode(pos=(1765, 1767), word='cd'),
    WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1779, 1780)),
  CommandNode(pos=(1782, 1808), parts=[
    WordNode(pos=(1782, 1788), word='export'),
    WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1808, 1809)),
  CommandNode(pos=(1811, 1831), parts=[
    WordNode(pos=(1811, 1822), word='./otp_build'),
    WordNode(pos=(1823, 1831), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(1831, 1832)),
  CommandNode(pos=(1834, 1874), parts=[
    AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1844, 1872), parts=[
          WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
          WordNode(pos=(1860, 1865), word='--get'),
          WordNode(pos=(1866, 1872), word='CFLAGS'),
        ]), pos=(1842, 1873)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1874, 1875)),
  CommandNode(pos=(1876, 1889), parts=[
    WordNode(pos=(1876, 1882), word='export'),
    WordNode(pos=(1883, 1889), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(1889, 1890)),
  CommandNode(pos=(1892, 1949), parts=[
    AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1904, 1947), parts=[
          WordNode(pos=(1904, 1921), word='dpkg-architecture'),
          WordNode(pos=(1922, 1929), word='--query'),
          WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(1902, 1948)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1949, 1950)),
  CommandNode(pos=(1952, 2011), parts=[
    AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1965, 2009), parts=[
          WordNode(pos=(1965, 1982), word='dpkg-architecture'),
          WordNode(pos=(1983, 1990), word='--query'),
          WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1963, 2010)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2011, 2012)),
  CommandNode(pos=(2014, 2053), parts=[
    AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2026, 2051), parts=[
          WordNode(pos=(2026, 2030), word='dpkg'),
          WordNode(pos=(2031, 2051), word='--print-architecture'),
        ]), pos=(2024, 2052)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2053, 2054)),
  CommandNode(pos=(2055, 2081), parts=[
    AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2081, 2082)),
  CommandNode(pos=(2084, 2766), parts=[
    WordNode(pos=(2084, 2095), word='./configure'),
    WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2106, 2115), value='hostArch'),
    ]),
    WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2128, 2138), value='buildArch'),
    ]),
    WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2170, 2184), word='--disable-hipe'),
    WordNode(pos=(2187, 2201), word='--disable-sctp'),
    WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
    WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
    WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
    WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
    WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
    WordNode(pos=(2323, 2343), word='--enable-smp-support'),
    WordNode(pos=(2346, 2362), word='--enable-threads'),
    WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2402, 2423), word='--without-common_test'),
    WordNode(pos=(2426, 2444), word='--without-debugger'),
    WordNode(pos=(2447, 2465), word='--without-dialyzer'),
    WordNode(pos=(2468, 2486), word='--without-diameter'),
    WordNode(pos=(2489, 2503), word='--without-edoc'),
    WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
    WordNode(pos=(2529, 2552), word='--without-erl_interface'),
    WordNode(pos=(2555, 2567), word='--without-et'),
    WordNode(pos=(2570, 2585), word='--without-eunit'),
    WordNode(pos=(2588, 2601), word='--without-ftp'),
    WordNode(pos=(2604, 2618), word='--without-hipe'),
    WordNode(pos=(2621, 2641), word='--without-jinterface'),
    WordNode(pos=(2644, 2660), word='--without-megaco'),
    WordNode(pos=(2663, 2681), word='--without-observer'),
    WordNode(pos=(2684, 2698), word='--without-odbc'),
    WordNode(pos=(2701, 2718), word='--without-reltool'),
    WordNode(pos=(2721, 2734), word='--without-ssh'),
    WordNode(pos=(2737, 2751), word='--without-tftp'),
    WordNode(pos=(2754, 2766), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(2768, 2769)),
  CommandNode(pos=(2771, 2849), parts=[
    WordNode(pos=(2771, 2775), word='make'),
    WordNode(pos=(2776, 2778), word='-j'),
    WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2782, 2807), parts=[
          WordNode(pos=(2782, 2789), word='getconf'),
          WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
        ]), pos=(2780, 2808)),
    ]),
    WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(2849, 2850)),
  CommandNode(pos=(2852, 2864), parts=[
    WordNode(pos=(2852, 2856), word='make'),
    WordNode(pos=(2857, 2864), word='install'),
  ]),
  OperatorNode(op=';', pos=(2864, 2865)),
  CommandNode(pos=(2867, 2872), parts=[
    WordNode(pos=(2867, 2869), word='cd'),
    WordNode(pos=(2870, 2872), word='..'),
  ]),
  OperatorNode(op=';', pos=(2872, 2873)),
  CommandNode(pos=(2875, 2969), parts=[
    WordNode(pos=(2875, 2877), word='rm'),
    WordNode(pos=(2878, 2881), word='-rf'),
    WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
    ]),
    WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(2971, 2972)),
  CommandNode(pos=(2975, 3172), parts=[
    AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2989, 3168), parts=[
          CommandNode(pos=(2989, 3055), parts=[
            WordNode(pos=(2989, 2996), word='scanelf'),
            WordNode(pos=(2997, 3005), word='--needed'),
            WordNode(pos=(3006, 3016), word='--nobanner'),
            WordNode(pos=(3017, 3025), word='--format'),
            WordNode(pos=(3026, 3032), word='%n#p'),
            WordNode(pos=(3033, 3044), word='--recursive'),
            WordNode(pos=(3045, 3055), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(3059, 3060)),
          CommandNode(pos=(3061, 3072), parts=[
            WordNode(pos=(3061, 3063), word='tr'),
            WordNode(pos=(3064, 3067), word=','),
            WordNode(pos=(3068, 3072), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(3076, 3077)),
          CommandNode(pos=(3078, 3085), parts=[
            WordNode(pos=(3078, 3082), word='sort'),
            WordNode(pos=(3083, 3085), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(3089, 3090)),
          CommandNode(pos=(3091, 3168), parts=[
            WordNode(pos=(3091, 3094), word='awk'),
            WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2984, 3169)),
    ]),
  ]),
  OperatorNode(op=';', pos=(3172, 3173)),
  CommandNode(pos=(3175, 3226), parts=[
    WordNode(pos=(3175, 3178), word='apk'),
    WordNode(pos=(3179, 3182), word='add'),
    WordNode(pos=(3183, 3193), word='--no-cache'),
    WordNode(pos=(3194, 3203), word='--virtual'),
    WordNode(pos=(3204, 3217), word='.otp-run-deps'),
    WordNode(pos=(3218, 3226), word='$runDeps', parts=[
      ParameterNode(pos=(3218, 3226), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3226, 3227)),
  CommandNode(pos=(3229, 3261), parts=[
    WordNode(pos=(3229, 3232), word='apk'),
    WordNode(pos=(3233, 3236), word='del'),
    WordNode(pos=(3237, 3249), word='--no-network'),
    WordNode(pos=(3250, 3261), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(3261, 3262)),
  CommandNode(pos=(3265, 3280), parts=[
    WordNode(pos=(3265, 3272), word='openssl'),
    WordNode(pos=(3273, 3280), word='version'),
  ]),
  OperatorNode(op=';', pos=(3280, 3281)),
  CommandNode(pos=(3283, 3380), parts=[
    WordNode(pos=(3283, 3286), word='erl'),
    WordNode(pos=(3287, 3295), word='-noshell'),
    WordNode(pos=(3296, 3301), word='-eval'),
    WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


81) set -eux;   echo 'deb http://deb.debian.org/debian stretch-backports main' > /etc/apt/sources.list.d/stretch-backports.list;  savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   bzip2   ca-certificates   dirmngr   dpkg-dev   gcc   gnupg   libbrotli-dev   libcurl4-openssl-dev   libjansson-dev   liblua5.2-dev   libnghttp2-dev   libpcre3-dev   libssl-dev   libxml2-dev   make   wget   zlib1g-dev  ;  rm -r /var/lib/apt/lists/*;   ddist() {   local f="$1"; shift;   local distFile="$1"; shift;   local success=;   local distUrl=;   for distUrl in $APACHE_DIST_URLS; do    if wget -O "$f" "$distUrl$distFile" && [ -s "$f" ]; then     success=1;     break;    fi;   done;   [ -n "$success" ];  };   ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2";  echo "$HTTPD_SHA256 *httpd.tar.bz2" | sha256sum -c -;   ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc";  export GNUPGHOME="$(mktemp -d)";  for key in   A93D62ECC3C8EA12DB220EC934EA76E6791485A8   B9E8213AEFB861AF35A41F2C995E35221AD84DFF  ; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME" httpd.tar.bz2.asc;   mkdir -p src;  tar -xf httpd.tar.bz2 -C src --strip-components=1;  rm httpd.tar.bz2;  cd src;   patches() {   while [ "$#" -gt 0 ]; do    local patchFile="$1"; shift;    local patchSha256="$1"; shift;    ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile";    echo "$patchSha256 *$patchFile" | sha256sum -c -;    patch -p0 < "$patchFile";    rm -f "$patchFile";   done;  };  patches $HTTPD_PATCHES;   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all  ;  make -j "$(nproc)";  make install;   cd ..;  rm -r src man manual;   sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   httpd -v

ListNode(pos=(0, 2586), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 123), parts=[
    WordNode(pos=(12, 16), word='echo'),
    WordNode(pos=(17, 74), word='deb http://deb.debian.org/debian stretch-backports main'),
    RedirectNode(output=
      WordNode(pos=(77, 123), word='/etc/apt/sources.list.d/stretch-backports.list'), pos=(75, 123), type='>'),
  ]),
  OperatorNode(op=';', pos=(123, 124)),
  CommandNode(pos=(126, 163), parts=[
    AssignmentNode(pos=(126, 163), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(142, 161), parts=[
          WordNode(pos=(142, 150), word='apt-mark'),
          WordNode(pos=(151, 161), word='showmanual'),
        ]), pos=(140, 162)),
    ]),
  ]),
  OperatorNode(op=';', pos=(163, 164)),
  CommandNode(pos=(166, 180), parts=[
    WordNode(pos=(166, 173), word='apt-get'),
    WordNode(pos=(174, 180), word='update'),
  ]),
  OperatorNode(op=';', pos=(180, 181)),
  CommandNode(pos=(183, 444), parts=[
    WordNode(pos=(183, 190), word='apt-get'),
    WordNode(pos=(191, 198), word='install'),
    WordNode(pos=(199, 201), word='-y'),
    WordNode(pos=(202, 225), word='--no-install-recommends'),
    WordNode(pos=(228, 233), word='bzip2'),
    WordNode(pos=(236, 251), word='ca-certificates'),
    WordNode(pos=(254, 261), word='dirmngr'),
    WordNode(pos=(264, 272), word='dpkg-dev'),
    WordNode(pos=(275, 278), word='gcc'),
    WordNode(pos=(281, 286), word='gnupg'),
    WordNode(pos=(289, 302), word='libbrotli-dev'),
    WordNode(pos=(305, 325), word='libcurl4-openssl-dev'),
    WordNode(pos=(328, 342), word='libjansson-dev'),
    WordNode(pos=(345, 358), word='liblua5.2-dev'),
    WordNode(pos=(361, 375), word='libnghttp2-dev'),
    WordNode(pos=(378, 390), word='libpcre3-dev'),
    WordNode(pos=(393, 403), word='libssl-dev'),
    WordNode(pos=(406, 417), word='libxml2-dev'),
    WordNode(pos=(420, 424), word='make'),
    WordNode(pos=(427, 431), word='wget'),
    WordNode(pos=(434, 444), word='zlib1g-dev'),
  ]),
  OperatorNode(op=';', pos=(446, 447)),
  CommandNode(pos=(449, 475), parts=[
    WordNode(pos=(449, 451), word='rm'),
    WordNode(pos=(452, 454), word='-r'),
    WordNode(pos=(455, 475), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(475, 476)),
  FunctionNode(pos=(479, 741), parts=[
    WordNode(pos=(479, 484), word='ddist'),
    ReservedwordNode(pos=(484, 485), word='('),
    ReservedwordNode(pos=(485, 486), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(487, 488), word='{'),
      ListNode(pos=(491, 738), parts=[
          CommandNode(pos=(491, 503), parts=[
            WordNode(pos=(491, 496), word='local'),
            WordNode(pos=(497, 503), word='f=$1', parts=[
              ParameterNode(pos=(500, 502), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(503, 504)),
          CommandNode(pos=(505, 510), parts=[
            WordNode(pos=(505, 510), word='shift'),
          ]),
          OperatorNode(op=';', pos=(510, 511)),
          CommandNode(pos=(514, 533), parts=[
            WordNode(pos=(514, 519), word='local'),
            WordNode(pos=(520, 533), word='distFile=$1', parts=[
              ParameterNode(pos=(530, 532), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(533, 534)),
          CommandNode(pos=(535, 540), parts=[
            WordNode(pos=(535, 540), word='shift'),
          ]),
          OperatorNode(op=';', pos=(540, 541)),
          CommandNode(pos=(544, 558), parts=[
            WordNode(pos=(544, 549), word='local'),
            WordNode(pos=(550, 558), word='success='),
          ]),
          OperatorNode(op=';', pos=(558, 559)),
          CommandNode(pos=(562, 576), parts=[
            WordNode(pos=(562, 567), word='local'),
            WordNode(pos=(568, 576), word='distUrl='),
          ]),
          OperatorNode(op=';', pos=(576, 577)),
          CompoundNode(list=[
            ForNode(pos=(580, 716), parts=[
              ReservedwordNode(pos=(580, 583), word='for'),
              WordNode(pos=(584, 591), word='distUrl'),
              ReservedwordNode(pos=(592, 594), word='in'),
              WordNode(pos=(595, 612), word='$APACHE_DIST_URLS', parts=[
                ParameterNode(pos=(595, 612), value='APACHE_DIST_URLS'),
              ]),
              ReservedwordNode(pos=(612, 613), word=';'),
              ReservedwordNode(pos=(614, 616), word='do'),
              ListNode(pos=(620, 709), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(620, 708), parts=[
                      ReservedwordNode(pos=(620, 622), word='if'),
                      ListNode(pos=(623, 671), parts=[
                          CommandNode(pos=(623, 655), parts=[
                            WordNode(pos=(623, 627), word='wget'),
                            WordNode(pos=(628, 630), word='-O'),
                            WordNode(pos=(631, 635), word='$f', parts=[
                              ParameterNode(pos=(632, 634), value='f'),
                            ]),
                            WordNode(pos=(636, 655), word='$distUrl$distFile', parts=[
                              ParameterNode(pos=(637, 645), value='distUrl'),
                              ParameterNode(pos=(645, 654), value='distFile'),
                            ]),
                          ]),
                          OperatorNode(op='&&', pos=(656, 658)),
                          CommandNode(pos=(659, 670), parts=[
                            WordNode(pos=(659, 660), word='['),
                            WordNode(pos=(661, 663), word='-s'),
                            WordNode(pos=(664, 668), word='$f', parts=[
                              ParameterNode(pos=(665, 667), value='f'),
                            ]),
                            WordNode(pos=(669, 670), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(670, 671)),
                        ]),
                      ReservedwordNode(pos=(672, 676), word='then'),
                      ListNode(pos=(681, 702), parts=[
                          CommandNode(pos=(681, 690), parts=[
                            AssignmentNode(pos=(681, 690), word='success=1'),
                          ]),
                          OperatorNode(op=';', pos=(690, 691)),
                          CommandNode(pos=(696, 701), parts=[
                            WordNode(pos=(696, 701), word='break'),
                          ]),
                          OperatorNode(op=';', pos=(701, 702)),
                        ]),
                      ReservedwordNode(pos=(706, 708), word='fi'),
                    ]),
                  ], pos=(620, 708)),
                  OperatorNode(op=';', pos=(708, 709)),
                ]),
              ReservedwordNode(pos=(712, 716), word='done'),
            ]),
          ], pos=(580, 716)),
          OperatorNode(op=';', pos=(716, 717)),
          CommandNode(pos=(720, 737), parts=[
            WordNode(pos=(720, 721), word='['),
            WordNode(pos=(722, 724), word='-n'),
            WordNode(pos=(725, 735), word='$success', parts=[
              ParameterNode(pos=(726, 734), value='success'),
            ]),
            WordNode(pos=(736, 737), word=']'),
          ]),
          OperatorNode(op=';', pos=(737, 738)),
        ]),
      ReservedwordNode(pos=(740, 741), word='}'),
    ], pos=(487, 741)),
  ]),
  OperatorNode(op=';', pos=(741, 742)),
  CommandNode(pos=(745, 803), parts=[
    WordNode(pos=(745, 750), word='ddist'),
    WordNode(pos=(751, 766), word='httpd.tar.bz2'),
    WordNode(pos=(767, 803), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
      ParameterNode(pos=(780, 794), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(803, 804)),
  PipelineNode(pos=(806, 858), parts=[
    CommandNode(pos=(806, 841), parts=[
      WordNode(pos=(806, 810), word='echo'),
      WordNode(pos=(811, 841), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
        ParameterNode(pos=(812, 825), value='HTTPD_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(842, 843)),
    CommandNode(pos=(844, 858), parts=[
      WordNode(pos=(844, 853), word='sha256sum'),
      WordNode(pos=(854, 856), word='-c'),
      WordNode(pos=(857, 858), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(858, 859)),
  CommandNode(pos=(862, 928), parts=[
    WordNode(pos=(862, 867), word='ddist'),
    WordNode(pos=(868, 887), word='httpd.tar.bz2.asc'),
    WordNode(pos=(888, 928), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
      ParameterNode(pos=(901, 915), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(928, 929)),
  CommandNode(pos=(931, 962), parts=[
    WordNode(pos=(931, 937), word='export'),
    WordNode(pos=(938, 962), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(951, 960), parts=[
          WordNode(pos=(951, 957), word='mktemp'),
          WordNode(pos=(958, 960), word='-d'),
        ]), pos=(949, 961)),
    ]),
  ]),
  OperatorNode(op=';', pos=(962, 963)),
  CompoundNode(list=[
    ForNode(pos=(965, 1146), parts=[
      ReservedwordNode(pos=(965, 968), word='for'),
      WordNode(pos=(969, 972), word='key'),
      ReservedwordNode(pos=(973, 975), word='in'),
      WordNode(pos=(978, 1018), word='A93D62ECC3C8EA12DB220EC934EA76E6791485A8'),
      WordNode(pos=(1021, 1061), word='B9E8213AEFB861AF35A41F2C995E35221AD84DFF'),
      ReservedwordNode(pos=(1063, 1064), word=';'),
      ReservedwordNode(pos=(1065, 1067), word='do'),
      ListNode(pos=(1070, 1140), parts=[
          CommandNode(pos=(1070, 1139), parts=[
            WordNode(pos=(1070, 1073), word='gpg'),
            WordNode(pos=(1074, 1081), word='--batch'),
            WordNode(pos=(1082, 1093), word='--keyserver'),
            WordNode(pos=(1094, 1120), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(1121, 1132), word='--recv-keys'),
            WordNode(pos=(1133, 1139), word='$key', parts=[
              ParameterNode(pos=(1134, 1138), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1139, 1140)),
        ]),
      ReservedwordNode(pos=(1142, 1146), word='done'),
    ]),
  ], pos=(965, 1146)),
  OperatorNode(op=';', pos=(1146, 1147)),
  CommandNode(pos=(1149, 1201), parts=[
    WordNode(pos=(1149, 1152), word='gpg'),
    WordNode(pos=(1153, 1160), word='--batch'),
    WordNode(pos=(1161, 1169), word='--verify'),
    WordNode(pos=(1170, 1187), word='httpd.tar.bz2.asc'),
    WordNode(pos=(1188, 1201), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1201, 1202)),
  CommandNode(pos=(1204, 1222), parts=[
    WordNode(pos=(1204, 1211), word='command'),
    WordNode(pos=(1212, 1214), word='-v'),
    WordNode(pos=(1215, 1222), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(1223, 1225)),
  CommandNode(pos=(1226, 1244), parts=[
    WordNode(pos=(1226, 1233), word='gpgconf'),
    WordNode(pos=(1234, 1240), word='--kill'),
    WordNode(pos=(1241, 1244), word='all'),
  ]),
  OperatorNode(op='||', pos=(1245, 1247)),
  CommandNode(pos=(1248, 1249), parts=[
    WordNode(pos=(1248, 1249), word=':'),
  ]),
  OperatorNode(op=';', pos=(1249, 1250)),
  CommandNode(pos=(1252, 1289), parts=[
    WordNode(pos=(1252, 1254), word='rm'),
    WordNode(pos=(1255, 1258), word='-rf'),
    WordNode(pos=(1259, 1271), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(1260, 1270), value='GNUPGHOME'),
    ]),
    WordNode(pos=(1272, 1289), word='httpd.tar.bz2.asc'),
  ]),
  OperatorNode(op=';', pos=(1289, 1290)),
  CommandNode(pos=(1293, 1305), parts=[
    WordNode(pos=(1293, 1298), word='mkdir'),
    WordNode(pos=(1299, 1301), word='-p'),
    WordNode(pos=(1302, 1305), word='src'),
  ]),
  OperatorNode(op=';', pos=(1305, 1306)),
  CommandNode(pos=(1308, 1357), parts=[
    WordNode(pos=(1308, 1311), word='tar'),
    WordNode(pos=(1312, 1315), word='-xf'),
    WordNode(pos=(1316, 1329), word='httpd.tar.bz2'),
    WordNode(pos=(1330, 1332), word='-C'),
    WordNode(pos=(1333, 1336), word='src'),
    WordNode(pos=(1337, 1357), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1357, 1358)),
  CommandNode(pos=(1360, 1376), parts=[
    WordNode(pos=(1360, 1362), word='rm'),
    WordNode(pos=(1363, 1376), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1376, 1377)),
  CommandNode(pos=(1379, 1385), parts=[
    WordNode(pos=(1379, 1381), word='cd'),
    WordNode(pos=(1382, 1385), word='src'),
  ]),
  OperatorNode(op=';', pos=(1385, 1386)),
  FunctionNode(pos=(1389, 1683), parts=[
    WordNode(pos=(1389, 1396), word='patches'),
    ReservedwordNode(pos=(1396, 1397), word='('),
    ReservedwordNode(pos=(1397, 1398), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(1399, 1400), word='{'),
      ListNode(pos=(1403, 1680), parts=[
          CompoundNode(list=[
            WhileNode(pos=(1403, 1679), parts=[
              ReservedwordNode(pos=(1403, 1408), word='while'),
              ListNode(pos=(1409, 1424), parts=[
                  CommandNode(pos=(1409, 1423), parts=[
                    WordNode(pos=(1409, 1410), word='['),
                    WordNode(pos=(1411, 1415), word='$#', parts=[
                      ParameterNode(pos=(1412, 1414), value='#'),
                    ]),
                    WordNode(pos=(1416, 1419), word='-gt'),
                    WordNode(pos=(1420, 1421), word='0'),
                    WordNode(pos=(1422, 1423), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(1423, 1424)),
                ]),
              ReservedwordNode(pos=(1425, 1427), word='do'),
              ListNode(pos=(1431, 1672), parts=[
                  CommandNode(pos=(1431, 1451), parts=[
                    WordNode(pos=(1431, 1436), word='local'),
                    WordNode(pos=(1437, 1451), word='patchFile=$1', parts=[
                      ParameterNode(pos=(1448, 1450), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1451, 1452)),
                  CommandNode(pos=(1453, 1458), parts=[
                    WordNode(pos=(1453, 1458), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1458, 1459)),
                  CommandNode(pos=(1463, 1485), parts=[
                    WordNode(pos=(1463, 1468), word='local'),
                    WordNode(pos=(1469, 1485), word='patchSha256=$1', parts=[
                      ParameterNode(pos=(1482, 1484), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1485, 1486)),
                  CommandNode(pos=(1487, 1492), parts=[
                    WordNode(pos=(1487, 1492), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1492, 1493)),
                  CommandNode(pos=(1497, 1566), parts=[
                    WordNode(pos=(1497, 1502), word='ddist'),
                    WordNode(pos=(1503, 1515), word='$patchFile', parts=[
                      ParameterNode(pos=(1504, 1514), value='patchFile'),
                    ]),
                    WordNode(pos=(1516, 1566), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
                      ParameterNode(pos=(1540, 1554), value='HTTPD_VERSION'),
                      ParameterNode(pos=(1555, 1565), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1566, 1567)),
                  PipelineNode(pos=(1571, 1619), parts=[
                    CommandNode(pos=(1571, 1602), parts=[
                      WordNode(pos=(1571, 1575), word='echo'),
                      WordNode(pos=(1576, 1602), word='$patchSha256 *$patchFile', parts=[
                        ParameterNode(pos=(1577, 1589), value='patchSha256'),
                        ParameterNode(pos=(1591, 1601), value='patchFile'),
                      ]),
                    ]),
                    PipeNode(pipe='|', pos=(1603, 1604)),
                    CommandNode(pos=(1605, 1619), parts=[
                      WordNode(pos=(1605, 1614), word='sha256sum'),
                      WordNode(pos=(1615, 1617), word='-c'),
                      WordNode(pos=(1618, 1619), word='-'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1619, 1620)),
                  CommandNode(pos=(1624, 1648), parts=[
                    WordNode(pos=(1624, 1629), word='patch'),
                    WordNode(pos=(1630, 1633), word='-p0'),
                    RedirectNode(output=
                      WordNode(pos=(1636, 1648), word='$patchFile', parts=[
                        ParameterNode(pos=(1637, 1647), value='patchFile'),
                      ]), pos=(1634, 1648), type='<'),
                  ]),
                  OperatorNode(op=';', pos=(1648, 1649)),
                  CommandNode(pos=(1653, 1671), parts=[
                    WordNode(pos=(1653, 1655), word='rm'),
                    WordNode(pos=(1656, 1658), word='-f'),
                    WordNode(pos=(1659, 1671), word='$patchFile', parts=[
                      ParameterNode(pos=(1660, 1670), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1671, 1672)),
                ]),
              ReservedwordNode(pos=(1675, 1679), word='done'),
            ]),
          ], pos=(1403, 1679)),
          OperatorNode(op=';', pos=(1679, 1680)),
        ]),
      ReservedwordNode(pos=(1682, 1683), word='}'),
    ], pos=(1399, 1683)),
  ]),
  OperatorNode(op=';', pos=(1683, 1684)),
  CommandNode(pos=(1686, 1708), parts=[
    WordNode(pos=(1686, 1693), word='patches'),
    WordNode(pos=(1694, 1708), word='$HTTPD_PATCHES', parts=[
      ParameterNode(pos=(1694, 1708), value='HTTPD_PATCHES'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1708, 1709)),
  CommandNode(pos=(1712, 1769), parts=[
    AssignmentNode(pos=(1712, 1769), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1723, 1767), parts=[
          WordNode(pos=(1723, 1740), word='dpkg-architecture'),
          WordNode(pos=(1741, 1748), word='--query'),
          WordNode(pos=(1749, 1767), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1721, 1768)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1769, 1770)),
  CommandNode(pos=(1772, 1891), parts=[
    WordNode(pos=(1772, 1783), word='./configure'),
    WordNode(pos=(1786, 1804), word='--build=$gnuArch', parts=[
      ParameterNode(pos=(1795, 1803), value='gnuArch'),
    ]),
    WordNode(pos=(1807, 1831), word='--prefix=$HTTPD_PREFIX', parts=[
      ParameterNode(pos=(1817, 1830), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(1834, 1864), word='--enable-mods-shared=reallyall'),
    WordNode(pos=(1867, 1891), word='--enable-mpms-shared=all'),
  ]),
  OperatorNode(op=';', pos=(1893, 1894)),
  CommandNode(pos=(1896, 1914), parts=[
    WordNode(pos=(1896, 1900), word='make'),
    WordNode(pos=(1901, 1903), word='-j'),
    WordNode(pos=(1904, 1914), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1907, 1912), parts=[
          WordNode(pos=(1907, 1912), word='nproc'),
        ]), pos=(1905, 1913)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1914, 1915)),
  CommandNode(pos=(1917, 1929), parts=[
    WordNode(pos=(1917, 1921), word='make'),
    WordNode(pos=(1922, 1929), word='install'),
  ]),
  OperatorNode(op=';', pos=(1929, 1930)),
  CommandNode(pos=(1933, 1938), parts=[
    WordNode(pos=(1933, 1935), word='cd'),
    WordNode(pos=(1936, 1938), word='..'),
  ]),
  OperatorNode(op=';', pos=(1938, 1939)),
  CommandNode(pos=(1941, 1961), parts=[
    WordNode(pos=(1941, 1943), word='rm'),
    WordNode(pos=(1944, 1946), word='-r'),
    WordNode(pos=(1947, 1950), word='src'),
    WordNode(pos=(1951, 1954), word='man'),
    WordNode(pos=(1955, 1961), word='manual'),
  ]),
  OperatorNode(op=';', pos=(1961, 1962)),
  CommandNode(pos=(1965, 2207), parts=[
    WordNode(pos=(1965, 1968), word='sed'),
    WordNode(pos=(1969, 1972), word='-ri'),
    WordNode(pos=(1975, 1977), word='-e'),
    WordNode(pos=(1978, 2024), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(2027, 2029), word='-e'),
    WordNode(pos=(2030, 2075), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
    WordNode(pos=(2078, 2080), word='-e'),
    WordNode(pos=(2081, 2129), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(2132, 2163), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
      ParameterNode(pos=(2133, 2146), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(2166, 2207), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
      ParameterNode(pos=(2167, 2180), value='HTTPD_PREFIX'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2209, 2210)),
  CommandNode(pos=(2213, 2243), parts=[
    WordNode(pos=(2213, 2221), word='apt-mark'),
    WordNode(pos=(2222, 2226), word='auto'),
    WordNode(pos=(2227, 2231), word='.*'),
    RedirectNode(output=
      WordNode(pos=(2234, 2243), word='/dev/null'), pos=(2232, 2243), type='>'),
  ]),
  OperatorNode(op=';', pos=(2243, 2244)),
  CommandNode(pos=(2246, 2268), parts=[
    WordNode(pos=(2246, 2247), word='['),
    WordNode(pos=(2248, 2250), word='-z'),
    WordNode(pos=(2251, 2266), word='$savedAptMark', parts=[
      ParameterNode(pos=(2252, 2265), value='savedAptMark'),
    ]),
    WordNode(pos=(2267, 2268), word=']'),
  ]),
  OperatorNode(op='||', pos=(2269, 2271)),
  CommandNode(pos=(2272, 2301), parts=[
    WordNode(pos=(2272, 2280), word='apt-mark'),
    WordNode(pos=(2281, 2287), word='manual'),
    WordNode(pos=(2288, 2301), word='$savedAptMark', parts=[
      ParameterNode(pos=(2288, 2301), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2301, 2302)),
  PipelineNode(pos=(2304, 2493), parts=[
    CommandNode(pos=(2304, 2358), parts=[
      WordNode(pos=(2304, 2308), word='find'),
      WordNode(pos=(2309, 2319), word='/usr/local'),
      WordNode(pos=(2320, 2325), word='-type'),
      WordNode(pos=(2326, 2327), word='f'),
      WordNode(pos=(2328, 2339), word='-executable'),
      WordNode(pos=(2340, 2345), word='-exec'),
      WordNode(pos=(2346, 2349), word='ldd'),
      WordNode(pos=(2350, 2354), word='{}'),
      WordNode(pos=(2355, 2358), word=';'),
    ]),
    PipeNode(pipe='|', pos=(2361, 2362)),
    CommandNode(pos=(2363, 2391), parts=[
      WordNode(pos=(2363, 2366), word='awk'),
      WordNode(pos=(2367, 2391), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(2394, 2395)),
    CommandNode(pos=(2396, 2403), parts=[
      WordNode(pos=(2396, 2400), word='sort'),
      WordNode(pos=(2401, 2403), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(2406, 2407)),
    CommandNode(pos=(2408, 2436), parts=[
      WordNode(pos=(2408, 2413), word='xargs'),
      WordNode(pos=(2414, 2416), word='-r'),
      WordNode(pos=(2417, 2427), word='dpkg-query'),
      WordNode(pos=(2428, 2436), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(2439, 2440)),
    CommandNode(pos=(2441, 2452), parts=[
      WordNode(pos=(2441, 2444), word='cut'),
      WordNode(pos=(2445, 2448), word='-d:'),
      WordNode(pos=(2449, 2452), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(2455, 2456)),
    CommandNode(pos=(2457, 2464), parts=[
      WordNode(pos=(2457, 2461), word='sort'),
      WordNode(pos=(2462, 2464), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(2467, 2468)),
    CommandNode(pos=(2469, 2493), parts=[
      WordNode(pos=(2469, 2474), word='xargs'),
      WordNode(pos=(2475, 2477), word='-r'),
      WordNode(pos=(2478, 2486), word='apt-mark'),
      WordNode(pos=(2487, 2493), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2495, 2496)),
  CommandNode(pos=(2498, 2574), parts=[
    WordNode(pos=(2498, 2505), word='apt-get'),
    WordNode(pos=(2506, 2511), word='purge'),
    WordNode(pos=(2512, 2514), word='-y'),
    WordNode(pos=(2515, 2528), word='--auto-remove'),
    WordNode(pos=(2529, 2531), word='-o'),
    WordNode(pos=(2532, 2574), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(2574, 2575)),
  CommandNode(pos=(2578, 2586), parts=[
    WordNode(pos=(2578, 2583), word='httpd'),
    WordNode(pos=(2584, 2586), word='-v'),
  ]),
])


82) set -eux;   echo 'deb http://deb.debian.org/debian stretch-backports main' > /etc/apt/sources.list.d/stretch-backports.list;  savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   bzip2   ca-certificates   dirmngr   dpkg-dev   gcc   gnupg   libbrotli-dev   libcurl4-openssl-dev   libjansson-dev   liblua5.2-dev   libnghttp2-dev   libpcre3-dev   libssl-dev   libxml2-dev   make   wget   zlib1g-dev  ;  rm -r /var/lib/apt/lists/*;   ddist() {   local f="$1"; shift;   local distFile="$1"; shift;   local success=;   local distUrl=;   for distUrl in $APACHE_DIST_URLS; do    if wget -O "$f" "$distUrl$distFile" && [ -s "$f" ]; then     success=1;     break;    fi;   done;   [ -n "$success" ];  };   ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2";  echo "$HTTPD_SHA256 *httpd.tar.bz2" | sha256sum -c -;   ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc";  export GNUPGHOME="$(mktemp -d)";  for key in   A93D62ECC3C8EA12DB220EC934EA76E6791485A8   B9E8213AEFB861AF35A41F2C995E35221AD84DFF  ; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME" httpd.tar.bz2.asc;   mkdir -p src;  tar -xf httpd.tar.bz2 -C src --strip-components=1;  rm httpd.tar.bz2;  cd src;   patches() {   while [ "$#" -gt 0 ]; do    local patchFile="$1"; shift;    local patchSha256="$1"; shift;    ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile";    echo "$patchSha256 *$patchFile" | sha256sum -c -;    patch -p0 < "$patchFile";    rm -f "$patchFile";   done;  };  patches $HTTPD_PATCHES;   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all  ;  make -j "$(nproc)";  make install;   cd ..;  rm -r src man manual;   sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   httpd -v

ListNode(pos=(0, 2586), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 123), parts=[
    WordNode(pos=(12, 16), word='echo'),
    WordNode(pos=(17, 74), word='deb http://deb.debian.org/debian stretch-backports main'),
    RedirectNode(output=
      WordNode(pos=(77, 123), word='/etc/apt/sources.list.d/stretch-backports.list'), pos=(75, 123), type='>'),
  ]),
  OperatorNode(op=';', pos=(123, 124)),
  CommandNode(pos=(126, 163), parts=[
    AssignmentNode(pos=(126, 163), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(142, 161), parts=[
          WordNode(pos=(142, 150), word='apt-mark'),
          WordNode(pos=(151, 161), word='showmanual'),
        ]), pos=(140, 162)),
    ]),
  ]),
  OperatorNode(op=';', pos=(163, 164)),
  CommandNode(pos=(166, 180), parts=[
    WordNode(pos=(166, 173), word='apt-get'),
    WordNode(pos=(174, 180), word='update'),
  ]),
  OperatorNode(op=';', pos=(180, 181)),
  CommandNode(pos=(183, 444), parts=[
    WordNode(pos=(183, 190), word='apt-get'),
    WordNode(pos=(191, 198), word='install'),
    WordNode(pos=(199, 201), word='-y'),
    WordNode(pos=(202, 225), word='--no-install-recommends'),
    WordNode(pos=(228, 233), word='bzip2'),
    WordNode(pos=(236, 251), word='ca-certificates'),
    WordNode(pos=(254, 261), word='dirmngr'),
    WordNode(pos=(264, 272), word='dpkg-dev'),
    WordNode(pos=(275, 278), word='gcc'),
    WordNode(pos=(281, 286), word='gnupg'),
    WordNode(pos=(289, 302), word='libbrotli-dev'),
    WordNode(pos=(305, 325), word='libcurl4-openssl-dev'),
    WordNode(pos=(328, 342), word='libjansson-dev'),
    WordNode(pos=(345, 358), word='liblua5.2-dev'),
    WordNode(pos=(361, 375), word='libnghttp2-dev'),
    WordNode(pos=(378, 390), word='libpcre3-dev'),
    WordNode(pos=(393, 403), word='libssl-dev'),
    WordNode(pos=(406, 417), word='libxml2-dev'),
    WordNode(pos=(420, 424), word='make'),
    WordNode(pos=(427, 431), word='wget'),
    WordNode(pos=(434, 444), word='zlib1g-dev'),
  ]),
  OperatorNode(op=';', pos=(446, 447)),
  CommandNode(pos=(449, 475), parts=[
    WordNode(pos=(449, 451), word='rm'),
    WordNode(pos=(452, 454), word='-r'),
    WordNode(pos=(455, 475), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(475, 476)),
  FunctionNode(pos=(479, 741), parts=[
    WordNode(pos=(479, 484), word='ddist'),
    ReservedwordNode(pos=(484, 485), word='('),
    ReservedwordNode(pos=(485, 486), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(487, 488), word='{'),
      ListNode(pos=(491, 738), parts=[
          CommandNode(pos=(491, 503), parts=[
            WordNode(pos=(491, 496), word='local'),
            WordNode(pos=(497, 503), word='f=$1', parts=[
              ParameterNode(pos=(500, 502), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(503, 504)),
          CommandNode(pos=(505, 510), parts=[
            WordNode(pos=(505, 510), word='shift'),
          ]),
          OperatorNode(op=';', pos=(510, 511)),
          CommandNode(pos=(514, 533), parts=[
            WordNode(pos=(514, 519), word='local'),
            WordNode(pos=(520, 533), word='distFile=$1', parts=[
              ParameterNode(pos=(530, 532), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(533, 534)),
          CommandNode(pos=(535, 540), parts=[
            WordNode(pos=(535, 540), word='shift'),
          ]),
          OperatorNode(op=';', pos=(540, 541)),
          CommandNode(pos=(544, 558), parts=[
            WordNode(pos=(544, 549), word='local'),
            WordNode(pos=(550, 558), word='success='),
          ]),
          OperatorNode(op=';', pos=(558, 559)),
          CommandNode(pos=(562, 576), parts=[
            WordNode(pos=(562, 567), word='local'),
            WordNode(pos=(568, 576), word='distUrl='),
          ]),
          OperatorNode(op=';', pos=(576, 577)),
          CompoundNode(list=[
            ForNode(pos=(580, 716), parts=[
              ReservedwordNode(pos=(580, 583), word='for'),
              WordNode(pos=(584, 591), word='distUrl'),
              ReservedwordNode(pos=(592, 594), word='in'),
              WordNode(pos=(595, 612), word='$APACHE_DIST_URLS', parts=[
                ParameterNode(pos=(595, 612), value='APACHE_DIST_URLS'),
              ]),
              ReservedwordNode(pos=(612, 613), word=';'),
              ReservedwordNode(pos=(614, 616), word='do'),
              ListNode(pos=(620, 709), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(620, 708), parts=[
                      ReservedwordNode(pos=(620, 622), word='if'),
                      ListNode(pos=(623, 671), parts=[
                          CommandNode(pos=(623, 655), parts=[
                            WordNode(pos=(623, 627), word='wget'),
                            WordNode(pos=(628, 630), word='-O'),
                            WordNode(pos=(631, 635), word='$f', parts=[
                              ParameterNode(pos=(632, 634), value='f'),
                            ]),
                            WordNode(pos=(636, 655), word='$distUrl$distFile', parts=[
                              ParameterNode(pos=(637, 645), value='distUrl'),
                              ParameterNode(pos=(645, 654), value='distFile'),
                            ]),
                          ]),
                          OperatorNode(op='&&', pos=(656, 658)),
                          CommandNode(pos=(659, 670), parts=[
                            WordNode(pos=(659, 660), word='['),
                            WordNode(pos=(661, 663), word='-s'),
                            WordNode(pos=(664, 668), word='$f', parts=[
                              ParameterNode(pos=(665, 667), value='f'),
                            ]),
                            WordNode(pos=(669, 670), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(670, 671)),
                        ]),
                      ReservedwordNode(pos=(672, 676), word='then'),
                      ListNode(pos=(681, 702), parts=[
                          CommandNode(pos=(681, 690), parts=[
                            AssignmentNode(pos=(681, 690), word='success=1'),
                          ]),
                          OperatorNode(op=';', pos=(690, 691)),
                          CommandNode(pos=(696, 701), parts=[
                            WordNode(pos=(696, 701), word='break'),
                          ]),
                          OperatorNode(op=';', pos=(701, 702)),
                        ]),
                      ReservedwordNode(pos=(706, 708), word='fi'),
                    ]),
                  ], pos=(620, 708)),
                  OperatorNode(op=';', pos=(708, 709)),
                ]),
              ReservedwordNode(pos=(712, 716), word='done'),
            ]),
          ], pos=(580, 716)),
          OperatorNode(op=';', pos=(716, 717)),
          CommandNode(pos=(720, 737), parts=[
            WordNode(pos=(720, 721), word='['),
            WordNode(pos=(722, 724), word='-n'),
            WordNode(pos=(725, 735), word='$success', parts=[
              ParameterNode(pos=(726, 734), value='success'),
            ]),
            WordNode(pos=(736, 737), word=']'),
          ]),
          OperatorNode(op=';', pos=(737, 738)),
        ]),
      ReservedwordNode(pos=(740, 741), word='}'),
    ], pos=(487, 741)),
  ]),
  OperatorNode(op=';', pos=(741, 742)),
  CommandNode(pos=(745, 803), parts=[
    WordNode(pos=(745, 750), word='ddist'),
    WordNode(pos=(751, 766), word='httpd.tar.bz2'),
    WordNode(pos=(767, 803), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
      ParameterNode(pos=(780, 794), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(803, 804)),
  PipelineNode(pos=(806, 858), parts=[
    CommandNode(pos=(806, 841), parts=[
      WordNode(pos=(806, 810), word='echo'),
      WordNode(pos=(811, 841), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
        ParameterNode(pos=(812, 825), value='HTTPD_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(842, 843)),
    CommandNode(pos=(844, 858), parts=[
      WordNode(pos=(844, 853), word='sha256sum'),
      WordNode(pos=(854, 856), word='-c'),
      WordNode(pos=(857, 858), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(858, 859)),
  CommandNode(pos=(862, 928), parts=[
    WordNode(pos=(862, 867), word='ddist'),
    WordNode(pos=(868, 887), word='httpd.tar.bz2.asc'),
    WordNode(pos=(888, 928), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
      ParameterNode(pos=(901, 915), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(928, 929)),
  CommandNode(pos=(931, 962), parts=[
    WordNode(pos=(931, 937), word='export'),
    WordNode(pos=(938, 962), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(951, 960), parts=[
          WordNode(pos=(951, 957), word='mktemp'),
          WordNode(pos=(958, 960), word='-d'),
        ]), pos=(949, 961)),
    ]),
  ]),
  OperatorNode(op=';', pos=(962, 963)),
  CompoundNode(list=[
    ForNode(pos=(965, 1146), parts=[
      ReservedwordNode(pos=(965, 968), word='for'),
      WordNode(pos=(969, 972), word='key'),
      ReservedwordNode(pos=(973, 975), word='in'),
      WordNode(pos=(978, 1018), word='A93D62ECC3C8EA12DB220EC934EA76E6791485A8'),
      WordNode(pos=(1021, 1061), word='B9E8213AEFB861AF35A41F2C995E35221AD84DFF'),
      ReservedwordNode(pos=(1063, 1064), word=';'),
      ReservedwordNode(pos=(1065, 1067), word='do'),
      ListNode(pos=(1070, 1140), parts=[
          CommandNode(pos=(1070, 1139), parts=[
            WordNode(pos=(1070, 1073), word='gpg'),
            WordNode(pos=(1074, 1081), word='--batch'),
            WordNode(pos=(1082, 1093), word='--keyserver'),
            WordNode(pos=(1094, 1120), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(1121, 1132), word='--recv-keys'),
            WordNode(pos=(1133, 1139), word='$key', parts=[
              ParameterNode(pos=(1134, 1138), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1139, 1140)),
        ]),
      ReservedwordNode(pos=(1142, 1146), word='done'),
    ]),
  ], pos=(965, 1146)),
  OperatorNode(op=';', pos=(1146, 1147)),
  CommandNode(pos=(1149, 1201), parts=[
    WordNode(pos=(1149, 1152), word='gpg'),
    WordNode(pos=(1153, 1160), word='--batch'),
    WordNode(pos=(1161, 1169), word='--verify'),
    WordNode(pos=(1170, 1187), word='httpd.tar.bz2.asc'),
    WordNode(pos=(1188, 1201), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1201, 1202)),
  CommandNode(pos=(1204, 1222), parts=[
    WordNode(pos=(1204, 1211), word='command'),
    WordNode(pos=(1212, 1214), word='-v'),
    WordNode(pos=(1215, 1222), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(1223, 1225)),
  CommandNode(pos=(1226, 1244), parts=[
    WordNode(pos=(1226, 1233), word='gpgconf'),
    WordNode(pos=(1234, 1240), word='--kill'),
    WordNode(pos=(1241, 1244), word='all'),
  ]),
  OperatorNode(op='||', pos=(1245, 1247)),
  CommandNode(pos=(1248, 1249), parts=[
    WordNode(pos=(1248, 1249), word=':'),
  ]),
  OperatorNode(op=';', pos=(1249, 1250)),
  CommandNode(pos=(1252, 1289), parts=[
    WordNode(pos=(1252, 1254), word='rm'),
    WordNode(pos=(1255, 1258), word='-rf'),
    WordNode(pos=(1259, 1271), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(1260, 1270), value='GNUPGHOME'),
    ]),
    WordNode(pos=(1272, 1289), word='httpd.tar.bz2.asc'),
  ]),
  OperatorNode(op=';', pos=(1289, 1290)),
  CommandNode(pos=(1293, 1305), parts=[
    WordNode(pos=(1293, 1298), word='mkdir'),
    WordNode(pos=(1299, 1301), word='-p'),
    WordNode(pos=(1302, 1305), word='src'),
  ]),
  OperatorNode(op=';', pos=(1305, 1306)),
  CommandNode(pos=(1308, 1357), parts=[
    WordNode(pos=(1308, 1311), word='tar'),
    WordNode(pos=(1312, 1315), word='-xf'),
    WordNode(pos=(1316, 1329), word='httpd.tar.bz2'),
    WordNode(pos=(1330, 1332), word='-C'),
    WordNode(pos=(1333, 1336), word='src'),
    WordNode(pos=(1337, 1357), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1357, 1358)),
  CommandNode(pos=(1360, 1376), parts=[
    WordNode(pos=(1360, 1362), word='rm'),
    WordNode(pos=(1363, 1376), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1376, 1377)),
  CommandNode(pos=(1379, 1385), parts=[
    WordNode(pos=(1379, 1381), word='cd'),
    WordNode(pos=(1382, 1385), word='src'),
  ]),
  OperatorNode(op=';', pos=(1385, 1386)),
  FunctionNode(pos=(1389, 1683), parts=[
    WordNode(pos=(1389, 1396), word='patches'),
    ReservedwordNode(pos=(1396, 1397), word='('),
    ReservedwordNode(pos=(1397, 1398), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(1399, 1400), word='{'),
      ListNode(pos=(1403, 1680), parts=[
          CompoundNode(list=[
            WhileNode(pos=(1403, 1679), parts=[
              ReservedwordNode(pos=(1403, 1408), word='while'),
              ListNode(pos=(1409, 1424), parts=[
                  CommandNode(pos=(1409, 1423), parts=[
                    WordNode(pos=(1409, 1410), word='['),
                    WordNode(pos=(1411, 1415), word='$#', parts=[
                      ParameterNode(pos=(1412, 1414), value='#'),
                    ]),
                    WordNode(pos=(1416, 1419), word='-gt'),
                    WordNode(pos=(1420, 1421), word='0'),
                    WordNode(pos=(1422, 1423), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(1423, 1424)),
                ]),
              ReservedwordNode(pos=(1425, 1427), word='do'),
              ListNode(pos=(1431, 1672), parts=[
                  CommandNode(pos=(1431, 1451), parts=[
                    WordNode(pos=(1431, 1436), word='local'),
                    WordNode(pos=(1437, 1451), word='patchFile=$1', parts=[
                      ParameterNode(pos=(1448, 1450), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1451, 1452)),
                  CommandNode(pos=(1453, 1458), parts=[
                    WordNode(pos=(1453, 1458), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1458, 1459)),
                  CommandNode(pos=(1463, 1485), parts=[
                    WordNode(pos=(1463, 1468), word='local'),
                    WordNode(pos=(1469, 1485), word='patchSha256=$1', parts=[
                      ParameterNode(pos=(1482, 1484), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1485, 1486)),
                  CommandNode(pos=(1487, 1492), parts=[
                    WordNode(pos=(1487, 1492), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1492, 1493)),
                  CommandNode(pos=(1497, 1566), parts=[
                    WordNode(pos=(1497, 1502), word='ddist'),
                    WordNode(pos=(1503, 1515), word='$patchFile', parts=[
                      ParameterNode(pos=(1504, 1514), value='patchFile'),
                    ]),
                    WordNode(pos=(1516, 1566), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
                      ParameterNode(pos=(1540, 1554), value='HTTPD_VERSION'),
                      ParameterNode(pos=(1555, 1565), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1566, 1567)),
                  PipelineNode(pos=(1571, 1619), parts=[
                    CommandNode(pos=(1571, 1602), parts=[
                      WordNode(pos=(1571, 1575), word='echo'),
                      WordNode(pos=(1576, 1602), word='$patchSha256 *$patchFile', parts=[
                        ParameterNode(pos=(1577, 1589), value='patchSha256'),
                        ParameterNode(pos=(1591, 1601), value='patchFile'),
                      ]),
                    ]),
                    PipeNode(pipe='|', pos=(1603, 1604)),
                    CommandNode(pos=(1605, 1619), parts=[
                      WordNode(pos=(1605, 1614), word='sha256sum'),
                      WordNode(pos=(1615, 1617), word='-c'),
                      WordNode(pos=(1618, 1619), word='-'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1619, 1620)),
                  CommandNode(pos=(1624, 1648), parts=[
                    WordNode(pos=(1624, 1629), word='patch'),
                    WordNode(pos=(1630, 1633), word='-p0'),
                    RedirectNode(output=
                      WordNode(pos=(1636, 1648), word='$patchFile', parts=[
                        ParameterNode(pos=(1637, 1647), value='patchFile'),
                      ]), pos=(1634, 1648), type='<'),
                  ]),
                  OperatorNode(op=';', pos=(1648, 1649)),
                  CommandNode(pos=(1653, 1671), parts=[
                    WordNode(pos=(1653, 1655), word='rm'),
                    WordNode(pos=(1656, 1658), word='-f'),
                    WordNode(pos=(1659, 1671), word='$patchFile', parts=[
                      ParameterNode(pos=(1660, 1670), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1671, 1672)),
                ]),
              ReservedwordNode(pos=(1675, 1679), word='done'),
            ]),
          ], pos=(1403, 1679)),
          OperatorNode(op=';', pos=(1679, 1680)),
        ]),
      ReservedwordNode(pos=(1682, 1683), word='}'),
    ], pos=(1399, 1683)),
  ]),
  OperatorNode(op=';', pos=(1683, 1684)),
  CommandNode(pos=(1686, 1708), parts=[
    WordNode(pos=(1686, 1693), word='patches'),
    WordNode(pos=(1694, 1708), word='$HTTPD_PATCHES', parts=[
      ParameterNode(pos=(1694, 1708), value='HTTPD_PATCHES'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1708, 1709)),
  CommandNode(pos=(1712, 1769), parts=[
    AssignmentNode(pos=(1712, 1769), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1723, 1767), parts=[
          WordNode(pos=(1723, 1740), word='dpkg-architecture'),
          WordNode(pos=(1741, 1748), word='--query'),
          WordNode(pos=(1749, 1767), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1721, 1768)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1769, 1770)),
  CommandNode(pos=(1772, 1891), parts=[
    WordNode(pos=(1772, 1783), word='./configure'),
    WordNode(pos=(1786, 1804), word='--build=$gnuArch', parts=[
      ParameterNode(pos=(1795, 1803), value='gnuArch'),
    ]),
    WordNode(pos=(1807, 1831), word='--prefix=$HTTPD_PREFIX', parts=[
      ParameterNode(pos=(1817, 1830), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(1834, 1864), word='--enable-mods-shared=reallyall'),
    WordNode(pos=(1867, 1891), word='--enable-mpms-shared=all'),
  ]),
  OperatorNode(op=';', pos=(1893, 1894)),
  CommandNode(pos=(1896, 1914), parts=[
    WordNode(pos=(1896, 1900), word='make'),
    WordNode(pos=(1901, 1903), word='-j'),
    WordNode(pos=(1904, 1914), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1907, 1912), parts=[
          WordNode(pos=(1907, 1912), word='nproc'),
        ]), pos=(1905, 1913)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1914, 1915)),
  CommandNode(pos=(1917, 1929), parts=[
    WordNode(pos=(1917, 1921), word='make'),
    WordNode(pos=(1922, 1929), word='install'),
  ]),
  OperatorNode(op=';', pos=(1929, 1930)),
  CommandNode(pos=(1933, 1938), parts=[
    WordNode(pos=(1933, 1935), word='cd'),
    WordNode(pos=(1936, 1938), word='..'),
  ]),
  OperatorNode(op=';', pos=(1938, 1939)),
  CommandNode(pos=(1941, 1961), parts=[
    WordNode(pos=(1941, 1943), word='rm'),
    WordNode(pos=(1944, 1946), word='-r'),
    WordNode(pos=(1947, 1950), word='src'),
    WordNode(pos=(1951, 1954), word='man'),
    WordNode(pos=(1955, 1961), word='manual'),
  ]),
  OperatorNode(op=';', pos=(1961, 1962)),
  CommandNode(pos=(1965, 2207), parts=[
    WordNode(pos=(1965, 1968), word='sed'),
    WordNode(pos=(1969, 1972), word='-ri'),
    WordNode(pos=(1975, 1977), word='-e'),
    WordNode(pos=(1978, 2024), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(2027, 2029), word='-e'),
    WordNode(pos=(2030, 2075), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
    WordNode(pos=(2078, 2080), word='-e'),
    WordNode(pos=(2081, 2129), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(2132, 2163), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
      ParameterNode(pos=(2133, 2146), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(2166, 2207), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
      ParameterNode(pos=(2167, 2180), value='HTTPD_PREFIX'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2209, 2210)),
  CommandNode(pos=(2213, 2243), parts=[
    WordNode(pos=(2213, 2221), word='apt-mark'),
    WordNode(pos=(2222, 2226), word='auto'),
    WordNode(pos=(2227, 2231), word='.*'),
    RedirectNode(output=
      WordNode(pos=(2234, 2243), word='/dev/null'), pos=(2232, 2243), type='>'),
  ]),
  OperatorNode(op=';', pos=(2243, 2244)),
  CommandNode(pos=(2246, 2268), parts=[
    WordNode(pos=(2246, 2247), word='['),
    WordNode(pos=(2248, 2250), word='-z'),
    WordNode(pos=(2251, 2266), word='$savedAptMark', parts=[
      ParameterNode(pos=(2252, 2265), value='savedAptMark'),
    ]),
    WordNode(pos=(2267, 2268), word=']'),
  ]),
  OperatorNode(op='||', pos=(2269, 2271)),
  CommandNode(pos=(2272, 2301), parts=[
    WordNode(pos=(2272, 2280), word='apt-mark'),
    WordNode(pos=(2281, 2287), word='manual'),
    WordNode(pos=(2288, 2301), word='$savedAptMark', parts=[
      ParameterNode(pos=(2288, 2301), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2301, 2302)),
  PipelineNode(pos=(2304, 2493), parts=[
    CommandNode(pos=(2304, 2358), parts=[
      WordNode(pos=(2304, 2308), word='find'),
      WordNode(pos=(2309, 2319), word='/usr/local'),
      WordNode(pos=(2320, 2325), word='-type'),
      WordNode(pos=(2326, 2327), word='f'),
      WordNode(pos=(2328, 2339), word='-executable'),
      WordNode(pos=(2340, 2345), word='-exec'),
      WordNode(pos=(2346, 2349), word='ldd'),
      WordNode(pos=(2350, 2354), word='{}'),
      WordNode(pos=(2355, 2358), word=';'),
    ]),
    PipeNode(pipe='|', pos=(2361, 2362)),
    CommandNode(pos=(2363, 2391), parts=[
      WordNode(pos=(2363, 2366), word='awk'),
      WordNode(pos=(2367, 2391), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(2394, 2395)),
    CommandNode(pos=(2396, 2403), parts=[
      WordNode(pos=(2396, 2400), word='sort'),
      WordNode(pos=(2401, 2403), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(2406, 2407)),
    CommandNode(pos=(2408, 2436), parts=[
      WordNode(pos=(2408, 2413), word='xargs'),
      WordNode(pos=(2414, 2416), word='-r'),
      WordNode(pos=(2417, 2427), word='dpkg-query'),
      WordNode(pos=(2428, 2436), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(2439, 2440)),
    CommandNode(pos=(2441, 2452), parts=[
      WordNode(pos=(2441, 2444), word='cut'),
      WordNode(pos=(2445, 2448), word='-d:'),
      WordNode(pos=(2449, 2452), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(2455, 2456)),
    CommandNode(pos=(2457, 2464), parts=[
      WordNode(pos=(2457, 2461), word='sort'),
      WordNode(pos=(2462, 2464), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(2467, 2468)),
    CommandNode(pos=(2469, 2493), parts=[
      WordNode(pos=(2469, 2474), word='xargs'),
      WordNode(pos=(2475, 2477), word='-r'),
      WordNode(pos=(2478, 2486), word='apt-mark'),
      WordNode(pos=(2487, 2493), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2495, 2496)),
  CommandNode(pos=(2498, 2574), parts=[
    WordNode(pos=(2498, 2505), word='apt-get'),
    WordNode(pos=(2506, 2511), word='purge'),
    WordNode(pos=(2512, 2514), word='-y'),
    WordNode(pos=(2515, 2528), word='--auto-remove'),
    WordNode(pos=(2529, 2531), word='-o'),
    WordNode(pos=(2532, 2574), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(2574, 2575)),
  CommandNode(pos=(2578, 2586), parts=[
    WordNode(pos=(2578, 2583), word='httpd'),
    WordNode(pos=(2584, 2586), word='-v'),
  ]),
])


83) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


84) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


85) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


86) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


87) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


88) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


89) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


90) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


91) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


92) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


93) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


94) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


95) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 304), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 219), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 240), parts=[
    WordNode(pos=(222, 229), word='command'),
    WordNode(pos=(230, 232), word='-v'),
    WordNode(pos=(233, 240), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(241, 243)),
  CommandNode(pos=(244, 262), parts=[
    WordNode(pos=(244, 251), word='gpgconf'),
    WordNode(pos=(252, 258), word='--kill'),
    WordNode(pos=(259, 262), word='all'),
  ]),
  OperatorNode(op='||', pos=(263, 265)),
  CommandNode(pos=(266, 267), parts=[
    WordNode(pos=(266, 267), word=':'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 289), parts=[
    WordNode(pos=(270, 272), word='rm'),
    WordNode(pos=(273, 276), word='-rf'),
    WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(278, 288), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(289, 290)),
  CommandNode(pos=(292, 304), parts=[
    WordNode(pos=(292, 299), word='apt-key'),
    WordNode(pos=(300, 304), word='list'),
  ]),
])


96) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


97) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libmagickcore-dev   libmagickwand-dev   libmariadbclient-dev   libpq-dev   libsqlite3-dev   make   patch     libssl1.0-dev  ;  rm -rf /var/lib/apt/lists/*;   wget -O freetds.tar.bz2 'http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2';  echo '8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2' | md5sum -c -;  mkdir freetds;  tar -xf freetds.tar.bz2 -C freetds --strip-components=1;  rm freetds.tar.bz2;  ( cd freetds && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && ./configure --build="$gnuArch" --enable-silent-rules && make -j "$(nproc)" && make -C src install && make -C include install );  rm -rf freetds;  gosu redmine bundle config build.tiny_tds --enable-system-freetds;   gosu redmine bundle install --without development test;  for adapter in mysql2 postgresql sqlserver sqlite3; do   echo "$RAILS_ENV:" > ./config/database.yml;   echo "  adapter: $adapter" >> ./config/database.yml;   gosu redmine bundle install --without development test;   cp Gemfile.lock "Gemfile.lock.${adapter}";  done;  rm ./config/database.yml;  chmod -R ugo=rwX Gemfile.lock "$GEM_HOME";  rm -rf ~redmine/.bundle;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | grep -v '^/usr/local/'   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

ListNode(pos=(0, 1647), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 253), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 87), word='-y'),
    WordNode(pos=(88, 111), word='--no-install-recommends'),
    WordNode(pos=(114, 122), word='dpkg-dev'),
    WordNode(pos=(125, 128), word='gcc'),
    WordNode(pos=(131, 148), word='libmagickcore-dev'),
    WordNode(pos=(151, 168), word='libmagickwand-dev'),
    WordNode(pos=(171, 191), word='libmariadbclient-dev'),
    WordNode(pos=(194, 203), word='libpq-dev'),
    WordNode(pos=(206, 220), word='libsqlite3-dev'),
    WordNode(pos=(223, 227), word='make'),
    WordNode(pos=(230, 235), word='patch'),
    WordNode(pos=(240, 253), word='libssl1.0-dev'),
  ]),
  OperatorNode(op=';', pos=(255, 256)),
  CommandNode(pos=(258, 285), parts=[
    WordNode(pos=(258, 260), word='rm'),
    WordNode(pos=(261, 264), word='-rf'),
    WordNode(pos=(265, 285), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(285, 286)),
  CommandNode(pos=(289, 374), parts=[
    WordNode(pos=(289, 293), word='wget'),
    WordNode(pos=(294, 296), word='-O'),
    WordNode(pos=(297, 312), word='freetds.tar.bz2'),
    WordNode(pos=(313, 374), word='http://www.freetds.org/files/stable/freetds-1.00.91.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(374, 375)),
  PipelineNode(pos=(377, 447), parts=[
    CommandNode(pos=(377, 433), parts=[
      WordNode(pos=(377, 381), word='echo'),
      WordNode(pos=(382, 433), word='8d71f9f29be0fe0637e443dd3807b3fd *freetds.tar.bz2'),
    ]),
    PipeNode(pipe='|', pos=(434, 435)),
    CommandNode(pos=(436, 447), parts=[
      WordNode(pos=(436, 442), word='md5sum'),
      WordNode(pos=(443, 445), word='-c'),
      WordNode(pos=(446, 447), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(447, 448)),
  CommandNode(pos=(450, 463), parts=[
    WordNode(pos=(450, 455), word='mkdir'),
    WordNode(pos=(456, 463), word='freetds'),
  ]),
  OperatorNode(op=';', pos=(463, 464)),
  CommandNode(pos=(466, 521), parts=[
    WordNode(pos=(466, 469), word='tar'),
    WordNode(pos=(470, 473), word='-xf'),
    WordNode(pos=(474, 489), word='freetds.tar.bz2'),
    WordNode(pos=(490, 492), word='-C'),
    WordNode(pos=(493, 500), word='freetds'),
    WordNode(pos=(501, 521), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(521, 522)),
  CommandNode(pos=(524, 542), parts=[
    WordNode(pos=(524, 526), word='rm'),
    WordNode(pos=(527, 542), word='freetds.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(542, 543)),
  CompoundNode(list=[
    ReservedwordNode(pos=(545, 546), word='('),
    ListNode(pos=(547, 746), parts=[
        CommandNode(pos=(547, 557), parts=[
          WordNode(pos=(547, 549), word='cd'),
          WordNode(pos=(550, 557), word='freetds'),
        ]),
        OperatorNode(op='&&', pos=(558, 560)),
        CommandNode(pos=(561, 618), parts=[
          AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(572, 616), parts=[
                WordNode(pos=(572, 589), word='dpkg-architecture'),
                WordNode(pos=(590, 597), word='--query'),
                WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(570, 617)),
          ]),
        ]),
        OperatorNode(op='&&', pos=(619, 621)),
        CommandNode(pos=(622, 674), parts=[
          WordNode(pos=(622, 633), word='./configure'),
          WordNode(pos=(634, 652), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(643, 651), value='gnuArch'),
          ]),
          WordNode(pos=(653, 674), word='--enable-silent-rules'),
        ]),
        OperatorNode(op='&&', pos=(675, 677)),
        CommandNode(pos=(678, 696), parts=[
          WordNode(pos=(678, 682), word='make'),
          WordNode(pos=(683, 685), word='-j'),
          WordNode(pos=(686, 696), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(689, 694), parts=[
                WordNode(pos=(689, 694), word='nproc'),
              ]), pos=(687, 695)),
          ]),
        ]),
        OperatorNode(op='&&', pos=(697, 699)),
        CommandNode(pos=(700, 719), parts=[
          WordNode(pos=(700, 704), word='make'),
          WordNode(pos=(705, 707), word='-C'),
          WordNode(pos=(708, 711), word='src'),
          WordNode(pos=(712, 719), word='install'),
        ]),
        OperatorNode(op='&&', pos=(720, 722)),
        CommandNode(pos=(723, 746), parts=[
          WordNode(pos=(723, 727), word='make'),
          WordNode(pos=(728, 730), word='-C'),
          WordNode(pos=(731, 738), word='include'),
          WordNode(pos=(739, 746), word='install'),
        ]),
      ]),
    ReservedwordNode(pos=(747, 748), word=')'),
  ], pos=(545, 748)),
  OperatorNode(op=';', pos=(748, 749)),
  CommandNode(pos=(751, 765), parts=[
    WordNode(pos=(751, 753), word='rm'),
    WordNode(pos=(754, 757), word='-rf'),
    WordNode(pos=(758, 765), word='freetds'),
  ]),
  OperatorNode(op=';', pos=(765, 766)),
  CommandNode(pos=(768, 833), parts=[
    WordNode(pos=(768, 772), word='gosu'),
    WordNode(pos=(773, 780), word='redmine'),
    WordNode(pos=(781, 787), word='bundle'),
    WordNode(pos=(788, 794), word='config'),
    WordNode(pos=(795, 809), word='build.tiny_tds'),
    WordNode(pos=(810, 833), word='--enable-system-freetds'),
  ]),
  OperatorNode(op=';', pos=(833, 834)),
  CommandNode(pos=(837, 891), parts=[
    WordNode(pos=(837, 841), word='gosu'),
    WordNode(pos=(842, 849), word='redmine'),
    WordNode(pos=(850, 856), word='bundle'),
    WordNode(pos=(857, 864), word='install'),
    WordNode(pos=(865, 874), word='--without'),
    WordNode(pos=(875, 886), word='development'),
    WordNode(pos=(887, 891), word='test'),
  ]),
  OperatorNode(op=';', pos=(891, 892)),
  CompoundNode(list=[
    ForNode(pos=(894, 1158), parts=[
      ReservedwordNode(pos=(894, 897), word='for'),
      WordNode(pos=(898, 905), word='adapter'),
      ReservedwordNode(pos=(906, 908), word='in'),
      WordNode(pos=(909, 915), word='mysql2'),
      WordNode(pos=(916, 926), word='postgresql'),
      WordNode(pos=(927, 936), word='sqlserver'),
      WordNode(pos=(937, 944), word='sqlite3'),
      ReservedwordNode(pos=(944, 945), word=';'),
      ReservedwordNode(pos=(946, 948), word='do'),
      ListNode(pos=(951, 1152), parts=[
          CommandNode(pos=(951, 993), parts=[
            WordNode(pos=(951, 955), word='echo'),
            WordNode(pos=(956, 969), word='$RAILS_ENV:', parts=[
              ParameterNode(pos=(957, 967), value='RAILS_ENV'),
            ]),
            RedirectNode(output=
              WordNode(pos=(972, 993), word='./config/database.yml'), pos=(970, 993), type='>'),
          ]),
          OperatorNode(op=';', pos=(993, 994)),
          CommandNode(pos=(997, 1048), parts=[
            WordNode(pos=(997, 1001), word='echo'),
            WordNode(pos=(1002, 1023), word='  adapter: $adapter', parts=[
              ParameterNode(pos=(1014, 1022), value='adapter'),
            ]),
            RedirectNode(output=
              WordNode(pos=(1027, 1048), word='./config/database.yml'), pos=(1024, 1048), type='>>'),
          ]),
          OperatorNode(op=';', pos=(1048, 1049)),
          CommandNode(pos=(1052, 1106), parts=[
            WordNode(pos=(1052, 1056), word='gosu'),
            WordNode(pos=(1057, 1064), word='redmine'),
            WordNode(pos=(1065, 1071), word='bundle'),
            WordNode(pos=(1072, 1079), word='install'),
            WordNode(pos=(1080, 1089), word='--without'),
            WordNode(pos=(1090, 1101), word='development'),
            WordNode(pos=(1102, 1106), word='test'),
          ]),
          OperatorNode(op=';', pos=(1106, 1107)),
          CommandNode(pos=(1110, 1151), parts=[
            WordNode(pos=(1110, 1112), word='cp'),
            WordNode(pos=(1113, 1125), word='Gemfile.lock'),
            WordNode(pos=(1126, 1151), word='Gemfile.lock.${adapter}', parts=[
              ParameterNode(pos=(1140, 1150), value='adapter'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1151, 1152)),
        ]),
      ReservedwordNode(pos=(1154, 1158), word='done'),
    ]),
  ], pos=(894, 1158)),
  OperatorNode(op=';', pos=(1158, 1159)),
  CommandNode(pos=(1161, 1185), parts=[
    WordNode(pos=(1161, 1163), word='rm'),
    WordNode(pos=(1164, 1185), word='./config/database.yml'),
  ]),
  OperatorNode(op=';', pos=(1185, 1186)),
  CommandNode(pos=(1188, 1229), parts=[
    WordNode(pos=(1188, 1193), word='chmod'),
    WordNode(pos=(1194, 1196), word='-R'),
    WordNode(pos=(1197, 1204), word='ugo=rwX'),
    WordNode(pos=(1205, 1217), word='Gemfile.lock'),
    WordNode(pos=(1218, 1229), word='$GEM_HOME', parts=[
      ParameterNode(pos=(1219, 1228), value='GEM_HOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1229, 1230)),
  CommandNode(pos=(1232, 1255), parts=[
    WordNode(pos=(1232, 1234), word='rm'),
    WordNode(pos=(1235, 1238), word='-rf'),
    WordNode(pos=(1239, 1255), word='~redmine/.bundle', parts=[
      TildeNode(pos=(1239, 1247), value='~redmine'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1255, 1256)),
  CommandNode(pos=(1259, 1289), parts=[
    WordNode(pos=(1259, 1267), word='apt-mark'),
    WordNode(pos=(1268, 1272), word='auto'),
    WordNode(pos=(1273, 1277), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1280, 1289), word='/dev/null'), pos=(1278, 1289), type='>'),
  ]),
  OperatorNode(op=';', pos=(1289, 1290)),
  CommandNode(pos=(1292, 1314), parts=[
    WordNode(pos=(1292, 1293), word='['),
    WordNode(pos=(1294, 1296), word='-z'),
    WordNode(pos=(1297, 1312), word='$savedAptMark', parts=[
      ParameterNode(pos=(1298, 1311), value='savedAptMark'),
    ]),
    WordNode(pos=(1313, 1314), word=']'),
  ]),
  OperatorNode(op='||', pos=(1315, 1317)),
  CommandNode(pos=(1318, 1347), parts=[
    WordNode(pos=(1318, 1326), word='apt-mark'),
    WordNode(pos=(1327, 1333), word='manual'),
    WordNode(pos=(1334, 1347), word='$savedAptMark', parts=[
      ParameterNode(pos=(1334, 1347), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1347, 1348)),
  PipelineNode(pos=(1350, 1566), parts=[
    CommandNode(pos=(1350, 1404), parts=[
      WordNode(pos=(1350, 1354), word='find'),
      WordNode(pos=(1355, 1365), word='/usr/local'),
      WordNode(pos=(1366, 1371), word='-type'),
      WordNode(pos=(1372, 1373), word='f'),
      WordNode(pos=(1374, 1385), word='-executable'),
      WordNode(pos=(1386, 1391), word='-exec'),
      WordNode(pos=(1392, 1395), word='ldd'),
      WordNode(pos=(1396, 1400), word='{}'),
      WordNode(pos=(1401, 1404), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1407, 1408)),
    CommandNode(pos=(1409, 1437), parts=[
      WordNode(pos=(1409, 1412), word='awk'),
      WordNode(pos=(1413, 1437), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1440, 1441)),
    CommandNode(pos=(1442, 1449), parts=[
      WordNode(pos=(1442, 1446), word='sort'),
      WordNode(pos=(1447, 1449), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1452, 1453)),
    CommandNode(pos=(1454, 1476), parts=[
      WordNode(pos=(1454, 1458), word='grep'),
      WordNode(pos=(1459, 1461), word='-v'),
      WordNode(pos=(1462, 1476), word='^/usr/local/'),
    ]),
    PipeNode(pipe='|', pos=(1479, 1480)),
    CommandNode(pos=(1481, 1509), parts=[
      WordNode(pos=(1481, 1486), word='xargs'),
      WordNode(pos=(1487, 1489), word='-r'),
      WordNode(pos=(1490, 1500), word='dpkg-query'),
      WordNode(pos=(1501, 1509), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1512, 1513)),
    CommandNode(pos=(1514, 1525), parts=[
      WordNode(pos=(1514, 1517), word='cut'),
      WordNode(pos=(1518, 1521), word='-d:'),
      WordNode(pos=(1522, 1525), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1528, 1529)),
    CommandNode(pos=(1530, 1537), parts=[
      WordNode(pos=(1530, 1534), word='sort'),
      WordNode(pos=(1535, 1537), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1540, 1541)),
    CommandNode(pos=(1542, 1566), parts=[
      WordNode(pos=(1542, 1547), word='xargs'),
      WordNode(pos=(1548, 1550), word='-r'),
      WordNode(pos=(1551, 1559), word='apt-mark'),
      WordNode(pos=(1560, 1566), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1568, 1569)),
  CommandNode(pos=(1571, 1647), parts=[
    WordNode(pos=(1571, 1578), word='apt-get'),
    WordNode(pos=(1579, 1584), word='purge'),
    WordNode(pos=(1585, 1587), word='-y'),
    WordNode(pos=(1588, 1601), word='--auto-remove'),
    WordNode(pos=(1602, 1604), word='-o'),
    WordNode(pos=(1605, 1647), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
])


98) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


99) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


100) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


101) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


102) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


103) set -ex;  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done

ListNode(pos=(0, 113), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    ForNode(pos=(10, 113), parts=[
      ReservedwordNode(pos=(10, 13), word='for'),
      WordNode(pos=(14, 17), word='key'),
      ReservedwordNode(pos=(18, 20), word='in'),
      WordNode(pos=(21, 30), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(21, 30), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(30, 31), word=';'),
      ReservedwordNode(pos=(32, 34), word='do'),
      ListNode(pos=(37, 107), parts=[
          CommandNode(pos=(37, 106), parts=[
            WordNode(pos=(37, 40), word='gpg'),
            WordNode(pos=(41, 48), word='--batch'),
            WordNode(pos=(49, 60), word='--keyserver'),
            WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(88, 99), word='--recv-keys'),
            WordNode(pos=(100, 106), word='$key', parts=[
              ParameterNode(pos=(101, 105), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
        ]),
      ReservedwordNode(pos=(109, 113), word='done'),
    ]),
  ], pos=(10, 113)),
])


104) set -ex;  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done

ListNode(pos=(0, 113), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    ForNode(pos=(10, 113), parts=[
      ReservedwordNode(pos=(10, 13), word='for'),
      WordNode(pos=(14, 17), word='key'),
      ReservedwordNode(pos=(18, 20), word='in'),
      WordNode(pos=(21, 30), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(21, 30), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(30, 31), word=';'),
      ReservedwordNode(pos=(32, 34), word='do'),
      ListNode(pos=(37, 107), parts=[
          CommandNode(pos=(37, 106), parts=[
            WordNode(pos=(37, 40), word='gpg'),
            WordNode(pos=(41, 48), word='--batch'),
            WordNode(pos=(49, 60), word='--keyserver'),
            WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(88, 99), word='--recv-keys'),
            WordNode(pos=(100, 106), word='$key', parts=[
              ParameterNode(pos=(101, 105), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
        ]),
      ReservedwordNode(pos=(109, 113), word='done'),
    ]),
  ], pos=(10, 113)),
])


105) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


106) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


107) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


108) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


109) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


110) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


111) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


112) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


113) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


114) set -eux;   curl -fL -o /openjdk.tgz "$JAVA_URL";  echo "$JAVA_SHA256 */openjdk.tgz" | sha256sum -c -;  mkdir -p "$JAVA_HOME";  tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1;  rm /openjdk.tgz;   ln -sfT "$JAVA_HOME" /usr/java/default;  ln -sfT "$JAVA_HOME" /usr/java/latest;  for bin in "$JAVA_HOME/bin/"*; do   base="$(basename "$bin")";   [ ! -e "/usr/bin/$base" ];   alternatives --install "/usr/bin/$base" "$base" "$bin" 20000;  done;   java -Xshare:dump;   java --version;  javac --version

ListNode(pos=(0, 528), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 48), parts=[
    WordNode(pos=(12, 16), word='curl'),
    WordNode(pos=(17, 20), word='-fL'),
    WordNode(pos=(21, 23), word='-o'),
    WordNode(pos=(24, 36), word='/openjdk.tgz'),
    WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
      ParameterNode(pos=(38, 47), value='JAVA_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(48, 49)),
  PipelineNode(pos=(51, 101), parts=[
    CommandNode(pos=(51, 84), parts=[
      WordNode(pos=(51, 55), word='echo'),
      WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
        ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(85, 86)),
    CommandNode(pos=(87, 101), parts=[
      WordNode(pos=(87, 96), word='sha256sum'),
      WordNode(pos=(97, 99), word='-c'),
      WordNode(pos=(100, 101), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(101, 102)),
  CommandNode(pos=(104, 125), parts=[
    WordNode(pos=(104, 109), word='mkdir'),
    WordNode(pos=(110, 112), word='-p'),
    WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(114, 124), value='JAVA_HOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 207), parts=[
    WordNode(pos=(128, 131), word='tar'),
    WordNode(pos=(132, 141), word='--extract'),
    WordNode(pos=(142, 148), word='--file'),
    WordNode(pos=(149, 161), word='/openjdk.tgz'),
    WordNode(pos=(162, 173), word='--directory'),
    WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(175, 185), value='JAVA_HOME'),
    ]),
    WordNode(pos=(187, 205), word='--strip-components'),
    WordNode(pos=(206, 207), word='1'),
  ]),
  OperatorNode(op=';', pos=(207, 208)),
  CommandNode(pos=(210, 225), parts=[
    WordNode(pos=(210, 212), word='rm'),
    WordNode(pos=(213, 225), word='/openjdk.tgz'),
  ]),
  OperatorNode(op=';', pos=(225, 226)),
  CommandNode(pos=(229, 267), parts=[
    WordNode(pos=(229, 231), word='ln'),
    WordNode(pos=(232, 236), word='-sfT'),
    WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(238, 248), value='JAVA_HOME'),
    ]),
    WordNode(pos=(250, 267), word='/usr/java/default'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 307), parts=[
    WordNode(pos=(270, 272), word='ln'),
    WordNode(pos=(273, 277), word='-sfT'),
    WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(279, 289), value='JAVA_HOME'),
    ]),
    WordNode(pos=(291, 307), word='/usr/java/latest'),
  ]),
  OperatorNode(op=';', pos=(307, 308)),
  CompoundNode(list=[
    ForNode(pos=(310, 471), parts=[
      ReservedwordNode(pos=(310, 313), word='for'),
      WordNode(pos=(314, 317), word='bin'),
      ReservedwordNode(pos=(318, 320), word='in'),
      WordNode(pos=(321, 339), word='$JAVA_HOME/bin/*', parts=[
        ParameterNode(pos=(322, 332), value='JAVA_HOME'),
      ]),
      ReservedwordNode(pos=(339, 340), word=';'),
      ReservedwordNode(pos=(341, 343), word='do'),
      ListNode(pos=(346, 465), parts=[
          CommandNode(pos=(346, 371), parts=[
            AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(354, 369), parts=[
                  WordNode(pos=(354, 362), word='basename'),
                  WordNode(pos=(363, 369), word='$bin', parts=[
                    ParameterNode(pos=(364, 368), value='bin'),
                  ]),
                ]), pos=(352, 370)),
            ]),
          ]),
          OperatorNode(op=';', pos=(371, 372)),
          CommandNode(pos=(375, 400), parts=[
            WordNode(pos=(375, 376), word='['),
            WordNode(pos=(377, 378), word='!'),
            WordNode(pos=(379, 381), word='-e'),
            WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(392, 397), value='base'),
            ]),
            WordNode(pos=(399, 400), word=']'),
          ]),
          OperatorNode(op=';', pos=(400, 401)),
          CommandNode(pos=(404, 464), parts=[
            WordNode(pos=(404, 416), word='alternatives'),
            WordNode(pos=(417, 426), word='--install'),
            WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(437, 442), value='base'),
            ]),
            WordNode(pos=(444, 451), word='$base', parts=[
              ParameterNode(pos=(445, 450), value='base'),
            ]),
            WordNode(pos=(452, 458), word='$bin', parts=[
              ParameterNode(pos=(453, 457), value='bin'),
            ]),
            WordNode(pos=(459, 464), word='20000'),
          ]),
          OperatorNode(op=';', pos=(464, 465)),
        ]),
      ReservedwordNode(pos=(467, 471), word='done'),
    ]),
  ], pos=(310, 471)),
  OperatorNode(op=';', pos=(471, 472)),
  CommandNode(pos=(475, 492), parts=[
    WordNode(pos=(475, 479), word='java'),
    WordNode(pos=(480, 492), word='-Xshare:dump'),
  ]),
  OperatorNode(op=';', pos=(492, 493)),
  CommandNode(pos=(496, 510), parts=[
    WordNode(pos=(496, 500), word='java'),
    WordNode(pos=(501, 510), word='--version'),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 528), parts=[
    WordNode(pos=(513, 518), word='javac'),
    WordNode(pos=(519, 528), word='--version'),
  ]),
])


115) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


116) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


117) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


118) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


119) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


120) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


121) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 304), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 219), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 240), parts=[
    WordNode(pos=(222, 229), word='command'),
    WordNode(pos=(230, 232), word='-v'),
    WordNode(pos=(233, 240), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(241, 243)),
  CommandNode(pos=(244, 262), parts=[
    WordNode(pos=(244, 251), word='gpgconf'),
    WordNode(pos=(252, 258), word='--kill'),
    WordNode(pos=(259, 262), word='all'),
  ]),
  OperatorNode(op='||', pos=(263, 265)),
  CommandNode(pos=(266, 267), parts=[
    WordNode(pos=(266, 267), word=':'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 289), parts=[
    WordNode(pos=(270, 272), word='rm'),
    WordNode(pos=(273, 276), word='-rf'),
    WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(278, 288), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(289, 290)),
  CommandNode(pos=(292, 304), parts=[
    WordNode(pos=(292, 299), word='apt-key'),
    WordNode(pos=(300, 304), word='list'),
  ]),
])


122) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


123) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


124) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


125) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


126) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 304), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 219), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 240), parts=[
    WordNode(pos=(222, 229), word='command'),
    WordNode(pos=(230, 232), word='-v'),
    WordNode(pos=(233, 240), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(241, 243)),
  CommandNode(pos=(244, 262), parts=[
    WordNode(pos=(244, 251), word='gpgconf'),
    WordNode(pos=(252, 258), word='--kill'),
    WordNode(pos=(259, 262), word='all'),
  ]),
  OperatorNode(op='||', pos=(263, 265)),
  CommandNode(pos=(266, 267), parts=[
    WordNode(pos=(266, 267), word=':'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 289), parts=[
    WordNode(pos=(270, 272), word='rm'),
    WordNode(pos=(273, 276), word='-rf'),
    WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(278, 288), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(289, 290)),
  CommandNode(pos=(292, 304), parts=[
    WordNode(pos=(292, 299), word='apt-key'),
    WordNode(pos=(300, 304), word='list'),
  ]),
])


127) set -eux;   apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev  ;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   mkdir /usr/local/src;   wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum -c -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum -c -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --no-cache --virtual .otp-run-deps $runDeps;  apk del --no-network .build-deps;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3380), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 159), parts=[
    WordNode(pos=(12, 15), word='apk'),
    WordNode(pos=(16, 19), word='add'),
    WordNode(pos=(20, 30), word='--no-cache'),
    WordNode(pos=(31, 40), word='--virtual'),
    WordNode(pos=(41, 52), word='.build-deps'),
    WordNode(pos=(55, 63), word='autoconf'),
    WordNode(pos=(66, 81), word='ca-certificates'),
    WordNode(pos=(84, 92), word='dpkg-dev'),
    WordNode(pos=(93, 97), word='dpkg'),
    WordNode(pos=(100, 103), word='gcc'),
    WordNode(pos=(106, 111), word='gnupg'),
    WordNode(pos=(114, 122), word='libc-dev'),
    WordNode(pos=(125, 138), word='linux-headers'),
    WordNode(pos=(141, 145), word='make'),
    WordNode(pos=(148, 159), word='ncurses-dev'),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CommandNode(pos=(165, 248), parts=[
    AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(248, 249)),
  CommandNode(pos=(251, 305), parts=[
    AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(305, 306)),
  CommandNode(pos=(308, 345), parts=[
    AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(345, 346)),
  CommandNode(pos=(349, 369), parts=[
    WordNode(pos=(349, 354), word='mkdir'),
    WordNode(pos=(355, 369), word='/usr/local/src'),
  ]),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 448), parts=[
    WordNode(pos=(373, 377), word='wget'),
    WordNode(pos=(378, 395), word='--output-document'),
    WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(448, 449)),
  CommandNode(pos=(451, 518), parts=[
    WordNode(pos=(451, 455), word='wget'),
    WordNode(pos=(456, 473), word='--output-document'),
    WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(518, 519)),
  CommandNode(pos=(521, 552), parts=[
    WordNode(pos=(521, 527), word='export'),
    WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(541, 550), parts=[
          WordNode(pos=(541, 547), word='mktemp'),
          WordNode(pos=(548, 550), word='-d'),
        ]), pos=(539, 551)),
    ]),
  ]),
  OperatorNode(op=';', pos=(552, 553)),
  CompoundNode(list=[
    ForNode(pos=(555, 659), parts=[
      ReservedwordNode(pos=(555, 558), word='for'),
      WordNode(pos=(559, 562), word='key'),
      ReservedwordNode(pos=(563, 565), word='in'),
      WordNode(pos=(566, 586), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(566, 586), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(586, 587), word=';'),
      ReservedwordNode(pos=(588, 590), word='do'),
      ListNode(pos=(593, 653), parts=[
          CommandNode(pos=(593, 652), parts=[
            WordNode(pos=(593, 596), word='gpg'),
            WordNode(pos=(597, 604), word='--batch'),
            WordNode(pos=(605, 616), word='--keyserver'),
            WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(634, 645), word='--recv-keys'),
            WordNode(pos=(646, 652), word='$key', parts=[
              ParameterNode(pos=(647, 651), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(652, 653)),
        ]),
      ReservedwordNode(pos=(655, 659), word='done'),
    ]),
  ], pos=(555, 659)),
  OperatorNode(op=';', pos=(659, 660)),
  CommandNode(pos=(662, 732), parts=[
    WordNode(pos=(662, 665), word='gpg'),
    WordNode(pos=(666, 673), word='--batch'),
    WordNode(pos=(674, 682), word='--verify'),
    WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(732, 733)),
  CommandNode(pos=(735, 753), parts=[
    WordNode(pos=(735, 742), word='gpgconf'),
    WordNode(pos=(743, 749), word='--kill'),
    WordNode(pos=(750, 753), word='all'),
  ]),
  OperatorNode(op=';', pos=(753, 754)),
  CommandNode(pos=(756, 775), parts=[
    WordNode(pos=(756, 758), word='rm'),
    WordNode(pos=(759, 762), word='-rf'),
    WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(764, 774), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(775, 776)),
  PipelineNode(pos=(778, 846), parts=[
    CommandNode(pos=(778, 829), parts=[
      WordNode(pos=(778, 782), word='echo'),
      WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(830, 831)),
    CommandNode(pos=(832, 846), parts=[
      WordNode(pos=(832, 841), word='sha256sum'),
      WordNode(pos=(842, 844), word='-c'),
      WordNode(pos=(845, 846), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(846, 847)),
  CommandNode(pos=(849, 873), parts=[
    WordNode(pos=(849, 854), word='mkdir'),
    WordNode(pos=(855, 857), word='-p'),
    WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(873, 874)),
  CommandNode(pos=(876, 968), parts=[
    WordNode(pos=(876, 879), word='tar'),
    WordNode(pos=(880, 889), word='--extract'),
    WordNode(pos=(890, 896), word='--file'),
    WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(920, 931), word='--directory'),
    WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(948, 966), word='--strip-components'),
    WordNode(pos=(967, 968), word='1'),
  ]),
  OperatorNode(op=';', pos=(968, 969)),
  CommandNode(pos=(972, 990), parts=[
    WordNode(pos=(972, 974), word='cd'),
    WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(990, 991)),
  CommandNode(pos=(993, 1142), parts=[
    AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1004, 1047), parts=[
          WordNode(pos=(1004, 1021), word='dpkg-architecture'),
          WordNode(pos=(1022, 1029), word='--query'),
          WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1002, 1048)),
    ]),
    AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
    WordNode(pos=(1099, 1107), word='./config'),
    WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1142, 1143)),
  CommandNode(pos=(1145, 1183), parts=[
    WordNode(pos=(1145, 1149), word='make'),
    WordNode(pos=(1150, 1152), word='-j'),
    WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1156, 1181), parts=[
          WordNode(pos=(1156, 1163), word='getconf'),
          WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
        ]), pos=(1154, 1182)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1183, 1184)),
  CommandNode(pos=(1186, 1217), parts=[
    WordNode(pos=(1186, 1190), word='make'),
    WordNode(pos=(1191, 1201), word='install_sw'),
    WordNode(pos=(1202, 1217), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1217, 1218)),
  CommandNode(pos=(1220, 1225), parts=[
    WordNode(pos=(1220, 1222), word='cd'),
    WordNode(pos=(1223, 1225), word='..'),
  ]),
  OperatorNode(op=';', pos=(1225, 1226)),
  CommandNode(pos=(1228, 1251), parts=[
    WordNode(pos=(1228, 1230), word='rm'),
    WordNode(pos=(1231, 1234), word='-rf'),
    WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1251, 1252)),
  CommandNode(pos=(1254, 1317), parts=[
    WordNode(pos=(1254, 1259), word='rmdir'),
    WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1317, 1318)),
  CommandNode(pos=(1320, 1380), parts=[
    WordNode(pos=(1320, 1322), word='ln'),
    WordNode(pos=(1323, 1326), word='-sf'),
    WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
    WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
    WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1380, 1381)),
  CommandNode(pos=(1383, 1398), parts=[
    WordNode(pos=(1383, 1390), word='openssl'),
    WordNode(pos=(1391, 1398), word='version'),
  ]),
  OperatorNode(op=';', pos=(1398, 1399)),
  CommandNode(pos=(1402, 1480), parts=[
    AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1480, 1481)),
  CommandNode(pos=(1483, 1525), parts=[
    AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1525, 1526)),
  CommandNode(pos=(1529, 1549), parts=[
    WordNode(pos=(1529, 1534), word='mkdir'),
    WordNode(pos=(1535, 1537), word='-p'),
    WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1549, 1550)),
  CommandNode(pos=(1552, 1611), parts=[
    WordNode(pos=(1552, 1556), word='wget'),
    WordNode(pos=(1557, 1574), word='--output-document'),
    WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
    ]),
    WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1611, 1612)),
  PipelineNode(pos=(1614, 1674), parts=[
    CommandNode(pos=(1614, 1657), parts=[
      WordNode(pos=(1614, 1618), word='echo'),
      WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1658, 1659)),
    CommandNode(pos=(1660, 1674), parts=[
      WordNode(pos=(1660, 1669), word='sha256sum'),
      WordNode(pos=(1670, 1672), word='-c'),
      WordNode(pos=(1673, 1674), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1674, 1675)),
  CommandNode(pos=(1677, 1761), parts=[
    WordNode(pos=(1677, 1680), word='tar'),
    WordNode(pos=(1681, 1690), word='--extract'),
    WordNode(pos=(1691, 1697), word='--file'),
    WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
    ]),
    WordNode(pos=(1717, 1728), word='--directory'),
    WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
    ]),
    WordNode(pos=(1741, 1759), word='--strip-components'),
    WordNode(pos=(1760, 1761), word='1'),
  ]),
  OperatorNode(op=';', pos=(1761, 1762)),
  CommandNode(pos=(1765, 1779), parts=[
    WordNode(pos=(1765, 1767), word='cd'),
    WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1779, 1780)),
  CommandNode(pos=(1782, 1808), parts=[
    WordNode(pos=(1782, 1788), word='export'),
    WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1808, 1809)),
  CommandNode(pos=(1811, 1831), parts=[
    WordNode(pos=(1811, 1822), word='./otp_build'),
    WordNode(pos=(1823, 1831), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(1831, 1832)),
  CommandNode(pos=(1834, 1874), parts=[
    AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1844, 1872), parts=[
          WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
          WordNode(pos=(1860, 1865), word='--get'),
          WordNode(pos=(1866, 1872), word='CFLAGS'),
        ]), pos=(1842, 1873)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1874, 1875)),
  CommandNode(pos=(1876, 1889), parts=[
    WordNode(pos=(1876, 1882), word='export'),
    WordNode(pos=(1883, 1889), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(1889, 1890)),
  CommandNode(pos=(1892, 1949), parts=[
    AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1904, 1947), parts=[
          WordNode(pos=(1904, 1921), word='dpkg-architecture'),
          WordNode(pos=(1922, 1929), word='--query'),
          WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(1902, 1948)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1949, 1950)),
  CommandNode(pos=(1952, 2011), parts=[
    AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1965, 2009), parts=[
          WordNode(pos=(1965, 1982), word='dpkg-architecture'),
          WordNode(pos=(1983, 1990), word='--query'),
          WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1963, 2010)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2011, 2012)),
  CommandNode(pos=(2014, 2053), parts=[
    AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2026, 2051), parts=[
          WordNode(pos=(2026, 2030), word='dpkg'),
          WordNode(pos=(2031, 2051), word='--print-architecture'),
        ]), pos=(2024, 2052)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2053, 2054)),
  CommandNode(pos=(2055, 2081), parts=[
    AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2081, 2082)),
  CommandNode(pos=(2084, 2766), parts=[
    WordNode(pos=(2084, 2095), word='./configure'),
    WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2106, 2115), value='hostArch'),
    ]),
    WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2128, 2138), value='buildArch'),
    ]),
    WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2170, 2184), word='--disable-hipe'),
    WordNode(pos=(2187, 2201), word='--disable-sctp'),
    WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
    WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
    WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
    WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
    WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
    WordNode(pos=(2323, 2343), word='--enable-smp-support'),
    WordNode(pos=(2346, 2362), word='--enable-threads'),
    WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2402, 2423), word='--without-common_test'),
    WordNode(pos=(2426, 2444), word='--without-debugger'),
    WordNode(pos=(2447, 2465), word='--without-dialyzer'),
    WordNode(pos=(2468, 2486), word='--without-diameter'),
    WordNode(pos=(2489, 2503), word='--without-edoc'),
    WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
    WordNode(pos=(2529, 2552), word='--without-erl_interface'),
    WordNode(pos=(2555, 2567), word='--without-et'),
    WordNode(pos=(2570, 2585), word='--without-eunit'),
    WordNode(pos=(2588, 2601), word='--without-ftp'),
    WordNode(pos=(2604, 2618), word='--without-hipe'),
    WordNode(pos=(2621, 2641), word='--without-jinterface'),
    WordNode(pos=(2644, 2660), word='--without-megaco'),
    WordNode(pos=(2663, 2681), word='--without-observer'),
    WordNode(pos=(2684, 2698), word='--without-odbc'),
    WordNode(pos=(2701, 2718), word='--without-reltool'),
    WordNode(pos=(2721, 2734), word='--without-ssh'),
    WordNode(pos=(2737, 2751), word='--without-tftp'),
    WordNode(pos=(2754, 2766), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(2768, 2769)),
  CommandNode(pos=(2771, 2849), parts=[
    WordNode(pos=(2771, 2775), word='make'),
    WordNode(pos=(2776, 2778), word='-j'),
    WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2782, 2807), parts=[
          WordNode(pos=(2782, 2789), word='getconf'),
          WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
        ]), pos=(2780, 2808)),
    ]),
    WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(2849, 2850)),
  CommandNode(pos=(2852, 2864), parts=[
    WordNode(pos=(2852, 2856), word='make'),
    WordNode(pos=(2857, 2864), word='install'),
  ]),
  OperatorNode(op=';', pos=(2864, 2865)),
  CommandNode(pos=(2867, 2872), parts=[
    WordNode(pos=(2867, 2869), word='cd'),
    WordNode(pos=(2870, 2872), word='..'),
  ]),
  OperatorNode(op=';', pos=(2872, 2873)),
  CommandNode(pos=(2875, 2969), parts=[
    WordNode(pos=(2875, 2877), word='rm'),
    WordNode(pos=(2878, 2881), word='-rf'),
    WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
    ]),
    WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(2971, 2972)),
  CommandNode(pos=(2975, 3172), parts=[
    AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2989, 3168), parts=[
          CommandNode(pos=(2989, 3055), parts=[
            WordNode(pos=(2989, 2996), word='scanelf'),
            WordNode(pos=(2997, 3005), word='--needed'),
            WordNode(pos=(3006, 3016), word='--nobanner'),
            WordNode(pos=(3017, 3025), word='--format'),
            WordNode(pos=(3026, 3032), word='%n#p'),
            WordNode(pos=(3033, 3044), word='--recursive'),
            WordNode(pos=(3045, 3055), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(3059, 3060)),
          CommandNode(pos=(3061, 3072), parts=[
            WordNode(pos=(3061, 3063), word='tr'),
            WordNode(pos=(3064, 3067), word=','),
            WordNode(pos=(3068, 3072), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(3076, 3077)),
          CommandNode(pos=(3078, 3085), parts=[
            WordNode(pos=(3078, 3082), word='sort'),
            WordNode(pos=(3083, 3085), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(3089, 3090)),
          CommandNode(pos=(3091, 3168), parts=[
            WordNode(pos=(3091, 3094), word='awk'),
            WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2984, 3169)),
    ]),
  ]),
  OperatorNode(op=';', pos=(3172, 3173)),
  CommandNode(pos=(3175, 3226), parts=[
    WordNode(pos=(3175, 3178), word='apk'),
    WordNode(pos=(3179, 3182), word='add'),
    WordNode(pos=(3183, 3193), word='--no-cache'),
    WordNode(pos=(3194, 3203), word='--virtual'),
    WordNode(pos=(3204, 3217), word='.otp-run-deps'),
    WordNode(pos=(3218, 3226), word='$runDeps', parts=[
      ParameterNode(pos=(3218, 3226), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3226, 3227)),
  CommandNode(pos=(3229, 3261), parts=[
    WordNode(pos=(3229, 3232), word='apk'),
    WordNode(pos=(3233, 3236), word='del'),
    WordNode(pos=(3237, 3249), word='--no-network'),
    WordNode(pos=(3250, 3261), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(3261, 3262)),
  CommandNode(pos=(3265, 3280), parts=[
    WordNode(pos=(3265, 3272), word='openssl'),
    WordNode(pos=(3273, 3280), word='version'),
  ]),
  OperatorNode(op=';', pos=(3280, 3281)),
  CommandNode(pos=(3283, 3380), parts=[
    WordNode(pos=(3283, 3286), word='erl'),
    WordNode(pos=(3287, 3295), word='-noshell'),
    WordNode(pos=(3296, 3301), word='-eval'),
    WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


128) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


129) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


130) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


131) set -eux;   apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev  ;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   mkdir /usr/local/src;   wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum -c -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum -c -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --no-cache --virtual .otp-run-deps $runDeps;  apk del --no-network .build-deps;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3380), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 159), parts=[
    WordNode(pos=(12, 15), word='apk'),
    WordNode(pos=(16, 19), word='add'),
    WordNode(pos=(20, 30), word='--no-cache'),
    WordNode(pos=(31, 40), word='--virtual'),
    WordNode(pos=(41, 52), word='.build-deps'),
    WordNode(pos=(55, 63), word='autoconf'),
    WordNode(pos=(66, 81), word='ca-certificates'),
    WordNode(pos=(84, 92), word='dpkg-dev'),
    WordNode(pos=(93, 97), word='dpkg'),
    WordNode(pos=(100, 103), word='gcc'),
    WordNode(pos=(106, 111), word='gnupg'),
    WordNode(pos=(114, 122), word='libc-dev'),
    WordNode(pos=(125, 138), word='linux-headers'),
    WordNode(pos=(141, 145), word='make'),
    WordNode(pos=(148, 159), word='ncurses-dev'),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CommandNode(pos=(165, 248), parts=[
    AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(248, 249)),
  CommandNode(pos=(251, 305), parts=[
    AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(305, 306)),
  CommandNode(pos=(308, 345), parts=[
    AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(345, 346)),
  CommandNode(pos=(349, 369), parts=[
    WordNode(pos=(349, 354), word='mkdir'),
    WordNode(pos=(355, 369), word='/usr/local/src'),
  ]),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 448), parts=[
    WordNode(pos=(373, 377), word='wget'),
    WordNode(pos=(378, 395), word='--output-document'),
    WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(448, 449)),
  CommandNode(pos=(451, 518), parts=[
    WordNode(pos=(451, 455), word='wget'),
    WordNode(pos=(456, 473), word='--output-document'),
    WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(518, 519)),
  CommandNode(pos=(521, 552), parts=[
    WordNode(pos=(521, 527), word='export'),
    WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(541, 550), parts=[
          WordNode(pos=(541, 547), word='mktemp'),
          WordNode(pos=(548, 550), word='-d'),
        ]), pos=(539, 551)),
    ]),
  ]),
  OperatorNode(op=';', pos=(552, 553)),
  CompoundNode(list=[
    ForNode(pos=(555, 659), parts=[
      ReservedwordNode(pos=(555, 558), word='for'),
      WordNode(pos=(559, 562), word='key'),
      ReservedwordNode(pos=(563, 565), word='in'),
      WordNode(pos=(566, 586), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(566, 586), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(586, 587), word=';'),
      ReservedwordNode(pos=(588, 590), word='do'),
      ListNode(pos=(593, 653), parts=[
          CommandNode(pos=(593, 652), parts=[
            WordNode(pos=(593, 596), word='gpg'),
            WordNode(pos=(597, 604), word='--batch'),
            WordNode(pos=(605, 616), word='--keyserver'),
            WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(634, 645), word='--recv-keys'),
            WordNode(pos=(646, 652), word='$key', parts=[
              ParameterNode(pos=(647, 651), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(652, 653)),
        ]),
      ReservedwordNode(pos=(655, 659), word='done'),
    ]),
  ], pos=(555, 659)),
  OperatorNode(op=';', pos=(659, 660)),
  CommandNode(pos=(662, 732), parts=[
    WordNode(pos=(662, 665), word='gpg'),
    WordNode(pos=(666, 673), word='--batch'),
    WordNode(pos=(674, 682), word='--verify'),
    WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(732, 733)),
  CommandNode(pos=(735, 753), parts=[
    WordNode(pos=(735, 742), word='gpgconf'),
    WordNode(pos=(743, 749), word='--kill'),
    WordNode(pos=(750, 753), word='all'),
  ]),
  OperatorNode(op=';', pos=(753, 754)),
  CommandNode(pos=(756, 775), parts=[
    WordNode(pos=(756, 758), word='rm'),
    WordNode(pos=(759, 762), word='-rf'),
    WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(764, 774), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(775, 776)),
  PipelineNode(pos=(778, 846), parts=[
    CommandNode(pos=(778, 829), parts=[
      WordNode(pos=(778, 782), word='echo'),
      WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(830, 831)),
    CommandNode(pos=(832, 846), parts=[
      WordNode(pos=(832, 841), word='sha256sum'),
      WordNode(pos=(842, 844), word='-c'),
      WordNode(pos=(845, 846), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(846, 847)),
  CommandNode(pos=(849, 873), parts=[
    WordNode(pos=(849, 854), word='mkdir'),
    WordNode(pos=(855, 857), word='-p'),
    WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(873, 874)),
  CommandNode(pos=(876, 968), parts=[
    WordNode(pos=(876, 879), word='tar'),
    WordNode(pos=(880, 889), word='--extract'),
    WordNode(pos=(890, 896), word='--file'),
    WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(920, 931), word='--directory'),
    WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(948, 966), word='--strip-components'),
    WordNode(pos=(967, 968), word='1'),
  ]),
  OperatorNode(op=';', pos=(968, 969)),
  CommandNode(pos=(972, 990), parts=[
    WordNode(pos=(972, 974), word='cd'),
    WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(990, 991)),
  CommandNode(pos=(993, 1142), parts=[
    AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1004, 1047), parts=[
          WordNode(pos=(1004, 1021), word='dpkg-architecture'),
          WordNode(pos=(1022, 1029), word='--query'),
          WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1002, 1048)),
    ]),
    AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
    WordNode(pos=(1099, 1107), word='./config'),
    WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1142, 1143)),
  CommandNode(pos=(1145, 1183), parts=[
    WordNode(pos=(1145, 1149), word='make'),
    WordNode(pos=(1150, 1152), word='-j'),
    WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1156, 1181), parts=[
          WordNode(pos=(1156, 1163), word='getconf'),
          WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
        ]), pos=(1154, 1182)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1183, 1184)),
  CommandNode(pos=(1186, 1217), parts=[
    WordNode(pos=(1186, 1190), word='make'),
    WordNode(pos=(1191, 1201), word='install_sw'),
    WordNode(pos=(1202, 1217), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1217, 1218)),
  CommandNode(pos=(1220, 1225), parts=[
    WordNode(pos=(1220, 1222), word='cd'),
    WordNode(pos=(1223, 1225), word='..'),
  ]),
  OperatorNode(op=';', pos=(1225, 1226)),
  CommandNode(pos=(1228, 1251), parts=[
    WordNode(pos=(1228, 1230), word='rm'),
    WordNode(pos=(1231, 1234), word='-rf'),
    WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1251, 1252)),
  CommandNode(pos=(1254, 1317), parts=[
    WordNode(pos=(1254, 1259), word='rmdir'),
    WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1317, 1318)),
  CommandNode(pos=(1320, 1380), parts=[
    WordNode(pos=(1320, 1322), word='ln'),
    WordNode(pos=(1323, 1326), word='-sf'),
    WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
    WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
    WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1380, 1381)),
  CommandNode(pos=(1383, 1398), parts=[
    WordNode(pos=(1383, 1390), word='openssl'),
    WordNode(pos=(1391, 1398), word='version'),
  ]),
  OperatorNode(op=';', pos=(1398, 1399)),
  CommandNode(pos=(1402, 1480), parts=[
    AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1480, 1481)),
  CommandNode(pos=(1483, 1525), parts=[
    AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1525, 1526)),
  CommandNode(pos=(1529, 1549), parts=[
    WordNode(pos=(1529, 1534), word='mkdir'),
    WordNode(pos=(1535, 1537), word='-p'),
    WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1549, 1550)),
  CommandNode(pos=(1552, 1611), parts=[
    WordNode(pos=(1552, 1556), word='wget'),
    WordNode(pos=(1557, 1574), word='--output-document'),
    WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
    ]),
    WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1611, 1612)),
  PipelineNode(pos=(1614, 1674), parts=[
    CommandNode(pos=(1614, 1657), parts=[
      WordNode(pos=(1614, 1618), word='echo'),
      WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1658, 1659)),
    CommandNode(pos=(1660, 1674), parts=[
      WordNode(pos=(1660, 1669), word='sha256sum'),
      WordNode(pos=(1670, 1672), word='-c'),
      WordNode(pos=(1673, 1674), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1674, 1675)),
  CommandNode(pos=(1677, 1761), parts=[
    WordNode(pos=(1677, 1680), word='tar'),
    WordNode(pos=(1681, 1690), word='--extract'),
    WordNode(pos=(1691, 1697), word='--file'),
    WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
    ]),
    WordNode(pos=(1717, 1728), word='--directory'),
    WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
    ]),
    WordNode(pos=(1741, 1759), word='--strip-components'),
    WordNode(pos=(1760, 1761), word='1'),
  ]),
  OperatorNode(op=';', pos=(1761, 1762)),
  CommandNode(pos=(1765, 1779), parts=[
    WordNode(pos=(1765, 1767), word='cd'),
    WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1779, 1780)),
  CommandNode(pos=(1782, 1808), parts=[
    WordNode(pos=(1782, 1788), word='export'),
    WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1808, 1809)),
  CommandNode(pos=(1811, 1831), parts=[
    WordNode(pos=(1811, 1822), word='./otp_build'),
    WordNode(pos=(1823, 1831), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(1831, 1832)),
  CommandNode(pos=(1834, 1874), parts=[
    AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1844, 1872), parts=[
          WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
          WordNode(pos=(1860, 1865), word='--get'),
          WordNode(pos=(1866, 1872), word='CFLAGS'),
        ]), pos=(1842, 1873)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1874, 1875)),
  CommandNode(pos=(1876, 1889), parts=[
    WordNode(pos=(1876, 1882), word='export'),
    WordNode(pos=(1883, 1889), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(1889, 1890)),
  CommandNode(pos=(1892, 1949), parts=[
    AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1904, 1947), parts=[
          WordNode(pos=(1904, 1921), word='dpkg-architecture'),
          WordNode(pos=(1922, 1929), word='--query'),
          WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(1902, 1948)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1949, 1950)),
  CommandNode(pos=(1952, 2011), parts=[
    AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1965, 2009), parts=[
          WordNode(pos=(1965, 1982), word='dpkg-architecture'),
          WordNode(pos=(1983, 1990), word='--query'),
          WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1963, 2010)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2011, 2012)),
  CommandNode(pos=(2014, 2053), parts=[
    AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2026, 2051), parts=[
          WordNode(pos=(2026, 2030), word='dpkg'),
          WordNode(pos=(2031, 2051), word='--print-architecture'),
        ]), pos=(2024, 2052)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2053, 2054)),
  CommandNode(pos=(2055, 2081), parts=[
    AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2081, 2082)),
  CommandNode(pos=(2084, 2766), parts=[
    WordNode(pos=(2084, 2095), word='./configure'),
    WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2106, 2115), value='hostArch'),
    ]),
    WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2128, 2138), value='buildArch'),
    ]),
    WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2170, 2184), word='--disable-hipe'),
    WordNode(pos=(2187, 2201), word='--disable-sctp'),
    WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
    WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
    WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
    WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
    WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
    WordNode(pos=(2323, 2343), word='--enable-smp-support'),
    WordNode(pos=(2346, 2362), word='--enable-threads'),
    WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2402, 2423), word='--without-common_test'),
    WordNode(pos=(2426, 2444), word='--without-debugger'),
    WordNode(pos=(2447, 2465), word='--without-dialyzer'),
    WordNode(pos=(2468, 2486), word='--without-diameter'),
    WordNode(pos=(2489, 2503), word='--without-edoc'),
    WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
    WordNode(pos=(2529, 2552), word='--without-erl_interface'),
    WordNode(pos=(2555, 2567), word='--without-et'),
    WordNode(pos=(2570, 2585), word='--without-eunit'),
    WordNode(pos=(2588, 2601), word='--without-ftp'),
    WordNode(pos=(2604, 2618), word='--without-hipe'),
    WordNode(pos=(2621, 2641), word='--without-jinterface'),
    WordNode(pos=(2644, 2660), word='--without-megaco'),
    WordNode(pos=(2663, 2681), word='--without-observer'),
    WordNode(pos=(2684, 2698), word='--without-odbc'),
    WordNode(pos=(2701, 2718), word='--without-reltool'),
    WordNode(pos=(2721, 2734), word='--without-ssh'),
    WordNode(pos=(2737, 2751), word='--without-tftp'),
    WordNode(pos=(2754, 2766), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(2768, 2769)),
  CommandNode(pos=(2771, 2849), parts=[
    WordNode(pos=(2771, 2775), word='make'),
    WordNode(pos=(2776, 2778), word='-j'),
    WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2782, 2807), parts=[
          WordNode(pos=(2782, 2789), word='getconf'),
          WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
        ]), pos=(2780, 2808)),
    ]),
    WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(2849, 2850)),
  CommandNode(pos=(2852, 2864), parts=[
    WordNode(pos=(2852, 2856), word='make'),
    WordNode(pos=(2857, 2864), word='install'),
  ]),
  OperatorNode(op=';', pos=(2864, 2865)),
  CommandNode(pos=(2867, 2872), parts=[
    WordNode(pos=(2867, 2869), word='cd'),
    WordNode(pos=(2870, 2872), word='..'),
  ]),
  OperatorNode(op=';', pos=(2872, 2873)),
  CommandNode(pos=(2875, 2969), parts=[
    WordNode(pos=(2875, 2877), word='rm'),
    WordNode(pos=(2878, 2881), word='-rf'),
    WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
    ]),
    WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(2971, 2972)),
  CommandNode(pos=(2975, 3172), parts=[
    AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2989, 3168), parts=[
          CommandNode(pos=(2989, 3055), parts=[
            WordNode(pos=(2989, 2996), word='scanelf'),
            WordNode(pos=(2997, 3005), word='--needed'),
            WordNode(pos=(3006, 3016), word='--nobanner'),
            WordNode(pos=(3017, 3025), word='--format'),
            WordNode(pos=(3026, 3032), word='%n#p'),
            WordNode(pos=(3033, 3044), word='--recursive'),
            WordNode(pos=(3045, 3055), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(3059, 3060)),
          CommandNode(pos=(3061, 3072), parts=[
            WordNode(pos=(3061, 3063), word='tr'),
            WordNode(pos=(3064, 3067), word=','),
            WordNode(pos=(3068, 3072), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(3076, 3077)),
          CommandNode(pos=(3078, 3085), parts=[
            WordNode(pos=(3078, 3082), word='sort'),
            WordNode(pos=(3083, 3085), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(3089, 3090)),
          CommandNode(pos=(3091, 3168), parts=[
            WordNode(pos=(3091, 3094), word='awk'),
            WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2984, 3169)),
    ]),
  ]),
  OperatorNode(op=';', pos=(3172, 3173)),
  CommandNode(pos=(3175, 3226), parts=[
    WordNode(pos=(3175, 3178), word='apk'),
    WordNode(pos=(3179, 3182), word='add'),
    WordNode(pos=(3183, 3193), word='--no-cache'),
    WordNode(pos=(3194, 3203), word='--virtual'),
    WordNode(pos=(3204, 3217), word='.otp-run-deps'),
    WordNode(pos=(3218, 3226), word='$runDeps', parts=[
      ParameterNode(pos=(3218, 3226), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3226, 3227)),
  CommandNode(pos=(3229, 3261), parts=[
    WordNode(pos=(3229, 3232), word='apk'),
    WordNode(pos=(3233, 3236), word='del'),
    WordNode(pos=(3237, 3249), word='--no-network'),
    WordNode(pos=(3250, 3261), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(3261, 3262)),
  CommandNode(pos=(3265, 3280), parts=[
    WordNode(pos=(3265, 3272), word='openssl'),
    WordNode(pos=(3273, 3280), word='version'),
  ]),
  OperatorNode(op=';', pos=(3280, 3281)),
  CommandNode(pos=(3283, 3380), parts=[
    WordNode(pos=(3283, 3286), word='erl'),
    WordNode(pos=(3287, 3295), word='-noshell'),
    WordNode(pos=(3296, 3301), word='-eval'),
    WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


132) set -eux;   curl -fL -o /openjdk.tgz "$JAVA_URL";  echo "$JAVA_SHA256 */openjdk.tgz" | sha256sum -c -;  mkdir -p "$JAVA_HOME";  tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1;  rm /openjdk.tgz;   ln -sfT "$JAVA_HOME" /usr/java/default;  ln -sfT "$JAVA_HOME" /usr/java/latest;  for bin in "$JAVA_HOME/bin/"*; do   base="$(basename "$bin")";   [ ! -e "/usr/bin/$base" ];   alternatives --install "/usr/bin/$base" "$base" "$bin" 20000;  done;   java -Xshare:dump;   java --version;  javac --version

ListNode(pos=(0, 528), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 48), parts=[
    WordNode(pos=(12, 16), word='curl'),
    WordNode(pos=(17, 20), word='-fL'),
    WordNode(pos=(21, 23), word='-o'),
    WordNode(pos=(24, 36), word='/openjdk.tgz'),
    WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
      ParameterNode(pos=(38, 47), value='JAVA_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(48, 49)),
  PipelineNode(pos=(51, 101), parts=[
    CommandNode(pos=(51, 84), parts=[
      WordNode(pos=(51, 55), word='echo'),
      WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
        ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(85, 86)),
    CommandNode(pos=(87, 101), parts=[
      WordNode(pos=(87, 96), word='sha256sum'),
      WordNode(pos=(97, 99), word='-c'),
      WordNode(pos=(100, 101), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(101, 102)),
  CommandNode(pos=(104, 125), parts=[
    WordNode(pos=(104, 109), word='mkdir'),
    WordNode(pos=(110, 112), word='-p'),
    WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(114, 124), value='JAVA_HOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 207), parts=[
    WordNode(pos=(128, 131), word='tar'),
    WordNode(pos=(132, 141), word='--extract'),
    WordNode(pos=(142, 148), word='--file'),
    WordNode(pos=(149, 161), word='/openjdk.tgz'),
    WordNode(pos=(162, 173), word='--directory'),
    WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(175, 185), value='JAVA_HOME'),
    ]),
    WordNode(pos=(187, 205), word='--strip-components'),
    WordNode(pos=(206, 207), word='1'),
  ]),
  OperatorNode(op=';', pos=(207, 208)),
  CommandNode(pos=(210, 225), parts=[
    WordNode(pos=(210, 212), word='rm'),
    WordNode(pos=(213, 225), word='/openjdk.tgz'),
  ]),
  OperatorNode(op=';', pos=(225, 226)),
  CommandNode(pos=(229, 267), parts=[
    WordNode(pos=(229, 231), word='ln'),
    WordNode(pos=(232, 236), word='-sfT'),
    WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(238, 248), value='JAVA_HOME'),
    ]),
    WordNode(pos=(250, 267), word='/usr/java/default'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 307), parts=[
    WordNode(pos=(270, 272), word='ln'),
    WordNode(pos=(273, 277), word='-sfT'),
    WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(279, 289), value='JAVA_HOME'),
    ]),
    WordNode(pos=(291, 307), word='/usr/java/latest'),
  ]),
  OperatorNode(op=';', pos=(307, 308)),
  CompoundNode(list=[
    ForNode(pos=(310, 471), parts=[
      ReservedwordNode(pos=(310, 313), word='for'),
      WordNode(pos=(314, 317), word='bin'),
      ReservedwordNode(pos=(318, 320), word='in'),
      WordNode(pos=(321, 339), word='$JAVA_HOME/bin/*', parts=[
        ParameterNode(pos=(322, 332), value='JAVA_HOME'),
      ]),
      ReservedwordNode(pos=(339, 340), word=';'),
      ReservedwordNode(pos=(341, 343), word='do'),
      ListNode(pos=(346, 465), parts=[
          CommandNode(pos=(346, 371), parts=[
            AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(354, 369), parts=[
                  WordNode(pos=(354, 362), word='basename'),
                  WordNode(pos=(363, 369), word='$bin', parts=[
                    ParameterNode(pos=(364, 368), value='bin'),
                  ]),
                ]), pos=(352, 370)),
            ]),
          ]),
          OperatorNode(op=';', pos=(371, 372)),
          CommandNode(pos=(375, 400), parts=[
            WordNode(pos=(375, 376), word='['),
            WordNode(pos=(377, 378), word='!'),
            WordNode(pos=(379, 381), word='-e'),
            WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(392, 397), value='base'),
            ]),
            WordNode(pos=(399, 400), word=']'),
          ]),
          OperatorNode(op=';', pos=(400, 401)),
          CommandNode(pos=(404, 464), parts=[
            WordNode(pos=(404, 416), word='alternatives'),
            WordNode(pos=(417, 426), word='--install'),
            WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(437, 442), value='base'),
            ]),
            WordNode(pos=(444, 451), word='$base', parts=[
              ParameterNode(pos=(445, 450), value='base'),
            ]),
            WordNode(pos=(452, 458), word='$bin', parts=[
              ParameterNode(pos=(453, 457), value='bin'),
            ]),
            WordNode(pos=(459, 464), word='20000'),
          ]),
          OperatorNode(op=';', pos=(464, 465)),
        ]),
      ReservedwordNode(pos=(467, 471), word='done'),
    ]),
  ], pos=(310, 471)),
  OperatorNode(op=';', pos=(471, 472)),
  CommandNode(pos=(475, 492), parts=[
    WordNode(pos=(475, 479), word='java'),
    WordNode(pos=(480, 492), word='-Xshare:dump'),
  ]),
  OperatorNode(op=';', pos=(492, 493)),
  CommandNode(pos=(496, 510), parts=[
    WordNode(pos=(496, 500), word='java'),
    WordNode(pos=(501, 510), word='--version'),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 528), parts=[
    WordNode(pos=(513, 518), word='javac'),
    WordNode(pos=(519, 528), word='--version'),
  ]),
])


133) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


134) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


135) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


136) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


137) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


138) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


139) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


140) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


141) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


142) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


143) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


144) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


145) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


146) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


147) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


148) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


149) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


150) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


151) set -eux;   curl -fL -o /openjdk.tgz "$JAVA_URL";  echo "$JAVA_SHA256 */openjdk.tgz" | sha256sum -c -;  mkdir -p "$JAVA_HOME";  tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1;  rm /openjdk.tgz;   ln -sfT "$JAVA_HOME" /usr/java/default;  ln -sfT "$JAVA_HOME" /usr/java/latest;  for bin in "$JAVA_HOME/bin/"*; do   base="$(basename "$bin")";   [ ! -e "/usr/bin/$base" ];   alternatives --install "/usr/bin/$base" "$base" "$bin" 20000;  done;   java -Xshare:dump;   java --version;  javac --version

ListNode(pos=(0, 528), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 48), parts=[
    WordNode(pos=(12, 16), word='curl'),
    WordNode(pos=(17, 20), word='-fL'),
    WordNode(pos=(21, 23), word='-o'),
    WordNode(pos=(24, 36), word='/openjdk.tgz'),
    WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
      ParameterNode(pos=(38, 47), value='JAVA_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(48, 49)),
  PipelineNode(pos=(51, 101), parts=[
    CommandNode(pos=(51, 84), parts=[
      WordNode(pos=(51, 55), word='echo'),
      WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
        ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(85, 86)),
    CommandNode(pos=(87, 101), parts=[
      WordNode(pos=(87, 96), word='sha256sum'),
      WordNode(pos=(97, 99), word='-c'),
      WordNode(pos=(100, 101), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(101, 102)),
  CommandNode(pos=(104, 125), parts=[
    WordNode(pos=(104, 109), word='mkdir'),
    WordNode(pos=(110, 112), word='-p'),
    WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(114, 124), value='JAVA_HOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 207), parts=[
    WordNode(pos=(128, 131), word='tar'),
    WordNode(pos=(132, 141), word='--extract'),
    WordNode(pos=(142, 148), word='--file'),
    WordNode(pos=(149, 161), word='/openjdk.tgz'),
    WordNode(pos=(162, 173), word='--directory'),
    WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(175, 185), value='JAVA_HOME'),
    ]),
    WordNode(pos=(187, 205), word='--strip-components'),
    WordNode(pos=(206, 207), word='1'),
  ]),
  OperatorNode(op=';', pos=(207, 208)),
  CommandNode(pos=(210, 225), parts=[
    WordNode(pos=(210, 212), word='rm'),
    WordNode(pos=(213, 225), word='/openjdk.tgz'),
  ]),
  OperatorNode(op=';', pos=(225, 226)),
  CommandNode(pos=(229, 267), parts=[
    WordNode(pos=(229, 231), word='ln'),
    WordNode(pos=(232, 236), word='-sfT'),
    WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(238, 248), value='JAVA_HOME'),
    ]),
    WordNode(pos=(250, 267), word='/usr/java/default'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 307), parts=[
    WordNode(pos=(270, 272), word='ln'),
    WordNode(pos=(273, 277), word='-sfT'),
    WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(279, 289), value='JAVA_HOME'),
    ]),
    WordNode(pos=(291, 307), word='/usr/java/latest'),
  ]),
  OperatorNode(op=';', pos=(307, 308)),
  CompoundNode(list=[
    ForNode(pos=(310, 471), parts=[
      ReservedwordNode(pos=(310, 313), word='for'),
      WordNode(pos=(314, 317), word='bin'),
      ReservedwordNode(pos=(318, 320), word='in'),
      WordNode(pos=(321, 339), word='$JAVA_HOME/bin/*', parts=[
        ParameterNode(pos=(322, 332), value='JAVA_HOME'),
      ]),
      ReservedwordNode(pos=(339, 340), word=';'),
      ReservedwordNode(pos=(341, 343), word='do'),
      ListNode(pos=(346, 465), parts=[
          CommandNode(pos=(346, 371), parts=[
            AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(354, 369), parts=[
                  WordNode(pos=(354, 362), word='basename'),
                  WordNode(pos=(363, 369), word='$bin', parts=[
                    ParameterNode(pos=(364, 368), value='bin'),
                  ]),
                ]), pos=(352, 370)),
            ]),
          ]),
          OperatorNode(op=';', pos=(371, 372)),
          CommandNode(pos=(375, 400), parts=[
            WordNode(pos=(375, 376), word='['),
            WordNode(pos=(377, 378), word='!'),
            WordNode(pos=(379, 381), word='-e'),
            WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(392, 397), value='base'),
            ]),
            WordNode(pos=(399, 400), word=']'),
          ]),
          OperatorNode(op=';', pos=(400, 401)),
          CommandNode(pos=(404, 464), parts=[
            WordNode(pos=(404, 416), word='alternatives'),
            WordNode(pos=(417, 426), word='--install'),
            WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(437, 442), value='base'),
            ]),
            WordNode(pos=(444, 451), word='$base', parts=[
              ParameterNode(pos=(445, 450), value='base'),
            ]),
            WordNode(pos=(452, 458), word='$bin', parts=[
              ParameterNode(pos=(453, 457), value='bin'),
            ]),
            WordNode(pos=(459, 464), word='20000'),
          ]),
          OperatorNode(op=';', pos=(464, 465)),
        ]),
      ReservedwordNode(pos=(467, 471), word='done'),
    ]),
  ], pos=(310, 471)),
  OperatorNode(op=';', pos=(471, 472)),
  CommandNode(pos=(475, 492), parts=[
    WordNode(pos=(475, 479), word='java'),
    WordNode(pos=(480, 492), word='-Xshare:dump'),
  ]),
  OperatorNode(op=';', pos=(492, 493)),
  CommandNode(pos=(496, 510), parts=[
    WordNode(pos=(496, 500), word='java'),
    WordNode(pos=(501, 510), word='--version'),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 528), parts=[
    WordNode(pos=(513, 518), word='javac'),
    WordNode(pos=(519, 528), word='--version'),
  ]),
])


152) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


153) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


154) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


155) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


156) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


157) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


158) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


159) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget  ;  rm -rf /var/lib/apt/lists/*;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum --check --strict -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf;  ldconfig;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum --check --strict -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3761), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 200), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 90), word='--yes'),
    WordNode(pos=(91, 114), word='--no-install-recommends'),
    WordNode(pos=(117, 125), word='autoconf'),
    WordNode(pos=(128, 143), word='ca-certificates'),
    WordNode(pos=(146, 154), word='dpkg-dev'),
    WordNode(pos=(157, 160), word='gcc'),
    WordNode(pos=(163, 168), word='gnupg'),
    WordNode(pos=(171, 186), word='libncurses5-dev'),
    WordNode(pos=(189, 193), word='make'),
    WordNode(pos=(196, 200), word='wget'),
  ]),
  OperatorNode(op=';', pos=(202, 203)),
  CommandNode(pos=(205, 232), parts=[
    WordNode(pos=(205, 207), word='rm'),
    WordNode(pos=(208, 211), word='-rf'),
    WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(232, 233)),
  CommandNode(pos=(236, 319), parts=[
    AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(319, 320)),
  CommandNode(pos=(322, 376), parts=[
    AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(376, 377)),
  CommandNode(pos=(379, 416), parts=[
    AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(416, 417)),
  CommandNode(pos=(420, 515), parts=[
    WordNode(pos=(420, 424), word='wget'),
    WordNode(pos=(425, 435), word='--progress'),
    WordNode(pos=(436, 444), word='dot:giga'),
    WordNode(pos=(445, 462), word='--output-document'),
    WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(515, 516)),
  CommandNode(pos=(518, 605), parts=[
    WordNode(pos=(518, 522), word='wget'),
    WordNode(pos=(523, 533), word='--progress'),
    WordNode(pos=(534, 542), word='dot:giga'),
    WordNode(pos=(543, 560), word='--output-document'),
    WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(605, 606)),
  CommandNode(pos=(608, 639), parts=[
    WordNode(pos=(608, 614), word='export'),
    WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(628, 637), parts=[
          WordNode(pos=(628, 634), word='mktemp'),
          WordNode(pos=(635, 637), word='-d'),
        ]), pos=(626, 638)),
    ]),
  ]),
  OperatorNode(op=';', pos=(639, 640)),
  CompoundNode(list=[
    ForNode(pos=(642, 746), parts=[
      ReservedwordNode(pos=(642, 645), word='for'),
      WordNode(pos=(646, 649), word='key'),
      ReservedwordNode(pos=(650, 652), word='in'),
      WordNode(pos=(653, 673), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(653, 673), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(673, 674), word=';'),
      ReservedwordNode(pos=(675, 677), word='do'),
      ListNode(pos=(680, 740), parts=[
          CommandNode(pos=(680, 739), parts=[
            WordNode(pos=(680, 683), word='gpg'),
            WordNode(pos=(684, 691), word='--batch'),
            WordNode(pos=(692, 703), word='--keyserver'),
            WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(721, 732), word='--recv-keys'),
            WordNode(pos=(733, 739), word='$key', parts=[
              ParameterNode(pos=(734, 738), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(739, 740)),
        ]),
      ReservedwordNode(pos=(742, 746), word='done'),
    ]),
  ], pos=(642, 746)),
  OperatorNode(op=';', pos=(746, 747)),
  CommandNode(pos=(749, 819), parts=[
    WordNode(pos=(749, 752), word='gpg'),
    WordNode(pos=(753, 760), word='--batch'),
    WordNode(pos=(761, 769), word='--verify'),
    WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(819, 820)),
  CommandNode(pos=(822, 840), parts=[
    WordNode(pos=(822, 829), word='gpgconf'),
    WordNode(pos=(830, 836), word='--kill'),
    WordNode(pos=(837, 840), word='all'),
  ]),
  OperatorNode(op=';', pos=(840, 841)),
  CommandNode(pos=(843, 862), parts=[
    WordNode(pos=(843, 845), word='rm'),
    WordNode(pos=(846, 849), word='-rf'),
    WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(851, 861), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(862, 863)),
  PipelineNode(pos=(865, 947), parts=[
    CommandNode(pos=(865, 916), parts=[
      WordNode(pos=(865, 869), word='echo'),
      WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(917, 918)),
    CommandNode(pos=(919, 947), parts=[
      WordNode(pos=(919, 928), word='sha256sum'),
      WordNode(pos=(929, 936), word='--check'),
      WordNode(pos=(937, 945), word='--strict'),
      WordNode(pos=(946, 947), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(947, 948)),
  CommandNode(pos=(950, 974), parts=[
    WordNode(pos=(950, 955), word='mkdir'),
    WordNode(pos=(956, 958), word='-p'),
    WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(977, 1069), parts=[
    WordNode(pos=(977, 980), word='tar'),
    WordNode(pos=(981, 990), word='--extract'),
    WordNode(pos=(991, 997), word='--file'),
    WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1021, 1032), word='--directory'),
    WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1049, 1067), word='--strip-components'),
    WordNode(pos=(1068, 1069), word='1'),
  ]),
  OperatorNode(op=';', pos=(1069, 1070)),
  CommandNode(pos=(1073, 1091), parts=[
    WordNode(pos=(1073, 1075), word='cd'),
    WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1091, 1092)),
  CommandNode(pos=(1094, 1156), parts=[
    AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1110, 1154), parts=[
          WordNode(pos=(1110, 1127), word='dpkg-architecture'),
          WordNode(pos=(1128, 1135), word='--query'),
          WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
        ]), pos=(1108, 1155)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1156, 1157)),
  CommandNode(pos=(1159, 1337), parts=[
    AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1170, 1213), parts=[
          WordNode(pos=(1170, 1187), word='dpkg-architecture'),
          WordNode(pos=(1188, 1195), word='--query'),
          WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1168, 1214)),
    ]),
    AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
    WordNode(pos=(1265, 1273), word='./config'),
    WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
      ParameterNode(pos=(1323, 1336), value='debMultiarch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1337, 1338)),
  CommandNode(pos=(1340, 1378), parts=[
    WordNode(pos=(1340, 1344), word='make'),
    WordNode(pos=(1345, 1347), word='-j'),
    WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1351, 1376), parts=[
          WordNode(pos=(1351, 1358), word='getconf'),
          WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
        ]), pos=(1349, 1377)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1378, 1379)),
  CommandNode(pos=(1381, 1412), parts=[
    WordNode(pos=(1381, 1385), word='make'),
    WordNode(pos=(1386, 1396), word='install_sw'),
    WordNode(pos=(1397, 1412), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1412, 1413)),
  CommandNode(pos=(1415, 1420), parts=[
    WordNode(pos=(1415, 1417), word='cd'),
    WordNode(pos=(1418, 1420), word='..'),
  ]),
  OperatorNode(op=';', pos=(1420, 1421)),
  CommandNode(pos=(1423, 1446), parts=[
    WordNode(pos=(1423, 1425), word='rm'),
    WordNode(pos=(1426, 1429), word='-rf'),
    WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1446, 1447)),
  CommandNode(pos=(1449, 1512), parts=[
    WordNode(pos=(1449, 1453), word='echo'),
    WordNode(pos=(1454, 1470), word='/usr/local/lib'),
    RedirectNode(output=
      WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
  ]),
  OperatorNode(op=';', pos=(1512, 1513)),
  CommandNode(pos=(1515, 1523), parts=[
    WordNode(pos=(1515, 1523), word='ldconfig'),
  ]),
  OperatorNode(op=';', pos=(1523, 1524)),
  CommandNode(pos=(1526, 1589), parts=[
    WordNode(pos=(1526, 1531), word='rmdir'),
    WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1589, 1590)),
  CommandNode(pos=(1592, 1652), parts=[
    WordNode(pos=(1592, 1594), word='ln'),
    WordNode(pos=(1595, 1598), word='-sf'),
    WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
    WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
    WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1652, 1653)),
  CommandNode(pos=(1655, 1670), parts=[
    WordNode(pos=(1655, 1662), word='openssl'),
    WordNode(pos=(1663, 1670), word='version'),
  ]),
  OperatorNode(op=';', pos=(1670, 1671)),
  CommandNode(pos=(1674, 1752), parts=[
    AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1752, 1753)),
  CommandNode(pos=(1755, 1797), parts=[
    AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1797, 1798)),
  CommandNode(pos=(1801, 1821), parts=[
    WordNode(pos=(1801, 1806), word='mkdir'),
    WordNode(pos=(1807, 1809), word='-p'),
    WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1821, 1822)),
  CommandNode(pos=(1824, 1903), parts=[
    WordNode(pos=(1824, 1828), word='wget'),
    WordNode(pos=(1829, 1839), word='--progress'),
    WordNode(pos=(1840, 1848), word='dot:giga'),
    WordNode(pos=(1849, 1866), word='--output-document'),
    WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
    ]),
    WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1903, 1904)),
  PipelineNode(pos=(1906, 1980), parts=[
    CommandNode(pos=(1906, 1949), parts=[
      WordNode(pos=(1906, 1910), word='echo'),
      WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1950, 1951)),
    CommandNode(pos=(1952, 1980), parts=[
      WordNode(pos=(1952, 1961), word='sha256sum'),
      WordNode(pos=(1962, 1969), word='--check'),
      WordNode(pos=(1970, 1978), word='--strict'),
      WordNode(pos=(1979, 1980), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1980, 1981)),
  CommandNode(pos=(1983, 2067), parts=[
    WordNode(pos=(1983, 1986), word='tar'),
    WordNode(pos=(1987, 1996), word='--extract'),
    WordNode(pos=(1997, 2003), word='--file'),
    WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
    ]),
    WordNode(pos=(2023, 2034), word='--directory'),
    WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
    ]),
    WordNode(pos=(2047, 2065), word='--strip-components'),
    WordNode(pos=(2066, 2067), word='1'),
  ]),
  OperatorNode(op=';', pos=(2067, 2068)),
  CommandNode(pos=(2071, 2085), parts=[
    WordNode(pos=(2071, 2073), word='cd'),
    WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2085, 2086)),
  CommandNode(pos=(2088, 2114), parts=[
    WordNode(pos=(2088, 2094), word='export'),
    WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2114, 2115)),
  CommandNode(pos=(2117, 2137), parts=[
    WordNode(pos=(2117, 2128), word='./otp_build'),
    WordNode(pos=(2129, 2137), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(2137, 2138)),
  CommandNode(pos=(2140, 2180), parts=[
    AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2150, 2178), parts=[
          WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
          WordNode(pos=(2166, 2171), word='--get'),
          WordNode(pos=(2172, 2178), word='CFLAGS'),
        ]), pos=(2148, 2179)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2180, 2181)),
  CommandNode(pos=(2182, 2195), parts=[
    WordNode(pos=(2182, 2188), word='export'),
    WordNode(pos=(2189, 2195), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(2195, 2196)),
  CommandNode(pos=(2198, 2255), parts=[
    AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2210, 2253), parts=[
          WordNode(pos=(2210, 2227), word='dpkg-architecture'),
          WordNode(pos=(2228, 2235), word='--query'),
          WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(2208, 2254)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2255, 2256)),
  CommandNode(pos=(2258, 2317), parts=[
    AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2271, 2315), parts=[
          WordNode(pos=(2271, 2288), word='dpkg-architecture'),
          WordNode(pos=(2289, 2296), word='--query'),
          WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(2269, 2316)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2317, 2318)),
  CommandNode(pos=(2320, 2359), parts=[
    AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2332, 2357), parts=[
          WordNode(pos=(2332, 2336), word='dpkg'),
          WordNode(pos=(2337, 2357), word='--print-architecture'),
        ]), pos=(2330, 2358)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2359, 2360)),
  CommandNode(pos=(2361, 2387), parts=[
    AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2387, 2388)),
  CommandNode(pos=(2390, 3072), parts=[
    WordNode(pos=(2390, 2401), word='./configure'),
    WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2412, 2421), value='hostArch'),
    ]),
    WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2434, 2444), value='buildArch'),
    ]),
    WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2476, 2490), word='--disable-hipe'),
    WordNode(pos=(2493, 2507), word='--disable-sctp'),
    WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
    WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
    WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
    WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
    WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
    WordNode(pos=(2629, 2649), word='--enable-smp-support'),
    WordNode(pos=(2652, 2668), word='--enable-threads'),
    WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2708, 2729), word='--without-common_test'),
    WordNode(pos=(2732, 2750), word='--without-debugger'),
    WordNode(pos=(2753, 2771), word='--without-dialyzer'),
    WordNode(pos=(2774, 2792), word='--without-diameter'),
    WordNode(pos=(2795, 2809), word='--without-edoc'),
    WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
    WordNode(pos=(2835, 2858), word='--without-erl_interface'),
    WordNode(pos=(2861, 2873), word='--without-et'),
    WordNode(pos=(2876, 2891), word='--without-eunit'),
    WordNode(pos=(2894, 2907), word='--without-ftp'),
    WordNode(pos=(2910, 2924), word='--without-hipe'),
    WordNode(pos=(2927, 2947), word='--without-jinterface'),
    WordNode(pos=(2950, 2966), word='--without-megaco'),
    WordNode(pos=(2969, 2987), word='--without-observer'),
    WordNode(pos=(2990, 3004), word='--without-odbc'),
    WordNode(pos=(3007, 3024), word='--without-reltool'),
    WordNode(pos=(3027, 3040), word='--without-ssh'),
    WordNode(pos=(3043, 3057), word='--without-tftp'),
    WordNode(pos=(3060, 3072), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(3074, 3075)),
  CommandNode(pos=(3077, 3155), parts=[
    WordNode(pos=(3077, 3081), word='make'),
    WordNode(pos=(3082, 3084), word='-j'),
    WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(3088, 3113), parts=[
          WordNode(pos=(3088, 3095), word='getconf'),
          WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
        ]), pos=(3086, 3114)),
    ]),
    WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(3155, 3156)),
  CommandNode(pos=(3158, 3170), parts=[
    WordNode(pos=(3158, 3162), word='make'),
    WordNode(pos=(3163, 3170), word='install'),
  ]),
  OperatorNode(op=';', pos=(3170, 3171)),
  CommandNode(pos=(3173, 3178), parts=[
    WordNode(pos=(3173, 3175), word='cd'),
    WordNode(pos=(3176, 3178), word='..'),
  ]),
  OperatorNode(op=';', pos=(3178, 3179)),
  CommandNode(pos=(3181, 3275), parts=[
    WordNode(pos=(3181, 3183), word='rm'),
    WordNode(pos=(3184, 3187), word='-rf'),
    WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
    ]),
    WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(3277, 3278)),
  CommandNode(pos=(3281, 3311), parts=[
    WordNode(pos=(3281, 3289), word='apt-mark'),
    WordNode(pos=(3290, 3294), word='auto'),
    WordNode(pos=(3295, 3299), word='.*'),
    RedirectNode(output=
      WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
  ]),
  OperatorNode(op=';', pos=(3311, 3312)),
  CommandNode(pos=(3314, 3336), parts=[
    WordNode(pos=(3314, 3315), word='['),
    WordNode(pos=(3316, 3318), word='-z'),
    WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
      ParameterNode(pos=(3320, 3333), value='savedAptMark'),
    ]),
    WordNode(pos=(3335, 3336), word=']'),
  ]),
  OperatorNode(op='||', pos=(3337, 3339)),
  CommandNode(pos=(3340, 3369), parts=[
    WordNode(pos=(3340, 3348), word='apt-mark'),
    WordNode(pos=(3349, 3355), word='manual'),
    WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
      ParameterNode(pos=(3356, 3369), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3369, 3370)),
  PipelineNode(pos=(3372, 3561), parts=[
    CommandNode(pos=(3372, 3426), parts=[
      WordNode(pos=(3372, 3376), word='find'),
      WordNode(pos=(3377, 3387), word='/usr/local'),
      WordNode(pos=(3388, 3393), word='-type'),
      WordNode(pos=(3394, 3395), word='f'),
      WordNode(pos=(3396, 3407), word='-executable'),
      WordNode(pos=(3408, 3413), word='-exec'),
      WordNode(pos=(3414, 3417), word='ldd'),
      WordNode(pos=(3418, 3422), word='{}'),
      WordNode(pos=(3423, 3426), word=';'),
    ]),
    PipeNode(pipe='|', pos=(3429, 3430)),
    CommandNode(pos=(3431, 3459), parts=[
      WordNode(pos=(3431, 3434), word='awk'),
      WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(3462, 3463)),
    CommandNode(pos=(3464, 3471), parts=[
      WordNode(pos=(3464, 3468), word='sort'),
      WordNode(pos=(3469, 3471), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3474, 3475)),
    CommandNode(pos=(3476, 3504), parts=[
      WordNode(pos=(3476, 3481), word='xargs'),
      WordNode(pos=(3482, 3484), word='-r'),
      WordNode(pos=(3485, 3495), word='dpkg-query'),
      WordNode(pos=(3496, 3504), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(3507, 3508)),
    CommandNode(pos=(3509, 3520), parts=[
      WordNode(pos=(3509, 3512), word='cut'),
      WordNode(pos=(3513, 3516), word='-d:'),
      WordNode(pos=(3517, 3520), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(3523, 3524)),
    CommandNode(pos=(3525, 3532), parts=[
      WordNode(pos=(3525, 3529), word='sort'),
      WordNode(pos=(3530, 3532), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3535, 3536)),
    CommandNode(pos=(3537, 3561), parts=[
      WordNode(pos=(3537, 3542), word='xargs'),
      WordNode(pos=(3543, 3545), word='-r'),
      WordNode(pos=(3546, 3554), word='apt-mark'),
      WordNode(pos=(3555, 3561), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3563, 3564)),
  CommandNode(pos=(3566, 3642), parts=[
    WordNode(pos=(3566, 3573), word='apt-get'),
    WordNode(pos=(3574, 3579), word='purge'),
    WordNode(pos=(3580, 3582), word='-y'),
    WordNode(pos=(3583, 3596), word='--auto-remove'),
    WordNode(pos=(3597, 3599), word='-o'),
    WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(3642, 3643)),
  CommandNode(pos=(3646, 3661), parts=[
    WordNode(pos=(3646, 3653), word='openssl'),
    WordNode(pos=(3654, 3661), word='version'),
  ]),
  OperatorNode(op=';', pos=(3661, 3662)),
  CommandNode(pos=(3664, 3761), parts=[
    WordNode(pos=(3664, 3667), word='erl'),
    WordNode(pos=(3668, 3676), word='-noshell'),
    WordNode(pos=(3677, 3682), word='-eval'),
    WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


160) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


161) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


162) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


163) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget  ;  rm -rf /var/lib/apt/lists/*;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum --check --strict -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf;  ldconfig;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum --check --strict -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3761), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 200), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 90), word='--yes'),
    WordNode(pos=(91, 114), word='--no-install-recommends'),
    WordNode(pos=(117, 125), word='autoconf'),
    WordNode(pos=(128, 143), word='ca-certificates'),
    WordNode(pos=(146, 154), word='dpkg-dev'),
    WordNode(pos=(157, 160), word='gcc'),
    WordNode(pos=(163, 168), word='gnupg'),
    WordNode(pos=(171, 186), word='libncurses5-dev'),
    WordNode(pos=(189, 193), word='make'),
    WordNode(pos=(196, 200), word='wget'),
  ]),
  OperatorNode(op=';', pos=(202, 203)),
  CommandNode(pos=(205, 232), parts=[
    WordNode(pos=(205, 207), word='rm'),
    WordNode(pos=(208, 211), word='-rf'),
    WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(232, 233)),
  CommandNode(pos=(236, 319), parts=[
    AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(319, 320)),
  CommandNode(pos=(322, 376), parts=[
    AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(376, 377)),
  CommandNode(pos=(379, 416), parts=[
    AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(416, 417)),
  CommandNode(pos=(420, 515), parts=[
    WordNode(pos=(420, 424), word='wget'),
    WordNode(pos=(425, 435), word='--progress'),
    WordNode(pos=(436, 444), word='dot:giga'),
    WordNode(pos=(445, 462), word='--output-document'),
    WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(515, 516)),
  CommandNode(pos=(518, 605), parts=[
    WordNode(pos=(518, 522), word='wget'),
    WordNode(pos=(523, 533), word='--progress'),
    WordNode(pos=(534, 542), word='dot:giga'),
    WordNode(pos=(543, 560), word='--output-document'),
    WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(605, 606)),
  CommandNode(pos=(608, 639), parts=[
    WordNode(pos=(608, 614), word='export'),
    WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(628, 637), parts=[
          WordNode(pos=(628, 634), word='mktemp'),
          WordNode(pos=(635, 637), word='-d'),
        ]), pos=(626, 638)),
    ]),
  ]),
  OperatorNode(op=';', pos=(639, 640)),
  CompoundNode(list=[
    ForNode(pos=(642, 746), parts=[
      ReservedwordNode(pos=(642, 645), word='for'),
      WordNode(pos=(646, 649), word='key'),
      ReservedwordNode(pos=(650, 652), word='in'),
      WordNode(pos=(653, 673), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(653, 673), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(673, 674), word=';'),
      ReservedwordNode(pos=(675, 677), word='do'),
      ListNode(pos=(680, 740), parts=[
          CommandNode(pos=(680, 739), parts=[
            WordNode(pos=(680, 683), word='gpg'),
            WordNode(pos=(684, 691), word='--batch'),
            WordNode(pos=(692, 703), word='--keyserver'),
            WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(721, 732), word='--recv-keys'),
            WordNode(pos=(733, 739), word='$key', parts=[
              ParameterNode(pos=(734, 738), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(739, 740)),
        ]),
      ReservedwordNode(pos=(742, 746), word='done'),
    ]),
  ], pos=(642, 746)),
  OperatorNode(op=';', pos=(746, 747)),
  CommandNode(pos=(749, 819), parts=[
    WordNode(pos=(749, 752), word='gpg'),
    WordNode(pos=(753, 760), word='--batch'),
    WordNode(pos=(761, 769), word='--verify'),
    WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(819, 820)),
  CommandNode(pos=(822, 840), parts=[
    WordNode(pos=(822, 829), word='gpgconf'),
    WordNode(pos=(830, 836), word='--kill'),
    WordNode(pos=(837, 840), word='all'),
  ]),
  OperatorNode(op=';', pos=(840, 841)),
  CommandNode(pos=(843, 862), parts=[
    WordNode(pos=(843, 845), word='rm'),
    WordNode(pos=(846, 849), word='-rf'),
    WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(851, 861), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(862, 863)),
  PipelineNode(pos=(865, 947), parts=[
    CommandNode(pos=(865, 916), parts=[
      WordNode(pos=(865, 869), word='echo'),
      WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(917, 918)),
    CommandNode(pos=(919, 947), parts=[
      WordNode(pos=(919, 928), word='sha256sum'),
      WordNode(pos=(929, 936), word='--check'),
      WordNode(pos=(937, 945), word='--strict'),
      WordNode(pos=(946, 947), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(947, 948)),
  CommandNode(pos=(950, 974), parts=[
    WordNode(pos=(950, 955), word='mkdir'),
    WordNode(pos=(956, 958), word='-p'),
    WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(977, 1069), parts=[
    WordNode(pos=(977, 980), word='tar'),
    WordNode(pos=(981, 990), word='--extract'),
    WordNode(pos=(991, 997), word='--file'),
    WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1021, 1032), word='--directory'),
    WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1049, 1067), word='--strip-components'),
    WordNode(pos=(1068, 1069), word='1'),
  ]),
  OperatorNode(op=';', pos=(1069, 1070)),
  CommandNode(pos=(1073, 1091), parts=[
    WordNode(pos=(1073, 1075), word='cd'),
    WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1091, 1092)),
  CommandNode(pos=(1094, 1156), parts=[
    AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1110, 1154), parts=[
          WordNode(pos=(1110, 1127), word='dpkg-architecture'),
          WordNode(pos=(1128, 1135), word='--query'),
          WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
        ]), pos=(1108, 1155)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1156, 1157)),
  CommandNode(pos=(1159, 1337), parts=[
    AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1170, 1213), parts=[
          WordNode(pos=(1170, 1187), word='dpkg-architecture'),
          WordNode(pos=(1188, 1195), word='--query'),
          WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1168, 1214)),
    ]),
    AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
    WordNode(pos=(1265, 1273), word='./config'),
    WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
      ParameterNode(pos=(1323, 1336), value='debMultiarch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1337, 1338)),
  CommandNode(pos=(1340, 1378), parts=[
    WordNode(pos=(1340, 1344), word='make'),
    WordNode(pos=(1345, 1347), word='-j'),
    WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1351, 1376), parts=[
          WordNode(pos=(1351, 1358), word='getconf'),
          WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
        ]), pos=(1349, 1377)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1378, 1379)),
  CommandNode(pos=(1381, 1412), parts=[
    WordNode(pos=(1381, 1385), word='make'),
    WordNode(pos=(1386, 1396), word='install_sw'),
    WordNode(pos=(1397, 1412), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1412, 1413)),
  CommandNode(pos=(1415, 1420), parts=[
    WordNode(pos=(1415, 1417), word='cd'),
    WordNode(pos=(1418, 1420), word='..'),
  ]),
  OperatorNode(op=';', pos=(1420, 1421)),
  CommandNode(pos=(1423, 1446), parts=[
    WordNode(pos=(1423, 1425), word='rm'),
    WordNode(pos=(1426, 1429), word='-rf'),
    WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1446, 1447)),
  CommandNode(pos=(1449, 1512), parts=[
    WordNode(pos=(1449, 1453), word='echo'),
    WordNode(pos=(1454, 1470), word='/usr/local/lib'),
    RedirectNode(output=
      WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
  ]),
  OperatorNode(op=';', pos=(1512, 1513)),
  CommandNode(pos=(1515, 1523), parts=[
    WordNode(pos=(1515, 1523), word='ldconfig'),
  ]),
  OperatorNode(op=';', pos=(1523, 1524)),
  CommandNode(pos=(1526, 1589), parts=[
    WordNode(pos=(1526, 1531), word='rmdir'),
    WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1589, 1590)),
  CommandNode(pos=(1592, 1652), parts=[
    WordNode(pos=(1592, 1594), word='ln'),
    WordNode(pos=(1595, 1598), word='-sf'),
    WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
    WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
    WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1652, 1653)),
  CommandNode(pos=(1655, 1670), parts=[
    WordNode(pos=(1655, 1662), word='openssl'),
    WordNode(pos=(1663, 1670), word='version'),
  ]),
  OperatorNode(op=';', pos=(1670, 1671)),
  CommandNode(pos=(1674, 1752), parts=[
    AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1752, 1753)),
  CommandNode(pos=(1755, 1797), parts=[
    AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1797, 1798)),
  CommandNode(pos=(1801, 1821), parts=[
    WordNode(pos=(1801, 1806), word='mkdir'),
    WordNode(pos=(1807, 1809), word='-p'),
    WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1821, 1822)),
  CommandNode(pos=(1824, 1903), parts=[
    WordNode(pos=(1824, 1828), word='wget'),
    WordNode(pos=(1829, 1839), word='--progress'),
    WordNode(pos=(1840, 1848), word='dot:giga'),
    WordNode(pos=(1849, 1866), word='--output-document'),
    WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
    ]),
    WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1903, 1904)),
  PipelineNode(pos=(1906, 1980), parts=[
    CommandNode(pos=(1906, 1949), parts=[
      WordNode(pos=(1906, 1910), word='echo'),
      WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1950, 1951)),
    CommandNode(pos=(1952, 1980), parts=[
      WordNode(pos=(1952, 1961), word='sha256sum'),
      WordNode(pos=(1962, 1969), word='--check'),
      WordNode(pos=(1970, 1978), word='--strict'),
      WordNode(pos=(1979, 1980), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1980, 1981)),
  CommandNode(pos=(1983, 2067), parts=[
    WordNode(pos=(1983, 1986), word='tar'),
    WordNode(pos=(1987, 1996), word='--extract'),
    WordNode(pos=(1997, 2003), word='--file'),
    WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
    ]),
    WordNode(pos=(2023, 2034), word='--directory'),
    WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
    ]),
    WordNode(pos=(2047, 2065), word='--strip-components'),
    WordNode(pos=(2066, 2067), word='1'),
  ]),
  OperatorNode(op=';', pos=(2067, 2068)),
  CommandNode(pos=(2071, 2085), parts=[
    WordNode(pos=(2071, 2073), word='cd'),
    WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2085, 2086)),
  CommandNode(pos=(2088, 2114), parts=[
    WordNode(pos=(2088, 2094), word='export'),
    WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2114, 2115)),
  CommandNode(pos=(2117, 2137), parts=[
    WordNode(pos=(2117, 2128), word='./otp_build'),
    WordNode(pos=(2129, 2137), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(2137, 2138)),
  CommandNode(pos=(2140, 2180), parts=[
    AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2150, 2178), parts=[
          WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
          WordNode(pos=(2166, 2171), word='--get'),
          WordNode(pos=(2172, 2178), word='CFLAGS'),
        ]), pos=(2148, 2179)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2180, 2181)),
  CommandNode(pos=(2182, 2195), parts=[
    WordNode(pos=(2182, 2188), word='export'),
    WordNode(pos=(2189, 2195), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(2195, 2196)),
  CommandNode(pos=(2198, 2255), parts=[
    AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2210, 2253), parts=[
          WordNode(pos=(2210, 2227), word='dpkg-architecture'),
          WordNode(pos=(2228, 2235), word='--query'),
          WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(2208, 2254)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2255, 2256)),
  CommandNode(pos=(2258, 2317), parts=[
    AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2271, 2315), parts=[
          WordNode(pos=(2271, 2288), word='dpkg-architecture'),
          WordNode(pos=(2289, 2296), word='--query'),
          WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(2269, 2316)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2317, 2318)),
  CommandNode(pos=(2320, 2359), parts=[
    AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2332, 2357), parts=[
          WordNode(pos=(2332, 2336), word='dpkg'),
          WordNode(pos=(2337, 2357), word='--print-architecture'),
        ]), pos=(2330, 2358)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2359, 2360)),
  CommandNode(pos=(2361, 2387), parts=[
    AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2387, 2388)),
  CommandNode(pos=(2390, 3072), parts=[
    WordNode(pos=(2390, 2401), word='./configure'),
    WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2412, 2421), value='hostArch'),
    ]),
    WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2434, 2444), value='buildArch'),
    ]),
    WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2476, 2490), word='--disable-hipe'),
    WordNode(pos=(2493, 2507), word='--disable-sctp'),
    WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
    WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
    WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
    WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
    WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
    WordNode(pos=(2629, 2649), word='--enable-smp-support'),
    WordNode(pos=(2652, 2668), word='--enable-threads'),
    WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2708, 2729), word='--without-common_test'),
    WordNode(pos=(2732, 2750), word='--without-debugger'),
    WordNode(pos=(2753, 2771), word='--without-dialyzer'),
    WordNode(pos=(2774, 2792), word='--without-diameter'),
    WordNode(pos=(2795, 2809), word='--without-edoc'),
    WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
    WordNode(pos=(2835, 2858), word='--without-erl_interface'),
    WordNode(pos=(2861, 2873), word='--without-et'),
    WordNode(pos=(2876, 2891), word='--without-eunit'),
    WordNode(pos=(2894, 2907), word='--without-ftp'),
    WordNode(pos=(2910, 2924), word='--without-hipe'),
    WordNode(pos=(2927, 2947), word='--without-jinterface'),
    WordNode(pos=(2950, 2966), word='--without-megaco'),
    WordNode(pos=(2969, 2987), word='--without-observer'),
    WordNode(pos=(2990, 3004), word='--without-odbc'),
    WordNode(pos=(3007, 3024), word='--without-reltool'),
    WordNode(pos=(3027, 3040), word='--without-ssh'),
    WordNode(pos=(3043, 3057), word='--without-tftp'),
    WordNode(pos=(3060, 3072), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(3074, 3075)),
  CommandNode(pos=(3077, 3155), parts=[
    WordNode(pos=(3077, 3081), word='make'),
    WordNode(pos=(3082, 3084), word='-j'),
    WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(3088, 3113), parts=[
          WordNode(pos=(3088, 3095), word='getconf'),
          WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
        ]), pos=(3086, 3114)),
    ]),
    WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(3155, 3156)),
  CommandNode(pos=(3158, 3170), parts=[
    WordNode(pos=(3158, 3162), word='make'),
    WordNode(pos=(3163, 3170), word='install'),
  ]),
  OperatorNode(op=';', pos=(3170, 3171)),
  CommandNode(pos=(3173, 3178), parts=[
    WordNode(pos=(3173, 3175), word='cd'),
    WordNode(pos=(3176, 3178), word='..'),
  ]),
  OperatorNode(op=';', pos=(3178, 3179)),
  CommandNode(pos=(3181, 3275), parts=[
    WordNode(pos=(3181, 3183), word='rm'),
    WordNode(pos=(3184, 3187), word='-rf'),
    WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
    ]),
    WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(3277, 3278)),
  CommandNode(pos=(3281, 3311), parts=[
    WordNode(pos=(3281, 3289), word='apt-mark'),
    WordNode(pos=(3290, 3294), word='auto'),
    WordNode(pos=(3295, 3299), word='.*'),
    RedirectNode(output=
      WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
  ]),
  OperatorNode(op=';', pos=(3311, 3312)),
  CommandNode(pos=(3314, 3336), parts=[
    WordNode(pos=(3314, 3315), word='['),
    WordNode(pos=(3316, 3318), word='-z'),
    WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
      ParameterNode(pos=(3320, 3333), value='savedAptMark'),
    ]),
    WordNode(pos=(3335, 3336), word=']'),
  ]),
  OperatorNode(op='||', pos=(3337, 3339)),
  CommandNode(pos=(3340, 3369), parts=[
    WordNode(pos=(3340, 3348), word='apt-mark'),
    WordNode(pos=(3349, 3355), word='manual'),
    WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
      ParameterNode(pos=(3356, 3369), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3369, 3370)),
  PipelineNode(pos=(3372, 3561), parts=[
    CommandNode(pos=(3372, 3426), parts=[
      WordNode(pos=(3372, 3376), word='find'),
      WordNode(pos=(3377, 3387), word='/usr/local'),
      WordNode(pos=(3388, 3393), word='-type'),
      WordNode(pos=(3394, 3395), word='f'),
      WordNode(pos=(3396, 3407), word='-executable'),
      WordNode(pos=(3408, 3413), word='-exec'),
      WordNode(pos=(3414, 3417), word='ldd'),
      WordNode(pos=(3418, 3422), word='{}'),
      WordNode(pos=(3423, 3426), word=';'),
    ]),
    PipeNode(pipe='|', pos=(3429, 3430)),
    CommandNode(pos=(3431, 3459), parts=[
      WordNode(pos=(3431, 3434), word='awk'),
      WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(3462, 3463)),
    CommandNode(pos=(3464, 3471), parts=[
      WordNode(pos=(3464, 3468), word='sort'),
      WordNode(pos=(3469, 3471), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3474, 3475)),
    CommandNode(pos=(3476, 3504), parts=[
      WordNode(pos=(3476, 3481), word='xargs'),
      WordNode(pos=(3482, 3484), word='-r'),
      WordNode(pos=(3485, 3495), word='dpkg-query'),
      WordNode(pos=(3496, 3504), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(3507, 3508)),
    CommandNode(pos=(3509, 3520), parts=[
      WordNode(pos=(3509, 3512), word='cut'),
      WordNode(pos=(3513, 3516), word='-d:'),
      WordNode(pos=(3517, 3520), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(3523, 3524)),
    CommandNode(pos=(3525, 3532), parts=[
      WordNode(pos=(3525, 3529), word='sort'),
      WordNode(pos=(3530, 3532), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3535, 3536)),
    CommandNode(pos=(3537, 3561), parts=[
      WordNode(pos=(3537, 3542), word='xargs'),
      WordNode(pos=(3543, 3545), word='-r'),
      WordNode(pos=(3546, 3554), word='apt-mark'),
      WordNode(pos=(3555, 3561), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3563, 3564)),
  CommandNode(pos=(3566, 3642), parts=[
    WordNode(pos=(3566, 3573), word='apt-get'),
    WordNode(pos=(3574, 3579), word='purge'),
    WordNode(pos=(3580, 3582), word='-y'),
    WordNode(pos=(3583, 3596), word='--auto-remove'),
    WordNode(pos=(3597, 3599), word='-o'),
    WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(3642, 3643)),
  CommandNode(pos=(3646, 3661), parts=[
    WordNode(pos=(3646, 3653), word='openssl'),
    WordNode(pos=(3654, 3661), word='version'),
  ]),
  OperatorNode(op=';', pos=(3661, 3662)),
  CommandNode(pos=(3664, 3761), parts=[
    WordNode(pos=(3664, 3667), word='erl'),
    WordNode(pos=(3668, 3676), word='-noshell'),
    WordNode(pos=(3677, 3682), word='-eval'),
    WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


164) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


