1) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


2) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


3) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


4) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


5) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


6) make -j "$(nproc)"

CommandNode(pos=(819, 837), parts=[
  WordNode(pos=(819, 823), word='make'),
  WordNode(pos=(824, 826), word='-j'),
  WordNode(pos=(827, 837), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(830, 835), parts=[
        WordNode(pos=(830, 835), word='nproc'),
      ]), pos=(828, 836)),
  ]),
])


7) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


8) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(164, 229), parts=[
  AssignmentNode(pos=(164, 229), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(176, 227), parts=[
        CommandNode(pos=(176, 201), parts=[
          WordNode(pos=(176, 180), word='dpkg'),
          WordNode(pos=(181, 201), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(202, 203)),
        CommandNode(pos=(204, 227), parts=[
          WordNode(pos=(204, 207), word='awk'),
          WordNode(pos=(208, 211), word='-F-'),
          WordNode(pos=(212, 227), word='{ print $NF }'),
        ]),
      ]), pos=(174, 228)),
  ]),
])


9) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(490, 521), parts=[
  WordNode(pos=(490, 496), word='export'),
  WordNode(pos=(497, 521), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(510, 519), parts=[
        WordNode(pos=(510, 516), word='mktemp'),
        WordNode(pos=(517, 519), word='-d'),
      ]), pos=(508, 520)),
  ]),
])


10) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(1077, 1108), parts=[
  WordNode(pos=(1077, 1083), word='export'),
  WordNode(pos=(1084, 1108), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1097, 1106), parts=[
        WordNode(pos=(1097, 1103), word='mktemp'),
        WordNode(pos=(1104, 1106), word='-d'),
      ]), pos=(1095, 1107)),
  ]),
])


11) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


12) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(561, 618), parts=[
  AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(572, 616), parts=[
        WordNode(pos=(572, 589), word='dpkg-architecture'),
        WordNode(pos=(590, 597), word='--query'),
        WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(570, 617)),
  ]),
])


13) make -j "$(nproc)"

CommandNode(pos=(678, 696), parts=[
  WordNode(pos=(678, 682), word='make'),
  WordNode(pos=(683, 685), word='-j'),
  WordNode(pos=(686, 696), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 694), parts=[
        WordNode(pos=(689, 694), word='nproc'),
      ]), pos=(687, 695)),
  ]),
])


14) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


15) docker-php-ext-install -j "$(nproc)"   exif   gd   intl   ldap   opcache   pcntl   pdo_mysql   pdo_pgsql   pgsql   zip

CommandNode(pos=(213, 331), parts=[
  WordNode(pos=(213, 235), word='docker-php-ext-install'),
  WordNode(pos=(236, 238), word='-j'),
  WordNode(pos=(239, 249), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(242, 247), parts=[
        WordNode(pos=(242, 247), word='nproc'),
      ]), pos=(240, 248)),
  ]),
  WordNode(pos=(252, 256), word='exif'),
  WordNode(pos=(259, 261), word='gd'),
  WordNode(pos=(264, 268), word='intl'),
  WordNode(pos=(271, 275), word='ldap'),
  WordNode(pos=(278, 285), word='opcache'),
  WordNode(pos=(288, 293), word='pcntl'),
  WordNode(pos=(296, 305), word='pdo_mysql'),
  WordNode(pos=(308, 317), word='pdo_pgsql'),
  WordNode(pos=(320, 325), word='pgsql'),
  WordNode(pos=(328, 331), word='zip'),
])


16) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(300, 331), parts=[
  WordNode(pos=(300, 306), word='export'),
  WordNode(pos=(307, 331), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(320, 329), parts=[
        WordNode(pos=(320, 326), word='mktemp'),
        WordNode(pos=(327, 329), word='-d'),
      ]), pos=(318, 330)),
  ]),
])


17) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


18) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(435, 488), parts=[
  WordNode(pos=(435, 438), word='ldd'),
  WordNode(pos=(439, 488), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(442, 481), parts=[
        WordNode(pos=(442, 445), word='php'),
        WordNode(pos=(446, 448), word='-r'),
        WordNode(pos=(449, 481), word='echo ini_get("extension_dir");'),
      ]), pos=(440, 482)),
  ]),
])


19) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


20) docker-php-ext-install -j "$(nproc)"   exif   gd   intl   ldap   mcrypt   opcache   pcntl   pdo_mysql   pdo_pgsql   pgsql   zip

CommandNode(pos=(213, 340), parts=[
  WordNode(pos=(213, 235), word='docker-php-ext-install'),
  WordNode(pos=(236, 238), word='-j'),
  WordNode(pos=(239, 249), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(242, 247), parts=[
        WordNode(pos=(242, 247), word='nproc'),
      ]), pos=(240, 248)),
  ]),
  WordNode(pos=(252, 256), word='exif'),
  WordNode(pos=(259, 261), word='gd'),
  WordNode(pos=(264, 268), word='intl'),
  WordNode(pos=(271, 275), word='ldap'),
  WordNode(pos=(278, 284), word='mcrypt'),
  WordNode(pos=(287, 294), word='opcache'),
  WordNode(pos=(297, 302), word='pcntl'),
  WordNode(pos=(305, 314), word='pdo_mysql'),
  WordNode(pos=(317, 326), word='pdo_pgsql'),
  WordNode(pos=(329, 334), word='pgsql'),
  WordNode(pos=(337, 340), word='zip'),
])


21) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(300, 331), parts=[
  WordNode(pos=(300, 306), word='export'),
  WordNode(pos=(307, 331), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(320, 329), parts=[
        WordNode(pos=(320, 326), word='mktemp'),
        WordNode(pos=(327, 329), word='-d'),
      ]), pos=(318, 330)),
  ]),
])


22) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


23) [ -n "$(passenger-config build-native-support 2>&1)" ]

CommandNode(pos=(258, 312), parts=[
  WordNode(pos=(258, 259), word='['),
  WordNode(pos=(260, 262), word='-n'),
  WordNode(pos=(263, 310), word='$(passenger-config build-native-support 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(266, 308), parts=[
        WordNode(pos=(266, 282), word='passenger-config'),
        WordNode(pos=(283, 303), word='build-native-support'),
        RedirectNode(input=2, output=1, pos=(304, 308), type='>&'),
      ]), pos=(264, 309)),
  ]),
  WordNode(pos=(311, 312), word=']'),
])


24) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


25) [ -n "$(passenger-config build-native-support 2>&1)" ]

CommandNode(pos=(258, 312), parts=[
  WordNode(pos=(258, 259), word='['),
  WordNode(pos=(260, 262), word='-n'),
  WordNode(pos=(263, 310), word='$(passenger-config build-native-support 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(266, 308), parts=[
        WordNode(pos=(266, 282), word='passenger-config'),
        WordNode(pos=(283, 303), word='build-native-support'),
        RedirectNode(input=2, output=1, pos=(304, 308), type='>&'),
      ]), pos=(264, 309)),
  ]),
  WordNode(pos=(311, 312), word=']'),
])


26) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


27) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(471, 502), parts=[
  WordNode(pos=(471, 477), word='export'),
  WordNode(pos=(478, 502), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(491, 500), parts=[
        WordNode(pos=(491, 497), word='mktemp'),
        WordNode(pos=(498, 500), word='-d'),
      ]), pos=(489, 501)),
  ]),
])


28) make -C /usr/src/redis -j "$(nproc)" 32bit

CommandNode(pos=(656, 698), parts=[
  WordNode(pos=(656, 660), word='make'),
  WordNode(pos=(661, 663), word='-C'),
  WordNode(pos=(664, 678), word='/usr/src/redis'),
  WordNode(pos=(679, 681), word='-j'),
  WordNode(pos=(682, 692), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(685, 690), parts=[
        WordNode(pos=(685, 690), word='nproc'),
      ]), pos=(683, 691)),
  ]),
  WordNode(pos=(693, 698), word='32bit'),
])


29) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


30) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


31) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


32) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


33) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


34) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


35) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


36) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


37) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


38) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


39) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


40) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


41) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


42) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


43) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


44) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


45) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


46) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


47) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(342, 558), parts=[
  AssignmentNode(pos=(342, 558), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(356, 554), parts=[
        CommandNode(pos=(356, 441), parts=[
          WordNode(pos=(356, 363), word='scanelf'),
          WordNode(pos=(364, 372), word='--needed'),
          WordNode(pos=(373, 383), word='--nobanner'),
          WordNode(pos=(384, 392), word='--format'),
          WordNode(pos=(393, 399), word='%n#p'),
          WordNode(pos=(400, 411), word='--recursive'),
          WordNode(pos=(412, 441), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(445, 446)),
        CommandNode(pos=(447, 458), parts=[
          WordNode(pos=(447, 449), word='tr'),
          WordNode(pos=(450, 453), word=','),
          WordNode(pos=(454, 458), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 471), parts=[
          WordNode(pos=(464, 468), word='sort'),
          WordNode(pos=(469, 471), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(475, 476)),
        CommandNode(pos=(477, 554), parts=[
          WordNode(pos=(477, 480), word='awk'),
          WordNode(pos=(481, 554), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(351, 555)),
  ]),
])


48) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(223, 254), parts=[
  WordNode(pos=(223, 229), word='export'),
  WordNode(pos=(230, 254), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(243, 252), parts=[
        WordNode(pos=(243, 249), word='mktemp'),
        WordNode(pos=(250, 252), word='-d'),
      ]), pos=(241, 253)),
  ]),
])


49) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


50) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


51) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


52) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


53) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


54) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


55) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


56) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


57) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


58) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


59) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


60) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


61) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


62) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(342, 558), parts=[
  AssignmentNode(pos=(342, 558), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(356, 554), parts=[
        CommandNode(pos=(356, 441), parts=[
          WordNode(pos=(356, 363), word='scanelf'),
          WordNode(pos=(364, 372), word='--needed'),
          WordNode(pos=(373, 383), word='--nobanner'),
          WordNode(pos=(384, 392), word='--format'),
          WordNode(pos=(393, 399), word='%n#p'),
          WordNode(pos=(400, 411), word='--recursive'),
          WordNode(pos=(412, 441), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(445, 446)),
        CommandNode(pos=(447, 458), parts=[
          WordNode(pos=(447, 449), word='tr'),
          WordNode(pos=(450, 453), word=','),
          WordNode(pos=(454, 458), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 471), parts=[
          WordNode(pos=(464, 468), word='sort'),
          WordNode(pos=(469, 471), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(475, 476)),
        CommandNode(pos=(477, 554), parts=[
          WordNode(pos=(477, 480), word='awk'),
          WordNode(pos=(481, 554), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(351, 555)),
  ]),
])


63) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(223, 254), parts=[
  WordNode(pos=(223, 229), word='export'),
  WordNode(pos=(230, 254), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(243, 252), parts=[
        WordNode(pos=(243, 249), word='mktemp'),
        WordNode(pos=(250, 252), word='-d'),
      ]), pos=(241, 253)),
  ]),
])


64) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


65) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


66) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


67) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


68) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


69) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


70) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


71) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


72) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


73) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


74) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


75) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


76) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


77) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


78) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


79) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


80) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


81) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


82) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


83) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


84) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1043, 1100), parts=[
  AssignmentNode(pos=(1043, 1100), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1054, 1098), parts=[
        WordNode(pos=(1054, 1071), word='dpkg-architecture'),
        WordNode(pos=(1072, 1079), word='--query'),
        WordNode(pos=(1080, 1098), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1052, 1099)),
  ]),
])


85) make -j "$(nproc)" world

CommandNode(pos=(1759, 1783), parts=[
  WordNode(pos=(1759, 1763), word='make'),
  WordNode(pos=(1764, 1766), word='-j'),
  WordNode(pos=(1767, 1777), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1770, 1775), parts=[
        WordNode(pos=(1770, 1775), word='nproc'),
      ]), pos=(1768, 1776)),
  ]),
  WordNode(pos=(1778, 1783), word='world'),
])


86) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1840, 2037), parts=[
  AssignmentNode(pos=(1840, 2037), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1854, 2033), parts=[
        CommandNode(pos=(1854, 1920), parts=[
          WordNode(pos=(1854, 1861), word='scanelf'),
          WordNode(pos=(1862, 1870), word='--needed'),
          WordNode(pos=(1871, 1881), word='--nobanner'),
          WordNode(pos=(1882, 1890), word='--format'),
          WordNode(pos=(1891, 1897), word='%n#p'),
          WordNode(pos=(1898, 1909), word='--recursive'),
          WordNode(pos=(1910, 1920), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1924, 1925)),
        CommandNode(pos=(1926, 1937), parts=[
          WordNode(pos=(1926, 1928), word='tr'),
          WordNode(pos=(1929, 1932), word=','),
          WordNode(pos=(1933, 1937), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1941, 1942)),
        CommandNode(pos=(1943, 1950), parts=[
          WordNode(pos=(1943, 1947), word='sort'),
          WordNode(pos=(1948, 1950), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1954, 1955)),
        CommandNode(pos=(1956, 2033), parts=[
          WordNode(pos=(1956, 1959), word='awk'),
          WordNode(pos=(1960, 2033), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1849, 2034)),
  ]),
])


87) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


88) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(637, 689), parts=[
  WordNode(pos=(637, 641), word='make'),
  WordNode(pos=(642, 644), word='-C'),
  WordNode(pos=(645, 661), word='/usr/src/haproxy'),
  WordNode(pos=(662, 664), word='-j'),
  WordNode(pos=(665, 675), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(668, 673), parts=[
        WordNode(pos=(668, 673), word='nproc'),
      ]), pos=(666, 674)),
  ]),
  WordNode(pos=(676, 679), word='all'),
  WordNode(pos=(680, 689), word='$makeOpts', parts=[
    ParameterNode(pos=(680, 689), value='makeOpts'),
  ]),
])


89) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


90) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


91) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


92) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


93) make -j "$(nproc)" world

CommandNode(pos=(1782, 1806), parts=[
  WordNode(pos=(1782, 1786), word='make'),
  WordNode(pos=(1787, 1789), word='-j'),
  WordNode(pos=(1790, 1800), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1793, 1798), parts=[
        WordNode(pos=(1793, 1798), word='nproc'),
      ]), pos=(1791, 1799)),
  ]),
  WordNode(pos=(1801, 1806), word='world'),
])


94) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


95) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


96) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


97) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


98) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


99) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


100) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


101) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


102) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


103) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(435, 488), parts=[
  WordNode(pos=(435, 438), word='ldd'),
  WordNode(pos=(439, 488), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(442, 481), parts=[
        WordNode(pos=(442, 445), word='php'),
        WordNode(pos=(446, 448), word='-r'),
        WordNode(pos=(449, 481), word='echo ini_get("extension_dir");'),
      ]), pos=(440, 482)),
  ]),
])


104) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


105) folder="$(echo "$JULIA_VERSION" | cut -d. -f1-2)"

CommandNode(pos=(232, 281), parts=[
  AssignmentNode(pos=(232, 281), word='folder=$(echo "$JULIA_VERSION" | cut -d. -f1-2)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(242, 279), parts=[
        CommandNode(pos=(242, 263), parts=[
          WordNode(pos=(242, 246), word='echo'),
          WordNode(pos=(247, 263), word='$JULIA_VERSION', parts=[
            ParameterNode(pos=(248, 262), value='JULIA_VERSION'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(264, 265)),
        CommandNode(pos=(266, 279), parts=[
          WordNode(pos=(266, 269), word='cut'),
          WordNode(pos=(270, 273), word='-d.'),
          WordNode(pos=(274, 279), word='-f1-2'),
        ]),
      ]), pos=(240, 280)),
  ]),
])


106) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(632, 663), parts=[
  WordNode(pos=(632, 638), word='export'),
  WordNode(pos=(639, 663), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(652, 661), parts=[
        WordNode(pos=(652, 658), word='mktemp'),
        WordNode(pos=(659, 661), word='-d'),
      ]), pos=(650, 662)),
  ]),
])


107) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


108) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1099, 1156), parts=[
  AssignmentNode(pos=(1099, 1156), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1108, 1155)),
  ]),
])


109) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1318, 1382), parts=[
  WordNode(pos=(1318, 1322), word='make'),
  WordNode(pos=(1323, 1325), word='-j'),
  WordNode(pos=(1326, 1336), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1329, 1334), parts=[
        WordNode(pos=(1329, 1334), word='nproc'),
      ]), pos=(1327, 1335)),
  ]),
  WordNode(pos=(1339, 1382), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


110) make -C /usr/src/redis -j "$(nproc)"

CommandNode(pos=(579, 615), parts=[
  WordNode(pos=(579, 583), word='make'),
  WordNode(pos=(584, 586), word='-C'),
  WordNode(pos=(587, 601), word='/usr/src/redis'),
  WordNode(pos=(602, 604), word='-j'),
  WordNode(pos=(605, 615), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(608, 613), parts=[
        WordNode(pos=(608, 613), word='nproc'),
      ]), pos=(606, 614)),
  ]),
])


111) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(676, 873), parts=[
  AssignmentNode(pos=(676, 873), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(690, 869), parts=[
        CommandNode(pos=(690, 756), parts=[
          WordNode(pos=(690, 697), word='scanelf'),
          WordNode(pos=(698, 706), word='--needed'),
          WordNode(pos=(707, 717), word='--nobanner'),
          WordNode(pos=(718, 726), word='--format'),
          WordNode(pos=(727, 733), word='%n#p'),
          WordNode(pos=(734, 745), word='--recursive'),
          WordNode(pos=(746, 756), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(760, 761)),
        CommandNode(pos=(762, 773), parts=[
          WordNode(pos=(762, 764), word='tr'),
          WordNode(pos=(765, 768), word=','),
          WordNode(pos=(769, 773), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(777, 778)),
        CommandNode(pos=(779, 786), parts=[
          WordNode(pos=(779, 783), word='sort'),
          WordNode(pos=(784, 786), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(790, 791)),
        CommandNode(pos=(792, 869), parts=[
          WordNode(pos=(792, 795), word='awk'),
          WordNode(pos=(796, 869), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(685, 870)),
  ]),
])


112) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


113) docker-php-ext-install -j "$(nproc)"   exif   gd   intl   ldap   opcache   pcntl   pdo_mysql   pdo_pgsql   pgsql   zip

CommandNode(pos=(213, 331), parts=[
  WordNode(pos=(213, 235), word='docker-php-ext-install'),
  WordNode(pos=(236, 238), word='-j'),
  WordNode(pos=(239, 249), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(242, 247), parts=[
        WordNode(pos=(242, 247), word='nproc'),
      ]), pos=(240, 248)),
  ]),
  WordNode(pos=(252, 256), word='exif'),
  WordNode(pos=(259, 261), word='gd'),
  WordNode(pos=(264, 268), word='intl'),
  WordNode(pos=(271, 275), word='ldap'),
  WordNode(pos=(278, 285), word='opcache'),
  WordNode(pos=(288, 293), word='pcntl'),
  WordNode(pos=(296, 305), word='pdo_mysql'),
  WordNode(pos=(308, 317), word='pdo_pgsql'),
  WordNode(pos=(320, 325), word='pgsql'),
  WordNode(pos=(328, 331), word='zip'),
])


114) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(300, 331), parts=[
  WordNode(pos=(300, 306), word='export'),
  WordNode(pos=(307, 331), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(320, 329), parts=[
        WordNode(pos=(320, 326), word='mktemp'),
        WordNode(pos=(327, 329), word='-d'),
      ]), pos=(318, 330)),
  ]),
])


115) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


116) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


117) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(584, 636), parts=[
  WordNode(pos=(584, 588), word='make'),
  WordNode(pos=(589, 591), word='-C'),
  WordNode(pos=(592, 608), word='/usr/src/haproxy'),
  WordNode(pos=(609, 611), word='-j'),
  WordNode(pos=(612, 622), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(615, 620), parts=[
        WordNode(pos=(615, 620), word='nproc'),
      ]), pos=(613, 621)),
  ]),
  WordNode(pos=(623, 626), word='all'),
  WordNode(pos=(627, 636), word='$makeOpts', parts=[
    ParameterNode(pos=(627, 636), value='makeOpts'),
  ]),
])


118) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


119) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


120) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


121) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1317, 1381), parts=[
  WordNode(pos=(1317, 1321), word='make'),
  WordNode(pos=(1322, 1324), word='-j'),
  WordNode(pos=(1325, 1335), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1328, 1333), parts=[
        WordNode(pos=(1328, 1333), word='nproc'),
      ]), pos=(1326, 1334)),
  ]),
  WordNode(pos=(1338, 1381), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


122) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


123) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


124) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


125) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


126) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


127) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


128) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


129) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


130) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1317, 1381), parts=[
  WordNode(pos=(1317, 1321), word='make'),
  WordNode(pos=(1322, 1324), word='-j'),
  WordNode(pos=(1325, 1335), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1328, 1333), parts=[
        WordNode(pos=(1328, 1333), word='nproc'),
      ]), pos=(1326, 1334)),
  ]),
  WordNode(pos=(1338, 1381), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


131) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


132) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


133) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


134) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


135) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


136) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


137) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


138) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


139) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


140) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


141) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


142) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


143) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


144) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(278, 359), parts=[
  WordNode(pos=(278, 300), word='docker-php-ext-install'),
  WordNode(pos=(301, 303), word='-j'),
  WordNode(pos=(304, 314), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(307, 312), parts=[
        WordNode(pos=(307, 312), word='nproc'),
      ]), pos=(305, 313)),
  ]),
  WordNode(pos=(317, 319), word='gd'),
  WordNode(pos=(322, 329), word='opcache'),
  WordNode(pos=(332, 341), word='pdo_mysql'),
  WordNode(pos=(344, 353), word='pdo_pgsql'),
  WordNode(pos=(356, 359), word='zip'),
])


145) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


146) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(278, 359), parts=[
  WordNode(pos=(278, 300), word='docker-php-ext-install'),
  WordNode(pos=(301, 303), word='-j'),
  WordNode(pos=(304, 314), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(307, 312), parts=[
        WordNode(pos=(307, 312), word='nproc'),
      ]), pos=(305, 313)),
  ]),
  WordNode(pos=(317, 319), word='gd'),
  WordNode(pos=(322, 329), word='opcache'),
  WordNode(pos=(332, 341), word='pdo_mysql'),
  WordNode(pos=(344, 353), word='pdo_pgsql'),
  WordNode(pos=(356, 359), word='zip'),
])


147) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


148) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


149) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


150) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


151) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


152) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


153) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


154) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


155) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


156) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


157) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


158) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


159) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


160) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


161) make -j "$(nproc)"

CommandNode(pos=(819, 837), parts=[
  WordNode(pos=(819, 823), word='make'),
  WordNode(pos=(824, 826), word='-j'),
  WordNode(pos=(827, 837), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(830, 835), parts=[
        WordNode(pos=(830, 835), word='nproc'),
      ]), pos=(828, 836)),
  ]),
])


162) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(342, 558), parts=[
  AssignmentNode(pos=(342, 558), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(356, 554), parts=[
        CommandNode(pos=(356, 441), parts=[
          WordNode(pos=(356, 363), word='scanelf'),
          WordNode(pos=(364, 372), word='--needed'),
          WordNode(pos=(373, 383), word='--nobanner'),
          WordNode(pos=(384, 392), word='--format'),
          WordNode(pos=(393, 399), word='%n#p'),
          WordNode(pos=(400, 411), word='--recursive'),
          WordNode(pos=(412, 441), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(445, 446)),
        CommandNode(pos=(447, 458), parts=[
          WordNode(pos=(447, 449), word='tr'),
          WordNode(pos=(450, 453), word=','),
          WordNode(pos=(454, 458), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 471), parts=[
          WordNode(pos=(464, 468), word='sort'),
          WordNode(pos=(469, 471), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(475, 476)),
        CommandNode(pos=(477, 554), parts=[
          WordNode(pos=(477, 480), word='awk'),
          WordNode(pos=(481, 554), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(351, 555)),
  ]),
])


163) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


164) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


165) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1081, 1138), parts=[
  AssignmentNode(pos=(1081, 1138), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1092, 1136), parts=[
        WordNode(pos=(1092, 1109), word='dpkg-architecture'),
        WordNode(pos=(1110, 1117), word='--query'),
        WordNode(pos=(1118, 1136), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1090, 1137)),
  ]),
])


166) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1300, 1364), parts=[
  WordNode(pos=(1300, 1304), word='make'),
  WordNode(pos=(1305, 1307), word='-j'),
  WordNode(pos=(1308, 1318), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1311, 1316), parts=[
        WordNode(pos=(1311, 1316), word='nproc'),
      ]), pos=(1309, 1317)),
  ]),
  WordNode(pos=(1321, 1364), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


167) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


168) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


169) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


170) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


171) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


172) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


173) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


174) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


175) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


176) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


177) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


178) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


179) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


180) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(601, 673), parts=[
  WordNode(pos=(601, 605), word='make'),
  WordNode(pos=(606, 608), word='-C'),
  WordNode(pos=(609, 625), word='/usr/src/haproxy'),
  WordNode(pos=(626, 628), word='-j'),
  WordNode(pos=(629, 659), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(632, 657), parts=[
        WordNode(pos=(632, 639), word='getconf'),
        WordNode(pos=(640, 657), word='_NPROCESSORS_ONLN'),
      ]), pos=(630, 658)),
  ]),
  WordNode(pos=(660, 663), word='all'),
  WordNode(pos=(664, 673), word='$makeOpts', parts=[
    ParameterNode(pos=(664, 673), value='makeOpts'),
  ]),
])


181) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(872, 1069), parts=[
  AssignmentNode(pos=(872, 1069), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(886, 1065), parts=[
        CommandNode(pos=(886, 952), parts=[
          WordNode(pos=(886, 893), word='scanelf'),
          WordNode(pos=(894, 902), word='--needed'),
          WordNode(pos=(903, 913), word='--nobanner'),
          WordNode(pos=(914, 922), word='--format'),
          WordNode(pos=(923, 929), word='%n#p'),
          WordNode(pos=(930, 941), word='--recursive'),
          WordNode(pos=(942, 952), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(956, 957)),
        CommandNode(pos=(958, 969), parts=[
          WordNode(pos=(958, 960), word='tr'),
          WordNode(pos=(961, 964), word=','),
          WordNode(pos=(965, 969), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(973, 974)),
        CommandNode(pos=(975, 982), parts=[
          WordNode(pos=(975, 979), word='sort'),
          WordNode(pos=(980, 982), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(986, 987)),
        CommandNode(pos=(988, 1065), parts=[
          WordNode(pos=(988, 991), word='awk'),
          WordNode(pos=(992, 1065), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(881, 1066)),
  ]),
])


182) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


183) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(10, 67), parts=[
  AssignmentNode(pos=(10, 67), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(21, 65), parts=[
        WordNode(pos=(21, 38), word='dpkg-architecture'),
        WordNode(pos=(39, 46), word='--query'),
        WordNode(pos=(47, 65), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(19, 66)),
  ]),
])


184) make -C /usr/src/buildroot HOST_GMP_CONF_OPTS="--build='"$gnuArch"'" -j "$(nproc)" toolchain

CommandNode(pos=(70, 162), parts=[
  WordNode(pos=(70, 74), word='make'),
  WordNode(pos=(75, 77), word='-C'),
  WordNode(pos=(78, 96), word='/usr/src/buildroot'),
  WordNode(pos=(97, 138), word='HOST_GMP_CONF_OPTS=--build=$gnuArch', parts=[
    ParameterNode(pos=(127, 135), value='gnuArch'),
  ]),
  WordNode(pos=(139, 141), word='-j'),
  WordNode(pos=(142, 152), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(145, 150), parts=[
        WordNode(pos=(145, 150), word='nproc'),
      ]), pos=(143, 151)),
  ]),
  WordNode(pos=(153, 162), word='toolchain'),
])


185) make -j "$(nproc)"   CROSS_COMPILE="$(basename /usr/src/buildroot/output/host/usr/*-buildroot-linux-uclibc*)-"   busybox

CommandNode(pos=(12, 132), parts=[
  WordNode(pos=(12, 16), word='make'),
  WordNode(pos=(17, 19), word='-j'),
  WordNode(pos=(20, 30), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(23, 28), parts=[
        WordNode(pos=(23, 28), word='nproc'),
      ]), pos=(21, 29)),
  ]),
  WordNode(pos=(33, 122), word='CROSS_COMPILE=$(basename /usr/src/buildroot/output/host/usr/*-buildroot-linux-uclibc*)-', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(50, 119), parts=[
        WordNode(pos=(50, 58), word='basename'),
        WordNode(pos=(59, 119), word='/usr/src/buildroot/output/host/usr/*-buildroot-linux-uclibc*'),
      ]), pos=(48, 120)),
  ]),
  WordNode(pos=(125, 132), word='busybox'),
])


186) make -j "$(nproc)"   CROSS_COMPILE="$(basename /usr/src/buildroot/output/host/usr/*-buildroot-linux-uclibc*)-"   busybox

CommandNode(pos=(12, 132), parts=[
  WordNode(pos=(12, 16), word='make'),
  WordNode(pos=(17, 19), word='-j'),
  WordNode(pos=(20, 30), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(23, 28), parts=[
        WordNode(pos=(23, 28), word='nproc'),
      ]), pos=(21, 29)),
  ]),
  WordNode(pos=(33, 122), word='CROSS_COMPILE=$(basename /usr/src/buildroot/output/host/usr/*-buildroot-linux-uclibc*)-', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(50, 119), parts=[
        WordNode(pos=(50, 58), word='basename'),
        WordNode(pos=(59, 119), word='/usr/src/buildroot/output/host/usr/*-buildroot-linux-uclibc*'),
      ]), pos=(48, 120)),
  ]),
  WordNode(pos=(125, 132), word='busybox'),
])


187) set -ex  && cd rootfs  && for userHome in $(awk -F ':' '{ print $3 ":" $4 "=" $6 }' etc/passwd); do   user="${userHome%%=*}";   home="${userHome#*=}";   home="./${home#/}";   if [ ! -d "$home" ]; then    mkdir -p "$home";    chown "$user" "$home";    chmod 755 "$home";   fi;  done

ListNode(pos=(0, 281), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 21), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 21), word='rootfs'),
  ]),
  OperatorNode(op='&&', pos=(23, 25)),
  CompoundNode(list=[
    ForNode(pos=(26, 281), parts=[
      ReservedwordNode(pos=(26, 29), word='for'),
      WordNode(pos=(30, 38), word='userHome'),
      ReservedwordNode(pos=(39, 41), word='in'),
      WordNode(pos=(42, 95), word='$(awk -F \':\' \'{ print $3 ":" $4 "=" $6 }\' etc/passwd)', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(44, 94), parts=[
            WordNode(pos=(44, 47), word='awk'),
            WordNode(pos=(48, 50), word='-F'),
            WordNode(pos=(51, 54), word=':'),
            WordNode(pos=(55, 83), word='{ print $3 ":" $4 "=" $6 }'),
            WordNode(pos=(84, 94), word='etc/passwd'),
          ]), pos=(42, 95)),
      ]),
      ReservedwordNode(pos=(95, 96), word=';'),
      ReservedwordNode(pos=(97, 99), word='do'),
      ListNode(pos=(102, 275), parts=[
          CommandNode(pos=(102, 124), parts=[
            AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
              ParameterNode(pos=(108, 123), value='userHome%%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(124, 125)),
          CommandNode(pos=(128, 149), parts=[
            AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
              ParameterNode(pos=(134, 148), value='userHome#*='),
            ]),
          ]),
          OperatorNode(op=';', pos=(149, 150)),
          CommandNode(pos=(153, 171), parts=[
            AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
              ParameterNode(pos=(161, 170), value='home#/'),
            ]),
          ]),
          OperatorNode(op=';', pos=(171, 172)),
          CompoundNode(list=[
            IfNode(pos=(175, 274), parts=[
              ReservedwordNode(pos=(175, 177), word='if'),
              ListNode(pos=(178, 195), parts=[
                  CommandNode(pos=(178, 194), parts=[
                    WordNode(pos=(178, 179), word='['),
                    WordNode(pos=(180, 181), word='!'),
                    WordNode(pos=(182, 184), word='-d'),
                    WordNode(pos=(185, 192), word='$home', parts=[
                      ParameterNode(pos=(186, 191), value='home'),
                    ]),
                    WordNode(pos=(193, 194), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(194, 195)),
                ]),
              ReservedwordNode(pos=(196, 200), word='then'),
              ListNode(pos=(204, 269), parts=[
                  CommandNode(pos=(204, 220), parts=[
                    WordNode(pos=(204, 209), word='mkdir'),
                    WordNode(pos=(210, 212), word='-p'),
                    WordNode(pos=(213, 220), word='$home', parts=[
                      ParameterNode(pos=(214, 219), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(220, 221)),
                  CommandNode(pos=(225, 246), parts=[
                    WordNode(pos=(225, 230), word='chown'),
                    WordNode(pos=(231, 238), word='$user', parts=[
                      ParameterNode(pos=(232, 237), value='user'),
                    ]),
                    WordNode(pos=(239, 246), word='$home', parts=[
                      ParameterNode(pos=(240, 245), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(246, 247)),
                  CommandNode(pos=(251, 268), parts=[
                    WordNode(pos=(251, 256), word='chmod'),
                    WordNode(pos=(257, 260), word='755'),
                    WordNode(pos=(261, 268), word='$home', parts=[
                      ParameterNode(pos=(262, 267), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(268, 269)),
                ]),
              ReservedwordNode(pos=(272, 274), word='fi'),
            ]),
          ], pos=(175, 274)),
          OperatorNode(op=';', pos=(274, 275)),
        ]),
      ReservedwordNode(pos=(277, 281), word='done'),
    ]),
  ], pos=(26, 281)),
])


188) [ "$(chroot rootfs date +%Z)" = 'UTC' ]

CommandNode(pos=(64, 103), parts=[
  WordNode(pos=(64, 65), word='['),
  WordNode(pos=(66, 93), word='$(chroot rootfs date +%Z)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(69, 91), parts=[
        WordNode(pos=(69, 75), word='chroot'),
        WordNode(pos=(76, 82), word='rootfs'),
        WordNode(pos=(83, 87), word='date'),
        WordNode(pos=(88, 91), word='+%Z'),
      ]), pos=(67, 92)),
  ]),
  WordNode(pos=(94, 95), word='='),
  WordNode(pos=(96, 101), word='UTC'),
  WordNode(pos=(102, 103), word=']'),
])


189) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


190) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


191) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


192) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


193) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(777, 808), parts=[
  WordNode(pos=(777, 783), word='export'),
  WordNode(pos=(784, 808), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(797, 806), parts=[
        WordNode(pos=(797, 803), word='mktemp'),
        WordNode(pos=(804, 806), word='-d'),
      ]), pos=(795, 807)),
  ]),
])


194) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1558, 1615), parts=[
  AssignmentNode(pos=(1558, 1615), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1569, 1613), parts=[
        WordNode(pos=(1569, 1586), word='dpkg-architecture'),
        WordNode(pos=(1587, 1594), word='--query'),
        WordNode(pos=(1595, 1613), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1567, 1614)),
  ]),
])


195) make -j "$(nproc)"

CommandNode(pos=(1742, 1760), parts=[
  WordNode(pos=(1742, 1746), word='make'),
  WordNode(pos=(1747, 1749), word='-j'),
  WordNode(pos=(1750, 1760), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1753, 1758), parts=[
        WordNode(pos=(1753, 1758), word='nproc'),
      ]), pos=(1751, 1759)),
  ]),
])


196) runDeps="$runDeps $(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2059, 2265), parts=[
  AssignmentNode(pos=(2059, 2265), word='runDeps=$runDeps $(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    ParameterNode(pos=(2068, 2076), value='runDeps'),
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2082, 2261), parts=[
        CommandNode(pos=(2082, 2148), parts=[
          WordNode(pos=(2082, 2089), word='scanelf'),
          WordNode(pos=(2090, 2098), word='--needed'),
          WordNode(pos=(2099, 2109), word='--nobanner'),
          WordNode(pos=(2110, 2118), word='--format'),
          WordNode(pos=(2119, 2125), word='%n#p'),
          WordNode(pos=(2126, 2137), word='--recursive'),
          WordNode(pos=(2138, 2148), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(2152, 2153)),
        CommandNode(pos=(2154, 2165), parts=[
          WordNode(pos=(2154, 2156), word='tr'),
          WordNode(pos=(2157, 2160), word=','),
          WordNode(pos=(2161, 2165), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(2169, 2170)),
        CommandNode(pos=(2171, 2178), parts=[
          WordNode(pos=(2171, 2175), word='sort'),
          WordNode(pos=(2176, 2178), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(2182, 2183)),
        CommandNode(pos=(2184, 2261), parts=[
          WordNode(pos=(2184, 2187), word='awk'),
          WordNode(pos=(2188, 2261), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2077, 2262)),
  ]),
])


197) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


198) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(608, 639), parts=[
  WordNode(pos=(608, 614), word='export'),
  WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(628, 637), parts=[
        WordNode(pos=(628, 634), word='mktemp'),
        WordNode(pos=(635, 637), word='-d'),
      ]), pos=(626, 638)),
  ]),
])


199) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


200) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


201) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1340, 1378), parts=[
  WordNode(pos=(1340, 1344), word='make'),
  WordNode(pos=(1345, 1347), word='-j'),
  WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1351, 1376), parts=[
        WordNode(pos=(1351, 1358), word='getconf'),
        WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
      ]), pos=(1349, 1377)),
  ]),
])


202) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


203) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


204) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


205) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


206) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(3077, 3155), parts=[
  WordNode(pos=(3077, 3081), word='make'),
  WordNode(pos=(3082, 3084), word='-j'),
  WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(3088, 3113), parts=[
        WordNode(pos=(3088, 3095), word='getconf'),
        WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
      ]), pos=(3086, 3114)),
  ]),
  WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


207) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


208) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(607, 638), parts=[
  WordNode(pos=(607, 613), word='export'),
  WordNode(pos=(614, 638), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(627, 636), parts=[
        WordNode(pos=(627, 633), word='mktemp'),
        WordNode(pos=(634, 636), word='-d'),
      ]), pos=(625, 637)),
  ]),
])


209) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


210) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


211) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


212) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


213) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


214) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


215) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


216) make -j "$(nproc)"   busybox

CommandNode(pos=(12, 40), parts=[
  WordNode(pos=(12, 16), word='make'),
  WordNode(pos=(17, 19), word='-j'),
  WordNode(pos=(20, 30), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(23, 28), parts=[
        WordNode(pos=(23, 28), word='nproc'),
      ]), pos=(21, 29)),
  ]),
  WordNode(pos=(33, 40), word='busybox'),
])


217) aportsVersion="v$(cat /etc/alpine-release)"

CommandNode(pos=(11, 54), parts=[
  AssignmentNode(pos=(11, 54), word='aportsVersion=v$(cat /etc/alpine-release)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 52), parts=[
        WordNode(pos=(29, 32), word='cat'),
        WordNode(pos=(33, 52), word='/etc/alpine-release'),
      ]), pos=(27, 53)),
  ]),
])


218) set -ex  && cd rootfs  && for userHome in $(awk -F ':' '{ print $3 ":" $4 "=" $6 }' etc/passwd); do   user="${userHome%%=*}";   home="${userHome#*=}";   home="./${home#/}";   if [ ! -d "$home" ]; then    mkdir -p "$home";    chown "$user" "$home";    chmod 755 "$home";   fi;  done

ListNode(pos=(0, 281), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 21), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 21), word='rootfs'),
  ]),
  OperatorNode(op='&&', pos=(23, 25)),
  CompoundNode(list=[
    ForNode(pos=(26, 281), parts=[
      ReservedwordNode(pos=(26, 29), word='for'),
      WordNode(pos=(30, 38), word='userHome'),
      ReservedwordNode(pos=(39, 41), word='in'),
      WordNode(pos=(42, 95), word='$(awk -F \':\' \'{ print $3 ":" $4 "=" $6 }\' etc/passwd)', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(44, 94), parts=[
            WordNode(pos=(44, 47), word='awk'),
            WordNode(pos=(48, 50), word='-F'),
            WordNode(pos=(51, 54), word=':'),
            WordNode(pos=(55, 83), word='{ print $3 ":" $4 "=" $6 }'),
            WordNode(pos=(84, 94), word='etc/passwd'),
          ]), pos=(42, 95)),
      ]),
      ReservedwordNode(pos=(95, 96), word=';'),
      ReservedwordNode(pos=(97, 99), word='do'),
      ListNode(pos=(102, 275), parts=[
          CommandNode(pos=(102, 124), parts=[
            AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
              ParameterNode(pos=(108, 123), value='userHome%%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(124, 125)),
          CommandNode(pos=(128, 149), parts=[
            AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
              ParameterNode(pos=(134, 148), value='userHome#*='),
            ]),
          ]),
          OperatorNode(op=';', pos=(149, 150)),
          CommandNode(pos=(153, 171), parts=[
            AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
              ParameterNode(pos=(161, 170), value='home#/'),
            ]),
          ]),
          OperatorNode(op=';', pos=(171, 172)),
          CompoundNode(list=[
            IfNode(pos=(175, 274), parts=[
              ReservedwordNode(pos=(175, 177), word='if'),
              ListNode(pos=(178, 195), parts=[
                  CommandNode(pos=(178, 194), parts=[
                    WordNode(pos=(178, 179), word='['),
                    WordNode(pos=(180, 181), word='!'),
                    WordNode(pos=(182, 184), word='-d'),
                    WordNode(pos=(185, 192), word='$home', parts=[
                      ParameterNode(pos=(186, 191), value='home'),
                    ]),
                    WordNode(pos=(193, 194), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(194, 195)),
                ]),
              ReservedwordNode(pos=(196, 200), word='then'),
              ListNode(pos=(204, 269), parts=[
                  CommandNode(pos=(204, 220), parts=[
                    WordNode(pos=(204, 209), word='mkdir'),
                    WordNode(pos=(210, 212), word='-p'),
                    WordNode(pos=(213, 220), word='$home', parts=[
                      ParameterNode(pos=(214, 219), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(220, 221)),
                  CommandNode(pos=(225, 246), parts=[
                    WordNode(pos=(225, 230), word='chown'),
                    WordNode(pos=(231, 238), word='$user', parts=[
                      ParameterNode(pos=(232, 237), value='user'),
                    ]),
                    WordNode(pos=(239, 246), word='$home', parts=[
                      ParameterNode(pos=(240, 245), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(246, 247)),
                  CommandNode(pos=(251, 268), parts=[
                    WordNode(pos=(251, 256), word='chmod'),
                    WordNode(pos=(257, 260), word='755'),
                    WordNode(pos=(261, 268), word='$home', parts=[
                      ParameterNode(pos=(262, 267), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(268, 269)),
                ]),
              ReservedwordNode(pos=(272, 274), word='fi'),
            ]),
          ], pos=(175, 274)),
          OperatorNode(op=';', pos=(274, 275)),
        ]),
      ReservedwordNode(pos=(277, 281), word='done'),
    ]),
  ], pos=(26, 281)),
])


219) [ "$(chroot rootfs date +%Z)" = 'UTC' ]

CommandNode(pos=(64, 103), parts=[
  WordNode(pos=(64, 65), word='['),
  WordNode(pos=(66, 93), word='$(chroot rootfs date +%Z)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(69, 91), parts=[
        WordNode(pos=(69, 75), word='chroot'),
        WordNode(pos=(76, 82), word='rootfs'),
        WordNode(pos=(83, 87), word='date'),
        WordNode(pos=(88, 91), word='+%Z'),
      ]), pos=(67, 92)),
  ]),
  WordNode(pos=(94, 95), word='='),
  WordNode(pos=(96, 101), word='UTC'),
  WordNode(pos=(102, 103), word=']'),
])


220) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


221) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


222) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


223) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1043, 1100), parts=[
  AssignmentNode(pos=(1043, 1100), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1054, 1098), parts=[
        WordNode(pos=(1054, 1071), word='dpkg-architecture'),
        WordNode(pos=(1072, 1079), word='--query'),
        WordNode(pos=(1080, 1098), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1052, 1099)),
  ]),
])


224) make -j "$(nproc)" world

CommandNode(pos=(1759, 1783), parts=[
  WordNode(pos=(1759, 1763), word='make'),
  WordNode(pos=(1764, 1766), word='-j'),
  WordNode(pos=(1767, 1777), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1770, 1775), parts=[
        WordNode(pos=(1770, 1775), word='nproc'),
      ]), pos=(1768, 1776)),
  ]),
  WordNode(pos=(1778, 1783), word='world'),
])


225) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1840, 2037), parts=[
  AssignmentNode(pos=(1840, 2037), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1854, 2033), parts=[
        CommandNode(pos=(1854, 1920), parts=[
          WordNode(pos=(1854, 1861), word='scanelf'),
          WordNode(pos=(1862, 1870), word='--needed'),
          WordNode(pos=(1871, 1881), word='--nobanner'),
          WordNode(pos=(1882, 1890), word='--format'),
          WordNode(pos=(1891, 1897), word='%n#p'),
          WordNode(pos=(1898, 1909), word='--recursive'),
          WordNode(pos=(1910, 1920), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1924, 1925)),
        CommandNode(pos=(1926, 1937), parts=[
          WordNode(pos=(1926, 1928), word='tr'),
          WordNode(pos=(1929, 1932), word=','),
          WordNode(pos=(1933, 1937), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1941, 1942)),
        CommandNode(pos=(1943, 1950), parts=[
          WordNode(pos=(1943, 1947), word='sort'),
          WordNode(pos=(1948, 1950), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1954, 1955)),
        CommandNode(pos=(1956, 2033), parts=[
          WordNode(pos=(1956, 1959), word='awk'),
          WordNode(pos=(1960, 2033), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1849, 2034)),
  ]),
])


226) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


227) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1072, 1129), parts=[
  AssignmentNode(pos=(1072, 1129), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1083, 1127), parts=[
        WordNode(pos=(1083, 1100), word='dpkg-architecture'),
        WordNode(pos=(1101, 1108), word='--query'),
        WordNode(pos=(1109, 1127), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1081, 1128)),
  ]),
])


228) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1255, 1319), parts=[
  WordNode(pos=(1255, 1259), word='make'),
  WordNode(pos=(1260, 1262), word='-j'),
  WordNode(pos=(1263, 1273), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1266, 1271), parts=[
        WordNode(pos=(1266, 1271), word='nproc'),
      ]), pos=(1264, 1272)),
  ]),
  WordNode(pos=(1276, 1319), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


229) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


230) make -j "$(nproc)"   busybox

CommandNode(pos=(12, 40), parts=[
  WordNode(pos=(12, 16), word='make'),
  WordNode(pos=(17, 19), word='-j'),
  WordNode(pos=(20, 30), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(23, 28), parts=[
        WordNode(pos=(23, 28), word='nproc'),
      ]), pos=(21, 29)),
  ]),
  WordNode(pos=(33, 40), word='busybox'),
])


231) ln -vL "$(which getconf)" rootfs/bin/getconf

CommandNode(pos=(122, 166), parts=[
  WordNode(pos=(122, 124), word='ln'),
  WordNode(pos=(125, 128), word='-vL'),
  WordNode(pos=(129, 147), word='$(which getconf)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(132, 145), parts=[
        WordNode(pos=(132, 137), word='which'),
        WordNode(pos=(138, 145), word='getconf'),
      ]), pos=(130, 146)),
  ]),
  WordNode(pos=(148, 166), word='rootfs/bin/getconf'),
])


232) set --   rootfs/bin/busybox   rootfs/bin/getconf   /lib/"$(gcc -print-multiarch)"/libnss*.so.*   /lib/"$(gcc -print-multiarch)"/libpthread*.so.*

CommandNode(pos=(286, 430), parts=[
  WordNode(pos=(286, 289), word='set'),
  WordNode(pos=(290, 292), word='--'),
  WordNode(pos=(295, 313), word='rootfs/bin/busybox'),
  WordNode(pos=(316, 334), word='rootfs/bin/getconf'),
  WordNode(pos=(337, 380), word='/lib/$(gcc -print-multiarch)/libnss*.so.*', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(345, 365), parts=[
        WordNode(pos=(345, 348), word='gcc'),
        WordNode(pos=(349, 365), word='-print-multiarch'),
      ]), pos=(343, 366)),
  ]),
  WordNode(pos=(383, 430), word='/lib/$(gcc -print-multiarch)/libpthread*.so.*', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(391, 411), parts=[
        WordNode(pos=(391, 394), word='gcc'),
        WordNode(pos=(395, 411), word='-print-multiarch'),
      ]), pos=(389, 412)),
  ]),
])


233) set --   rootfs/bin/busybox   rootfs/bin/getconf   /lib/"$(gcc -print-multiarch)"/libnss*.so.*   /lib/"$(gcc -print-multiarch)"/libpthread*.so.*

CommandNode(pos=(286, 430), parts=[
  WordNode(pos=(286, 289), word='set'),
  WordNode(pos=(290, 292), word='--'),
  WordNode(pos=(295, 313), word='rootfs/bin/busybox'),
  WordNode(pos=(316, 334), word='rootfs/bin/getconf'),
  WordNode(pos=(337, 380), word='/lib/$(gcc -print-multiarch)/libnss*.so.*', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(345, 365), parts=[
        WordNode(pos=(345, 348), word='gcc'),
        WordNode(pos=(349, 365), word='-print-multiarch'),
      ]), pos=(343, 366)),
  ]),
  WordNode(pos=(383, 430), word='/lib/$(gcc -print-multiarch)/libpthread*.so.*', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(391, 411), parts=[
        WordNode(pos=(391, 394), word='gcc'),
        WordNode(pos=(395, 411), word='-print-multiarch'),
      ]), pos=(389, 412)),
  ]),
])


234) fn="$(basename "$f")"

CommandNode(pos=(479, 500), parts=[
  AssignmentNode(pos=(479, 500), word='fn=$(basename "$f")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(485, 498), parts=[
        WordNode(pos=(485, 493), word='basename'),
        WordNode(pos=(494, 498), word='$f', parts=[
          ParameterNode(pos=(495, 497), value='f'),
        ]),
      ]), pos=(483, 499)),
  ]),
])


235) set -- "$@" $(ldd "$f" | awk '    $1 ~ /^\// { print $1; next }    $2 == "=>" && $3 ~ /^\// { print $3; next }   ')

CommandNode(pos=(714, 829), parts=[
  WordNode(pos=(714, 717), word='set'),
  WordNode(pos=(718, 720), word='--'),
  WordNode(pos=(721, 725), word='$@', parts=[
    ParameterNode(pos=(722, 724), value='@'),
  ]),
  WordNode(pos=(726, 829), word='$(ldd "$f" | awk \'    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   \')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(728, 828), parts=[
        CommandNode(pos=(728, 736), parts=[
          WordNode(pos=(728, 731), word='ldd'),
          WordNode(pos=(732, 736), word='$f', parts=[
            ParameterNode(pos=(733, 735), value='f'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(737, 738)),
        CommandNode(pos=(739, 828), parts=[
          WordNode(pos=(739, 742), word='awk'),
          WordNode(pos=(743, 828), word='    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   '),
        ]),
      ]), pos=(726, 829)),
  ]),
])


236) set -ex  && cd rootfs  && for userHome in $(awk -F ':' '{ print $3 ":" $4 "=" $6 }' etc/passwd); do   user="${userHome%%=*}";   home="${userHome#*=}";   home="./${home#/}";   if [ ! -d "$home" ]; then    mkdir -p "$home";    chown "$user" "$home";    chmod 755 "$home";   fi;  done

ListNode(pos=(0, 281), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 21), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 21), word='rootfs'),
  ]),
  OperatorNode(op='&&', pos=(23, 25)),
  CompoundNode(list=[
    ForNode(pos=(26, 281), parts=[
      ReservedwordNode(pos=(26, 29), word='for'),
      WordNode(pos=(30, 38), word='userHome'),
      ReservedwordNode(pos=(39, 41), word='in'),
      WordNode(pos=(42, 95), word='$(awk -F \':\' \'{ print $3 ":" $4 "=" $6 }\' etc/passwd)', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(44, 94), parts=[
            WordNode(pos=(44, 47), word='awk'),
            WordNode(pos=(48, 50), word='-F'),
            WordNode(pos=(51, 54), word=':'),
            WordNode(pos=(55, 83), word='{ print $3 ":" $4 "=" $6 }'),
            WordNode(pos=(84, 94), word='etc/passwd'),
          ]), pos=(42, 95)),
      ]),
      ReservedwordNode(pos=(95, 96), word=';'),
      ReservedwordNode(pos=(97, 99), word='do'),
      ListNode(pos=(102, 275), parts=[
          CommandNode(pos=(102, 124), parts=[
            AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
              ParameterNode(pos=(108, 123), value='userHome%%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(124, 125)),
          CommandNode(pos=(128, 149), parts=[
            AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
              ParameterNode(pos=(134, 148), value='userHome#*='),
            ]),
          ]),
          OperatorNode(op=';', pos=(149, 150)),
          CommandNode(pos=(153, 171), parts=[
            AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
              ParameterNode(pos=(161, 170), value='home#/'),
            ]),
          ]),
          OperatorNode(op=';', pos=(171, 172)),
          CompoundNode(list=[
            IfNode(pos=(175, 274), parts=[
              ReservedwordNode(pos=(175, 177), word='if'),
              ListNode(pos=(178, 195), parts=[
                  CommandNode(pos=(178, 194), parts=[
                    WordNode(pos=(178, 179), word='['),
                    WordNode(pos=(180, 181), word='!'),
                    WordNode(pos=(182, 184), word='-d'),
                    WordNode(pos=(185, 192), word='$home', parts=[
                      ParameterNode(pos=(186, 191), value='home'),
                    ]),
                    WordNode(pos=(193, 194), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(194, 195)),
                ]),
              ReservedwordNode(pos=(196, 200), word='then'),
              ListNode(pos=(204, 269), parts=[
                  CommandNode(pos=(204, 220), parts=[
                    WordNode(pos=(204, 209), word='mkdir'),
                    WordNode(pos=(210, 212), word='-p'),
                    WordNode(pos=(213, 220), word='$home', parts=[
                      ParameterNode(pos=(214, 219), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(220, 221)),
                  CommandNode(pos=(225, 246), parts=[
                    WordNode(pos=(225, 230), word='chown'),
                    WordNode(pos=(231, 238), word='$user', parts=[
                      ParameterNode(pos=(232, 237), value='user'),
                    ]),
                    WordNode(pos=(239, 246), word='$home', parts=[
                      ParameterNode(pos=(240, 245), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(246, 247)),
                  CommandNode(pos=(251, 268), parts=[
                    WordNode(pos=(251, 256), word='chmod'),
                    WordNode(pos=(257, 260), word='755'),
                    WordNode(pos=(261, 268), word='$home', parts=[
                      ParameterNode(pos=(262, 267), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(268, 269)),
                ]),
              ReservedwordNode(pos=(272, 274), word='fi'),
            ]),
          ], pos=(175, 274)),
          OperatorNode(op=';', pos=(274, 275)),
        ]),
      ReservedwordNode(pos=(277, 281), word='done'),
    ]),
  ], pos=(26, 281)),
])


237) [ "$(chroot rootfs date +%Z)" = 'UTC' ]

CommandNode(pos=(64, 103), parts=[
  WordNode(pos=(64, 65), word='['),
  WordNode(pos=(66, 93), word='$(chroot rootfs date +%Z)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(69, 91), parts=[
        WordNode(pos=(69, 75), word='chroot'),
        WordNode(pos=(76, 82), word='rootfs'),
        WordNode(pos=(83, 87), word='date'),
        WordNode(pos=(88, 91), word='+%Z'),
      ]), pos=(67, 92)),
  ]),
  WordNode(pos=(94, 95), word='='),
  WordNode(pos=(96, 101), word='UTC'),
  WordNode(pos=(102, 103), word=']'),
])


238) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


239) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


240) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


241) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(278, 359), parts=[
  WordNode(pos=(278, 300), word='docker-php-ext-install'),
  WordNode(pos=(301, 303), word='-j'),
  WordNode(pos=(304, 314), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(307, 312), parts=[
        WordNode(pos=(307, 312), word='nproc'),
      ]), pos=(305, 313)),
  ]),
  WordNode(pos=(317, 319), word='gd'),
  WordNode(pos=(322, 329), word='opcache'),
  WordNode(pos=(332, 341), word='pdo_mysql'),
  WordNode(pos=(344, 353), word='pdo_pgsql'),
  WordNode(pos=(356, 359), word='zip'),
])


242) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


243) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


244) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(637, 689), parts=[
  WordNode(pos=(637, 641), word='make'),
  WordNode(pos=(642, 644), word='-C'),
  WordNode(pos=(645, 661), word='/usr/src/haproxy'),
  WordNode(pos=(662, 664), word='-j'),
  WordNode(pos=(665, 675), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(668, 673), parts=[
        WordNode(pos=(668, 673), word='nproc'),
      ]), pos=(666, 674)),
  ]),
  WordNode(pos=(676, 679), word='all'),
  WordNode(pos=(680, 689), word='$makeOpts', parts=[
    ParameterNode(pos=(680, 689), value='makeOpts'),
  ]),
])


245) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


246) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(164, 229), parts=[
  AssignmentNode(pos=(164, 229), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(176, 227), parts=[
        CommandNode(pos=(176, 201), parts=[
          WordNode(pos=(176, 180), word='dpkg'),
          WordNode(pos=(181, 201), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(202, 203)),
        CommandNode(pos=(204, 227), parts=[
          WordNode(pos=(204, 207), word='awk'),
          WordNode(pos=(208, 211), word='-F-'),
          WordNode(pos=(212, 227), word='{ print $NF }'),
        ]),
      ]), pos=(174, 228)),
  ]),
])


247) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(490, 521), parts=[
  WordNode(pos=(490, 496), word='export'),
  WordNode(pos=(497, 521), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(510, 519), parts=[
        WordNode(pos=(510, 516), word='mktemp'),
        WordNode(pos=(517, 519), word='-d'),
      ]), pos=(508, 520)),
  ]),
])


248) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(1077, 1108), parts=[
  WordNode(pos=(1077, 1083), word='export'),
  WordNode(pos=(1084, 1108), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1097, 1106), parts=[
        WordNode(pos=(1097, 1103), word='mktemp'),
        WordNode(pos=(1104, 1106), word='-d'),
      ]), pos=(1095, 1107)),
  ]),
])


249) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


250) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(561, 618), parts=[
  AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(572, 616), parts=[
        WordNode(pos=(572, 589), word='dpkg-architecture'),
        WordNode(pos=(590, 597), word='--query'),
        WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(570, 617)),
  ]),
])


251) make -j "$(nproc)"

CommandNode(pos=(678, 696), parts=[
  WordNode(pos=(678, 682), word='make'),
  WordNode(pos=(683, 685), word='-j'),
  WordNode(pos=(686, 696), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 694), parts=[
        WordNode(pos=(689, 694), word='nproc'),
      ]), pos=(687, 695)),
  ]),
])


252) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


253) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


254) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


255) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


256) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


257) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


258) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


259) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


260) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1317, 1381), parts=[
  WordNode(pos=(1317, 1321), word='make'),
  WordNode(pos=(1322, 1324), word='-j'),
  WordNode(pos=(1325, 1335), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1328, 1333), parts=[
        WordNode(pos=(1328, 1333), word='nproc'),
      ]), pos=(1326, 1334)),
  ]),
  WordNode(pos=(1338, 1381), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


261) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


262) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


263) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


264) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


265) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


266) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1072, 1129), parts=[
  AssignmentNode(pos=(1072, 1129), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1083, 1127), parts=[
        WordNode(pos=(1083, 1100), word='dpkg-architecture'),
        WordNode(pos=(1101, 1108), word='--query'),
        WordNode(pos=(1109, 1127), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1081, 1128)),
  ]),
])


267) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1255, 1319), parts=[
  WordNode(pos=(1255, 1259), word='make'),
  WordNode(pos=(1260, 1262), word='-j'),
  WordNode(pos=(1263, 1273), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1266, 1271), parts=[
        WordNode(pos=(1266, 1271), word='nproc'),
      ]), pos=(1264, 1272)),
  ]),
  WordNode(pos=(1276, 1319), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


268) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


269) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(448, 501), parts=[
  WordNode(pos=(448, 451), word='ldd'),
  WordNode(pos=(452, 501), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(455, 494), parts=[
        WordNode(pos=(455, 458), word='php'),
        WordNode(pos=(459, 461), word='-r'),
        WordNode(pos=(462, 494), word='echo ini_get("extension_dir");'),
      ]), pos=(453, 495)),
  ]),
])


270) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


271) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


272) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


273) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(521, 552), parts=[
  WordNode(pos=(521, 527), word='export'),
  WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(541, 550), parts=[
        WordNode(pos=(541, 547), word='mktemp'),
        WordNode(pos=(548, 550), word='-d'),
      ]), pos=(539, 551)),
  ]),
])


274) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


275) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1145, 1183), parts=[
  WordNode(pos=(1145, 1149), word='make'),
  WordNode(pos=(1150, 1152), word='-j'),
  WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1156, 1181), parts=[
        WordNode(pos=(1156, 1163), word='getconf'),
        WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
      ]), pos=(1154, 1182)),
  ]),
])


276) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


277) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


278) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


279) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


280) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(2771, 2849), parts=[
  WordNode(pos=(2771, 2775), word='make'),
  WordNode(pos=(2776, 2778), word='-j'),
  WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2782, 2807), parts=[
        WordNode(pos=(2782, 2789), word='getconf'),
        WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
      ]), pos=(2780, 2808)),
  ]),
  WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


281) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


282) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(462, 493), parts=[
  WordNode(pos=(462, 468), word='export'),
  WordNode(pos=(469, 493), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(482, 491), parts=[
        WordNode(pos=(482, 488), word='mktemp'),
        WordNode(pos=(489, 491), word='-d'),
      ]), pos=(480, 492)),
  ]),
])


283) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


284) docker-php-ext-install -j "$(nproc)"   exif   gd   intl   ldap   mcrypt   opcache   pcntl   pdo_mysql   pdo_pgsql   pgsql   zip

CommandNode(pos=(213, 340), parts=[
  WordNode(pos=(213, 235), word='docker-php-ext-install'),
  WordNode(pos=(236, 238), word='-j'),
  WordNode(pos=(239, 249), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(242, 247), parts=[
        WordNode(pos=(242, 247), word='nproc'),
      ]), pos=(240, 248)),
  ]),
  WordNode(pos=(252, 256), word='exif'),
  WordNode(pos=(259, 261), word='gd'),
  WordNode(pos=(264, 268), word='intl'),
  WordNode(pos=(271, 275), word='ldap'),
  WordNode(pos=(278, 284), word='mcrypt'),
  WordNode(pos=(287, 294), word='opcache'),
  WordNode(pos=(297, 302), word='pcntl'),
  WordNode(pos=(305, 314), word='pdo_mysql'),
  WordNode(pos=(317, 326), word='pdo_pgsql'),
  WordNode(pos=(329, 334), word='pgsql'),
  WordNode(pos=(337, 340), word='zip'),
])


285) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(300, 331), parts=[
  WordNode(pos=(300, 306), word='export'),
  WordNode(pos=(307, 331), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(320, 329), parts=[
        WordNode(pos=(320, 326), word='mktemp'),
        WordNode(pos=(327, 329), word='-d'),
      ]), pos=(318, 330)),
  ]),
])


286) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


287) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


288) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


289) make -j "$(nproc)" world

CommandNode(pos=(1782, 1806), parts=[
  WordNode(pos=(1782, 1786), word='make'),
  WordNode(pos=(1787, 1789), word='-j'),
  WordNode(pos=(1790, 1800), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1793, 1798), parts=[
        WordNode(pos=(1793, 1798), word='nproc'),
      ]), pos=(1791, 1799)),
  ]),
  WordNode(pos=(1801, 1806), word='world'),
])


290) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


291) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


292) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


293) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


294) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


295) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


296) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


297) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


298) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(608, 639), parts=[
  WordNode(pos=(608, 614), word='export'),
  WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(628, 637), parts=[
        WordNode(pos=(628, 634), word='mktemp'),
        WordNode(pos=(635, 637), word='-d'),
      ]), pos=(626, 638)),
  ]),
])


299) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


300) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


301) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1340, 1378), parts=[
  WordNode(pos=(1340, 1344), word='make'),
  WordNode(pos=(1345, 1347), word='-j'),
  WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1351, 1376), parts=[
        WordNode(pos=(1351, 1358), word='getconf'),
        WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
      ]), pos=(1349, 1377)),
  ]),
])


302) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


303) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


304) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


305) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


306) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(3077, 3155), parts=[
  WordNode(pos=(3077, 3081), word='make'),
  WordNode(pos=(3082, 3084), word='-j'),
  WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(3088, 3113), parts=[
        WordNode(pos=(3088, 3095), word='getconf'),
        WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
      ]), pos=(3086, 3114)),
  ]),
  WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


307) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


308) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(607, 638), parts=[
  WordNode(pos=(607, 613), word='export'),
  WordNode(pos=(614, 638), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(627, 636), parts=[
        WordNode(pos=(627, 633), word='mktemp'),
        WordNode(pos=(634, 636), word='-d'),
      ]), pos=(625, 637)),
  ]),
])


309) sqlite3Version="$(npm view . optionalDependencies.sqlite3)"

CommandNode(pos=(711, 770), parts=[
  WordNode(pos=(711, 770), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(729, 768), parts=[
        WordNode(pos=(729, 732), word='npm'),
        WordNode(pos=(733, 737), word='view'),
        WordNode(pos=(738, 739), word='.'),
        WordNode(pos=(740, 768), word='optionalDependencies.sqlite3'),
      ]), pos=(727, 769)),
  ]),
])


310) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


311) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


312) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


313) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


314) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


315) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1272, 1336), parts=[
  WordNode(pos=(1272, 1276), word='make'),
  WordNode(pos=(1277, 1279), word='-j'),
  WordNode(pos=(1280, 1290), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1283, 1288), parts=[
        WordNode(pos=(1283, 1288), word='nproc'),
      ]), pos=(1281, 1289)),
  ]),
  WordNode(pos=(1293, 1336), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


316) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


317) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


318) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


319) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


320) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


321) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


322) [ -n "$(passenger-config build-native-support 2>&1)" ]

CommandNode(pos=(258, 312), parts=[
  WordNode(pos=(258, 259), word='['),
  WordNode(pos=(260, 262), word='-n'),
  WordNode(pos=(263, 310), word='$(passenger-config build-native-support 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(266, 308), parts=[
        WordNode(pos=(266, 282), word='passenger-config'),
        WordNode(pos=(283, 303), word='build-native-support'),
        RedirectNode(input=2, output=1, pos=(304, 308), type='>&'),
      ]), pos=(264, 309)),
  ]),
  WordNode(pos=(311, 312), word=']'),
])


323) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(22, 53), parts=[
  WordNode(pos=(22, 28), word='export'),
  WordNode(pos=(29, 53), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(42, 51), parts=[
        WordNode(pos=(42, 48), word='mktemp'),
        WordNode(pos=(49, 51), word='-d'),
      ]), pos=(40, 52)),
  ]),
])


324) goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"

CommandNode(pos=(211, 264), parts=[
  AssignmentNode(pos=(211, 264), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(220, 262), parts=[
        WordNode(pos=(220, 246), word='.bashbrew-arch-to-goenv.sh'),
        WordNode(pos=(247, 262), word='$bashbrewArch', parts=[
          ParameterNode(pos=(248, 261), value='bashbrewArch'),
        ]),
      ]), pos=(218, 263)),
  ]),
])


325) goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"

CommandNode(pos=(86, 139), parts=[
  AssignmentNode(pos=(86, 139), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(95, 137), parts=[
        WordNode(pos=(95, 121), word='.bashbrew-arch-to-goenv.sh'),
        WordNode(pos=(122, 137), word='$bashbrewArch', parts=[
          ParameterNode(pos=(123, 136), value='bashbrewArch'),
        ]),
      ]), pos=(93, 138)),
  ]),
])


326) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(278, 359), parts=[
  WordNode(pos=(278, 300), word='docker-php-ext-install'),
  WordNode(pos=(301, 303), word='-j'),
  WordNode(pos=(304, 314), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(307, 312), parts=[
        WordNode(pos=(307, 312), word='nproc'),
      ]), pos=(305, 313)),
  ]),
  WordNode(pos=(317, 319), word='gd'),
  WordNode(pos=(322, 329), word='opcache'),
  WordNode(pos=(332, 341), word='pdo_mysql'),
  WordNode(pos=(344, 353), word='pdo_pgsql'),
  WordNode(pos=(356, 359), word='zip'),
])


327) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


328) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


329) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


330) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(435, 488), parts=[
  WordNode(pos=(435, 438), word='ldd'),
  WordNode(pos=(439, 488), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(442, 481), parts=[
        WordNode(pos=(442, 445), word='php'),
        WordNode(pos=(446, 448), word='-r'),
        WordNode(pos=(449, 481), word='echo ini_get("extension_dir");'),
      ]), pos=(440, 482)),
  ]),
])


331) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(521, 552), parts=[
  WordNode(pos=(521, 527), word='export'),
  WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(541, 550), parts=[
        WordNode(pos=(541, 547), word='mktemp'),
        WordNode(pos=(548, 550), word='-d'),
      ]), pos=(539, 551)),
  ]),
])


332) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


333) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1145, 1183), parts=[
  WordNode(pos=(1145, 1149), word='make'),
  WordNode(pos=(1150, 1152), word='-j'),
  WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1156, 1181), parts=[
        WordNode(pos=(1156, 1163), word='getconf'),
        WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
      ]), pos=(1154, 1182)),
  ]),
])


334) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


335) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


336) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


337) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


338) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(2771, 2849), parts=[
  WordNode(pos=(2771, 2775), word='make'),
  WordNode(pos=(2776, 2778), word='-j'),
  WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2782, 2807), parts=[
        WordNode(pos=(2782, 2789), word='getconf'),
        WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
      ]), pos=(2780, 2808)),
  ]),
  WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


339) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


340) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(462, 493), parts=[
  WordNode(pos=(462, 468), word='export'),
  WordNode(pos=(469, 493), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(482, 491), parts=[
        WordNode(pos=(482, 488), word='mktemp'),
        WordNode(pos=(489, 491), word='-d'),
      ]), pos=(480, 492)),
  ]),
])


341) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(126, 163), parts=[
  AssignmentNode(pos=(126, 163), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(142, 161), parts=[
        WordNode(pos=(142, 150), word='apt-mark'),
        WordNode(pos=(151, 161), word='showmanual'),
      ]), pos=(140, 162)),
  ]),
])


342) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(931, 962), parts=[
  WordNode(pos=(931, 937), word='export'),
  WordNode(pos=(938, 962), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(951, 960), parts=[
        WordNode(pos=(951, 957), word='mktemp'),
        WordNode(pos=(958, 960), word='-d'),
      ]), pos=(949, 961)),
  ]),
])


343) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1712, 1769), parts=[
  AssignmentNode(pos=(1712, 1769), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1723, 1767), parts=[
        WordNode(pos=(1723, 1740), word='dpkg-architecture'),
        WordNode(pos=(1741, 1748), word='--query'),
        WordNode(pos=(1749, 1767), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1721, 1768)),
  ]),
])


344) make -j "$(nproc)"

CommandNode(pos=(1896, 1914), parts=[
  WordNode(pos=(1896, 1900), word='make'),
  WordNode(pos=(1901, 1903), word='-j'),
  WordNode(pos=(1904, 1914), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1907, 1912), parts=[
        WordNode(pos=(1907, 1912), word='nproc'),
      ]), pos=(1905, 1913)),
  ]),
])


345) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


346) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


347) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


348) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


349) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


350) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


351) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


352) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


353) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


354) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


355) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


356) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


357) make -j "$(nproc)"

CommandNode(pos=(1315, 1333), parts=[
  WordNode(pos=(1315, 1319), word='make'),
  WordNode(pos=(1320, 1322), word='-j'),
  WordNode(pos=(1323, 1333), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1326, 1331), parts=[
        WordNode(pos=(1326, 1331), word='nproc'),
      ]), pos=(1324, 1332)),
  ]),
])


358) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


359) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


360) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


361) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


362) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


363) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


364) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


365) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


366) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


367) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


368) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


369) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


370) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


371) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


372) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


373) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


374) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


375) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


376) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


377) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


378) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


379) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


380) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


381) make -j "$(nproc)"

CommandNode(pos=(1315, 1333), parts=[
  WordNode(pos=(1315, 1319), word='make'),
  WordNode(pos=(1320, 1322), word='-j'),
  WordNode(pos=(1323, 1333), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1326, 1331), parts=[
        WordNode(pos=(1326, 1331), word='nproc'),
      ]), pos=(1324, 1332)),
  ]),
])


382) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


383) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


384) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


385) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


386) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


387) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


388) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


389) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


390) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


391) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


392) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


393) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(223, 254), parts=[
  WordNode(pos=(223, 229), word='export'),
  WordNode(pos=(230, 254), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(243, 252), parts=[
        WordNode(pos=(243, 249), word='mktemp'),
        WordNode(pos=(250, 252), word='-d'),
      ]), pos=(241, 253)),
  ]),
])


394) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


395) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


396) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


397) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


398) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(471, 502), parts=[
  WordNode(pos=(471, 477), word='export'),
  WordNode(pos=(478, 502), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(491, 500), parts=[
        WordNode(pos=(491, 497), word='mktemp'),
        WordNode(pos=(498, 500), word='-d'),
      ]), pos=(489, 501)),
  ]),
])


399) make -C /usr/src/redis -j "$(nproc)"

CommandNode(pos=(654, 690), parts=[
  WordNode(pos=(654, 658), word='make'),
  WordNode(pos=(659, 661), word='-C'),
  WordNode(pos=(662, 676), word='/usr/src/redis'),
  WordNode(pos=(677, 679), word='-j'),
  WordNode(pos=(680, 690), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(683, 688), parts=[
        WordNode(pos=(683, 688), word='nproc'),
      ]), pos=(681, 689)),
  ]),
])


400) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


401) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


402) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


403) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


404) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


405) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


406) sqlite3Version="$(npm view . optionalDependencies.sqlite3)"

CommandNode(pos=(794, 853), parts=[
  WordNode(pos=(794, 853), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(812, 851), parts=[
        WordNode(pos=(812, 815), word='npm'),
        WordNode(pos=(816, 820), word='view'),
        WordNode(pos=(821, 822), word='.'),
        WordNode(pos=(823, 851), word='optionalDependencies.sqlite3'),
      ]), pos=(810, 852)),
  ]),
])


407) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


408) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


409) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


410) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


411) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


412) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1072, 1129), parts=[
  AssignmentNode(pos=(1072, 1129), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1083, 1127), parts=[
        WordNode(pos=(1083, 1100), word='dpkg-architecture'),
        WordNode(pos=(1101, 1108), word='--query'),
        WordNode(pos=(1109, 1127), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1081, 1128)),
  ]),
])


413) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1255, 1319), parts=[
  WordNode(pos=(1255, 1259), word='make'),
  WordNode(pos=(1260, 1262), word='-j'),
  WordNode(pos=(1263, 1273), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1266, 1271), parts=[
        WordNode(pos=(1266, 1271), word='nproc'),
      ]), pos=(1264, 1272)),
  ]),
  WordNode(pos=(1276, 1319), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


414) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


415) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


416) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


417) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


418) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


419) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


420) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


421) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1043, 1100), parts=[
  AssignmentNode(pos=(1043, 1100), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1054, 1098), parts=[
        WordNode(pos=(1054, 1071), word='dpkg-architecture'),
        WordNode(pos=(1072, 1079), word='--query'),
        WordNode(pos=(1080, 1098), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1052, 1099)),
  ]),
])


422) make -j "$(nproc)" world

CommandNode(pos=(1759, 1783), parts=[
  WordNode(pos=(1759, 1763), word='make'),
  WordNode(pos=(1764, 1766), word='-j'),
  WordNode(pos=(1767, 1777), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1770, 1775), parts=[
        WordNode(pos=(1770, 1775), word='nproc'),
      ]), pos=(1768, 1776)),
  ]),
  WordNode(pos=(1778, 1783), word='world'),
])


423) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1840, 2037), parts=[
  AssignmentNode(pos=(1840, 2037), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1854, 2033), parts=[
        CommandNode(pos=(1854, 1920), parts=[
          WordNode(pos=(1854, 1861), word='scanelf'),
          WordNode(pos=(1862, 1870), word='--needed'),
          WordNode(pos=(1871, 1881), word='--nobanner'),
          WordNode(pos=(1882, 1890), word='--format'),
          WordNode(pos=(1891, 1897), word='%n#p'),
          WordNode(pos=(1898, 1909), word='--recursive'),
          WordNode(pos=(1910, 1920), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1924, 1925)),
        CommandNode(pos=(1926, 1937), parts=[
          WordNode(pos=(1926, 1928), word='tr'),
          WordNode(pos=(1929, 1932), word=','),
          WordNode(pos=(1933, 1937), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1941, 1942)),
        CommandNode(pos=(1943, 1950), parts=[
          WordNode(pos=(1943, 1947), word='sort'),
          WordNode(pos=(1948, 1950), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1954, 1955)),
        CommandNode(pos=(1956, 2033), parts=[
          WordNode(pos=(1956, 1959), word='awk'),
          WordNode(pos=(1960, 2033), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1849, 2034)),
  ]),
])


424) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


425) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


426) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


427) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


428) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


429) make -j "$(nproc)" world

CommandNode(pos=(1782, 1806), parts=[
  WordNode(pos=(1782, 1786), word='make'),
  WordNode(pos=(1787, 1789), word='-j'),
  WordNode(pos=(1790, 1800), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1793, 1798), parts=[
        WordNode(pos=(1793, 1798), word='nproc'),
      ]), pos=(1791, 1799)),
  ]),
  WordNode(pos=(1801, 1806), word='world'),
])


430) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


431) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


432) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


433) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(164, 229), parts=[
  AssignmentNode(pos=(164, 229), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(176, 227), parts=[
        CommandNode(pos=(176, 201), parts=[
          WordNode(pos=(176, 180), word='dpkg'),
          WordNode(pos=(181, 201), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(202, 203)),
        CommandNode(pos=(204, 227), parts=[
          WordNode(pos=(204, 207), word='awk'),
          WordNode(pos=(208, 211), word='-F-'),
          WordNode(pos=(212, 227), word='{ print $NF }'),
        ]),
      ]), pos=(174, 228)),
  ]),
])


434) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(490, 521), parts=[
  WordNode(pos=(490, 496), word='export'),
  WordNode(pos=(497, 521), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(510, 519), parts=[
        WordNode(pos=(510, 516), word='mktemp'),
        WordNode(pos=(517, 519), word='-d'),
      ]), pos=(508, 520)),
  ]),
])


435) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(1077, 1108), parts=[
  WordNode(pos=(1077, 1083), word='export'),
  WordNode(pos=(1084, 1108), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1097, 1106), parts=[
        WordNode(pos=(1097, 1103), word='mktemp'),
        WordNode(pos=(1104, 1106), word='-d'),
      ]), pos=(1095, 1107)),
  ]),
])


436) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


437) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(561, 618), parts=[
  AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(572, 616), parts=[
        WordNode(pos=(572, 589), word='dpkg-architecture'),
        WordNode(pos=(590, 597), word='--query'),
        WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(570, 617)),
  ]),
])


438) make -j "$(nproc)"

CommandNode(pos=(678, 696), parts=[
  WordNode(pos=(678, 682), word='make'),
  WordNode(pos=(683, 685), word='-j'),
  WordNode(pos=(686, 696), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 694), parts=[
        WordNode(pos=(689, 694), word='nproc'),
      ]), pos=(687, 695)),
  ]),
])


439) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


440) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


441) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


442) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


443) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


444) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


445) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


446) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


447) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


448) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


449) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


450) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


451) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


452) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


453) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(435, 488), parts=[
  WordNode(pos=(435, 438), word='ldd'),
  WordNode(pos=(439, 488), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(442, 481), parts=[
        WordNode(pos=(442, 445), word='php'),
        WordNode(pos=(446, 448), word='-r'),
        WordNode(pos=(449, 481), word='echo ini_get("extension_dir");'),
      ]), pos=(440, 482)),
  ]),
])


454) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


455) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


456) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(223, 254), parts=[
  WordNode(pos=(223, 229), word='export'),
  WordNode(pos=(230, 254), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(243, 252), parts=[
        WordNode(pos=(243, 249), word='mktemp'),
        WordNode(pos=(250, 252), word='-d'),
      ]), pos=(241, 253)),
  ]),
])


457) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


458) make -j "$(nproc)"

CommandNode(pos=(1315, 1333), parts=[
  WordNode(pos=(1315, 1319), word='make'),
  WordNode(pos=(1320, 1322), word='-j'),
  WordNode(pos=(1323, 1333), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1326, 1331), parts=[
        WordNode(pos=(1326, 1331), word='nproc'),
      ]), pos=(1324, 1332)),
  ]),
])


459) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


460) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


461) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


462) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1317, 1381), parts=[
  WordNode(pos=(1317, 1321), word='make'),
  WordNode(pos=(1322, 1324), word='-j'),
  WordNode(pos=(1325, 1335), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1328, 1333), parts=[
        WordNode(pos=(1328, 1333), word='nproc'),
      ]), pos=(1326, 1334)),
  ]),
  WordNode(pos=(1338, 1381), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


463) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


464) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


465) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


466) make -j "$(nproc)"

CommandNode(pos=(819, 837), parts=[
  WordNode(pos=(819, 823), word='make'),
  WordNode(pos=(824, 826), word='-j'),
  WordNode(pos=(827, 837), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(830, 835), parts=[
        WordNode(pos=(830, 835), word='nproc'),
      ]), pos=(828, 836)),
  ]),
])


467) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


468) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1073, 1130), parts=[
  AssignmentNode(pos=(1073, 1130), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1084, 1128), parts=[
        WordNode(pos=(1084, 1101), word='dpkg-architecture'),
        WordNode(pos=(1102, 1109), word='--query'),
        WordNode(pos=(1110, 1128), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1082, 1129)),
  ]),
])


469) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1256, 1320), parts=[
  WordNode(pos=(1256, 1260), word='make'),
  WordNode(pos=(1261, 1263), word='-j'),
  WordNode(pos=(1264, 1274), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1267, 1272), parts=[
        WordNode(pos=(1267, 1272), word='nproc'),
      ]), pos=(1265, 1273)),
  ]),
  WordNode(pos=(1277, 1320), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


470) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


471) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(601, 673), parts=[
  WordNode(pos=(601, 605), word='make'),
  WordNode(pos=(606, 608), word='-C'),
  WordNode(pos=(609, 625), word='/usr/src/haproxy'),
  WordNode(pos=(626, 628), word='-j'),
  WordNode(pos=(629, 659), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(632, 657), parts=[
        WordNode(pos=(632, 639), word='getconf'),
        WordNode(pos=(640, 657), word='_NPROCESSORS_ONLN'),
      ]), pos=(630, 658)),
  ]),
  WordNode(pos=(660, 663), word='all'),
  WordNode(pos=(664, 673), word='$makeOpts', parts=[
    ParameterNode(pos=(664, 673), value='makeOpts'),
  ]),
])


472) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(872, 1069), parts=[
  AssignmentNode(pos=(872, 1069), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(886, 1065), parts=[
        CommandNode(pos=(886, 952), parts=[
          WordNode(pos=(886, 893), word='scanelf'),
          WordNode(pos=(894, 902), word='--needed'),
          WordNode(pos=(903, 913), word='--nobanner'),
          WordNode(pos=(914, 922), word='--format'),
          WordNode(pos=(923, 929), word='%n#p'),
          WordNode(pos=(930, 941), word='--recursive'),
          WordNode(pos=(942, 952), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(956, 957)),
        CommandNode(pos=(958, 969), parts=[
          WordNode(pos=(958, 960), word='tr'),
          WordNode(pos=(961, 964), word=','),
          WordNode(pos=(965, 969), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(973, 974)),
        CommandNode(pos=(975, 982), parts=[
          WordNode(pos=(975, 979), word='sort'),
          WordNode(pos=(980, 982), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(986, 987)),
        CommandNode(pos=(988, 1065), parts=[
          WordNode(pos=(988, 991), word='awk'),
          WordNode(pos=(992, 1065), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(881, 1066)),
  ]),
])


473) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


474) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


475) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


476) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


477) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


478) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


479) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


480) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


481) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


482) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


483) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(471, 502), parts=[
  WordNode(pos=(471, 477), word='export'),
  WordNode(pos=(478, 502), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(491, 500), parts=[
        WordNode(pos=(491, 497), word='mktemp'),
        WordNode(pos=(498, 500), word='-d'),
      ]), pos=(489, 501)),
  ]),
])


484) make -C /usr/src/redis -j "$(nproc)" 32bit

CommandNode(pos=(674, 716), parts=[
  WordNode(pos=(674, 678), word='make'),
  WordNode(pos=(679, 681), word='-C'),
  WordNode(pos=(682, 696), word='/usr/src/redis'),
  WordNode(pos=(697, 699), word='-j'),
  WordNode(pos=(700, 710), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(703, 708), parts=[
        WordNode(pos=(703, 708), word='nproc'),
      ]), pos=(701, 709)),
  ]),
  WordNode(pos=(711, 716), word='32bit'),
])


485) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


486) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(448, 501), parts=[
  WordNode(pos=(448, 451), word='ldd'),
  WordNode(pos=(452, 501), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(455, 494), parts=[
        WordNode(pos=(455, 458), word='php'),
        WordNode(pos=(459, 461), word='-r'),
        WordNode(pos=(462, 494), word='echo ini_get("extension_dir");'),
      ]), pos=(453, 495)),
  ]),
])


487) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


488) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(640, 692), parts=[
  WordNode(pos=(640, 644), word='make'),
  WordNode(pos=(645, 647), word='-C'),
  WordNode(pos=(648, 664), word='/usr/src/haproxy'),
  WordNode(pos=(665, 667), word='-j'),
  WordNode(pos=(668, 678), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(671, 676), parts=[
        WordNode(pos=(671, 676), word='nproc'),
      ]), pos=(669, 677)),
  ]),
  WordNode(pos=(679, 682), word='all'),
  WordNode(pos=(683, 692), word='$makeOpts', parts=[
    ParameterNode(pos=(683, 692), value='makeOpts'),
  ]),
])


489) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


490) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(11, 137), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/gosu'),
  WordNode(pos=(39, 137), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(89, 102), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(110, 135), parts=[
        WordNode(pos=(110, 114), word='dpkg'),
        WordNode(pos=(115, 135), word='--print-architecture'),
      ]), pos=(108, 136)),
  ]),
])


491) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(142, 276), parts=[
  WordNode(pos=(142, 146), word='wget'),
  WordNode(pos=(147, 149), word='-O'),
  WordNode(pos=(150, 173), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(174, 276), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(224, 237), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(245, 270), parts=[
        WordNode(pos=(245, 249), word='dpkg'),
        WordNode(pos=(250, 270), word='--print-architecture'),
      ]), pos=(243, 271)),
  ]),
])


492) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(281, 312), parts=[
  WordNode(pos=(281, 287), word='export'),
  WordNode(pos=(288, 312), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(301, 310), parts=[
        WordNode(pos=(301, 307), word='mktemp'),
        WordNode(pos=(308, 310), word='-d'),
      ]), pos=(299, 311)),
  ]),
])


493) sqlite3Version="$(npm view . optionalDependencies.sqlite3)"

CommandNode(pos=(782, 841), parts=[
  WordNode(pos=(782, 841), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(800, 839), parts=[
        WordNode(pos=(800, 803), word='npm'),
        WordNode(pos=(804, 808), word='view'),
        WordNode(pos=(809, 810), word='.'),
        WordNode(pos=(811, 839), word='optionalDependencies.sqlite3'),
      ]), pos=(798, 840)),
  ]),
])


494) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(910, 947), parts=[
  AssignmentNode(pos=(910, 947), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(926, 945), parts=[
        WordNode(pos=(926, 934), word='apt-mark'),
        WordNode(pos=(935, 945), word='showmanual'),
      ]), pos=(924, 946)),
  ]),
])


495) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


496) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


497) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


498) make -C /usr/src/redis -j "$(nproc)"

CommandNode(pos=(579, 615), parts=[
  WordNode(pos=(579, 583), word='make'),
  WordNode(pos=(584, 586), word='-C'),
  WordNode(pos=(587, 601), word='/usr/src/redis'),
  WordNode(pos=(602, 604), word='-j'),
  WordNode(pos=(605, 615), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(608, 613), parts=[
        WordNode(pos=(608, 613), word='nproc'),
      ]), pos=(606, 614)),
  ]),
])


499) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(676, 873), parts=[
  AssignmentNode(pos=(676, 873), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(690, 869), parts=[
        CommandNode(pos=(690, 756), parts=[
          WordNode(pos=(690, 697), word='scanelf'),
          WordNode(pos=(698, 706), word='--needed'),
          WordNode(pos=(707, 717), word='--nobanner'),
          WordNode(pos=(718, 726), word='--format'),
          WordNode(pos=(727, 733), word='%n#p'),
          WordNode(pos=(734, 745), word='--recursive'),
          WordNode(pos=(746, 756), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(760, 761)),
        CommandNode(pos=(762, 773), parts=[
          WordNode(pos=(762, 764), word='tr'),
          WordNode(pos=(765, 768), word=','),
          WordNode(pos=(769, 773), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(777, 778)),
        CommandNode(pos=(779, 786), parts=[
          WordNode(pos=(779, 783), word='sort'),
          WordNode(pos=(784, 786), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(790, 791)),
        CommandNode(pos=(792, 869), parts=[
          WordNode(pos=(792, 795), word='awk'),
          WordNode(pos=(796, 869), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(685, 870)),
  ]),
])


500) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


501) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(471, 502), parts=[
  WordNode(pos=(471, 477), word='export'),
  WordNode(pos=(478, 502), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(491, 500), parts=[
        WordNode(pos=(491, 497), word='mktemp'),
        WordNode(pos=(498, 500), word='-d'),
      ]), pos=(489, 501)),
  ]),
])


502) make -C /usr/src/redis -j "$(nproc)"

CommandNode(pos=(636, 672), parts=[
  WordNode(pos=(636, 640), word='make'),
  WordNode(pos=(641, 643), word='-C'),
  WordNode(pos=(644, 658), word='/usr/src/redis'),
  WordNode(pos=(659, 661), word='-j'),
  WordNode(pos=(662, 672), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(665, 670), parts=[
        WordNode(pos=(665, 670), word='nproc'),
      ]), pos=(663, 671)),
  ]),
])


503) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


504) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


505) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


506) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


507) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


508) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


509) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


510) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


511) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


512) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


513) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(639, 691), parts=[
  WordNode(pos=(639, 643), word='make'),
  WordNode(pos=(644, 646), word='-C'),
  WordNode(pos=(647, 663), word='/usr/src/haproxy'),
  WordNode(pos=(664, 666), word='-j'),
  WordNode(pos=(667, 677), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(670, 675), parts=[
        WordNode(pos=(670, 675), word='nproc'),
      ]), pos=(668, 676)),
  ]),
  WordNode(pos=(678, 681), word='all'),
  WordNode(pos=(682, 691), word='$makeOpts', parts=[
    ParameterNode(pos=(682, 691), value='makeOpts'),
  ]),
])


514) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


515) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


516) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


517) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


518) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


519) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


520) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


521) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


522) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


523) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


524) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


525) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


526) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


527) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


528) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


529) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


530) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


531) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


532) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


533) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


534) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


535) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


536) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


537) base="$(basename "$bin")"

CommandNode(pos=(346, 371), parts=[
  AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(354, 369), parts=[
        WordNode(pos=(354, 362), word='basename'),
        WordNode(pos=(363, 369), word='$bin', parts=[
          ParameterNode(pos=(364, 368), value='bin'),
        ]),
      ]), pos=(352, 370)),
  ]),
])


538) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


539) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


540) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


541) make -j "$(nproc)" world

CommandNode(pos=(1782, 1806), parts=[
  WordNode(pos=(1782, 1786), word='make'),
  WordNode(pos=(1787, 1789), word='-j'),
  WordNode(pos=(1790, 1800), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1793, 1798), parts=[
        WordNode(pos=(1793, 1798), word='nproc'),
      ]), pos=(1791, 1799)),
  ]),
  WordNode(pos=(1801, 1806), word='world'),
])


542) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


543) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


544) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


545) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


546) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


547) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


548) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


549) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


550) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


551) suite="$(awk '$1 == "deb" && $4 == "main" && $3 !~ /[\/-]/ { print $3; exit }' /etc/apt/sources.list)"

CommandNode(pos=(106, 208), parts=[
  AssignmentNode(pos=(106, 208), word='suite=$(awk \'$1 == "deb" && $4 == "main" && $3 !~ /[\\/-]/ { print $3; exit }\' /etc/apt/sources.list)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(115, 206), parts=[
        WordNode(pos=(115, 118), word='awk'),
        WordNode(pos=(119, 184), word='$1 == "deb" && $4 == "main" && $3 !~ /[\\/-]/ { print $3; exit }'),
        WordNode(pos=(185, 206), word='/etc/apt/sources.list'),
      ]), pos=(113, 207)),
  ]),
])


552) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


553) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


554) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


555) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


556) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


557) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


558) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


559) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


560) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


561) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


562) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


563) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


564) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


565) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


566) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


567) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(639, 691), parts=[
  WordNode(pos=(639, 643), word='make'),
  WordNode(pos=(644, 646), word='-C'),
  WordNode(pos=(647, 663), word='/usr/src/haproxy'),
  WordNode(pos=(664, 666), word='-j'),
  WordNode(pos=(667, 677), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(670, 675), parts=[
        WordNode(pos=(670, 675), word='nproc'),
      ]), pos=(668, 676)),
  ]),
  WordNode(pos=(678, 681), word='all'),
  WordNode(pos=(682, 691), word='$makeOpts', parts=[
    ParameterNode(pos=(682, 691), value='makeOpts'),
  ]),
])


568) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


569) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


570) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


571) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


572) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(380, 411), parts=[
  WordNode(pos=(380, 386), word='export'),
  WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(400, 409), parts=[
        WordNode(pos=(400, 406), word='mktemp'),
        WordNode(pos=(407, 409), word='-d'),
      ]), pos=(398, 410)),
  ]),
])


573) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


574) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


575) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


576) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


577) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


578) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


579) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


580) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


581) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


582) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


583) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


584) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


585) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


586) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


587) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


588) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


589) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


590) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


591) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


592) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


593) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


594) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


595) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1081, 1138), parts=[
  AssignmentNode(pos=(1081, 1138), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1092, 1136), parts=[
        WordNode(pos=(1092, 1109), word='dpkg-architecture'),
        WordNode(pos=(1110, 1117), word='--query'),
        WordNode(pos=(1118, 1136), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1090, 1137)),
  ]),
])


596) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1300, 1364), parts=[
  WordNode(pos=(1300, 1304), word='make'),
  WordNode(pos=(1305, 1307), word='-j'),
  WordNode(pos=(1308, 1318), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1311, 1316), parts=[
        WordNode(pos=(1311, 1316), word='nproc'),
      ]), pos=(1309, 1317)),
  ]),
  WordNode(pos=(1321, 1364), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


597) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


598) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


599) docker-php-ext-install -j "$(nproc)"   exif   gd   intl   ldap   mcrypt   opcache   pcntl   pdo_mysql   pdo_pgsql   pgsql   zip

CommandNode(pos=(213, 340), parts=[
  WordNode(pos=(213, 235), word='docker-php-ext-install'),
  WordNode(pos=(236, 238), word='-j'),
  WordNode(pos=(239, 249), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(242, 247), parts=[
        WordNode(pos=(242, 247), word='nproc'),
      ]), pos=(240, 248)),
  ]),
  WordNode(pos=(252, 256), word='exif'),
  WordNode(pos=(259, 261), word='gd'),
  WordNode(pos=(264, 268), word='intl'),
  WordNode(pos=(271, 275), word='ldap'),
  WordNode(pos=(278, 284), word='mcrypt'),
  WordNode(pos=(287, 294), word='opcache'),
  WordNode(pos=(297, 302), word='pcntl'),
  WordNode(pos=(305, 314), word='pdo_mysql'),
  WordNode(pos=(317, 326), word='pdo_pgsql'),
  WordNode(pos=(329, 334), word='pgsql'),
  WordNode(pos=(337, 340), word='zip'),
])


600) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(300, 331), parts=[
  WordNode(pos=(300, 306), word='export'),
  WordNode(pos=(307, 331), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(320, 329), parts=[
        WordNode(pos=(320, 326), word='mktemp'),
        WordNode(pos=(327, 329), word='-d'),
      ]), pos=(318, 330)),
  ]),
])


601) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


602) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


603) make -j "$(nproc)"

CommandNode(pos=(893, 911), parts=[
  WordNode(pos=(893, 897), word='make'),
  WordNode(pos=(898, 900), word='-j'),
  WordNode(pos=(901, 911), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(904, 909), parts=[
        WordNode(pos=(904, 909), word='nproc'),
      ]), pos=(902, 910)),
  ]),
])


604) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


605) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(521, 552), parts=[
  WordNode(pos=(521, 527), word='export'),
  WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(541, 550), parts=[
        WordNode(pos=(541, 547), word='mktemp'),
        WordNode(pos=(548, 550), word='-d'),
      ]), pos=(539, 551)),
  ]),
])


606) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


607) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1145, 1183), parts=[
  WordNode(pos=(1145, 1149), word='make'),
  WordNode(pos=(1150, 1152), word='-j'),
  WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1156, 1181), parts=[
        WordNode(pos=(1156, 1163), word='getconf'),
        WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
      ]), pos=(1154, 1182)),
  ]),
])


608) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


609) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


610) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


611) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


612) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(2771, 2849), parts=[
  WordNode(pos=(2771, 2775), word='make'),
  WordNode(pos=(2776, 2778), word='-j'),
  WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2782, 2807), parts=[
        WordNode(pos=(2782, 2789), word='getconf'),
        WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
      ]), pos=(2780, 2808)),
  ]),
  WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


613) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


614) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(462, 493), parts=[
  WordNode(pos=(462, 468), word='export'),
  WordNode(pos=(469, 493), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(482, 491), parts=[
        WordNode(pos=(482, 488), word='mktemp'),
        WordNode(pos=(489, 491), word='-d'),
      ]), pos=(480, 492)),
  ]),
])


615) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


616) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


617) make -j "$(nproc)"

CommandNode(pos=(1315, 1333), parts=[
  WordNode(pos=(1315, 1319), word='make'),
  WordNode(pos=(1320, 1322), word='-j'),
  WordNode(pos=(1323, 1333), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1326, 1331), parts=[
        WordNode(pos=(1326, 1331), word='nproc'),
      ]), pos=(1324, 1332)),
  ]),
])


618) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


619) make -j"$(nproc)"

CommandNode(pos=(1672, 1689), parts=[
  WordNode(pos=(1672, 1676), word='make'),
  WordNode(pos=(1677, 1689), word='-j$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1682, 1687), parts=[
        WordNode(pos=(1682, 1687), word='nproc'),
      ]), pos=(1680, 1688)),
  ]),
])


620) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


621) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


622) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


623) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


624) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


625) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


626) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


627) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


628) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


629) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(521, 552), parts=[
  WordNode(pos=(521, 527), word='export'),
  WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(541, 550), parts=[
        WordNode(pos=(541, 547), word='mktemp'),
        WordNode(pos=(548, 550), word='-d'),
      ]), pos=(539, 551)),
  ]),
])


630) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


631) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1145, 1183), parts=[
  WordNode(pos=(1145, 1149), word='make'),
  WordNode(pos=(1150, 1152), word='-j'),
  WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1156, 1181), parts=[
        WordNode(pos=(1156, 1163), word='getconf'),
        WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
      ]), pos=(1154, 1182)),
  ]),
])


632) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


633) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


634) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


635) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


636) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(2771, 2849), parts=[
  WordNode(pos=(2771, 2775), word='make'),
  WordNode(pos=(2776, 2778), word='-j'),
  WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2782, 2807), parts=[
        WordNode(pos=(2782, 2789), word='getconf'),
        WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
      ]), pos=(2780, 2808)),
  ]),
  WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


637) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


638) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(462, 493), parts=[
  WordNode(pos=(462, 468), word='export'),
  WordNode(pos=(469, 493), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(482, 491), parts=[
        WordNode(pos=(482, 488), word='mktemp'),
        WordNode(pos=(489, 491), word='-d'),
      ]), pos=(480, 492)),
  ]),
])


639) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


640) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


641) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


642) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


643) base="$(basename "$bin")"

CommandNode(pos=(346, 371), parts=[
  AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(354, 369), parts=[
        WordNode(pos=(354, 362), word='basename'),
        WordNode(pos=(363, 369), word='$bin', parts=[
          ParameterNode(pos=(364, 368), value='bin'),
        ]),
      ]), pos=(352, 370)),
  ]),
])


644) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


645) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


646) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


647) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


648) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


649) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


650) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


651) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


652) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


653) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(28, 65), parts=[
  AssignmentNode(pos=(28, 65), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(44, 63), parts=[
        WordNode(pos=(44, 52), word='apt-mark'),
        WordNode(pos=(53, 63), word='showmanual'),
      ]), pos=(42, 64)),
  ]),
])


654) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


655) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


656) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


657) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


658) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


659) make -j "$(nproc)"

CommandNode(pos=(1315, 1333), parts=[
  WordNode(pos=(1315, 1319), word='make'),
  WordNode(pos=(1320, 1322), word='-j'),
  WordNode(pos=(1323, 1333), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1326, 1331), parts=[
        WordNode(pos=(1326, 1331), word='nproc'),
      ]), pos=(1324, 1332)),
  ]),
])


660) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


661) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


662) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


663) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


664) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


665) apt-get install -y --no-install-recommends   autoconf   automake   bzip2   dpkg-dev   file   g++   gcc   imagemagick   libbz2-dev   libc6-dev   libcurl4-openssl-dev   libdb-dev   libevent-dev   libffi-dev   libgdbm-dev   libgeoip-dev   libglib2.0-dev   libgmp-dev   libjpeg-dev   libkrb5-dev   liblzma-dev   libmagickcore-dev   libmagickwand-dev   libncurses5-dev   libncursesw5-dev   libpng-dev   libpq-dev   libreadline-dev   libsqlite3-dev   libssl-dev   libtool   libwebp-dev   libxml2-dev   libxslt-dev   libyaml-dev   make   patch   unzip   xz-utils   zlib1g-dev     $(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )

CommandNode(pos=(27, 780), parts=[
  WordNode(pos=(27, 34), word='apt-get'),
  WordNode(pos=(35, 42), word='install'),
  WordNode(pos=(43, 45), word='-y'),
  WordNode(pos=(46, 69), word='--no-install-recommends'),
  WordNode(pos=(72, 80), word='autoconf'),
  WordNode(pos=(83, 91), word='automake'),
  WordNode(pos=(94, 99), word='bzip2'),
  WordNode(pos=(102, 110), word='dpkg-dev'),
  WordNode(pos=(113, 117), word='file'),
  WordNode(pos=(120, 123), word='g++'),
  WordNode(pos=(126, 129), word='gcc'),
  WordNode(pos=(132, 143), word='imagemagick'),
  WordNode(pos=(146, 156), word='libbz2-dev'),
  WordNode(pos=(159, 168), word='libc6-dev'),
  WordNode(pos=(171, 191), word='libcurl4-openssl-dev'),
  WordNode(pos=(194, 203), word='libdb-dev'),
  WordNode(pos=(206, 218), word='libevent-dev'),
  WordNode(pos=(221, 231), word='libffi-dev'),
  WordNode(pos=(234, 245), word='libgdbm-dev'),
  WordNode(pos=(248, 260), word='libgeoip-dev'),
  WordNode(pos=(263, 277), word='libglib2.0-dev'),
  WordNode(pos=(280, 290), word='libgmp-dev'),
  WordNode(pos=(293, 304), word='libjpeg-dev'),
  WordNode(pos=(307, 318), word='libkrb5-dev'),
  WordNode(pos=(321, 332), word='liblzma-dev'),
  WordNode(pos=(335, 352), word='libmagickcore-dev'),
  WordNode(pos=(355, 372), word='libmagickwand-dev'),
  WordNode(pos=(375, 390), word='libncurses5-dev'),
  WordNode(pos=(393, 409), word='libncursesw5-dev'),
  WordNode(pos=(412, 422), word='libpng-dev'),
  WordNode(pos=(425, 434), word='libpq-dev'),
  WordNode(pos=(437, 452), word='libreadline-dev'),
  WordNode(pos=(455, 469), word='libsqlite3-dev'),
  WordNode(pos=(472, 482), word='libssl-dev'),
  WordNode(pos=(485, 492), word='libtool'),
  WordNode(pos=(495, 506), word='libwebp-dev'),
  WordNode(pos=(509, 520), word='libxml2-dev'),
  WordNode(pos=(523, 534), word='libxslt-dev'),
  WordNode(pos=(537, 548), word='libyaml-dev'),
  WordNode(pos=(551, 555), word='make'),
  WordNode(pos=(558, 563), word='patch'),
  WordNode(pos=(566, 571), word='unzip'),
  WordNode(pos=(574, 582), word='xz-utils'),
  WordNode(pos=(585, 595), word='zlib1g-dev'),
  WordNode(pos=(600, 780), word="$(    if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';    else     echo 'libmysqlclient-dev';    fi   )", parts=[
    CommandsubstitutionNode(command=
      CompoundNode(list=[
        IfNode(pos=(606, 776), parts=[
          ReservedwordNode(pos=(606, 608), word='if'),
          ListNode(pos=(609, 687), parts=[
              PipelineNode(pos=(609, 686), parts=[
                CommandNode(pos=(609, 664), parts=[
                  WordNode(pos=(609, 618), word='apt-cache'),
                  WordNode(pos=(619, 623), word='show'),
                  WordNode(pos=(624, 652), word='default-libmysqlclient-dev'),
                  RedirectNode(input=2, output=
                    WordNode(pos=(655, 664), word='/dev/null'), pos=(653, 664), type='>'),
                ]),
                PipeNode(pipe='|', pos=(665, 666)),
                CommandNode(pos=(667, 686), parts=[
                  WordNode(pos=(667, 671), word='grep'),
                  WordNode(pos=(672, 674), word='-q'),
                  WordNode(pos=(675, 686), word='^Version:'),
                ]),
              ]),
              OperatorNode(op=';', pos=(686, 687)),
            ]),
          ReservedwordNode(pos=(688, 692), word='then'),
          ListNode(pos=(697, 731), parts=[
              CommandNode(pos=(697, 730), parts=[
                WordNode(pos=(697, 701), word='echo'),
                WordNode(pos=(702, 730), word='default-libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(730, 731)),
            ]),
          ReservedwordNode(pos=(735, 739), word='else'),
          ListNode(pos=(744, 770), parts=[
              CommandNode(pos=(744, 769), parts=[
                WordNode(pos=(744, 748), word='echo'),
                WordNode(pos=(749, 769), word='libmysqlclient-dev'),
              ]),
              OperatorNode(op=';', pos=(769, 770)),
            ]),
          ReservedwordNode(pos=(774, 776), word='fi'),
        ]),
      ], pos=(606, 776)), pos=(600, 777)),
  ]),
])


666) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(11, 137), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/gosu'),
  WordNode(pos=(39, 137), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(89, 102), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(110, 135), parts=[
        WordNode(pos=(110, 114), word='dpkg'),
        WordNode(pos=(115, 135), word='--print-architecture'),
      ]), pos=(108, 136)),
  ]),
])


667) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(142, 276), parts=[
  WordNode(pos=(142, 146), word='wget'),
  WordNode(pos=(147, 149), word='-O'),
  WordNode(pos=(150, 173), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(174, 276), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(224, 237), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(245, 270), parts=[
        WordNode(pos=(245, 249), word='dpkg'),
        WordNode(pos=(250, 270), word='--print-architecture'),
      ]), pos=(243, 271)),
  ]),
])


668) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(281, 312), parts=[
  WordNode(pos=(281, 287), word='export'),
  WordNode(pos=(288, 312), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(301, 310), parts=[
        WordNode(pos=(301, 307), word='mktemp'),
        WordNode(pos=(308, 310), word='-d'),
      ]), pos=(299, 311)),
  ]),
])


669) sqlite3Version="$(npm view . optionalDependencies.sqlite3)"

CommandNode(pos=(699, 758), parts=[
  WordNode(pos=(699, 758), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(717, 756), parts=[
        WordNode(pos=(717, 720), word='npm'),
        WordNode(pos=(721, 725), word='view'),
        WordNode(pos=(726, 727), word='.'),
        WordNode(pos=(728, 756), word='optionalDependencies.sqlite3'),
      ]), pos=(715, 757)),
  ]),
])


670) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(827, 864), parts=[
  AssignmentNode(pos=(827, 864), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(843, 862), parts=[
        WordNode(pos=(843, 851), word='apt-mark'),
        WordNode(pos=(852, 862), word='showmanual'),
      ]), pos=(841, 863)),
  ]),
])


671) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


672) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


673) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


674) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


675) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


676) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


677) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


678) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


679) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


680) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


681) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


682) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


683) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


684) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


685) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


686) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


687) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


688) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


689) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


690) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


691) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


692) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1272, 1336), parts=[
  WordNode(pos=(1272, 1276), word='make'),
  WordNode(pos=(1277, 1279), word='-j'),
  WordNode(pos=(1280, 1290), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1283, 1288), parts=[
        WordNode(pos=(1283, 1288), word='nproc'),
      ]), pos=(1281, 1289)),
  ]),
  WordNode(pos=(1293, 1336), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


693) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(522, 594), parts=[
  WordNode(pos=(522, 526), word='make'),
  WordNode(pos=(527, 529), word='-C'),
  WordNode(pos=(530, 546), word='/usr/src/haproxy'),
  WordNode(pos=(547, 549), word='-j'),
  WordNode(pos=(550, 580), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(553, 578), parts=[
        WordNode(pos=(553, 560), word='getconf'),
        WordNode(pos=(561, 578), word='_NPROCESSORS_ONLN'),
      ]), pos=(551, 579)),
  ]),
  WordNode(pos=(581, 584), word='all'),
  WordNode(pos=(585, 594), word='$makeOpts', parts=[
    ParameterNode(pos=(585, 594), value='makeOpts'),
  ]),
])


694) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(793, 990), parts=[
  AssignmentNode(pos=(793, 990), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(807, 986), parts=[
        CommandNode(pos=(807, 873), parts=[
          WordNode(pos=(807, 814), word='scanelf'),
          WordNode(pos=(815, 823), word='--needed'),
          WordNode(pos=(824, 834), word='--nobanner'),
          WordNode(pos=(835, 843), word='--format'),
          WordNode(pos=(844, 850), word='%n#p'),
          WordNode(pos=(851, 862), word='--recursive'),
          WordNode(pos=(863, 873), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(877, 878)),
        CommandNode(pos=(879, 890), parts=[
          WordNode(pos=(879, 881), word='tr'),
          WordNode(pos=(882, 885), word=','),
          WordNode(pos=(886, 890), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(894, 895)),
        CommandNode(pos=(896, 903), parts=[
          WordNode(pos=(896, 900), word='sort'),
          WordNode(pos=(901, 903), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(907, 908)),
        CommandNode(pos=(909, 986), parts=[
          WordNode(pos=(909, 912), word='awk'),
          WordNode(pos=(913, 986), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(802, 987)),
  ]),
])


695) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


696) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(454, 485), parts=[
  WordNode(pos=(454, 460), word='export'),
  WordNode(pos=(461, 485), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(474, 483), parts=[
        WordNode(pos=(474, 480), word='mktemp'),
        WordNode(pos=(481, 483), word='-d'),
      ]), pos=(472, 484)),
  ]),
])


697) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


698) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


699) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


700) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


701) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


702) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


703) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


704) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


705) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


706) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


707) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


708) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


709) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(398, 429), parts=[
  WordNode(pos=(398, 404), word='export'),
  WordNode(pos=(405, 429), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(418, 427), parts=[
        WordNode(pos=(418, 424), word='mktemp'),
        WordNode(pos=(425, 427), word='-d'),
      ]), pos=(416, 428)),
  ]),
])


710) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(59, 90), parts=[
  WordNode(pos=(59, 65), word='export'),
  WordNode(pos=(66, 90), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(79, 88), parts=[
        WordNode(pos=(79, 85), word='mktemp'),
        WordNode(pos=(86, 88), word='-d'),
      ]), pos=(77, 89)),
  ]),
])


711) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


712) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(257, 288), parts=[
  WordNode(pos=(257, 263), word='export'),
  WordNode(pos=(264, 288), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(277, 286), parts=[
        WordNode(pos=(277, 283), word='mktemp'),
        WordNode(pos=(284, 286), word='-d'),
      ]), pos=(275, 287)),
  ]),
])


713) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


714) make -j "$(nproc)"

CommandNode(pos=(897, 915), parts=[
  WordNode(pos=(897, 901), word='make'),
  WordNode(pos=(902, 904), word='-j'),
  WordNode(pos=(905, 915), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(908, 913), parts=[
        WordNode(pos=(908, 913), word='nproc'),
      ]), pos=(906, 914)),
  ]),
])


715) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


716) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


717) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(513, 544), parts=[
  WordNode(pos=(513, 519), word='export'),
  WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(533, 542), parts=[
        WordNode(pos=(533, 539), word='mktemp'),
        WordNode(pos=(540, 542), word='-d'),
      ]), pos=(531, 543)),
  ]),
])


718) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(10, 41), parts=[
  WordNode(pos=(10, 16), word='export'),
  WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(30, 39), parts=[
        WordNode(pos=(30, 36), word='mktemp'),
        WordNode(pos=(37, 39), word='-d'),
      ]), pos=(28, 40)),
  ]),
])


719) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


720) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1082, 1139), parts=[
  AssignmentNode(pos=(1082, 1139), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1093, 1137), parts=[
        WordNode(pos=(1093, 1110), word='dpkg-architecture'),
        WordNode(pos=(1111, 1118), word='--query'),
        WordNode(pos=(1119, 1137), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1091, 1138)),
  ]),
])


721) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1301, 1365), parts=[
  WordNode(pos=(1301, 1305), word='make'),
  WordNode(pos=(1306, 1308), word='-j'),
  WordNode(pos=(1309, 1319), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1312, 1317), parts=[
        WordNode(pos=(1312, 1317), word='nproc'),
      ]), pos=(1310, 1318)),
  ]),
  WordNode(pos=(1322, 1365), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


722) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


723) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


724) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


725) docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip

CommandNode(pos=(294, 375), parts=[
  WordNode(pos=(294, 316), word='docker-php-ext-install'),
  WordNode(pos=(317, 319), word='-j'),
  WordNode(pos=(320, 330), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(323, 328), parts=[
        WordNode(pos=(323, 328), word='nproc'),
      ]), pos=(321, 329)),
  ]),
  WordNode(pos=(333, 335), word='gd'),
  WordNode(pos=(338, 345), word='opcache'),
  WordNode(pos=(348, 357), word='pdo_mysql'),
  WordNode(pos=(360, 369), word='pdo_pgsql'),
  WordNode(pos=(372, 375), word='zip'),
])


726) ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so

CommandNode(pos=(446, 499), parts=[
  WordNode(pos=(446, 449), word='ldd'),
  WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(453, 492), parts=[
        WordNode(pos=(453, 456), word='php'),
        WordNode(pos=(457, 459), word='-r'),
        WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
      ]), pos=(451, 493)),
  ]),
])


727) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


728) make -j "$(nproc)"

CommandNode(pos=(747, 765), parts=[
  WordNode(pos=(747, 751), word='make'),
  WordNode(pos=(752, 754), word='-j'),
  WordNode(pos=(755, 765), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(758, 763), parts=[
        WordNode(pos=(758, 763), word='nproc'),
      ]), pos=(756, 764)),
  ]),
])


729) base="$(basename "$bin")"

CommandNode(pos=(346, 371), parts=[
  AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(354, 369), parts=[
        WordNode(pos=(354, 362), word='basename'),
        WordNode(pos=(363, 369), word='$bin', parts=[
          ParameterNode(pos=(364, 368), value='bin'),
        ]),
      ]), pos=(352, 370)),
  ]),
])


730) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


731) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


732) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1317, 1381), parts=[
  WordNode(pos=(1317, 1321), word='make'),
  WordNode(pos=(1322, 1324), word='-j'),
  WordNode(pos=(1325, 1335), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1328, 1333), parts=[
        WordNode(pos=(1328, 1333), word='nproc'),
      ]), pos=(1326, 1334)),
  ]),
  WordNode(pos=(1338, 1381), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


733) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


734) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


735) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


736) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


737) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


738) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


739) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


740) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


741) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


742) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


743) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


744) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


745) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


746) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


747) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


748) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


749) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


750) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


751) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


752) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(321, 352), parts=[
  WordNode(pos=(321, 327), word='export'),
  WordNode(pos=(328, 352), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(341, 350), parts=[
        WordNode(pos=(341, 347), word='mktemp'),
        WordNode(pos=(348, 350), word='-d'),
      ]), pos=(339, 351)),
  ]),
])


753) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


754) make -j "$(nproc)"   EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"

CommandNode(pos=(1272, 1336), parts=[
  WordNode(pos=(1272, 1276), word='make'),
  WordNode(pos=(1277, 1279), word='-j'),
  WordNode(pos=(1280, 1290), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1283, 1288), parts=[
        WordNode(pos=(1283, 1288), word='nproc'),
      ]), pos=(1281, 1289)),
  ]),
  WordNode(pos=(1293, 1336), word='EXTRA_CFLAGS=-DTHREAD_STACK_SIZE=0x100000'),
])


755) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


756) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(608, 639), parts=[
  WordNode(pos=(608, 614), word='export'),
  WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(628, 637), parts=[
        WordNode(pos=(628, 634), word='mktemp'),
        WordNode(pos=(635, 637), word='-d'),
      ]), pos=(626, 638)),
  ]),
])


757) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


758) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


759) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1340, 1378), parts=[
  WordNode(pos=(1340, 1344), word='make'),
  WordNode(pos=(1345, 1347), word='-j'),
  WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1351, 1376), parts=[
        WordNode(pos=(1351, 1358), word='getconf'),
        WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
      ]), pos=(1349, 1377)),
  ]),
])


760) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


761) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


762) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


763) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


764) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(3077, 3155), parts=[
  WordNode(pos=(3077, 3081), word='make'),
  WordNode(pos=(3082, 3084), word='-j'),
  WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(3088, 3113), parts=[
        WordNode(pos=(3088, 3095), word='getconf'),
        WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
      ]), pos=(3086, 3114)),
  ]),
  WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


765) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


766) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(607, 638), parts=[
  WordNode(pos=(607, 613), word='export'),
  WordNode(pos=(614, 638), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(627, 636), parts=[
        WordNode(pos=(627, 633), word='mktemp'),
        WordNode(pos=(634, 636), word='-d'),
      ]), pos=(625, 637)),
  ]),
])


767) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


768) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(130, 161), parts=[
  WordNode(pos=(130, 136), word='export'),
  WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(150, 159), parts=[
        WordNode(pos=(150, 156), word='mktemp'),
        WordNode(pos=(157, 159), word='-d'),
      ]), pos=(148, 160)),
  ]),
])


769) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


770) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


771) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


772) make -j "$(nproc)"

CommandNode(pos=(1456, 1474), parts=[
  WordNode(pos=(1456, 1460), word='make'),
  WordNode(pos=(1461, 1463), word='-j'),
  WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1467, 1472), parts=[
        WordNode(pos=(1467, 1472), word='nproc'),
      ]), pos=(1465, 1473)),
  ]),
])


773) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


774) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


775) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


776) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


777) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(637, 689), parts=[
  WordNode(pos=(637, 641), word='make'),
  WordNode(pos=(642, 644), word='-C'),
  WordNode(pos=(645, 661), word='/usr/src/haproxy'),
  WordNode(pos=(662, 664), word='-j'),
  WordNode(pos=(665, 675), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(668, 673), parts=[
        WordNode(pos=(668, 673), word='nproc'),
      ]), pos=(666, 674)),
  ]),
  WordNode(pos=(676, 679), word='all'),
  WordNode(pos=(680, 689), word='$makeOpts', parts=[
    ParameterNode(pos=(680, 689), value='makeOpts'),
  ]),
])


778) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


779) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(608, 639), parts=[
  WordNode(pos=(608, 614), word='export'),
  WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(628, 637), parts=[
        WordNode(pos=(628, 634), word='mktemp'),
        WordNode(pos=(635, 637), word='-d'),
      ]), pos=(626, 638)),
  ]),
])


780) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


781) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


782) make -j "$(getconf _NPROCESSORS_ONLN)"

CommandNode(pos=(1340, 1378), parts=[
  WordNode(pos=(1340, 1344), word='make'),
  WordNode(pos=(1345, 1347), word='-j'),
  WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1351, 1376), parts=[
        WordNode(pos=(1351, 1358), word='getconf'),
        WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
      ]), pos=(1349, 1377)),
  ]),
])


783) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


784) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


785) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


786) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


787) make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing"

CommandNode(pos=(3077, 3155), parts=[
  WordNode(pos=(3077, 3081), word='make'),
  WordNode(pos=(3082, 3084), word='-j'),
  WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(3088, 3113), parts=[
        WordNode(pos=(3088, 3095), word='getconf'),
        WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
      ]), pos=(3086, 3114)),
  ]),
  WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
])


788) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


789) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(607, 638), parts=[
  WordNode(pos=(607, 613), word='export'),
  WordNode(pos=(614, 638), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(627, 636), parts=[
        WordNode(pos=(627, 633), word='mktemp'),
        WordNode(pos=(634, 636), word='-d'),
      ]), pos=(625, 637)),
  ]),
])


790) export GNUPGHOME="$(mktemp -d)"

CommandNode(pos=(540, 571), parts=[
  WordNode(pos=(540, 546), word='export'),
  WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(560, 569), parts=[
        WordNode(pos=(560, 566), word='mktemp'),
        WordNode(pos=(567, 569), word='-d'),
      ]), pos=(558, 570)),
  ]),
])


791) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


792) make -j"$(nproc)"

CommandNode(pos=(1672, 1689), parts=[
  WordNode(pos=(1672, 1676), word='make'),
  WordNode(pos=(1677, 1689), word='-j$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1682, 1687), parts=[
        WordNode(pos=(1682, 1687), word='nproc'),
      ]), pos=(1680, 1688)),
  ]),
])


