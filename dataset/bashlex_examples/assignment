1) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


2) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


3) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


4) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


5) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(164, 229), parts=[
  AssignmentNode(pos=(164, 229), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(176, 227), parts=[
        CommandNode(pos=(176, 201), parts=[
          WordNode(pos=(176, 180), word='dpkg'),
          WordNode(pos=(181, 201), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(202, 203)),
        CommandNode(pos=(204, 227), parts=[
          WordNode(pos=(204, 207), word='awk'),
          WordNode(pos=(208, 211), word='-F-'),
          WordNode(pos=(212, 227), word='{ print $NF }'),
        ]),
      ]), pos=(174, 228)),
  ]),
])


6) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


7) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(561, 618), parts=[
  AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(572, 616), parts=[
        WordNode(pos=(572, 589), word='dpkg-architecture'),
        WordNode(pos=(590, 597), word='--query'),
        WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(570, 617)),
  ]),
])


8) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


9) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


10) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


11) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


12) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


13) fetchDeps="   ca-certificates   dirmngr   gnupg   wget  "

CommandNode(pos=(11, 68), parts=[
  AssignmentNode(pos=(11, 68), word='fetchDeps=   ca-certificates   dirmngr   gnupg   wget  '),
])


14) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


15) buildDeps='   wget     gcc   gcc-multilib   libc6-dev-i386   make  '

CommandNode(pos=(11, 79), parts=[
  AssignmentNode(pos=(11, 79), word='buildDeps=   wget     gcc   gcc-multilib   libc6-dev-i386   make  '),
])


16) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


17) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


18) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


19) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


20) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


21) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


22) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


23) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


24) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


25) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


26) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


27) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


28) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


29) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


30) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


31) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


32) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


33) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


34) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


35) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


36) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


37) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


38) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(342, 558), parts=[
  AssignmentNode(pos=(342, 558), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(356, 554), parts=[
        CommandNode(pos=(356, 441), parts=[
          WordNode(pos=(356, 363), word='scanelf'),
          WordNode(pos=(364, 372), word='--needed'),
          WordNode(pos=(373, 383), word='--nobanner'),
          WordNode(pos=(384, 392), word='--format'),
          WordNode(pos=(393, 399), word='%n#p'),
          WordNode(pos=(400, 411), word='--recursive'),
          WordNode(pos=(412, 441), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(445, 446)),
        CommandNode(pos=(447, 458), parts=[
          WordNode(pos=(447, 449), word='tr'),
          WordNode(pos=(450, 453), word=','),
          WordNode(pos=(454, 458), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 471), parts=[
          WordNode(pos=(464, 468), word='sort'),
          WordNode(pos=(469, 471), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(475, 476)),
        CommandNode(pos=(477, 554), parts=[
          WordNode(pos=(477, 480), word='awk'),
          WordNode(pos=(481, 554), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(351, 555)),
  ]),
])


39) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


40) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


41) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


42) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


43) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


44) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


45) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


46) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


47) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


48) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


49) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


50) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


51) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


52) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


53) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(342, 558), parts=[
  AssignmentNode(pos=(342, 558), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(356, 554), parts=[
        CommandNode(pos=(356, 441), parts=[
          WordNode(pos=(356, 363), word='scanelf'),
          WordNode(pos=(364, 372), word='--needed'),
          WordNode(pos=(373, 383), word='--nobanner'),
          WordNode(pos=(384, 392), word='--format'),
          WordNode(pos=(393, 399), word='%n#p'),
          WordNode(pos=(400, 411), word='--recursive'),
          WordNode(pos=(412, 441), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(445, 446)),
        CommandNode(pos=(447, 458), parts=[
          WordNode(pos=(447, 449), word='tr'),
          WordNode(pos=(450, 453), word=','),
          WordNode(pos=(454, 458), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 471), parts=[
          WordNode(pos=(464, 468), word='sort'),
          WordNode(pos=(469, 471), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(475, 476)),
        CommandNode(pos=(477, 554), parts=[
          WordNode(pos=(477, 480), word='awk'),
          WordNode(pos=(481, 554), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(351, 555)),
  ]),
])


54) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 594), parts=[
  AssignmentNode(pos=(419, 594), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


55) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


56) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 594), parts=[
  AssignmentNode(pos=(419, 594), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


57) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


58) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


59) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


60) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


61) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


62) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


63) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


64) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


65) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


66) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


67) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1043, 1100), parts=[
  AssignmentNode(pos=(1043, 1100), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1054, 1098), parts=[
        WordNode(pos=(1054, 1071), word='dpkg-architecture'),
        WordNode(pos=(1072, 1079), word='--query'),
        WordNode(pos=(1080, 1098), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1052, 1099)),
  ]),
])


68) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1840, 2037), parts=[
  AssignmentNode(pos=(1840, 2037), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1854, 2033), parts=[
        CommandNode(pos=(1854, 1920), parts=[
          WordNode(pos=(1854, 1861), word='scanelf'),
          WordNode(pos=(1862, 1870), word='--needed'),
          WordNode(pos=(1871, 1881), word='--nobanner'),
          WordNode(pos=(1882, 1890), word='--format'),
          WordNode(pos=(1891, 1897), word='%n#p'),
          WordNode(pos=(1898, 1909), word='--recursive'),
          WordNode(pos=(1910, 1920), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1924, 1925)),
        CommandNode(pos=(1926, 1937), parts=[
          WordNode(pos=(1926, 1928), word='tr'),
          WordNode(pos=(1929, 1932), word=','),
          WordNode(pos=(1933, 1937), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1941, 1942)),
        CommandNode(pos=(1943, 1950), parts=[
          WordNode(pos=(1943, 1947), word='sort'),
          WordNode(pos=(1948, 1950), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1954, 1955)),
        CommandNode(pos=(1956, 2033), parts=[
          WordNode(pos=(1956, 1959), word='awk'),
          WordNode(pos=(1960, 2033), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1849, 2034)),
  ]),
])


69) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


70) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(481, 632), parts=[
  AssignmentNode(pos=(481, 632), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


71) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


72) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


73) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


74) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


75) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


76) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


77) key='A4A9406876FCBD3C456770C88C718D3B5072E1F5'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=A4A9406876FCBD3C456770C88C718D3B5072E1F5'),
])


78) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


79) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


80) folder="$(echo "$JULIA_VERSION" | cut -d. -f1-2)"

CommandNode(pos=(232, 281), parts=[
  AssignmentNode(pos=(232, 281), word='folder=$(echo "$JULIA_VERSION" | cut -d. -f1-2)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(242, 279), parts=[
        CommandNode(pos=(242, 263), parts=[
          WordNode(pos=(242, 246), word='echo'),
          WordNode(pos=(247, 263), word='$JULIA_VERSION', parts=[
            ParameterNode(pos=(248, 262), value='JULIA_VERSION'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(264, 265)),
        CommandNode(pos=(266, 279), parts=[
          WordNode(pos=(266, 269), word='cut'),
          WordNode(pos=(270, 273), word='-d.'),
          WordNode(pos=(274, 279), word='-f1-2'),
        ]),
      ]), pos=(240, 280)),
  ]),
])


81) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1099, 1156), parts=[
  AssignmentNode(pos=(1099, 1156), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1108, 1155)),
  ]),
])


82) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(676, 873), parts=[
  AssignmentNode(pos=(676, 873), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(690, 869), parts=[
        CommandNode(pos=(690, 756), parts=[
          WordNode(pos=(690, 697), word='scanelf'),
          WordNode(pos=(698, 706), word='--needed'),
          WordNode(pos=(707, 717), word='--nobanner'),
          WordNode(pos=(718, 726), word='--format'),
          WordNode(pos=(727, 733), word='%n#p'),
          WordNode(pos=(734, 745), word='--recursive'),
          WordNode(pos=(746, 756), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(760, 761)),
        CommandNode(pos=(762, 773), parts=[
          WordNode(pos=(762, 764), word='tr'),
          WordNode(pos=(765, 768), word=','),
          WordNode(pos=(769, 773), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(777, 778)),
        CommandNode(pos=(779, 786), parts=[
          WordNode(pos=(779, 783), word='sort'),
          WordNode(pos=(784, 786), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(790, 791)),
        CommandNode(pos=(792, 869), parts=[
          WordNode(pos=(792, 795), word='awk'),
          WordNode(pos=(796, 869), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(685, 870)),
  ]),
])


83) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


84) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


85) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


86) makeOpts='   TARGET=linux2628   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(468, 579), parts=[
  AssignmentNode(pos=(468, 579), word='makeOpts=   TARGET=linux2628   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


87) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


88) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


89) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


90) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 594), parts=[
  AssignmentNode(pos=(419, 594), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


91) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


92) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


93) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


94) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


95) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


96) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


97) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


98) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


99) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


100) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


101) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


102) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


103) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


104) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


105) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


106) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


107) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


108) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


109) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


110) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


111) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


112) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


113) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


114) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


115) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


116) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


117) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


118) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


119) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


120) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


121) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


122) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


123) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


124) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


125) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(342, 558), parts=[
  AssignmentNode(pos=(342, 558), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(356, 554), parts=[
        CommandNode(pos=(356, 441), parts=[
          WordNode(pos=(356, 363), word='scanelf'),
          WordNode(pos=(364, 372), word='--needed'),
          WordNode(pos=(373, 383), word='--nobanner'),
          WordNode(pos=(384, 392), word='--format'),
          WordNode(pos=(393, 399), word='%n#p'),
          WordNode(pos=(400, 411), word='--recursive'),
          WordNode(pos=(412, 441), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(445, 446)),
        CommandNode(pos=(447, 458), parts=[
          WordNode(pos=(447, 449), word='tr'),
          WordNode(pos=(450, 453), word=','),
          WordNode(pos=(454, 458), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 471), parts=[
          WordNode(pos=(464, 468), word='sort'),
          WordNode(pos=(469, 471), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(475, 476)),
        CommandNode(pos=(477, 554), parts=[
          WordNode(pos=(477, 480), word='awk'),
          WordNode(pos=(481, 554), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(351, 555)),
  ]),
])


126) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1081, 1138), parts=[
  AssignmentNode(pos=(1081, 1138), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1092, 1136), parts=[
        WordNode(pos=(1092, 1109), word='dpkg-architecture'),
        WordNode(pos=(1110, 1117), word='--query'),
        WordNode(pos=(1118, 1136), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1090, 1137)),
  ]),
])


127) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


128) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


129) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


130) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


131) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


132) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


133) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


134) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


135) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


136) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


137) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


138) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


139) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


140) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


141) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


142) makeOpts='   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 596), parts=[
  AssignmentNode(pos=(419, 596), word='makeOpts=   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


143) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(872, 1069), parts=[
  AssignmentNode(pos=(872, 1069), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(886, 1065), parts=[
        CommandNode(pos=(886, 952), parts=[
          WordNode(pos=(886, 893), word='scanelf'),
          WordNode(pos=(894, 902), word='--needed'),
          WordNode(pos=(903, 913), word='--nobanner'),
          WordNode(pos=(914, 922), word='--format'),
          WordNode(pos=(923, 929), word='%n#p'),
          WordNode(pos=(930, 941), word='--recursive'),
          WordNode(pos=(942, 952), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(956, 957)),
        CommandNode(pos=(958, 969), parts=[
          WordNode(pos=(958, 960), word='tr'),
          WordNode(pos=(961, 964), word=','),
          WordNode(pos=(965, 969), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(973, 974)),
        CommandNode(pos=(975, 982), parts=[
          WordNode(pos=(975, 979), word='sort'),
          WordNode(pos=(980, 982), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(986, 987)),
        CommandNode(pos=(988, 1065), parts=[
          WordNode(pos=(988, 991), word='awk'),
          WordNode(pos=(992, 1065), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(881, 1066)),
  ]),
])


144) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


145) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


146) tarball="buildroot-${BUILDROOT_VERSION}.tar.bz2"

CommandNode(pos=(10, 58), parts=[
  AssignmentNode(pos=(10, 58), word='tarball=buildroot-${BUILDROOT_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(29, 49), value='BUILDROOT_VERSION'),
  ]),
])


147) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(10, 67), parts=[
  AssignmentNode(pos=(10, 67), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(21, 65), parts=[
        WordNode(pos=(21, 38), word='dpkg-architecture'),
        WordNode(pos=(39, 46), word='--query'),
        WordNode(pos=(47, 65), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(19, 66)),
  ]),
])


148) tarball="busybox-${BUSYBOX_VERSION}.tar.bz2"

CommandNode(pos=(10, 54), parts=[
  AssignmentNode(pos=(10, 54), word='tarball=busybox-${BUSYBOX_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(27, 45), value='BUSYBOX_VERSION'),
  ]),
])


149) setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '

CommandNode(pos=(11, 154), parts=[
  AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
])


150) unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  '

CommandNode(pos=(158, 201), parts=[
  AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
])


151) conf="${confV%=*}"

CommandNode(pos=(352, 370), parts=[
  AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
    ParameterNode(pos=(358, 369), value='confV%=*'),
  ]),
])


152) user="${userHome%%=*}"

CommandNode(pos=(102, 124), parts=[
  AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
    ParameterNode(pos=(108, 123), value='userHome%%=*'),
  ]),
])


153) home="${userHome#*=}"

CommandNode(pos=(128, 149), parts=[
  AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
    ParameterNode(pos=(134, 148), value='userHome#*='),
  ]),
])


154) home="./${home#/}"

CommandNode(pos=(153, 171), parts=[
  AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
    ParameterNode(pos=(161, 170), value='home#/'),
  ]),
])


155) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


156) runDeps='   apr-dev   apr-util-dev   apr-util-ldap   perl  '

CommandNode(pos=(12, 72), parts=[
  AssignmentNode(pos=(12, 72), word='runDeps=   apr-dev   apr-util-dev   apr-util-ldap   perl  '),
])


157) success=1

CommandNode(pos=(527, 536), parts=[
  AssignmentNode(pos=(527, 536), word='success=1'),
])


158) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1558, 1615), parts=[
  AssignmentNode(pos=(1558, 1615), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1569, 1613), parts=[
        WordNode(pos=(1569, 1586), word='dpkg-architecture'),
        WordNode(pos=(1587, 1594), word='--query'),
        WordNode(pos=(1595, 1613), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1567, 1614)),
  ]),
])


159) runDeps="$runDeps $(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2059, 2265), parts=[
  AssignmentNode(pos=(2059, 2265), word='runDeps=$runDeps $(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    ParameterNode(pos=(2068, 2076), value='runDeps'),
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2082, 2261), parts=[
        CommandNode(pos=(2082, 2148), parts=[
          WordNode(pos=(2082, 2089), word='scanelf'),
          WordNode(pos=(2090, 2098), word='--needed'),
          WordNode(pos=(2099, 2109), word='--nobanner'),
          WordNode(pos=(2110, 2118), word='--format'),
          WordNode(pos=(2119, 2125), word='%n#p'),
          WordNode(pos=(2126, 2137), word='--recursive'),
          WordNode(pos=(2138, 2148), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(2152, 2153)),
        CommandNode(pos=(2154, 2165), parts=[
          WordNode(pos=(2154, 2156), word='tr'),
          WordNode(pos=(2157, 2160), word=','),
          WordNode(pos=(2161, 2165), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(2169, 2170)),
        CommandNode(pos=(2171, 2178), parts=[
          WordNode(pos=(2171, 2175), word='sort'),
          WordNode(pos=(2176, 2178), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(2182, 2183)),
        CommandNode(pos=(2184, 2261), parts=[
          WordNode(pos=(2184, 2187), word='awk'),
          WordNode(pos=(2188, 2261), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2077, 2262)),
  ]),
])


160) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


161) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


162) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


163) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(379, 416), parts=[
  AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


164) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


165) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


166) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


167) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


168) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


169) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


170) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


171) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


172) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


173) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


174) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


175) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


176) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


177) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


178) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


179) apkStaticDist='v3.9'

CommandNode(pos=(11, 31), parts=[
  AssignmentNode(pos=(11, 31), word='apkStaticDist=v3.9'),
])


180) apkStaticVersion='2.10.3-r1'

CommandNode(pos=(34, 62), parts=[
  AssignmentNode(pos=(34, 62), word='apkStaticVersion=2.10.3-r1'),
])


181) apkStaticArch='x86_64'

CommandNode(pos=(65, 87), parts=[
  AssignmentNode(pos=(65, 87), word='apkStaticArch=x86_64'),
])


182) apkStaticUrl="http://dl-cdn.alpinelinux.org/alpine/$apkStaticDist/main/$apkStaticArch/apk-tools-static-$apkStaticVersion.apk"

CommandNode(pos=(90, 215), parts=[
  AssignmentNode(pos=(90, 215), word='apkStaticUrl=http://dl-cdn.alpinelinux.org/alpine/$apkStaticDist/main/$apkStaticArch/apk-tools-static-$apkStaticVersion.apk', parts=[
    ParameterNode(pos=(141, 155), value='apkStaticDist'),
    ParameterNode(pos=(161, 175), value='apkStaticArch'),
    ParameterNode(pos=(193, 210), value='apkStaticVersion'),
  ]),
])


183) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


184) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


185) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


186) tarball="busybox-${BUSYBOX_VERSION}.tar.bz2"

CommandNode(pos=(10, 54), parts=[
  AssignmentNode(pos=(10, 54), word='tarball=busybox-${BUSYBOX_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(27, 45), value='BUSYBOX_VERSION'),
  ]),
])


187) setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '

CommandNode(pos=(11, 154), parts=[
  AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
])


188) unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '

CommandNode(pos=(158, 300), parts=[
  AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
])


189) conf="${confV%=*}"

CommandNode(pos=(451, 469), parts=[
  AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
    ParameterNode(pos=(457, 468), value='confV%=*'),
  ]),
])


190) aportsVersion="v$(cat /etc/alpine-release)"

CommandNode(pos=(11, 54), parts=[
  AssignmentNode(pos=(11, 54), word='aportsVersion=v$(cat /etc/alpine-release)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 52), parts=[
        WordNode(pos=(29, 32), word='cat'),
        WordNode(pos=(33, 52), word='/etc/alpine-release'),
      ]), pos=(27, 53)),
  ]),
])


191) buildrootVersion='2019.05'

CommandNode(pos=(10, 36), parts=[
  AssignmentNode(pos=(10, 36), word='buildrootVersion=2019.05'),
])


192) user="${userHome%%=*}"

CommandNode(pos=(102, 124), parts=[
  AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
    ParameterNode(pos=(108, 123), value='userHome%%=*'),
  ]),
])


193) home="${userHome#*=}"

CommandNode(pos=(128, 149), parts=[
  AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
    ParameterNode(pos=(134, 148), value='userHome#*='),
  ]),
])


194) home="./${home#/}"

CommandNode(pos=(153, 171), parts=[
  AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
    ParameterNode(pos=(161, 170), value='home#/'),
  ]),
])


195) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


196) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


197) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1043, 1100), parts=[
  AssignmentNode(pos=(1043, 1100), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1054, 1098), parts=[
        WordNode(pos=(1054, 1071), word='dpkg-architecture'),
        WordNode(pos=(1072, 1079), word='--query'),
        WordNode(pos=(1080, 1098), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1052, 1099)),
  ]),
])


198) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1840, 2037), parts=[
  AssignmentNode(pos=(1840, 2037), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1854, 2033), parts=[
        CommandNode(pos=(1854, 1920), parts=[
          WordNode(pos=(1854, 1861), word='scanelf'),
          WordNode(pos=(1862, 1870), word='--needed'),
          WordNode(pos=(1871, 1881), word='--nobanner'),
          WordNode(pos=(1882, 1890), word='--format'),
          WordNode(pos=(1891, 1897), word='%n#p'),
          WordNode(pos=(1898, 1909), word='--recursive'),
          WordNode(pos=(1910, 1920), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1924, 1925)),
        CommandNode(pos=(1926, 1937), parts=[
          WordNode(pos=(1926, 1928), word='tr'),
          WordNode(pos=(1929, 1932), word=','),
          WordNode(pos=(1933, 1937), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1941, 1942)),
        CommandNode(pos=(1943, 1950), parts=[
          WordNode(pos=(1943, 1947), word='sort'),
          WordNode(pos=(1948, 1950), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1954, 1955)),
        CommandNode(pos=(1956, 2033), parts=[
          WordNode(pos=(1956, 1959), word='awk'),
          WordNode(pos=(1960, 2033), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1849, 2034)),
  ]),
])


199) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1072, 1129), parts=[
  AssignmentNode(pos=(1072, 1129), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1083, 1127), parts=[
        WordNode(pos=(1083, 1100), word='dpkg-architecture'),
        WordNode(pos=(1101, 1108), word='--query'),
        WordNode(pos=(1109, 1127), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1081, 1128)),
  ]),
])


200) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


201) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


202) tarball="busybox-${BUSYBOX_VERSION}.tar.bz2"

CommandNode(pos=(10, 54), parts=[
  AssignmentNode(pos=(10, 54), word='tarball=busybox-${BUSYBOX_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(27, 45), value='BUSYBOX_VERSION'),
  ]),
])


203) setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '

CommandNode(pos=(11, 136), parts=[
  AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
])


204) unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  '

CommandNode(pos=(140, 183), parts=[
  AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
])


205) conf="${confV%=*}"

CommandNode(pos=(334, 352), parts=[
  AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
    ParameterNode(pos=(340, 351), value='confV%=*'),
  ]),
])


206) f="$1"

CommandNode(pos=(462, 468), parts=[
  AssignmentNode(pos=(462, 468), word='f=$1', parts=[
    ParameterNode(pos=(465, 467), value='1'),
  ]),
])


207) fn="$(basename "$f")"

CommandNode(pos=(479, 500), parts=[
  AssignmentNode(pos=(479, 500), word='fn=$(basename "$f")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(485, 498), parts=[
        WordNode(pos=(485, 493), word='basename'),
        WordNode(pos=(494, 498), word='$f', parts=[
          ParameterNode(pos=(495, 497), value='f'),
        ]),
      ]), pos=(483, 499)),
  ]),
])


208) buildrootVersion='2019.05'

CommandNode(pos=(10, 36), parts=[
  AssignmentNode(pos=(10, 36), word='buildrootVersion=2019.05'),
])


209) user="${userHome%%=*}"

CommandNode(pos=(102, 124), parts=[
  AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
    ParameterNode(pos=(108, 123), value='userHome%%=*'),
  ]),
])


210) home="${userHome#*=}"

CommandNode(pos=(128, 149), parts=[
  AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
    ParameterNode(pos=(134, 148), value='userHome#*='),
  ]),
])


211) home="./${home#/}"

CommandNode(pos=(153, 171), parts=[
  AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
    ParameterNode(pos=(161, 170), value='home#/'),
  ]),
])


212) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


213) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


214) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


215) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


216) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(481, 632), parts=[
  AssignmentNode(pos=(481, 632), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


217) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


218) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(164, 229), parts=[
  AssignmentNode(pos=(164, 229), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(176, 227), parts=[
        CommandNode(pos=(176, 201), parts=[
          WordNode(pos=(176, 180), word='dpkg'),
          WordNode(pos=(181, 201), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(202, 203)),
        CommandNode(pos=(204, 227), parts=[
          WordNode(pos=(204, 207), word='awk'),
          WordNode(pos=(208, 211), word='-F-'),
          WordNode(pos=(212, 227), word='{ print $NF }'),
        ]),
      ]), pos=(174, 228)),
  ]),
])


219) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


220) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(561, 618), parts=[
  AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(572, 616), parts=[
        WordNode(pos=(572, 589), word='dpkg-architecture'),
        WordNode(pos=(590, 597), word='--query'),
        WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(570, 617)),
  ]),
])


221) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


222) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


223) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


224) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


225) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


226) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1072, 1129), parts=[
  AssignmentNode(pos=(1072, 1129), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1083, 1127), parts=[
        WordNode(pos=(1083, 1100), word='dpkg-architecture'),
        WordNode(pos=(1101, 1108), word='--query'),
        WordNode(pos=(1109, 1127), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1081, 1128)),
  ]),
])


227) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


228) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


229) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


230) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


231) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


232) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(308, 345), parts=[
  AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


233) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


234) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


235) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


236) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


237) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


238) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


239) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


240) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


241) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


242) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


243) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


244) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


245) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


246) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


247) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


248) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


249) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


250) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


251) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


252) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


253) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


254) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


255) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


256) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


257) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(379, 416), parts=[
  AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


258) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


259) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


260) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


261) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


262) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


263) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


264) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


265) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


266) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


267) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


268) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


269) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


270) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


271) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


272) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


273) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


274) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


275) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


276) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


277) goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"

CommandNode(pos=(211, 264), parts=[
  AssignmentNode(pos=(211, 264), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(220, 262), parts=[
        WordNode(pos=(220, 246), word='.bashbrew-arch-to-goenv.sh'),
        WordNode(pos=(247, 262), word='$bashbrewArch', parts=[
          ParameterNode(pos=(248, 261), value='bashbrewArch'),
        ]),
      ]), pos=(218, 263)),
  ]),
])


278) srcBin="manifest-tool-$GOOS-$GOARCH"

CommandNode(pos=(284, 320), parts=[
  AssignmentNode(pos=(284, 320), word='srcBin=manifest-tool-$GOOS-$GOARCH', parts=[
    ParameterNode(pos=(306, 311), value='GOOS'),
    ParameterNode(pos=(312, 319), value='GOARCH'),
  ]),
])


279) srcBin="${srcBin}v$GOARM"

CommandNode(pos=(373, 398), parts=[
  AssignmentNode(pos=(373, 398), word='srcBin=${srcBin}v$GOARM', parts=[
    ParameterNode(pos=(381, 390), value='srcBin'),
    ParameterNode(pos=(391, 397), value='GOARM'),
  ]),
])


280) ext='.exe'

CommandNode(pos=(434, 444), parts=[
  AssignmentNode(pos=(434, 444), word='ext=.exe'),
])


281) ext=

CommandNode(pos=(448, 452), parts=[
  AssignmentNode(pos=(448, 452), word='ext='),
])


282) srcBin="$srcBin$ext"

CommandNode(pos=(457, 477), parts=[
  AssignmentNode(pos=(457, 477), word='srcBin=$srcBin$ext', parts=[
    ParameterNode(pos=(465, 472), value='srcBin'),
    ParameterNode(pos=(472, 476), value='ext'),
  ]),
])


283) targetBin="bin/manifest-tool-$bashbrewArch$ext"

CommandNode(pos=(482, 529), parts=[
  AssignmentNode(pos=(482, 529), word='targetBin=bin/manifest-tool-$bashbrewArch$ext', parts=[
    ParameterNode(pos=(511, 524), value='bashbrewArch'),
    ParameterNode(pos=(524, 528), value='ext'),
  ]),
])


284) goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"

CommandNode(pos=(86, 139), parts=[
  AssignmentNode(pos=(86, 139), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(95, 137), parts=[
        WordNode(pos=(95, 121), word='.bashbrew-arch-to-goenv.sh'),
        WordNode(pos=(122, 137), word='$bashbrewArch', parts=[
          ParameterNode(pos=(123, 136), value='bashbrewArch'),
        ]),
      ]), pos=(93, 138)),
  ]),
])


285) ext='.exe'

CommandNode(pos=(186, 196), parts=[
  AssignmentNode(pos=(186, 196), word='ext=.exe'),
])


286) ext=

CommandNode(pos=(200, 204), parts=[
  AssignmentNode(pos=(200, 204), word='ext='),
])


287) targetBin="bin/bashbrew-$bashbrewArch$ext"

CommandNode(pos=(212, 254), parts=[
  AssignmentNode(pos=(212, 254), word='targetBin=bin/bashbrew-$bashbrewArch$ext', parts=[
    ParameterNode(pos=(236, 249), value='bashbrewArch'),
    ParameterNode(pos=(249, 253), value='ext'),
  ]),
])


288) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(364, 561), parts=[
  AssignmentNode(pos=(364, 561), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(378, 557), parts=[
        CommandNode(pos=(378, 444), parts=[
          WordNode(pos=(378, 385), word='scanelf'),
          WordNode(pos=(386, 394), word='--needed'),
          WordNode(pos=(395, 405), word='--nobanner'),
          WordNode(pos=(406, 414), word='--format'),
          WordNode(pos=(415, 421), word='%n#p'),
          WordNode(pos=(422, 433), word='--recursive'),
          WordNode(pos=(434, 444), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(448, 449)),
        CommandNode(pos=(450, 461), parts=[
          WordNode(pos=(450, 452), word='tr'),
          WordNode(pos=(453, 456), word=','),
          WordNode(pos=(457, 461), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(465, 466)),
        CommandNode(pos=(467, 474), parts=[
          WordNode(pos=(467, 471), word='sort'),
          WordNode(pos=(472, 474), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(478, 479)),
        CommandNode(pos=(480, 557), parts=[
          WordNode(pos=(480, 483), word='awk'),
          WordNode(pos=(484, 557), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(373, 558)),
  ]),
])


289) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


290) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


291) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


292) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(308, 345), parts=[
  AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


293) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


294) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


295) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


296) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


297) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


298) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


299) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


300) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


301) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


302) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


303) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


304) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


305) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


306) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


307) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(126, 163), parts=[
  AssignmentNode(pos=(126, 163), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(142, 161), parts=[
        WordNode(pos=(142, 150), word='apt-mark'),
        WordNode(pos=(151, 161), word='showmanual'),
      ]), pos=(140, 162)),
  ]),
])


308) success=1

CommandNode(pos=(681, 690), parts=[
  AssignmentNode(pos=(681, 690), word='success=1'),
])


309) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1712, 1769), parts=[
  AssignmentNode(pos=(1712, 1769), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1723, 1767), parts=[
        WordNode(pos=(1723, 1740), word='dpkg-architecture'),
        WordNode(pos=(1741, 1748), word='--query'),
        WordNode(pos=(1749, 1767), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1721, 1768)),
  ]),
])


310) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


311) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


312) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


313) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


314) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


315) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


316) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


317) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


318) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


319) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


320) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


321) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


322) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


323) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


324) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


325) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


326) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


327) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


328) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


329) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


330) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


331) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


332) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


333) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


334) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


335) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


336) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


337) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


338) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


339) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


340) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


341) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


342) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


343) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


344) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


345) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


346) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


347) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


348) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


349) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


350) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


351) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


352) fetchDeps="   ca-certificates   dirmngr   gnupg   wget  "

CommandNode(pos=(11, 68), parts=[
  AssignmentNode(pos=(11, 68), word='fetchDeps=   ca-certificates   dirmngr   gnupg   wget  '),
])


353) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


354) buildDeps='   ca-certificates   wget     gcc   libc6-dev   make  '

CommandNode(pos=(11, 77), parts=[
  AssignmentNode(pos=(11, 77), word='buildDeps=   ca-certificates   wget     gcc   libc6-dev   make  '),
])


355) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


356) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


357) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


358) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1072, 1129), parts=[
  AssignmentNode(pos=(1072, 1129), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1083, 1127), parts=[
        WordNode(pos=(1083, 1100), word='dpkg-architecture'),
        WordNode(pos=(1101, 1108), word='--query'),
        WordNode(pos=(1109, 1127), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1081, 1128)),
  ]),
])


359) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


360) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


361) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


362) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


363) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


364) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1043, 1100), parts=[
  AssignmentNode(pos=(1043, 1100), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1054, 1098), parts=[
        WordNode(pos=(1054, 1071), word='dpkg-architecture'),
        WordNode(pos=(1072, 1079), word='--query'),
        WordNode(pos=(1080, 1098), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1052, 1099)),
  ]),
])


365) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1840, 2037), parts=[
  AssignmentNode(pos=(1840, 2037), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1854, 2033), parts=[
        CommandNode(pos=(1854, 1920), parts=[
          WordNode(pos=(1854, 1861), word='scanelf'),
          WordNode(pos=(1862, 1870), word='--needed'),
          WordNode(pos=(1871, 1881), word='--nobanner'),
          WordNode(pos=(1882, 1890), word='--format'),
          WordNode(pos=(1891, 1897), word='%n#p'),
          WordNode(pos=(1898, 1909), word='--recursive'),
          WordNode(pos=(1910, 1920), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1924, 1925)),
        CommandNode(pos=(1926, 1937), parts=[
          WordNode(pos=(1926, 1928), word='tr'),
          WordNode(pos=(1929, 1932), word=','),
          WordNode(pos=(1933, 1937), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1941, 1942)),
        CommandNode(pos=(1943, 1950), parts=[
          WordNode(pos=(1943, 1947), word='sort'),
          WordNode(pos=(1948, 1950), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1954, 1955)),
        CommandNode(pos=(1956, 2033), parts=[
          WordNode(pos=(1956, 1959), word='awk'),
          WordNode(pos=(1960, 2033), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1849, 2034)),
  ]),
])


366) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 594), parts=[
  AssignmentNode(pos=(419, 594), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


367) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(870, 1067), parts=[
  AssignmentNode(pos=(870, 1067), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(884, 1063), parts=[
        CommandNode(pos=(884, 950), parts=[
          WordNode(pos=(884, 891), word='scanelf'),
          WordNode(pos=(892, 900), word='--needed'),
          WordNode(pos=(901, 911), word='--nobanner'),
          WordNode(pos=(912, 920), word='--format'),
          WordNode(pos=(921, 927), word='%n#p'),
          WordNode(pos=(928, 939), word='--recursive'),
          WordNode(pos=(940, 950), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(954, 955)),
        CommandNode(pos=(956, 967), parts=[
          WordNode(pos=(956, 958), word='tr'),
          WordNode(pos=(959, 962), word=','),
          WordNode(pos=(963, 967), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(971, 972)),
        CommandNode(pos=(973, 980), parts=[
          WordNode(pos=(973, 977), word='sort'),
          WordNode(pos=(978, 980), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(984, 985)),
        CommandNode(pos=(986, 1063), parts=[
          WordNode(pos=(986, 989), word='awk'),
          WordNode(pos=(990, 1063), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(879, 1064)),
  ]),
])


368) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


369) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


370) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


371) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


372) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


373) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(164, 229), parts=[
  AssignmentNode(pos=(164, 229), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(176, 227), parts=[
        CommandNode(pos=(176, 201), parts=[
          WordNode(pos=(176, 180), word='dpkg'),
          WordNode(pos=(181, 201), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(202, 203)),
        CommandNode(pos=(204, 227), parts=[
          WordNode(pos=(204, 207), word='awk'),
          WordNode(pos=(208, 211), word='-F-'),
          WordNode(pos=(212, 227), word='{ print $NF }'),
        ]),
      ]), pos=(174, 228)),
  ]),
])


374) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


375) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(561, 618), parts=[
  AssignmentNode(pos=(561, 618), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(572, 616), parts=[
        WordNode(pos=(572, 589), word='dpkg-architecture'),
        WordNode(pos=(590, 597), word='--query'),
        WordNode(pos=(598, 616), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(570, 617)),
  ]),
])


376) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


377) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


378) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


379) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


380) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


381) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


382) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


383) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


384) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


385) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


386) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


387) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


388) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


389) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


390) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


391) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


392) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


393) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(329, 545), parts=[
  AssignmentNode(pos=(329, 545), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local/lib/php/extensions    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(343, 541), parts=[
        CommandNode(pos=(343, 428), parts=[
          WordNode(pos=(343, 350), word='scanelf'),
          WordNode(pos=(351, 359), word='--needed'),
          WordNode(pos=(360, 370), word='--nobanner'),
          WordNode(pos=(371, 379), word='--format'),
          WordNode(pos=(380, 386), word='%n#p'),
          WordNode(pos=(387, 398), word='--recursive'),
          WordNode(pos=(399, 428), word='/usr/local/lib/php/extensions'),
        ]),
        PipeNode(pipe='|', pos=(432, 433)),
        CommandNode(pos=(434, 445), parts=[
          WordNode(pos=(434, 436), word='tr'),
          WordNode(pos=(437, 440), word=','),
          WordNode(pos=(441, 445), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(449, 450)),
        CommandNode(pos=(451, 458), parts=[
          WordNode(pos=(451, 455), word='sort'),
          WordNode(pos=(456, 458), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(462, 463)),
        CommandNode(pos=(464, 541), parts=[
          WordNode(pos=(464, 467), word='awk'),
          WordNode(pos=(468, 541), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(338, 542)),
  ]),
])


394) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


395) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


396) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


397) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


398) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


399) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1073, 1130), parts=[
  AssignmentNode(pos=(1073, 1130), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1084, 1128), parts=[
        WordNode(pos=(1084, 1101), word='dpkg-architecture'),
        WordNode(pos=(1102, 1109), word='--query'),
        WordNode(pos=(1110, 1128), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1082, 1129)),
  ]),
])


400) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


401) makeOpts='   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(419, 596), parts=[
  AssignmentNode(pos=(419, 596), word='makeOpts=   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3 LUA_LIB=/usr/lib/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


402) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(872, 1069), parts=[
  AssignmentNode(pos=(872, 1069), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(886, 1065), parts=[
        CommandNode(pos=(886, 952), parts=[
          WordNode(pos=(886, 893), word='scanelf'),
          WordNode(pos=(894, 902), word='--needed'),
          WordNode(pos=(903, 913), word='--nobanner'),
          WordNode(pos=(914, 922), word='--format'),
          WordNode(pos=(923, 929), word='%n#p'),
          WordNode(pos=(930, 941), word='--recursive'),
          WordNode(pos=(942, 952), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(956, 957)),
        CommandNode(pos=(958, 969), parts=[
          WordNode(pos=(958, 960), word='tr'),
          WordNode(pos=(961, 964), word=','),
          WordNode(pos=(965, 969), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(973, 974)),
        CommandNode(pos=(975, 982), parts=[
          WordNode(pos=(975, 979), word='sort'),
          WordNode(pos=(980, 982), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(986, 987)),
        CommandNode(pos=(988, 1065), parts=[
          WordNode(pos=(988, 991), word='awk'),
          WordNode(pos=(992, 1065), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(881, 1066)),
  ]),
])


403) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


404) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


405) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


406) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


407) fetchDeps="   ca-certificates   dirmngr   gnupg   wget  "

CommandNode(pos=(11, 68), parts=[
  AssignmentNode(pos=(11, 68), word='fetchDeps=   ca-certificates   dirmngr   gnupg   wget  '),
])


408) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


409) buildDeps='   ca-certificates   wget     gcc   gcc-multilib   libc6-dev-i386   make  '

CommandNode(pos=(11, 97), parts=[
  AssignmentNode(pos=(11, 97), word='buildDeps=   ca-certificates   wget     gcc   gcc-multilib   libc6-dev-i386   make  '),
])


410) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


411) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


412) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(484, 635), parts=[
  AssignmentNode(pos=(484, 635), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


413) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(910, 947), parts=[
  AssignmentNode(pos=(910, 947), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(926, 945), parts=[
        WordNode(pos=(926, 934), word='apt-mark'),
        WordNode(pos=(935, 945), word='showmanual'),
      ]), pos=(924, 946)),
  ]),
])


414) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


415) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(676, 873), parts=[
  AssignmentNode(pos=(676, 873), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(690, 869), parts=[
        CommandNode(pos=(690, 756), parts=[
          WordNode(pos=(690, 697), word='scanelf'),
          WordNode(pos=(698, 706), word='--needed'),
          WordNode(pos=(707, 717), word='--nobanner'),
          WordNode(pos=(718, 726), word='--format'),
          WordNode(pos=(727, 733), word='%n#p'),
          WordNode(pos=(734, 745), word='--recursive'),
          WordNode(pos=(746, 756), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(760, 761)),
        CommandNode(pos=(762, 773), parts=[
          WordNode(pos=(762, 764), word='tr'),
          WordNode(pos=(765, 768), word=','),
          WordNode(pos=(769, 773), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(777, 778)),
        CommandNode(pos=(779, 786), parts=[
          WordNode(pos=(779, 783), word='sort'),
          WordNode(pos=(784, 786), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(790, 791)),
        CommandNode(pos=(792, 869), parts=[
          WordNode(pos=(792, 795), word='awk'),
          WordNode(pos=(796, 869), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(685, 870)),
  ]),
])


416) fetchDeps="   ca-certificates   dirmngr   gnupg   wget  "

CommandNode(pos=(11, 68), parts=[
  AssignmentNode(pos=(11, 68), word='fetchDeps=   ca-certificates   dirmngr   gnupg   wget  '),
])


417) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(175, 240), parts=[
  AssignmentNode(pos=(175, 240), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(187, 238), parts=[
        CommandNode(pos=(187, 212), parts=[
          WordNode(pos=(187, 191), word='dpkg'),
          WordNode(pos=(192, 212), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(213, 214)),
        CommandNode(pos=(215, 238), parts=[
          WordNode(pos=(215, 218), word='awk'),
          WordNode(pos=(219, 222), word='-F-'),
          WordNode(pos=(223, 238), word='{ print $NF }'),
        ]),
      ]), pos=(185, 239)),
  ]),
])


418) buildDeps='   wget     gcc   libc6-dev   make  '

CommandNode(pos=(11, 59), parts=[
  AssignmentNode(pos=(11, 59), word='buildDeps=   wget     gcc   libc6-dev   make  '),
])


419) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


420) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


421) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


422) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


423) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


424) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


425) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


426) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


427) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


428) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


429) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


430) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


431) makeOpts='   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(481, 634), parts=[
  AssignmentNode(pos=(481, 634), word='makeOpts=   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


432) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


433) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


434) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


435) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


436) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


437) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


438) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


439) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


440) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


441) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


442) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


443) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


444) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


445) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


446) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


447) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


448) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


449) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


450) base="$(basename "$bin")"

CommandNode(pos=(346, 371), parts=[
  AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(354, 369), parts=[
        WordNode(pos=(354, 362), word='basename'),
        WordNode(pos=(363, 369), word='$bin', parts=[
          ParameterNode(pos=(364, 368), value='bin'),
        ]),
      ]), pos=(352, 370)),
  ]),
])


451) postgresHome="$(getent passwd postgres)"

CommandNode(pos=(10, 50), parts=[
  AssignmentNode(pos=(10, 50), word='postgresHome=$(getent passwd postgres)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 48), parts=[
        WordNode(pos=(26, 32), word='getent'),
        WordNode(pos=(33, 39), word='passwd'),
        WordNode(pos=(40, 48), word='postgres'),
      ]), pos=(24, 49)),
  ]),
])


452) postgresHome="$(echo "$postgresHome" | cut -d: -f6)"

CommandNode(pos=(53, 105), parts=[
  AssignmentNode(pos=(53, 105), word='postgresHome=$(echo "$postgresHome" | cut -d: -f6)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(69, 103), parts=[
        CommandNode(pos=(69, 89), parts=[
          WordNode(pos=(69, 73), word='echo'),
          WordNode(pos=(74, 89), word='$postgresHome', parts=[
            ParameterNode(pos=(75, 88), value='postgresHome'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(90, 91)),
        CommandNode(pos=(92, 103), parts=[
          WordNode(pos=(92, 95), word='cut'),
          WordNode(pos=(96, 99), word='-d:'),
          WordNode(pos=(100, 103), word='-f6'),
        ]),
      ]), pos=(67, 104)),
  ]),
])


453) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


454) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1863, 2060), parts=[
  AssignmentNode(pos=(1863, 2060), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1877, 2056), parts=[
        CommandNode(pos=(1877, 1943), parts=[
          WordNode(pos=(1877, 1884), word='scanelf'),
          WordNode(pos=(1885, 1893), word='--needed'),
          WordNode(pos=(1894, 1904), word='--nobanner'),
          WordNode(pos=(1905, 1913), word='--format'),
          WordNode(pos=(1914, 1920), word='%n#p'),
          WordNode(pos=(1921, 1932), word='--recursive'),
          WordNode(pos=(1933, 1943), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1947, 1948)),
        CommandNode(pos=(1949, 1960), parts=[
          WordNode(pos=(1949, 1951), word='tr'),
          WordNode(pos=(1952, 1955), word=','),
          WordNode(pos=(1956, 1960), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1964, 1965)),
        CommandNode(pos=(1966, 1973), parts=[
          WordNode(pos=(1966, 1970), word='sort'),
          WordNode(pos=(1971, 1973), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1977, 1978)),
        CommandNode(pos=(1979, 2056), parts=[
          WordNode(pos=(1979, 1982), word='awk'),
          WordNode(pos=(1983, 2056), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1872, 2057)),
  ]),
])


455) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


456) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


457) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


458) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


459) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


460) suite="$(awk '$1 == "deb" && $4 == "main" && $3 !~ /[\/-]/ { print $3; exit }' /etc/apt/sources.list)"

CommandNode(pos=(106, 208), parts=[
  AssignmentNode(pos=(106, 208), word='suite=$(awk \'$1 == "deb" && $4 == "main" && $3 !~ /[\\/-]/ { print $3; exit }\' /etc/apt/sources.list)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(115, 206), parts=[
        WordNode(pos=(115, 118), word='awk'),
        WordNode(pos=(119, 184), word='$1 == "deb" && $4 == "main" && $3 !~ /[\\/-]/ { print $3; exit }'),
        WordNode(pos=(185, 206), word='/etc/apt/sources.list'),
      ]), pos=(113, 207)),
  ]),
])


461) CGO_ENABLED=0 ./bashbrew/bashbrew.sh --help > /dev/null

CommandNode(pos=(11, 66), parts=[
  AssignmentNode(pos=(11, 24), word='CGO_ENABLED=0'),
  WordNode(pos=(25, 47), word='./bashbrew/bashbrew.sh'),
  WordNode(pos=(48, 54), word='--help'),
  RedirectNode(output=
    WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
])


462) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


463) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


464) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


465) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


466) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


467) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


468) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


469) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


470) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


471) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


472) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


473) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


474) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


475) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


476) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


477) makeOpts='   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(481, 634), parts=[
  AssignmentNode(pos=(481, 634), word='makeOpts=   TARGET=linux-glibc   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


478) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


479) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


480) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


481) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


482) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


483) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


484) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


485) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


486) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


487) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


488) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


489) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


490) key='A4A9406876FCBD3C456770C88C718D3B5072E1F5'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=A4A9406876FCBD3C456770C88C718D3B5072E1F5'),
])


491) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1081, 1138), parts=[
  AssignmentNode(pos=(1081, 1138), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1092, 1136), parts=[
        WordNode(pos=(1092, 1109), word='dpkg-architecture'),
        WordNode(pos=(1110, 1117), word='--query'),
        WordNode(pos=(1118, 1136), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1090, 1137)),
  ]),
])


492) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


493) debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"

CommandNode(pos=(81, 144), parts=[
  AssignmentNode(pos=(81, 144), word='debMultiarch=$(dpkg-architecture --query DEB_BUILD_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(97, 142), parts=[
        WordNode(pos=(97, 114), word='dpkg-architecture'),
        WordNode(pos=(115, 122), word='--query'),
        WordNode(pos=(123, 142), word='DEB_BUILD_MULTIARCH'),
      ]), pos=(95, 143)),
  ]),
])


494) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(13, 50), parts=[
  AssignmentNode(pos=(13, 50), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(29, 48), parts=[
        WordNode(pos=(29, 37), word='apt-mark'),
        WordNode(pos=(38, 48), word='showmanual'),
      ]), pos=(27, 49)),
  ]),
])


495) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(752, 809), parts=[
  AssignmentNode(pos=(752, 809), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(763, 807), parts=[
        WordNode(pos=(763, 780), word='dpkg-architecture'),
        WordNode(pos=(781, 788), word='--query'),
        WordNode(pos=(789, 807), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(761, 808)),
  ]),
])


496) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


497) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


498) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(308, 345), parts=[
  AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


499) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


500) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


501) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


502) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


503) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


504) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


505) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


506) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


507) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


508) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


509) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


510) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


511) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


512) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


513) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


514) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


515) buildDeps="   ca-certificates   curl   gcc   libc-dev-bin   libc6-dev   libexpat1-dev   libfontconfig1-dev   libfreetype6-dev   libgd-dev   libgd2-dev   libgeoip-dev   libice-dev   libjbig-dev   libjpeg8-dev   liblzma-dev   libpcre3-dev   libperl-dev   libpng12-dev   libpthread-stubs0-dev   libsm-dev   libssl-dev   libssl-dev   libtiff5-dev   libvpx-dev   libx11-dev   libxau-dev   libxcb1-dev   libxdmcp-dev   libxml2-dev   libxpm-dev   libxslt1-dev   libxt-dev   linux-libc-dev   make   manpages-dev   x11proto-core-dev   x11proto-input-dev   x11proto-kb-dev   xtrans-dev   zlib1g-dev  "

CommandNode(pos=(0, 591), parts=[
  AssignmentNode(pos=(0, 591), word='buildDeps=   ca-certificates   curl   gcc   libc-dev-bin   libc6-dev   libexpat1-dev   libfontconfig1-dev   libfreetype6-dev   libgd-dev   libgd2-dev   libgeoip-dev   libice-dev   libjbig-dev   libjpeg8-dev   liblzma-dev   libpcre3-dev   libperl-dev   libpng12-dev   libpthread-stubs0-dev   libsm-dev   libssl-dev   libssl-dev   libtiff5-dev   libvpx-dev   libx11-dev   libxau-dev   libxcb1-dev   libxdmcp-dev   libxml2-dev   libxpm-dev   libxslt1-dev   libxt-dev   linux-libc-dev   make   manpages-dev   x11proto-core-dev   x11proto-input-dev   x11proto-kb-dev   xtrans-dev   zlib1g-dev  '),
])


516) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


517) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


518) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


519) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


520) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


521) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


522) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


523) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


524) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


525) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


526) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


527) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


528) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


529) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(308, 345), parts=[
  AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


530) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


531) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


532) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


533) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


534) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


535) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


536) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(1834, 1874), parts=[
  AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1844, 1872), parts=[
        WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
        WordNode(pos=(1860, 1865), word='--get'),
        WordNode(pos=(1866, 1872), word='CFLAGS'),
      ]), pos=(1842, 1873)),
  ]),
])


537) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(1892, 1949), parts=[
  AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1904, 1947), parts=[
        WordNode(pos=(1904, 1921), word='dpkg-architecture'),
        WordNode(pos=(1922, 1929), word='--query'),
        WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(1902, 1948)),
  ]),
])


538) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1952, 2011), parts=[
  AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1965, 2009), parts=[
        WordNode(pos=(1965, 1982), word='dpkg-architecture'),
        WordNode(pos=(1983, 1990), word='--query'),
        WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1963, 2010)),
  ]),
])


539) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2014, 2053), parts=[
  AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2026, 2051), parts=[
        WordNode(pos=(2026, 2030), word='dpkg'),
        WordNode(pos=(2031, 2051), word='--print-architecture'),
      ]), pos=(2024, 2052)),
  ]),
])


540) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


541) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2975, 3172), parts=[
  AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2989, 3168), parts=[
        CommandNode(pos=(2989, 3055), parts=[
          WordNode(pos=(2989, 2996), word='scanelf'),
          WordNode(pos=(2997, 3005), word='--needed'),
          WordNode(pos=(3006, 3016), word='--nobanner'),
          WordNode(pos=(3017, 3025), word='--format'),
          WordNode(pos=(3026, 3032), word='%n#p'),
          WordNode(pos=(3033, 3044), word='--recursive'),
          WordNode(pos=(3045, 3055), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(3059, 3060)),
        CommandNode(pos=(3061, 3072), parts=[
          WordNode(pos=(3061, 3063), word='tr'),
          WordNode(pos=(3064, 3067), word=','),
          WordNode(pos=(3068, 3072), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(3076, 3077)),
        CommandNode(pos=(3078, 3085), parts=[
          WordNode(pos=(3078, 3082), word='sort'),
          WordNode(pos=(3083, 3085), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(3089, 3090)),
        CommandNode(pos=(3091, 3168), parts=[
          WordNode(pos=(3091, 3094), word='awk'),
          WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2984, 3169)),
  ]),
])


542) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


543) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


544) key='A4A9406876FCBD3C456770C88C718D3B5072E1F5'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=A4A9406876FCBD3C456770C88C718D3B5072E1F5'),
])


545) url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"

CommandNode(pos=(29, 96), parts=[
  AssignmentNode(pos=(29, 96), word='url=https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz', parts=[
    ParameterNode(pos=(58, 75), value='GOLANG_VERSION'),
    ParameterNode(pos=(76, 88), value='goRelArch'),
  ]),
])


546) base="$(basename "$bin")"

CommandNode(pos=(346, 371), parts=[
  AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(354, 369), parts=[
        WordNode(pos=(354, 362), word='basename'),
        WordNode(pos=(363, 369), word='$bin', parts=[
          ParameterNode(pos=(364, 368), value='bin'),
        ]),
      ]), pos=(352, 370)),
  ]),
])


547) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


548) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


549) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


550) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


551) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


552) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


553) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


554) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


555) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


556) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


557) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


558) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(28, 65), parts=[
  AssignmentNode(pos=(28, 65), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(44, 63), parts=[
        WordNode(pos=(44, 52), word='apt-mark'),
        WordNode(pos=(53, 63), word='showmanual'),
      ]), pos=(42, 64)),
  ]),
])


559) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


560) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1121, 1178), parts=[
  AssignmentNode(pos=(1121, 1178), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1132, 1176), parts=[
        WordNode(pos=(1132, 1149), word='dpkg-architecture'),
        WordNode(pos=(1150, 1157), word='--query'),
        WordNode(pos=(1158, 1176), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1130, 1177)),
  ]),
])


561) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(1356, 1553), parts=[
  AssignmentNode(pos=(1356, 1553), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(1370, 1549), parts=[
        CommandNode(pos=(1370, 1436), parts=[
          WordNode(pos=(1370, 1377), word='scanelf'),
          WordNode(pos=(1378, 1386), word='--needed'),
          WordNode(pos=(1387, 1397), word='--nobanner'),
          WordNode(pos=(1398, 1406), word='--format'),
          WordNode(pos=(1407, 1413), word='%n#p'),
          WordNode(pos=(1414, 1425), word='--recursive'),
          WordNode(pos=(1426, 1436), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(1440, 1441)),
        CommandNode(pos=(1442, 1453), parts=[
          WordNode(pos=(1442, 1444), word='tr'),
          WordNode(pos=(1445, 1448), word=','),
          WordNode(pos=(1449, 1453), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(1457, 1458)),
        CommandNode(pos=(1459, 1466), parts=[
          WordNode(pos=(1459, 1463), word='sort'),
          WordNode(pos=(1464, 1466), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(1470, 1471)),
        CommandNode(pos=(1472, 1549), parts=[
          WordNode(pos=(1472, 1475), word='awk'),
          WordNode(pos=(1476, 1549), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(1365, 1550)),
  ]),
])


562) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


563) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(827, 864), parts=[
  AssignmentNode(pos=(827, 864), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(843, 862), parts=[
        WordNode(pos=(843, 851), word='apt-mark'),
        WordNode(pos=(852, 862), word='showmanual'),
      ]), pos=(841, 863)),
  ]),
])


564) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


565) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


566) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


567) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


568) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


569) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


570) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


571) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


572) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


573) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


574) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


575) zfs="$(apk info --no-cache --quiet zfs)"

CommandNode(pos=(115, 155), parts=[
  AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(122, 153), parts=[
        WordNode(pos=(122, 125), word='apk'),
        WordNode(pos=(126, 130), word='info'),
        WordNode(pos=(131, 141), word='--no-cache'),
        WordNode(pos=(142, 149), word='--quiet'),
        WordNode(pos=(150, 153), word='zfs'),
      ]), pos=(120, 154)),
  ]),
])


576) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


577) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


578) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


579) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


580) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


581) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


582) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


583) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


584) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


585) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


586) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


587) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


588) makeOpts='   TARGET=linux2628   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(406, 517), parts=[
  AssignmentNode(pos=(406, 517), word='makeOpts=   TARGET=linux2628   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


589) runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(793, 990), parts=[
  AssignmentNode(pos=(793, 990), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(807, 986), parts=[
        CommandNode(pos=(807, 873), parts=[
          WordNode(pos=(807, 814), word='scanelf'),
          WordNode(pos=(815, 823), word='--needed'),
          WordNode(pos=(824, 834), word='--nobanner'),
          WordNode(pos=(835, 843), word='--format'),
          WordNode(pos=(844, 850), word='%n#p'),
          WordNode(pos=(851, 862), word='--recursive'),
          WordNode(pos=(863, 873), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(877, 878)),
        CommandNode(pos=(879, 890), parts=[
          WordNode(pos=(879, 881), word='tr'),
          WordNode(pos=(882, 885), word=','),
          WordNode(pos=(886, 890), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(894, 895)),
        CommandNode(pos=(896, 903), parts=[
          WordNode(pos=(896, 900), word='sort'),
          WordNode(pos=(901, 903), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(907, 908)),
        CommandNode(pos=(909, 986), parts=[
          WordNode(pos=(909, 912), word='awk'),
          WordNode(pos=(913, 986), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(802, 987)),
  ]),
])


590) fetchDeps='   ca-certificates   wget  '

CommandNode(pos=(11, 50), parts=[
  AssignmentNode(pos=(11, 50), word='fetchDeps=   ca-certificates   wget  '),
])


591) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(157, 222), parts=[
  AssignmentNode(pos=(157, 222), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(169, 220), parts=[
        CommandNode(pos=(169, 194), parts=[
          WordNode(pos=(169, 173), word='dpkg'),
          WordNode(pos=(174, 194), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(195, 196)),
        CommandNode(pos=(197, 220), parts=[
          WordNode(pos=(197, 200), word='awk'),
          WordNode(pos=(201, 204), word='-F-'),
          WordNode(pos=(205, 220), word='{ print $NF }'),
        ]),
      ]), pos=(167, 221)),
  ]),
])


592) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


593) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


594) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


595) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


596) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


597) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


598) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


599) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


600) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


601) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


602) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


603) key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'

CommandNode(pos=(10, 56), parts=[
  AssignmentNode(pos=(10, 56), word='key=B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'),
])


604) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


605) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


606) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(678, 735), parts=[
  AssignmentNode(pos=(678, 735), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(689, 733), parts=[
        WordNode(pos=(689, 706), word='dpkg-architecture'),
        WordNode(pos=(707, 714), word='--query'),
        WordNode(pos=(715, 733), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(687, 734)),
  ]),
])


607) dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"

CommandNode(pos=(217, 282), parts=[
  AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(229, 280), parts=[
        CommandNode(pos=(229, 254), parts=[
          WordNode(pos=(229, 233), word='dpkg'),
          WordNode(pos=(234, 254), word='--print-architecture'),
        ]),
        PipeNode(pipe='|', pos=(255, 256)),
        CommandNode(pos=(257, 280), parts=[
          WordNode(pos=(257, 260), word='awk'),
          WordNode(pos=(261, 264), word='-F-'),
          WordNode(pos=(265, 280), word='{ print $NF }'),
        ]),
      ]), pos=(227, 281)),
  ]),
])


608) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1082, 1139), parts=[
  AssignmentNode(pos=(1082, 1139), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1093, 1137), parts=[
        WordNode(pos=(1093, 1110), word='dpkg-architecture'),
        WordNode(pos=(1111, 1118), word='--query'),
        WordNode(pos=(1119, 1137), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1091, 1138)),
  ]),
])


609) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


610) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


611) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(11, 48), parts=[
  AssignmentNode(pos=(11, 48), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(27, 46), parts=[
        WordNode(pos=(27, 35), word='apt-mark'),
        WordNode(pos=(36, 46), word='showmanual'),
      ]), pos=(25, 47)),
  ]),
])


612) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(65, 102), parts=[
  AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(81, 100), parts=[
        WordNode(pos=(81, 89), word='apt-mark'),
        WordNode(pos=(90, 100), word='showmanual'),
      ]), pos=(79, 101)),
  ]),
])


613) buildDeps='   bison   dpkg-dev   libgdbm-dev   ruby  '

CommandNode(pos=(13, 67), parts=[
  AssignmentNode(pos=(13, 67), word='buildDeps=   bison   dpkg-dev   libgdbm-dev   ruby  '),
])


614) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(606, 663), parts=[
  AssignmentNode(pos=(606, 663), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(617, 661), parts=[
        WordNode(pos=(617, 634), word='dpkg-architecture'),
        WordNode(pos=(635, 642), word='--query'),
        WordNode(pos=(643, 661), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(615, 662)),
  ]),
])


615) base="$(basename "$bin")"

CommandNode(pos=(346, 371), parts=[
  AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(354, 369), parts=[
        WordNode(pos=(354, 362), word='basename'),
        WordNode(pos=(363, 369), word='$bin', parts=[
          ParameterNode(pos=(364, 368), value='bin'),
        ]),
      ]), pos=(352, 370)),
  ]),
])


616) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1098, 1155), parts=[
  AssignmentNode(pos=(1098, 1155), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1109, 1153), parts=[
        WordNode(pos=(1109, 1126), word='dpkg-architecture'),
        WordNode(pos=(1127, 1134), word='--query'),
        WordNode(pos=(1135, 1153), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1107, 1154)),
  ]),
])


617) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


618) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


619) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


620) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


621) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


622) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


623) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


624) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


625) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


626) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


627) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


628) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


629) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


630) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


631) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


632) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


633) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


634) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


635) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


636) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


637) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


638) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


639) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


640) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


641) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1053, 1110), parts=[
  AssignmentNode(pos=(1053, 1110), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1064, 1108), parts=[
        WordNode(pos=(1064, 1081), word='dpkg-architecture'),
        WordNode(pos=(1082, 1089), word='--query'),
        WordNode(pos=(1090, 1108), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1062, 1109)),
  ]),
])


642) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


643) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


644) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


645) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(379, 416), parts=[
  AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


646) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


647) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


648) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


649) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


650) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


651) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


652) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


653) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


654) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


655) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


656) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


657) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


658) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


659) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


660) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


661) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


662) success=

CommandNode(pos=(338, 346), parts=[
  AssignmentNode(pos=(338, 346), word='success='),
])


663) success=1

CommandNode(pos=(424, 433), parts=[
  AssignmentNode(pos=(424, 433), word='success=1'),
])


664) success=

CommandNode(pos=(551, 559), parts=[
  AssignmentNode(pos=(551, 559), word='success='),
])


665) success=1

CommandNode(pos=(641, 650), parts=[
  AssignmentNode(pos=(641, 650), word='success=1'),
])


666) nativeBuildDir="$(mktemp -d)"

CommandNode(pos=(904, 933), parts=[
  AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(922, 931), parts=[
        WordNode(pos=(922, 928), word='mktemp'),
        WordNode(pos=(929, 931), word='-d'),
      ]), pos=(920, 932)),
  ]),
])


667) gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(1178, 1235), parts=[
  AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1189, 1233), parts=[
        WordNode(pos=(1189, 1206), word='dpkg-architecture'),
        WordNode(pos=(1207, 1214), word='--query'),
        WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(1187, 1234)),
  ]),
])


668) aprConfig="$(which apr-1-config)"

CommandNode(pos=(1239, 1272), parts=[
  AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1252, 1270), parts=[
        WordNode(pos=(1252, 1257), word='which'),
        WordNode(pos=(1258, 1270), word='apr-1-config'),
      ]), pos=(1250, 1271)),
  ]),
])


669) nativeLines="$(catalina.sh configtest 2>&1)"

CommandNode(pos=(11, 55), parts=[
  AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(26, 53), parts=[
        WordNode(pos=(26, 37), word='catalina.sh'),
        WordNode(pos=(38, 48), word='configtest'),
        RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
      ]), pos=(24, 54)),
  ]),
])


670) nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"

CommandNode(pos=(60, 126), parts=[
  AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(75, 124), parts=[
        CommandNode(pos=(75, 94), parts=[
          WordNode(pos=(75, 79), word='echo'),
          WordNode(pos=(80, 94), word='$nativeLines', parts=[
            ParameterNode(pos=(81, 93), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(95, 96)),
        CommandNode(pos=(97, 124), parts=[
          WordNode(pos=(97, 101), word='grep'),
          WordNode(pos=(102, 124), word='Apache Tomcat Native'),
        ]),
      ]), pos=(73, 125)),
  ]),
])


671) nativeLines="$(echo "$nativeLines" | sort -u)"

CommandNode(pos=(131, 177), parts=[
  AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(146, 175), parts=[
        CommandNode(pos=(146, 165), parts=[
          WordNode(pos=(146, 150), word='echo'),
          WordNode(pos=(151, 165), word='$nativeLines', parts=[
            ParameterNode(pos=(152, 164), value='nativeLines'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(166, 167)),
        CommandNode(pos=(168, 175), parts=[
          WordNode(pos=(168, 172), word='sort'),
          WordNode(pos=(173, 175), word='-u'),
        ]),
      ]), pos=(144, 176)),
  ]),
])


672) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


673) makeOpts='   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '

CommandNode(pos=(481, 632), parts=[
  AssignmentNode(pos=(481, 632), word='makeOpts=   TARGET=linux2628   USE_LUA=1 LUA_INC=/usr/include/lua5.3   USE_GETADDRINFO=1   USE_OPENSSL=1   USE_PCRE2=1 USE_PCRE2_JIT=1   USE_ZLIB=1  '),
])


674) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


675) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


676) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


677) OPENSSL_CONFIG_DIR=/usr/local/etc/ssl

CommandNode(pos=(379, 416), parts=[
  AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
])


678) debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)"

CommandNode(pos=(1094, 1156), parts=[
  AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1110, 1154), parts=[
        WordNode(pos=(1110, 1127), word='dpkg-architecture'),
        WordNode(pos=(1128, 1135), word='--query'),
        WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
      ]), pos=(1108, 1155)),
  ]),
])


679) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


680) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


681) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


682) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


683) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


684) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


685) CFLAGS="$(dpkg-buildflags --get CFLAGS)"

CommandNode(pos=(2140, 2180), parts=[
  AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2150, 2178), parts=[
        WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
        WordNode(pos=(2166, 2171), word='--get'),
        WordNode(pos=(2172, 2178), word='CFLAGS'),
      ]), pos=(2148, 2179)),
  ]),
])


686) hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)"

CommandNode(pos=(2198, 2255), parts=[
  AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2210, 2253), parts=[
        WordNode(pos=(2210, 2227), word='dpkg-architecture'),
        WordNode(pos=(2228, 2235), word='--query'),
        WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
      ]), pos=(2208, 2254)),
  ]),
])


687) buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"

CommandNode(pos=(2258, 2317), parts=[
  AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2271, 2315), parts=[
        WordNode(pos=(2271, 2288), word='dpkg-architecture'),
        WordNode(pos=(2289, 2296), word='--query'),
        WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
      ]), pos=(2269, 2316)),
  ]),
])


688) dpkgArch="$(dpkg --print-architecture)"

CommandNode(pos=(2320, 2359), parts=[
  AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(2332, 2357), parts=[
        WordNode(pos=(2332, 2336), word='dpkg'),
        WordNode(pos=(2337, 2357), word='--print-architecture'),
      ]), pos=(2330, 2358)),
  ]),
])


689) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


690) savedAptMark="$(apt-mark showmanual)"

CommandNode(pos=(12, 49), parts=[
  AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(28, 47), parts=[
        WordNode(pos=(28, 36), word='apt-mark'),
        WordNode(pos=(37, 47), word='showmanual'),
      ]), pos=(26, 48)),
  ]),
])


691) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


692) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


693) fetchDeps='   wget  '

CommandNode(pos=(11, 32), parts=[
  AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
])


694) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


695) buildDeps="   ca-certificates   curl   gcc   libc-dev-bin   libc6-dev   libexpat1-dev   libfontconfig1-dev   libfreetype6-dev   libgd-dev   libgd2-dev   libgeoip-dev   libice-dev   libjbig-dev   libjpeg8-dev   liblzma-dev   libpcre3-dev   libperl-dev   libpng12-dev   libpthread-stubs0-dev   libsm-dev   libssl-dev   libssl-dev   libtiff5-dev   libvpx-dev   libx11-dev   libxau-dev   libxcb1-dev   libxdmcp-dev   libxml2-dev   libxpm-dev   libxslt1-dev   libxt-dev   linux-libc-dev   make   manpages-dev   x11proto-core-dev   x11proto-input-dev   x11proto-kb-dev   xtrans-dev   zlib1g-dev  "

CommandNode(pos=(0, 591), parts=[
  AssignmentNode(pos=(0, 591), word='buildDeps=   ca-certificates   curl   gcc   libc-dev-bin   libc6-dev   libexpat1-dev   libfontconfig1-dev   libfreetype6-dev   libgd-dev   libgd2-dev   libgeoip-dev   libice-dev   libjbig-dev   libjpeg8-dev   liblzma-dev   libpcre3-dev   libperl-dev   libpng12-dev   libpthread-stubs0-dev   libsm-dev   libssl-dev   libssl-dev   libtiff5-dev   libvpx-dev   libx11-dev   libxau-dev   libxcb1-dev   libxdmcp-dev   libxml2-dev   libxpm-dev   libxslt1-dev   libxt-dev   linux-libc-dev   make   manpages-dev   x11proto-core-dev   x11proto-input-dev   x11proto-kb-dev   xtrans-dev   zlib1g-dev  '),
])


