1) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


2) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


3) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


4) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   gcc   make  ;  rm -rf /var/lib/apt/lists/*;   gem install passenger --version "$PASSENGER_VERSION";  passenger-config build-native-support;  if [ -n "$(passenger-config build-native-support 2>&1)" ]; then cat /tmp/passenger_native_support-*.log; false; fi;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

ListNode(pos=(0, 540), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 124), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 87), word='-y'),
    WordNode(pos=(88, 111), word='--no-install-recommends'),
    WordNode(pos=(114, 117), word='gcc'),
    WordNode(pos=(120, 124), word='make'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(129, 156), parts=[
    WordNode(pos=(129, 131), word='rm'),
    WordNode(pos=(132, 135), word='-rf'),
    WordNode(pos=(136, 156), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(156, 157)),
  CommandNode(pos=(160, 212), parts=[
    WordNode(pos=(160, 163), word='gem'),
    WordNode(pos=(164, 171), word='install'),
    WordNode(pos=(172, 181), word='passenger'),
    WordNode(pos=(182, 191), word='--version'),
    WordNode(pos=(192, 212), word='$PASSENGER_VERSION', parts=[
      ParameterNode(pos=(193, 211), value='PASSENGER_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(212, 213)),
  CommandNode(pos=(215, 252), parts=[
    WordNode(pos=(215, 231), word='passenger-config'),
    WordNode(pos=(232, 252), word='build-native-support'),
  ]),
  OperatorNode(op=';', pos=(252, 253)),
  CompoundNode(list=[
    IfNode(pos=(255, 369), parts=[
      ReservedwordNode(pos=(255, 257), word='if'),
      ListNode(pos=(258, 313), parts=[
          CommandNode(pos=(258, 312), parts=[
            WordNode(pos=(258, 259), word='['),
            WordNode(pos=(260, 262), word='-n'),
            WordNode(pos=(263, 310), word='$(passenger-config build-native-support 2>&1)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(266, 308), parts=[
                  WordNode(pos=(266, 282), word='passenger-config'),
                  WordNode(pos=(283, 303), word='build-native-support'),
                  RedirectNode(input=2, output=1, pos=(304, 308), type='>&'),
                ]), pos=(264, 309)),
            ]),
            WordNode(pos=(311, 312), word=']'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(314, 318), word='then'),
      ListNode(pos=(319, 366), parts=[
          CommandNode(pos=(319, 358), parts=[
            WordNode(pos=(319, 322), word='cat'),
            WordNode(pos=(323, 358), word='/tmp/passenger_native_support-*.log'),
          ]),
          OperatorNode(op=';', pos=(358, 359)),
          CommandNode(pos=(360, 365), parts=[
            WordNode(pos=(360, 365), word='false'),
          ]),
          OperatorNode(op=';', pos=(365, 366)),
        ]),
      ReservedwordNode(pos=(367, 369), word='fi'),
    ]),
  ], pos=(255, 369)),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 403), parts=[
    WordNode(pos=(373, 381), word='apt-mark'),
    WordNode(pos=(382, 386), word='auto'),
    WordNode(pos=(387, 391), word='.*'),
    RedirectNode(output=
      WordNode(pos=(394, 403), word='/dev/null'), pos=(392, 403), type='>'),
  ]),
  OperatorNode(op=';', pos=(403, 404)),
  CommandNode(pos=(406, 428), parts=[
    WordNode(pos=(406, 407), word='['),
    WordNode(pos=(408, 410), word='-z'),
    WordNode(pos=(411, 426), word='$savedAptMark', parts=[
      ParameterNode(pos=(412, 425), value='savedAptMark'),
    ]),
    WordNode(pos=(427, 428), word=']'),
  ]),
  OperatorNode(op='||', pos=(429, 431)),
  CommandNode(pos=(432, 461), parts=[
    WordNode(pos=(432, 440), word='apt-mark'),
    WordNode(pos=(441, 447), word='manual'),
    WordNode(pos=(448, 461), word='$savedAptMark', parts=[
      ParameterNode(pos=(448, 461), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(461, 462)),
  CommandNode(pos=(464, 540), parts=[
    WordNode(pos=(464, 471), word='apt-get'),
    WordNode(pos=(472, 477), word='purge'),
    WordNode(pos=(478, 480), word='-y'),
    WordNode(pos=(481, 494), word='--auto-remove'),
    WordNode(pos=(495, 497), word='-o'),
    WordNode(pos=(498, 540), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
])


5) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   gcc   make  ;  rm -rf /var/lib/apt/lists/*;   gem install passenger --version "$PASSENGER_VERSION";  passenger-config build-native-support;  if [ -n "$(passenger-config build-native-support 2>&1)" ]; then cat /tmp/passenger_native_support-*.log; false; fi;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

ListNode(pos=(0, 540), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 124), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 87), word='-y'),
    WordNode(pos=(88, 111), word='--no-install-recommends'),
    WordNode(pos=(114, 117), word='gcc'),
    WordNode(pos=(120, 124), word='make'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(129, 156), parts=[
    WordNode(pos=(129, 131), word='rm'),
    WordNode(pos=(132, 135), word='-rf'),
    WordNode(pos=(136, 156), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(156, 157)),
  CommandNode(pos=(160, 212), parts=[
    WordNode(pos=(160, 163), word='gem'),
    WordNode(pos=(164, 171), word='install'),
    WordNode(pos=(172, 181), word='passenger'),
    WordNode(pos=(182, 191), word='--version'),
    WordNode(pos=(192, 212), word='$PASSENGER_VERSION', parts=[
      ParameterNode(pos=(193, 211), value='PASSENGER_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(212, 213)),
  CommandNode(pos=(215, 252), parts=[
    WordNode(pos=(215, 231), word='passenger-config'),
    WordNode(pos=(232, 252), word='build-native-support'),
  ]),
  OperatorNode(op=';', pos=(252, 253)),
  CompoundNode(list=[
    IfNode(pos=(255, 369), parts=[
      ReservedwordNode(pos=(255, 257), word='if'),
      ListNode(pos=(258, 313), parts=[
          CommandNode(pos=(258, 312), parts=[
            WordNode(pos=(258, 259), word='['),
            WordNode(pos=(260, 262), word='-n'),
            WordNode(pos=(263, 310), word='$(passenger-config build-native-support 2>&1)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(266, 308), parts=[
                  WordNode(pos=(266, 282), word='passenger-config'),
                  WordNode(pos=(283, 303), word='build-native-support'),
                  RedirectNode(input=2, output=1, pos=(304, 308), type='>&'),
                ]), pos=(264, 309)),
            ]),
            WordNode(pos=(311, 312), word=']'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(314, 318), word='then'),
      ListNode(pos=(319, 366), parts=[
          CommandNode(pos=(319, 358), parts=[
            WordNode(pos=(319, 322), word='cat'),
            WordNode(pos=(323, 358), word='/tmp/passenger_native_support-*.log'),
          ]),
          OperatorNode(op=';', pos=(358, 359)),
          CommandNode(pos=(360, 365), parts=[
            WordNode(pos=(360, 365), word='false'),
          ]),
          OperatorNode(op=';', pos=(365, 366)),
        ]),
      ReservedwordNode(pos=(367, 369), word='fi'),
    ]),
  ], pos=(255, 369)),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 403), parts=[
    WordNode(pos=(373, 381), word='apt-mark'),
    WordNode(pos=(382, 386), word='auto'),
    WordNode(pos=(387, 391), word='.*'),
    RedirectNode(output=
      WordNode(pos=(394, 403), word='/dev/null'), pos=(392, 403), type='>'),
  ]),
  OperatorNode(op=';', pos=(403, 404)),
  CommandNode(pos=(406, 428), parts=[
    WordNode(pos=(406, 407), word='['),
    WordNode(pos=(408, 410), word='-z'),
    WordNode(pos=(411, 426), word='$savedAptMark', parts=[
      ParameterNode(pos=(412, 425), value='savedAptMark'),
    ]),
    WordNode(pos=(427, 428), word=']'),
  ]),
  OperatorNode(op='||', pos=(429, 431)),
  CommandNode(pos=(432, 461), parts=[
    WordNode(pos=(432, 440), word='apt-mark'),
    WordNode(pos=(441, 447), word='manual'),
    WordNode(pos=(448, 461), word='$savedAptMark', parts=[
      ParameterNode(pos=(448, 461), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(461, 462)),
  CommandNode(pos=(464, 540), parts=[
    WordNode(pos=(464, 471), word='apt-get'),
    WordNode(pos=(472, 477), word='purge'),
    WordNode(pos=(478, 480), word='-y'),
    WordNode(pos=(481, 494), word='--auto-remove'),
    WordNode(pos=(495, 497), word='-o'),
    WordNode(pos=(498, 540), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
])


6) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


7) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


8) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


9) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


10) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


11) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


12) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


13) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


14) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


15) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


16) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


17) set -eux;  apk add --no-cache   btrfs-progs   e2fsprogs   e2fsprogs-extra   iptables   xfsprogs   xz   pigz  ;  if zfs="$(apk info --no-cache --quiet zfs)" && [ -n "$zfs" ]; then   apk add --no-cache zfs;  fi

ListNode(pos=(0, 208), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 107), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(32, 43), word='btrfs-progs'),
    WordNode(pos=(46, 55), word='e2fsprogs'),
    WordNode(pos=(58, 73), word='e2fsprogs-extra'),
    WordNode(pos=(76, 84), word='iptables'),
    WordNode(pos=(87, 95), word='xfsprogs'),
    WordNode(pos=(98, 100), word='xz'),
    WordNode(pos=(103, 107), word='pigz'),
  ]),
  OperatorNode(op=';', pos=(109, 110)),
  CompoundNode(list=[
    IfNode(pos=(112, 208), parts=[
      ReservedwordNode(pos=(112, 114), word='if'),
      ListNode(pos=(115, 173), parts=[
          CommandNode(pos=(115, 155), parts=[
            AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(122, 153), parts=[
                  WordNode(pos=(122, 125), word='apk'),
                  WordNode(pos=(126, 130), word='info'),
                  WordNode(pos=(131, 141), word='--no-cache'),
                  WordNode(pos=(142, 149), word='--quiet'),
                  WordNode(pos=(150, 153), word='zfs'),
                ]), pos=(120, 154)),
            ]),
          ]),
          OperatorNode(op='&&', pos=(156, 158)),
          CommandNode(pos=(159, 172), parts=[
            WordNode(pos=(159, 160), word='['),
            WordNode(pos=(161, 163), word='-n'),
            WordNode(pos=(164, 170), word='$zfs', parts=[
              ParameterNode(pos=(165, 169), value='zfs'),
            ]),
            WordNode(pos=(171, 172), word=']'),
          ]),
          OperatorNode(op=';', pos=(172, 173)),
        ]),
      ReservedwordNode(pos=(174, 178), word='then'),
      ListNode(pos=(181, 204), parts=[
          CommandNode(pos=(181, 203), parts=[
            WordNode(pos=(181, 184), word='apk'),
            WordNode(pos=(185, 188), word='add'),
            WordNode(pos=(189, 199), word='--no-cache'),
            WordNode(pos=(200, 203), word='zfs'),
          ]),
          OperatorNode(op=';', pos=(203, 204)),
        ]),
      ReservedwordNode(pos=(206, 208), word='fi'),
    ]),
  ], pos=(112, 208)),
])


18) set -eux;  apt-get update;  apt-get install -y --no-install-recommends   ca-certificates   jq   numactl  ;  if ! command -v ps > /dev/null; then   apt-get install -y --no-install-recommends procps;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 231), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 103), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 88), word='ca-certificates'),
    WordNode(pos=(91, 93), word='jq'),
    WordNode(pos=(96, 103), word='numactl'),
  ]),
  OperatorNode(op=';', pos=(105, 106)),
  CompoundNode(list=[
    IfNode(pos=(108, 201), parts=[
      ReservedwordNode(pos=(108, 110), word='if'),
      ListNode(pos=(111, 139), parts=[
          PipelineNode(pos=(111, 138), parts=[
            ReservedwordNode(pos=(111, 112), word='!'),
            CommandNode(pos=(113, 138), parts=[
              WordNode(pos=(113, 120), word='command'),
              WordNode(pos=(121, 123), word='-v'),
              WordNode(pos=(124, 126), word='ps'),
              RedirectNode(output=
                WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(138, 139)),
        ]),
      ReservedwordNode(pos=(140, 144), word='then'),
      ListNode(pos=(147, 197), parts=[
          CommandNode(pos=(147, 196), parts=[
            WordNode(pos=(147, 154), word='apt-get'),
            WordNode(pos=(155, 162), word='install'),
            WordNode(pos=(163, 165), word='-y'),
            WordNode(pos=(166, 189), word='--no-install-recommends'),
            WordNode(pos=(190, 196), word='procps'),
          ]),
          OperatorNode(op=';', pos=(196, 197)),
        ]),
      ReservedwordNode(pos=(199, 201), word='fi'),
    ]),
  ], pos=(108, 201)),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(204, 231), parts=[
    WordNode(pos=(204, 206), word='rm'),
    WordNode(pos=(207, 210), word='-rf'),
    WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
  ]),
])


19) set -ex;   apt-get update;  apt-get install -y --no-install-recommends   wget  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends gnupg dirmngr;  fi;  rm -rf /var/lib/apt/lists/*;   dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')";  wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch";  wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc";  export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc;  chmod +x /usr/local/bin/gosu;  gosu --version;  gosu nobody true;   wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js";   apt-get purge -y --auto-remove wget

ListNode(pos=(0, 1013), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 77), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 77), word='wget'),
  ]),
  OperatorNode(op=';', pos=(79, 80)),
  CompoundNode(list=[
    IfNode(pos=(82, 183), parts=[
      ReservedwordNode(pos=(82, 84), word='if'),
      ListNode(pos=(85, 114), parts=[
          PipelineNode(pos=(85, 113), parts=[
            ReservedwordNode(pos=(85, 86), word='!'),
            CommandNode(pos=(87, 113), parts=[
              WordNode(pos=(87, 94), word='command'),
              WordNode(pos=(95, 97), word='-v'),
              WordNode(pos=(98, 101), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(113, 114)),
        ]),
      ReservedwordNode(pos=(115, 119), word='then'),
      ListNode(pos=(122, 179), parts=[
          CommandNode(pos=(122, 178), parts=[
            WordNode(pos=(122, 129), word='apt-get'),
            WordNode(pos=(130, 137), word='install'),
            WordNode(pos=(138, 140), word='-y'),
            WordNode(pos=(141, 164), word='--no-install-recommends'),
            WordNode(pos=(165, 170), word='gnupg'),
            WordNode(pos=(171, 178), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(178, 179)),
        ]),
      ReservedwordNode(pos=(181, 183), word='fi'),
    ]),
  ], pos=(82, 183)),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(186, 213), parts=[
    WordNode(pos=(186, 188), word='rm'),
    WordNode(pos=(189, 192), word='-rf'),
    WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(213, 214)),
  CommandNode(pos=(217, 282), parts=[
    AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(229, 280), parts=[
          CommandNode(pos=(229, 254), parts=[
            WordNode(pos=(229, 233), word='dpkg'),
            WordNode(pos=(234, 254), word='--print-architecture'),
          ]),
          PipeNode(pipe='|', pos=(255, 256)),
          CommandNode(pos=(257, 280), parts=[
            WordNode(pos=(257, 260), word='awk'),
            WordNode(pos=(261, 264), word='-F-'),
            WordNode(pos=(265, 280), word='{ print $NF }'),
          ]),
        ]), pos=(227, 281)),
    ]),
  ]),
  OperatorNode(op=';', pos=(282, 283)),
  CommandNode(pos=(285, 392), parts=[
    WordNode(pos=(285, 289), word='wget'),
    WordNode(pos=(290, 292), word='-O'),
    WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
    WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
      ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
      ParameterNode(pos=(382, 391), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(392, 393)),
  CommandNode(pos=(395, 510), parts=[
    WordNode(pos=(395, 399), word='wget'),
    WordNode(pos=(400, 402), word='-O'),
    WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
      ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
      ParameterNode(pos=(496, 505), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 544), parts=[
    WordNode(pos=(513, 519), word='export'),
    WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(533, 542), parts=[
          WordNode(pos=(533, 539), word='mktemp'),
          WordNode(pos=(540, 542), word='-d'),
        ]), pos=(531, 543)),
    ]),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(547, 650), parts=[
    WordNode(pos=(547, 550), word='gpg'),
    WordNode(pos=(551, 558), word='--batch'),
    WordNode(pos=(559, 570), word='--keyserver'),
    WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
    WordNode(pos=(598, 609), word='--recv-keys'),
    WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
  ]),
  OperatorNode(op=';', pos=(650, 651)),
  CommandNode(pos=(653, 717), parts=[
    WordNode(pos=(653, 656), word='gpg'),
    WordNode(pos=(657, 664), word='--batch'),
    WordNode(pos=(665, 673), word='--verify'),
    WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(717, 718)),
  CommandNode(pos=(720, 738), parts=[
    WordNode(pos=(720, 727), word='command'),
    WordNode(pos=(728, 730), word='-v'),
    WordNode(pos=(731, 738), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(739, 741)),
  CommandNode(pos=(742, 760), parts=[
    WordNode(pos=(742, 749), word='gpgconf'),
    WordNode(pos=(750, 756), word='--kill'),
    WordNode(pos=(757, 760), word='all'),
  ]),
  OperatorNode(op='||', pos=(761, 763)),
  CommandNode(pos=(764, 765), parts=[
    WordNode(pos=(764, 765), word=':'),
  ]),
  OperatorNode(op=';', pos=(765, 766)),
  CommandNode(pos=(768, 810), parts=[
    WordNode(pos=(768, 770), word='rm'),
    WordNode(pos=(771, 773), word='-r'),
    WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(775, 785), value='GNUPGHOME'),
    ]),
    WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 841), parts=[
    WordNode(pos=(813, 818), word='chmod'),
    WordNode(pos=(819, 821), word='+x'),
    WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(841, 842)),
  CommandNode(pos=(844, 858), parts=[
    WordNode(pos=(844, 848), word='gosu'),
    WordNode(pos=(849, 858), word='--version'),
  ]),
  OperatorNode(op=';', pos=(858, 859)),
  CommandNode(pos=(861, 877), parts=[
    WordNode(pos=(861, 865), word='gosu'),
    WordNode(pos=(866, 872), word='nobody'),
    WordNode(pos=(873, 877), word='true'),
  ]),
  OperatorNode(op=';', pos=(877, 878)),
  CommandNode(pos=(881, 974), parts=[
    WordNode(pos=(881, 885), word='wget'),
    WordNode(pos=(886, 888), word='-O'),
    WordNode(pos=(889, 900), word='/js-yaml.js'),
    WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
      ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(978, 1013), parts=[
    WordNode(pos=(978, 985), word='apt-get'),
    WordNode(pos=(986, 991), word='purge'),
    WordNode(pos=(992, 994), word='-y'),
    WordNode(pos=(995, 1008), word='--auto-remove'),
    WordNode(pos=(1009, 1013), word='wget'),
  ]),
])


20) set -ex;  apt-get update;  apt-get install -y --no-install-recommends   libjemalloc1   procps   iproute2  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends    dirmngr    gnupg   ;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 249), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CommandNode(pos=(27, 104), parts=[
    WordNode(pos=(27, 34), word='apt-get'),
    WordNode(pos=(35, 42), word='install'),
    WordNode(pos=(43, 45), word='-y'),
    WordNode(pos=(46, 69), word='--no-install-recommends'),
    WordNode(pos=(72, 84), word='libjemalloc1'),
    WordNode(pos=(87, 93), word='procps'),
    WordNode(pos=(96, 104), word='iproute2'),
  ]),
  OperatorNode(op=';', pos=(106, 107)),
  CompoundNode(list=[
    IfNode(pos=(109, 219), parts=[
      ReservedwordNode(pos=(109, 111), word='if'),
      ListNode(pos=(112, 141), parts=[
          PipelineNode(pos=(112, 140), parts=[
            ReservedwordNode(pos=(112, 113), word='!'),
            CommandNode(pos=(114, 140), parts=[
              WordNode(pos=(114, 121), word='command'),
              WordNode(pos=(122, 124), word='-v'),
              WordNode(pos=(125, 128), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(131, 140), word='/dev/null'), pos=(129, 140), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(142, 146), word='then'),
      ListNode(pos=(149, 215), parts=[
          CommandNode(pos=(149, 211), parts=[
            WordNode(pos=(149, 156), word='apt-get'),
            WordNode(pos=(157, 164), word='install'),
            WordNode(pos=(165, 167), word='-y'),
            WordNode(pos=(168, 191), word='--no-install-recommends'),
            WordNode(pos=(195, 202), word='dirmngr'),
            WordNode(pos=(206, 211), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(214, 215)),
        ]),
      ReservedwordNode(pos=(217, 219), word='fi'),
    ]),
  ], pos=(109, 219)),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 249), parts=[
    WordNode(pos=(222, 224), word='rm'),
    WordNode(pos=(225, 228), word='-rf'),
    WordNode(pos=(229, 249), word='/var/lib/apt/lists/*'),
  ]),
])


21) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


22) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


23) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


24) set -ex  && cd /usr/local/etc  && if [ -d php-fpm.d ]; then   sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;   cp php-fpm.d/www.conf.default php-fpm.d/www.conf;  else   mkdir php-fpm.d;   cp php-fpm.conf.default php-fpm.d/www.conf;   {    echo '[global]';    echo 'include=etc/php-fpm.d/*.conf';   } | tee php-fpm.conf;  fi  && {   echo '[global]';   echo 'error_log = /proc/self/fd/2';   echo;   echo '[www]';   echo '; if we send this to /proc/self/fd/1, it never appears';   echo 'access.log = /proc/self/fd/2';   echo;   echo 'clear_env = no';   echo;   echo '; Ensure worker stdout and stderr are sent to the main error log.';   echo 'catch_workers_output = yes';  } | tee php-fpm.d/docker.conf  && {   echo '[global]';   echo 'daemonize = no';   echo;   echo '[www]';   echo 'listen = 9000';  } | tee php-fpm.d/zz-docker.conf

ListNode(pos=(0, 856), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 29), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 29), word='/usr/local/etc'),
  ]),
  OperatorNode(op='&&', pos=(31, 33)),
  CompoundNode(list=[
    IfNode(pos=(34, 348), parts=[
      ReservedwordNode(pos=(34, 36), word='if'),
      ListNode(pos=(37, 54), parts=[
          CommandNode(pos=(37, 53), parts=[
            WordNode(pos=(37, 38), word='['),
            WordNode(pos=(39, 41), word='-d'),
            WordNode(pos=(42, 51), word='php-fpm.d'),
            WordNode(pos=(52, 53), word=']'),
          ]),
          OperatorNode(op=';', pos=(53, 54)),
        ]),
      ReservedwordNode(pos=(55, 59), word='then'),
      ListNode(pos=(62, 185), parts=[
          PipelineNode(pos=(62, 132), parts=[
            CommandNode(pos=(62, 101), parts=[
              WordNode(pos=(62, 65), word='sed'),
              WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
              WordNode(pos=(81, 101), word='php-fpm.conf.default'),
            ]),
            PipeNode(pipe='|', pos=(102, 103)),
            CommandNode(pos=(104, 132), parts=[
              WordNode(pos=(104, 107), word='tee'),
              WordNode(pos=(108, 120), word='php-fpm.conf'),
              RedirectNode(output=
                WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(132, 133)),
          CommandNode(pos=(136, 184), parts=[
            WordNode(pos=(136, 138), word='cp'),
            WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
            WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(184, 185)),
        ]),
      ReservedwordNode(pos=(187, 191), word='else'),
      ListNode(pos=(194, 344), parts=[
          CommandNode(pos=(194, 209), parts=[
            WordNode(pos=(194, 199), word='mkdir'),
            WordNode(pos=(200, 209), word='php-fpm.d'),
          ]),
          OperatorNode(op=';', pos=(209, 210)),
          CommandNode(pos=(213, 255), parts=[
            WordNode(pos=(213, 215), word='cp'),
            WordNode(pos=(216, 236), word='php-fpm.conf.default'),
            WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(255, 256)),
          PipelineNode(pos=(259, 343), parts=[
            CompoundNode(list=[
              ReservedwordNode(pos=(259, 260), word='{'),
              ListNode(pos=(264, 320), parts=[
                  CommandNode(pos=(264, 279), parts=[
                    WordNode(pos=(264, 268), word='echo'),
                    WordNode(pos=(269, 279), word='[global]'),
                  ]),
                  OperatorNode(op=';', pos=(279, 280)),
                  CommandNode(pos=(284, 319), parts=[
                    WordNode(pos=(284, 288), word='echo'),
                    WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
                  ]),
                  OperatorNode(op=';', pos=(319, 320)),
                ]),
              ReservedwordNode(pos=(323, 324), word='}'),
            ], pos=(259, 324)),
            PipeNode(pipe='|', pos=(325, 326)),
            CommandNode(pos=(327, 343), parts=[
              WordNode(pos=(327, 330), word='tee'),
              WordNode(pos=(331, 343), word='php-fpm.conf'),
            ]),
          ]),
          OperatorNode(op=';', pos=(343, 344)),
        ]),
      ReservedwordNode(pos=(346, 348), word='fi'),
    ]),
  ], pos=(34, 348)),
  OperatorNode(op='&&', pos=(350, 352)),
  PipelineNode(pos=(353, 724), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(353, 354), word='{'),
      ListNode(pos=(357, 693), parts=[
          CommandNode(pos=(357, 372), parts=[
            WordNode(pos=(357, 361), word='echo'),
            WordNode(pos=(362, 372), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(372, 373)),
          CommandNode(pos=(376, 410), parts=[
            WordNode(pos=(376, 380), word='echo'),
            WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(410, 411)),
          CommandNode(pos=(414, 418), parts=[
            WordNode(pos=(414, 418), word='echo'),
          ]),
          OperatorNode(op=';', pos=(418, 419)),
          CommandNode(pos=(422, 434), parts=[
            WordNode(pos=(422, 426), word='echo'),
            WordNode(pos=(427, 434), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(434, 435)),
          CommandNode(pos=(438, 499), parts=[
            WordNode(pos=(438, 442), word='echo'),
            WordNode(pos=(443, 499), word='; if we send this to /proc/self/fd/1, it never appears'),
          ]),
          OperatorNode(op=';', pos=(499, 500)),
          CommandNode(pos=(503, 538), parts=[
            WordNode(pos=(503, 507), word='echo'),
            WordNode(pos=(508, 538), word='access.log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(538, 539)),
          CommandNode(pos=(542, 546), parts=[
            WordNode(pos=(542, 546), word='echo'),
          ]),
          OperatorNode(op=';', pos=(546, 547)),
          CommandNode(pos=(550, 571), parts=[
            WordNode(pos=(550, 554), word='echo'),
            WordNode(pos=(555, 571), word='clear_env = no'),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CommandNode(pos=(575, 579), parts=[
            WordNode(pos=(575, 579), word='echo'),
          ]),
          OperatorNode(op=';', pos=(579, 580)),
          CommandNode(pos=(583, 655), parts=[
            WordNode(pos=(583, 587), word='echo'),
            WordNode(pos=(588, 655), word='; Ensure worker stdout and stderr are sent to the main error log.'),
          ]),
          OperatorNode(op=';', pos=(655, 656)),
          CommandNode(pos=(659, 692), parts=[
            WordNode(pos=(659, 663), word='echo'),
            WordNode(pos=(664, 692), word='catch_workers_output = yes'),
          ]),
          OperatorNode(op=';', pos=(692, 693)),
        ]),
      ReservedwordNode(pos=(695, 696), word='}'),
    ], pos=(353, 696)),
    PipeNode(pipe='|', pos=(697, 698)),
    CommandNode(pos=(699, 724), parts=[
      WordNode(pos=(699, 702), word='tee'),
      WordNode(pos=(703, 724), word='php-fpm.d/docker.conf'),
    ]),
  ]),
  OperatorNode(op='&&', pos=(726, 728)),
  PipelineNode(pos=(729, 856), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(729, 730), word='{'),
      ListNode(pos=(733, 822), parts=[
          CommandNode(pos=(733, 748), parts=[
            WordNode(pos=(733, 737), word='echo'),
            WordNode(pos=(738, 748), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(748, 749)),
          CommandNode(pos=(752, 773), parts=[
            WordNode(pos=(752, 756), word='echo'),
            WordNode(pos=(757, 773), word='daemonize = no'),
          ]),
          OperatorNode(op=';', pos=(773, 774)),
          CommandNode(pos=(777, 781), parts=[
            WordNode(pos=(777, 781), word='echo'),
          ]),
          OperatorNode(op=';', pos=(781, 782)),
          CommandNode(pos=(785, 797), parts=[
            WordNode(pos=(785, 789), word='echo'),
            WordNode(pos=(790, 797), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(797, 798)),
          CommandNode(pos=(801, 821), parts=[
            WordNode(pos=(801, 805), word='echo'),
            WordNode(pos=(806, 821), word='listen = 9000'),
          ]),
          OperatorNode(op=';', pos=(821, 822)),
        ]),
      ReservedwordNode(pos=(824, 825), word='}'),
    ], pos=(729, 825)),
    PipeNode(pipe='|', pos=(826, 827)),
    CommandNode(pos=(828, 856), parts=[
      WordNode(pos=(828, 831), word='tee'),
      WordNode(pos=(832, 856), word='php-fpm.d/zz-docker.conf'),
    ]),
  ]),
])


25) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


26) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


27) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


28) set -ex  && cd /usr/local/etc  && if [ -d php-fpm.d ]; then   sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;   cp php-fpm.d/www.conf.default php-fpm.d/www.conf;  else   mkdir php-fpm.d;   cp php-fpm.conf.default php-fpm.d/www.conf;   {    echo '[global]';    echo 'include=etc/php-fpm.d/*.conf';   } | tee php-fpm.conf;  fi  && {   echo '[global]';   echo 'error_log = /proc/self/fd/2';   echo; echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'; echo 'log_limit = 8192';   echo;   echo '[www]';   echo '; if we send this to /proc/self/fd/1, it never appears';   echo 'access.log = /proc/self/fd/2';   echo;   echo 'clear_env = no';   echo;   echo '; Ensure worker stdout and stderr are sent to the main error log.';   echo 'catch_workers_output = yes';   echo 'decorate_workers_output = no';  } | tee php-fpm.d/docker.conf  && {   echo '[global]';   echo 'daemonize = no';   echo;   echo '[www]';   echo 'listen = 9000';  } | tee php-fpm.d/zz-docker.conf

ListNode(pos=(0, 1008), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 29), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 29), word='/usr/local/etc'),
  ]),
  OperatorNode(op='&&', pos=(31, 33)),
  CompoundNode(list=[
    IfNode(pos=(34, 348), parts=[
      ReservedwordNode(pos=(34, 36), word='if'),
      ListNode(pos=(37, 54), parts=[
          CommandNode(pos=(37, 53), parts=[
            WordNode(pos=(37, 38), word='['),
            WordNode(pos=(39, 41), word='-d'),
            WordNode(pos=(42, 51), word='php-fpm.d'),
            WordNode(pos=(52, 53), word=']'),
          ]),
          OperatorNode(op=';', pos=(53, 54)),
        ]),
      ReservedwordNode(pos=(55, 59), word='then'),
      ListNode(pos=(62, 185), parts=[
          PipelineNode(pos=(62, 132), parts=[
            CommandNode(pos=(62, 101), parts=[
              WordNode(pos=(62, 65), word='sed'),
              WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
              WordNode(pos=(81, 101), word='php-fpm.conf.default'),
            ]),
            PipeNode(pipe='|', pos=(102, 103)),
            CommandNode(pos=(104, 132), parts=[
              WordNode(pos=(104, 107), word='tee'),
              WordNode(pos=(108, 120), word='php-fpm.conf'),
              RedirectNode(output=
                WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(132, 133)),
          CommandNode(pos=(136, 184), parts=[
            WordNode(pos=(136, 138), word='cp'),
            WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
            WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(184, 185)),
        ]),
      ReservedwordNode(pos=(187, 191), word='else'),
      ListNode(pos=(194, 344), parts=[
          CommandNode(pos=(194, 209), parts=[
            WordNode(pos=(194, 199), word='mkdir'),
            WordNode(pos=(200, 209), word='php-fpm.d'),
          ]),
          OperatorNode(op=';', pos=(209, 210)),
          CommandNode(pos=(213, 255), parts=[
            WordNode(pos=(213, 215), word='cp'),
            WordNode(pos=(216, 236), word='php-fpm.conf.default'),
            WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(255, 256)),
          PipelineNode(pos=(259, 343), parts=[
            CompoundNode(list=[
              ReservedwordNode(pos=(259, 260), word='{'),
              ListNode(pos=(264, 320), parts=[
                  CommandNode(pos=(264, 279), parts=[
                    WordNode(pos=(264, 268), word='echo'),
                    WordNode(pos=(269, 279), word='[global]'),
                  ]),
                  OperatorNode(op=';', pos=(279, 280)),
                  CommandNode(pos=(284, 319), parts=[
                    WordNode(pos=(284, 288), word='echo'),
                    WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
                  ]),
                  OperatorNode(op=';', pos=(319, 320)),
                ]),
              ReservedwordNode(pos=(323, 324), word='}'),
            ], pos=(259, 324)),
            PipeNode(pipe='|', pos=(325, 326)),
            CommandNode(pos=(327, 343), parts=[
              WordNode(pos=(327, 330), word='tee'),
              WordNode(pos=(331, 343), word='php-fpm.conf'),
            ]),
          ]),
          OperatorNode(op=';', pos=(343, 344)),
        ]),
      ReservedwordNode(pos=(346, 348), word='fi'),
    ]),
  ], pos=(34, 348)),
  OperatorNode(op='&&', pos=(350, 352)),
  PipelineNode(pos=(353, 876), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(353, 354), word='{'),
      ListNode(pos=(357, 845), parts=[
          CommandNode(pos=(357, 372), parts=[
            WordNode(pos=(357, 361), word='echo'),
            WordNode(pos=(362, 372), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(372, 373)),
          CommandNode(pos=(376, 410), parts=[
            WordNode(pos=(376, 380), word='echo'),
            WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(410, 411)),
          CommandNode(pos=(414, 418), parts=[
            WordNode(pos=(414, 418), word='echo'),
          ]),
          OperatorNode(op=';', pos=(418, 419)),
          CommandNode(pos=(420, 498), parts=[
            WordNode(pos=(420, 424), word='echo'),
            WordNode(pos=(425, 498), word='; https://github.com/docker-library/php/pull/725#issuecomment-443540114'),
          ]),
          OperatorNode(op=';', pos=(498, 499)),
          CommandNode(pos=(500, 523), parts=[
            WordNode(pos=(500, 504), word='echo'),
            WordNode(pos=(505, 523), word='log_limit = 8192'),
          ]),
          OperatorNode(op=';', pos=(523, 524)),
          CommandNode(pos=(527, 531), parts=[
            WordNode(pos=(527, 531), word='echo'),
          ]),
          OperatorNode(op=';', pos=(531, 532)),
          CommandNode(pos=(535, 547), parts=[
            WordNode(pos=(535, 539), word='echo'),
            WordNode(pos=(540, 547), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(547, 548)),
          CommandNode(pos=(551, 612), parts=[
            WordNode(pos=(551, 555), word='echo'),
            WordNode(pos=(556, 612), word='; if we send this to /proc/self/fd/1, it never appears'),
          ]),
          OperatorNode(op=';', pos=(612, 613)),
          CommandNode(pos=(616, 651), parts=[
            WordNode(pos=(616, 620), word='echo'),
            WordNode(pos=(621, 651), word='access.log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(651, 652)),
          CommandNode(pos=(655, 659), parts=[
            WordNode(pos=(655, 659), word='echo'),
          ]),
          OperatorNode(op=';', pos=(659, 660)),
          CommandNode(pos=(663, 684), parts=[
            WordNode(pos=(663, 667), word='echo'),
            WordNode(pos=(668, 684), word='clear_env = no'),
          ]),
          OperatorNode(op=';', pos=(684, 685)),
          CommandNode(pos=(688, 692), parts=[
            WordNode(pos=(688, 692), word='echo'),
          ]),
          OperatorNode(op=';', pos=(692, 693)),
          CommandNode(pos=(696, 768), parts=[
            WordNode(pos=(696, 700), word='echo'),
            WordNode(pos=(701, 768), word='; Ensure worker stdout and stderr are sent to the main error log.'),
          ]),
          OperatorNode(op=';', pos=(768, 769)),
          CommandNode(pos=(772, 805), parts=[
            WordNode(pos=(772, 776), word='echo'),
            WordNode(pos=(777, 805), word='catch_workers_output = yes'),
          ]),
          OperatorNode(op=';', pos=(805, 806)),
          CommandNode(pos=(809, 844), parts=[
            WordNode(pos=(809, 813), word='echo'),
            WordNode(pos=(814, 844), word='decorate_workers_output = no'),
          ]),
          OperatorNode(op=';', pos=(844, 845)),
        ]),
      ReservedwordNode(pos=(847, 848), word='}'),
    ], pos=(353, 848)),
    PipeNode(pipe='|', pos=(849, 850)),
    CommandNode(pos=(851, 876), parts=[
      WordNode(pos=(851, 854), word='tee'),
      WordNode(pos=(855, 876), word='php-fpm.d/docker.conf'),
    ]),
  ]),
  OperatorNode(op='&&', pos=(878, 880)),
  PipelineNode(pos=(881, 1008), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(881, 882), word='{'),
      ListNode(pos=(885, 974), parts=[
          CommandNode(pos=(885, 900), parts=[
            WordNode(pos=(885, 889), word='echo'),
            WordNode(pos=(890, 900), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(900, 901)),
          CommandNode(pos=(904, 925), parts=[
            WordNode(pos=(904, 908), word='echo'),
            WordNode(pos=(909, 925), word='daemonize = no'),
          ]),
          OperatorNode(op=';', pos=(925, 926)),
          CommandNode(pos=(929, 933), parts=[
            WordNode(pos=(929, 933), word='echo'),
          ]),
          OperatorNode(op=';', pos=(933, 934)),
          CommandNode(pos=(937, 949), parts=[
            WordNode(pos=(937, 941), word='echo'),
            WordNode(pos=(942, 949), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(949, 950)),
          CommandNode(pos=(953, 973), parts=[
            WordNode(pos=(953, 957), word='echo'),
            WordNode(pos=(958, 973), word='listen = 9000'),
          ]),
          OperatorNode(op=';', pos=(973, 974)),
        ]),
      ReservedwordNode(pos=(976, 977), word='}'),
    ], pos=(881, 977)),
    PipeNode(pipe='|', pos=(978, 979)),
    CommandNode(pos=(980, 1008), parts=[
      WordNode(pos=(980, 983), word='tee'),
      WordNode(pos=(984, 1008), word='php-fpm.d/zz-docker.conf'),
    ]),
  ]),
])


29) set -eux;   savedAptMark="$(apt-mark showmanual)";  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi;   %%ARCH-CASE%%;   folder="$(echo "$JULIA_VERSION" | cut -d. -f1-2)";  curl -fL -o julia.tar.gz.asc "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc";  curl -fL -o julia.tar.gz     "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz";   echo "${sha256} *julia.tar.gz" | sha256sum -c -;   export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$JULIA_GPG";  gpg --batch --verify julia.tar.gz.asc julia.tar.gz;  command -v gpgconf > /dev/null && gpgconf --kill all;  rm -rf "$GNUPGHOME" julia.tar.gz.asc;   mkdir "$JULIA_PATH";  tar -xzf julia.tar.gz -C "$JULIA_PATH" --strip-components 1;  rm julia.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   julia --version

ListNode(pos=(0, 1181), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CompoundNode(list=[
    IfNode(pos=(52, 211), parts=[
      ReservedwordNode(pos=(52, 54), word='if'),
      ListNode(pos=(55, 84), parts=[
          PipelineNode(pos=(55, 83), parts=[
            ReservedwordNode(pos=(55, 56), word='!'),
            CommandNode(pos=(57, 83), parts=[
              WordNode(pos=(57, 64), word='command'),
              WordNode(pos=(65, 67), word='-v'),
              WordNode(pos=(68, 71), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(74, 83), word='/dev/null'), pos=(72, 83), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(83, 84)),
        ]),
      ReservedwordNode(pos=(85, 89), word='then'),
      ListNode(pos=(92, 207), parts=[
          CommandNode(pos=(92, 106), parts=[
            WordNode(pos=(92, 99), word='apt-get'),
            WordNode(pos=(100, 106), word='update'),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
          CommandNode(pos=(110, 172), parts=[
            WordNode(pos=(110, 117), word='apt-get'),
            WordNode(pos=(118, 125), word='install'),
            WordNode(pos=(126, 128), word='-y'),
            WordNode(pos=(129, 152), word='--no-install-recommends'),
            WordNode(pos=(156, 161), word='gnupg'),
            WordNode(pos=(165, 172), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(175, 176)),
          CommandNode(pos=(179, 206), parts=[
            WordNode(pos=(179, 181), word='rm'),
            WordNode(pos=(182, 185), word='-rf'),
            WordNode(pos=(186, 206), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(206, 207)),
        ]),
      ReservedwordNode(pos=(209, 211), word='fi'),
    ]),
  ], pos=(52, 211)),
  OperatorNode(op=';', pos=(211, 212)),
  CommandNode(pos=(215, 228), parts=[
    WordNode(pos=(215, 228), word='%%ARCH-CASE%%'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 281), parts=[
    AssignmentNode(pos=(232, 281), word='folder=$(echo "$JULIA_VERSION" | cut -d. -f1-2)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(242, 279), parts=[
          CommandNode(pos=(242, 263), parts=[
            WordNode(pos=(242, 246), word='echo'),
            WordNode(pos=(247, 263), word='$JULIA_VERSION', parts=[
              ParameterNode(pos=(248, 262), value='JULIA_VERSION'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(264, 265)),
          CommandNode(pos=(266, 279), parts=[
            WordNode(pos=(266, 269), word='cut'),
            WordNode(pos=(270, 273), word='-d.'),
            WordNode(pos=(274, 279), word='-f1-2'),
          ]),
        ]), pos=(240, 280)),
    ]),
  ]),
  OperatorNode(op=';', pos=(281, 282)),
  CommandNode(pos=(284, 431), parts=[
    WordNode(pos=(284, 288), word='curl'),
    WordNode(pos=(289, 292), word='-fL'),
    WordNode(pos=(293, 295), word='-o'),
    WordNode(pos=(296, 312), word='julia.tar.gz.asc'),
    WordNode(pos=(313, 431), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc', parts=[
      ParameterNode(pos=(359, 369), value='dirArch'),
      ParameterNode(pos=(370, 379), value='folder'),
      ParameterNode(pos=(386, 402), value='JULIA_VERSION'),
      ParameterNode(pos=(409, 419), value='tarArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(431, 432)),
  CommandNode(pos=(434, 577), parts=[
    WordNode(pos=(434, 438), word='curl'),
    WordNode(pos=(439, 442), word='-fL'),
    WordNode(pos=(443, 445), word='-o'),
    WordNode(pos=(446, 458), word='julia.tar.gz'),
    WordNode(pos=(463, 577), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz', parts=[
      ParameterNode(pos=(509, 519), value='dirArch'),
      ParameterNode(pos=(520, 529), value='folder'),
      ParameterNode(pos=(536, 552), value='JULIA_VERSION'),
      ParameterNode(pos=(559, 569), value='tarArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(577, 578)),
  PipelineNode(pos=(581, 628), parts=[
    CommandNode(pos=(581, 611), parts=[
      WordNode(pos=(581, 585), word='echo'),
      WordNode(pos=(586, 611), word='${sha256} *julia.tar.gz', parts=[
        ParameterNode(pos=(587, 596), value='sha256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(612, 613)),
    CommandNode(pos=(614, 628), parts=[
      WordNode(pos=(614, 623), word='sha256sum'),
      WordNode(pos=(624, 626), word='-c'),
      WordNode(pos=(627, 628), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(628, 629)),
  CommandNode(pos=(632, 663), parts=[
    WordNode(pos=(632, 638), word='export'),
    WordNode(pos=(639, 663), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(652, 661), parts=[
          WordNode(pos=(652, 658), word='mktemp'),
          WordNode(pos=(659, 661), word='-d'),
        ]), pos=(650, 662)),
    ]),
  ]),
  OperatorNode(op=';', pos=(663, 664)),
  CommandNode(pos=(666, 741), parts=[
    WordNode(pos=(666, 669), word='gpg'),
    WordNode(pos=(670, 677), word='--batch'),
    WordNode(pos=(678, 689), word='--keyserver'),
    WordNode(pos=(690, 716), word='ha.pool.sks-keyservers.net'),
    WordNode(pos=(717, 728), word='--recv-keys'),
    WordNode(pos=(729, 741), word='$JULIA_GPG', parts=[
      ParameterNode(pos=(730, 740), value='JULIA_GPG'),
    ]),
  ]),
  OperatorNode(op=';', pos=(741, 742)),
  CommandNode(pos=(744, 794), parts=[
    WordNode(pos=(744, 747), word='gpg'),
    WordNode(pos=(748, 755), word='--batch'),
    WordNode(pos=(756, 764), word='--verify'),
    WordNode(pos=(765, 781), word='julia.tar.gz.asc'),
    WordNode(pos=(782, 794), word='julia.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(794, 795)),
  CommandNode(pos=(797, 827), parts=[
    WordNode(pos=(797, 804), word='command'),
    WordNode(pos=(805, 807), word='-v'),
    WordNode(pos=(808, 815), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(818, 827), word='/dev/null'), pos=(816, 827), type='>'),
  ]),
  OperatorNode(op='&&', pos=(828, 830)),
  CommandNode(pos=(831, 849), parts=[
    WordNode(pos=(831, 838), word='gpgconf'),
    WordNode(pos=(839, 845), word='--kill'),
    WordNode(pos=(846, 849), word='all'),
  ]),
  OperatorNode(op=';', pos=(849, 850)),
  CommandNode(pos=(852, 888), parts=[
    WordNode(pos=(852, 854), word='rm'),
    WordNode(pos=(855, 858), word='-rf'),
    WordNode(pos=(859, 871), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(860, 870), value='GNUPGHOME'),
    ]),
    WordNode(pos=(872, 888), word='julia.tar.gz.asc'),
  ]),
  OperatorNode(op=';', pos=(888, 889)),
  CommandNode(pos=(892, 911), parts=[
    WordNode(pos=(892, 897), word='mkdir'),
    WordNode(pos=(898, 911), word='$JULIA_PATH', parts=[
      ParameterNode(pos=(899, 910), value='JULIA_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(911, 912)),
  CommandNode(pos=(914, 973), parts=[
    WordNode(pos=(914, 917), word='tar'),
    WordNode(pos=(918, 922), word='-xzf'),
    WordNode(pos=(923, 935), word='julia.tar.gz'),
    WordNode(pos=(936, 938), word='-C'),
    WordNode(pos=(939, 952), word='$JULIA_PATH', parts=[
      ParameterNode(pos=(940, 951), value='JULIA_PATH'),
    ]),
    WordNode(pos=(953, 971), word='--strip-components'),
    WordNode(pos=(972, 973), word='1'),
  ]),
  OperatorNode(op=';', pos=(973, 974)),
  CommandNode(pos=(976, 991), parts=[
    WordNode(pos=(976, 978), word='rm'),
    WordNode(pos=(979, 991), word='julia.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(991, 992)),
  CommandNode(pos=(995, 1025), parts=[
    WordNode(pos=(995, 1003), word='apt-mark'),
    WordNode(pos=(1004, 1008), word='auto'),
    WordNode(pos=(1009, 1013), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1016, 1025), word='/dev/null'), pos=(1014, 1025), type='>'),
  ]),
  OperatorNode(op=';', pos=(1025, 1026)),
  CommandNode(pos=(1028, 1050), parts=[
    WordNode(pos=(1028, 1029), word='['),
    WordNode(pos=(1030, 1032), word='-z'),
    WordNode(pos=(1033, 1048), word='$savedAptMark', parts=[
      ParameterNode(pos=(1034, 1047), value='savedAptMark'),
    ]),
    WordNode(pos=(1049, 1050), word=']'),
  ]),
  OperatorNode(op='||', pos=(1051, 1053)),
  CommandNode(pos=(1054, 1083), parts=[
    WordNode(pos=(1054, 1062), word='apt-mark'),
    WordNode(pos=(1063, 1069), word='manual'),
    WordNode(pos=(1070, 1083), word='$savedAptMark', parts=[
      ParameterNode(pos=(1070, 1083), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1083, 1084)),
  CommandNode(pos=(1086, 1162), parts=[
    WordNode(pos=(1086, 1093), word='apt-get'),
    WordNode(pos=(1094, 1099), word='purge'),
    WordNode(pos=(1100, 1102), word='-y'),
    WordNode(pos=(1103, 1116), word='--auto-remove'),
    WordNode(pos=(1117, 1119), word='-o'),
    WordNode(pos=(1120, 1162), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1162, 1163)),
  CommandNode(pos=(1166, 1181), parts=[
    WordNode(pos=(1166, 1171), word='julia'),
    WordNode(pos=(1172, 1181), word='--version'),
  ]),
])


30) set -eux;  apk add --no-cache   btrfs-progs   e2fsprogs   e2fsprogs-extra   iptables   xfsprogs   xz   pigz  ;  if zfs="$(apk info --no-cache --quiet zfs)" && [ -n "$zfs" ]; then   apk add --no-cache zfs;  fi

ListNode(pos=(0, 208), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 107), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(32, 43), word='btrfs-progs'),
    WordNode(pos=(46, 55), word='e2fsprogs'),
    WordNode(pos=(58, 73), word='e2fsprogs-extra'),
    WordNode(pos=(76, 84), word='iptables'),
    WordNode(pos=(87, 95), word='xfsprogs'),
    WordNode(pos=(98, 100), word='xz'),
    WordNode(pos=(103, 107), word='pigz'),
  ]),
  OperatorNode(op=';', pos=(109, 110)),
  CompoundNode(list=[
    IfNode(pos=(112, 208), parts=[
      ReservedwordNode(pos=(112, 114), word='if'),
      ListNode(pos=(115, 173), parts=[
          CommandNode(pos=(115, 155), parts=[
            AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(122, 153), parts=[
                  WordNode(pos=(122, 125), word='apk'),
                  WordNode(pos=(126, 130), word='info'),
                  WordNode(pos=(131, 141), word='--no-cache'),
                  WordNode(pos=(142, 149), word='--quiet'),
                  WordNode(pos=(150, 153), word='zfs'),
                ]), pos=(120, 154)),
            ]),
          ]),
          OperatorNode(op='&&', pos=(156, 158)),
          CommandNode(pos=(159, 172), parts=[
            WordNode(pos=(159, 160), word='['),
            WordNode(pos=(161, 163), word='-n'),
            WordNode(pos=(164, 170), word='$zfs', parts=[
              ParameterNode(pos=(165, 169), value='zfs'),
            ]),
            WordNode(pos=(171, 172), word=']'),
          ]),
          OperatorNode(op=';', pos=(172, 173)),
        ]),
      ReservedwordNode(pos=(174, 178), word='then'),
      ListNode(pos=(181, 204), parts=[
          CommandNode(pos=(181, 203), parts=[
            WordNode(pos=(181, 184), word='apk'),
            WordNode(pos=(185, 188), word='add'),
            WordNode(pos=(189, 199), word='--no-cache'),
            WordNode(pos=(200, 203), word='zfs'),
          ]),
          OperatorNode(op=';', pos=(203, 204)),
        ]),
      ReservedwordNode(pos=(206, 208), word='fi'),
    ]),
  ], pos=(112, 208)),
])


31) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


32) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


33) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


34) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


35) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


36) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


37) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


38) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


39) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


40) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


41) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


42) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


43) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


44) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


45) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


46) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


47) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


48) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


49) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


50) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


51) set -ex;   if command -v a2enmod; then   a2enmod rewrite;  fi;   savedAptMark="$(apt-mark showmanual)";   apt-get update;  apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev  ;   docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr;  docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip  ;   apt-mark auto '.*' > /dev/null;  apt-mark manual $savedAptMark;  ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so   | awk '/=>/ { print $3 }'   | sort -u   | xargs -r dpkg-query -S   | cut -d: -f1   | sort -u   | xargs -rt apt-mark manual;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 734), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(11, 61), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 33), parts=[
          CommandNode(pos=(14, 32), parts=[
            WordNode(pos=(14, 21), word='command'),
            WordNode(pos=(22, 24), word='-v'),
            WordNode(pos=(25, 32), word='a2enmod'),
          ]),
          OperatorNode(op=';', pos=(32, 33)),
        ]),
      ReservedwordNode(pos=(34, 38), word='then'),
      ListNode(pos=(41, 57), parts=[
          CommandNode(pos=(41, 56), parts=[
            WordNode(pos=(41, 48), word='a2enmod'),
            WordNode(pos=(49, 56), word='rewrite'),
          ]),
          OperatorNode(op=';', pos=(56, 57)),
        ]),
      ReservedwordNode(pos=(59, 61), word='fi'),
    ]),
  ], pos=(11, 61)),
  OperatorNode(op=';', pos=(61, 62)),
  CommandNode(pos=(65, 102), parts=[
    AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(81, 100), parts=[
          WordNode(pos=(81, 89), word='apt-mark'),
          WordNode(pos=(90, 100), word='showmanual'),
        ]), pos=(79, 101)),
    ]),
  ]),
  OperatorNode(op=';', pos=(102, 103)),
  CommandNode(pos=(106, 120), parts=[
    WordNode(pos=(106, 113), word='apt-get'),
    WordNode(pos=(114, 120), word='update'),
  ]),
  OperatorNode(op=';', pos=(120, 121)),
  CommandNode(pos=(123, 217), parts=[
    WordNode(pos=(123, 130), word='apt-get'),
    WordNode(pos=(131, 138), word='install'),
    WordNode(pos=(139, 141), word='-y'),
    WordNode(pos=(142, 165), word='--no-install-recommends'),
    WordNode(pos=(168, 179), word='libjpeg-dev'),
    WordNode(pos=(182, 192), word='libpng-dev'),
    WordNode(pos=(195, 204), word='libpq-dev'),
    WordNode(pos=(207, 217), word='libzip-dev'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(223, 291), parts=[
    WordNode(pos=(223, 247), word='docker-php-ext-configure'),
    WordNode(pos=(248, 250), word='gd'),
    WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
    WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
  ]),
  OperatorNode(op=';', pos=(291, 292)),
  CommandNode(pos=(294, 375), parts=[
    WordNode(pos=(294, 316), word='docker-php-ext-install'),
    WordNode(pos=(317, 319), word='-j'),
    WordNode(pos=(320, 330), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(323, 328), parts=[
          WordNode(pos=(323, 328), word='nproc'),
        ]), pos=(321, 329)),
    ]),
    WordNode(pos=(333, 335), word='gd'),
    WordNode(pos=(338, 345), word='opcache'),
    WordNode(pos=(348, 357), word='pdo_mysql'),
    WordNode(pos=(360, 369), word='pdo_pgsql'),
    WordNode(pos=(372, 375), word='zip'),
  ]),
  OperatorNode(op=';', pos=(377, 378)),
  CommandNode(pos=(381, 411), parts=[
    WordNode(pos=(381, 389), word='apt-mark'),
    WordNode(pos=(390, 394), word='auto'),
    WordNode(pos=(395, 399), word='.*'),
    RedirectNode(output=
      WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
  ]),
  OperatorNode(op=';', pos=(411, 412)),
  CommandNode(pos=(414, 443), parts=[
    WordNode(pos=(414, 422), word='apt-mark'),
    WordNode(pos=(423, 429), word='manual'),
    WordNode(pos=(430, 443), word='$savedAptMark', parts=[
      ParameterNode(pos=(430, 443), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(443, 444)),
  PipelineNode(pos=(446, 624), parts=[
    CommandNode(pos=(446, 499), parts=[
      WordNode(pos=(446, 449), word='ldd'),
      WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(453, 492), parts=[
            WordNode(pos=(453, 456), word='php'),
            WordNode(pos=(457, 459), word='-r'),
            WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
          ]), pos=(451, 493)),
      ]),
    ]),
    PipeNode(pipe='|', pos=(502, 503)),
    CommandNode(pos=(504, 527), parts=[
      WordNode(pos=(504, 507), word='awk'),
      WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
    ]),
    PipeNode(pipe='|', pos=(530, 531)),
    CommandNode(pos=(532, 539), parts=[
      WordNode(pos=(532, 536), word='sort'),
      WordNode(pos=(537, 539), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(542, 543)),
    CommandNode(pos=(544, 566), parts=[
      WordNode(pos=(544, 549), word='xargs'),
      WordNode(pos=(550, 552), word='-r'),
      WordNode(pos=(553, 563), word='dpkg-query'),
      WordNode(pos=(564, 566), word='-S'),
    ]),
    PipeNode(pipe='|', pos=(569, 570)),
    CommandNode(pos=(571, 582), parts=[
      WordNode(pos=(571, 574), word='cut'),
      WordNode(pos=(575, 578), word='-d:'),
      WordNode(pos=(579, 582), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(585, 586)),
    CommandNode(pos=(587, 594), parts=[
      WordNode(pos=(587, 591), word='sort'),
      WordNode(pos=(592, 594), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(597, 598)),
    CommandNode(pos=(599, 624), parts=[
      WordNode(pos=(599, 604), word='xargs'),
      WordNode(pos=(605, 608), word='-rt'),
      WordNode(pos=(609, 617), word='apt-mark'),
      WordNode(pos=(618, 624), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(624, 625)),
  CommandNode(pos=(628, 704), parts=[
    WordNode(pos=(628, 635), word='apt-get'),
    WordNode(pos=(636, 641), word='purge'),
    WordNode(pos=(642, 644), word='-y'),
    WordNode(pos=(645, 658), word='--auto-remove'),
    WordNode(pos=(659, 661), word='-o'),
    WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(707, 734), parts=[
    WordNode(pos=(707, 709), word='rm'),
    WordNode(pos=(710, 713), word='-rf'),
    WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
  ]),
])


52) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


53) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


54) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


55) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


56) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


57) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


58) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


59) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


60) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


61) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


62) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


63) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


64) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


65) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


66) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


67) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


68) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


69) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


70) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


71) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


72) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


73) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


74) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


75) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 697), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 201), parts=[
    AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(205, 219), parts=[
    WordNode(pos=(205, 209), word='make'),
    WordNode(pos=(210, 219), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CompoundNode(list=[
    ForNode(pos=(223, 319), parts=[
      ReservedwordNode(pos=(223, 226), word='for'),
      WordNode(pos=(227, 231), word='conf'),
      ReservedwordNode(pos=(232, 234), word='in'),
      WordNode(pos=(235, 246), word='$unsetConfs', parts=[
        ParameterNode(pos=(235, 246), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(246, 247), word=';'),
      ReservedwordNode(pos=(248, 250), word='do'),
      ListNode(pos=(253, 313), parts=[
          CommandNode(pos=(253, 312), parts=[
            WordNode(pos=(253, 256), word='sed'),
            WordNode(pos=(257, 259), word='-i'),
            WordNode(pos=(263, 265), word='-e'),
            WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(270, 275), value='conf'),
              ParameterNode(pos=(283, 288), value='conf'),
            ]),
            WordNode(pos=(305, 312), word='.config'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(315, 319), word='done'),
    ]),
  ], pos=(223, 319)),
  OperatorNode(op=';', pos=(319, 320)),
  CompoundNode(list=[
    ForNode(pos=(323, 544), parts=[
      ReservedwordNode(pos=(323, 326), word='for'),
      WordNode(pos=(327, 332), word='confV'),
      ReservedwordNode(pos=(333, 335), word='in'),
      WordNode(pos=(336, 345), word='$setConfs', parts=[
        ParameterNode(pos=(336, 345), value='setConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 538), parts=[
          CommandNode(pos=(352, 370), parts=[
            AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(358, 369), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(370, 371)),
          CommandNode(pos=(374, 461), parts=[
            WordNode(pos=(374, 377), word='sed'),
            WordNode(pos=(378, 380), word='-i'),
            WordNode(pos=(384, 386), word='-e'),
            WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(391, 396), value='conf'),
              ParameterNode(pos=(402, 408), value='confV'),
            ]),
            WordNode(pos=(414, 416), word='-e'),
            WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(423, 428), value='conf'),
              ParameterNode(pos=(442, 448), value='confV'),
            ]),
            WordNode(pos=(454, 461), word='.config'),
          ]),
          OperatorNode(op=';', pos=(461, 462)),
          CompoundNode(list=[
            IfNode(pos=(465, 537), parts=[
              ReservedwordNode(pos=(465, 467), word='if'),
              ListNode(pos=(468, 498), parts=[
                  PipelineNode(pos=(468, 497), parts=[
                    ReservedwordNode(pos=(468, 469), word='!'),
                    CommandNode(pos=(470, 497), parts=[
                      WordNode(pos=(470, 474), word='grep'),
                      WordNode(pos=(475, 477), word='-q'),
                      WordNode(pos=(478, 489), word='^$confV$', parts=[
                        ParameterNode(pos=(480, 486), value='confV'),
                      ]),
                      WordNode(pos=(490, 497), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(497, 498)),
                ]),
              ReservedwordNode(pos=(499, 503), word='then'),
              ListNode(pos=(507, 532), parts=[
                  CommandNode(pos=(507, 531), parts=[
                    WordNode(pos=(507, 511), word='echo'),
                    WordNode(pos=(512, 520), word='$confV', parts=[
                      ParameterNode(pos=(513, 519), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(531, 532)),
                ]),
              ReservedwordNode(pos=(535, 537), word='fi'),
            ]),
          ], pos=(465, 537)),
          OperatorNode(op=';', pos=(537, 538)),
        ]),
      ReservedwordNode(pos=(540, 544), word='done'),
    ]),
  ], pos=(323, 544)),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(548, 562), parts=[
    WordNode(pos=(548, 552), word='make'),
    WordNode(pos=(553, 562), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(562, 563)),
  CompoundNode(list=[
    ForNode(pos=(566, 630), parts=[
      ReservedwordNode(pos=(566, 569), word='for'),
      WordNode(pos=(570, 574), word='conf'),
      ReservedwordNode(pos=(575, 577), word='in'),
      WordNode(pos=(578, 589), word='$unsetConfs', parts=[
        ParameterNode(pos=(578, 589), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 624), parts=[
          PipelineNode(pos=(596, 623), parts=[
            ReservedwordNode(pos=(596, 597), word='!'),
            CommandNode(pos=(598, 623), parts=[
              WordNode(pos=(598, 602), word='grep'),
              WordNode(pos=(603, 605), word='-q'),
              WordNode(pos=(606, 615), word='^$conf=', parts=[
                ParameterNode(pos=(608, 613), value='conf'),
              ]),
              WordNode(pos=(616, 623), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(623, 624)),
        ]),
      ReservedwordNode(pos=(626, 630), word='done'),
    ]),
  ], pos=(566, 630)),
  OperatorNode(op=';', pos=(630, 631)),
  CompoundNode(list=[
    ForNode(pos=(633, 696), parts=[
      ReservedwordNode(pos=(633, 636), word='for'),
      WordNode(pos=(637, 642), word='confV'),
      ReservedwordNode(pos=(643, 645), word='in'),
      WordNode(pos=(646, 655), word='$setConfs', parts=[
        ParameterNode(pos=(646, 655), value='setConfs'),
      ]),
      ReservedwordNode(pos=(655, 656), word=';'),
      ReservedwordNode(pos=(657, 659), word='do'),
      ListNode(pos=(662, 690), parts=[
          CommandNode(pos=(662, 689), parts=[
            WordNode(pos=(662, 666), word='grep'),
            WordNode(pos=(667, 669), word='-q'),
            WordNode(pos=(670, 681), word='^$confV$', parts=[
              ParameterNode(pos=(672, 678), value='confV'),
            ]),
            WordNode(pos=(682, 689), word='.config'),
          ]),
          OperatorNode(op=';', pos=(689, 690)),
        ]),
      ReservedwordNode(pos=(692, 696), word='done'),
    ]),
  ], pos=(633, 696)),
  OperatorNode(op=';', pos=(696, 697)),
])


76) set -ex  && cd rootfs  && for userHome in $(awk -F ':' '{ print $3 ":" $4 "=" $6 }' etc/passwd); do   user="${userHome%%=*}";   home="${userHome#*=}";   home="./${home#/}";   if [ ! -d "$home" ]; then    mkdir -p "$home";    chown "$user" "$home";    chmod 755 "$home";   fi;  done

ListNode(pos=(0, 281), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 21), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 21), word='rootfs'),
  ]),
  OperatorNode(op='&&', pos=(23, 25)),
  CompoundNode(list=[
    ForNode(pos=(26, 281), parts=[
      ReservedwordNode(pos=(26, 29), word='for'),
      WordNode(pos=(30, 38), word='userHome'),
      ReservedwordNode(pos=(39, 41), word='in'),
      WordNode(pos=(42, 95), word='$(awk -F \':\' \'{ print $3 ":" $4 "=" $6 }\' etc/passwd)', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(44, 94), parts=[
            WordNode(pos=(44, 47), word='awk'),
            WordNode(pos=(48, 50), word='-F'),
            WordNode(pos=(51, 54), word=':'),
            WordNode(pos=(55, 83), word='{ print $3 ":" $4 "=" $6 }'),
            WordNode(pos=(84, 94), word='etc/passwd'),
          ]), pos=(42, 95)),
      ]),
      ReservedwordNode(pos=(95, 96), word=';'),
      ReservedwordNode(pos=(97, 99), word='do'),
      ListNode(pos=(102, 275), parts=[
          CommandNode(pos=(102, 124), parts=[
            AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
              ParameterNode(pos=(108, 123), value='userHome%%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(124, 125)),
          CommandNode(pos=(128, 149), parts=[
            AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
              ParameterNode(pos=(134, 148), value='userHome#*='),
            ]),
          ]),
          OperatorNode(op=';', pos=(149, 150)),
          CommandNode(pos=(153, 171), parts=[
            AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
              ParameterNode(pos=(161, 170), value='home#/'),
            ]),
          ]),
          OperatorNode(op=';', pos=(171, 172)),
          CompoundNode(list=[
            IfNode(pos=(175, 274), parts=[
              ReservedwordNode(pos=(175, 177), word='if'),
              ListNode(pos=(178, 195), parts=[
                  CommandNode(pos=(178, 194), parts=[
                    WordNode(pos=(178, 179), word='['),
                    WordNode(pos=(180, 181), word='!'),
                    WordNode(pos=(182, 184), word='-d'),
                    WordNode(pos=(185, 192), word='$home', parts=[
                      ParameterNode(pos=(186, 191), value='home'),
                    ]),
                    WordNode(pos=(193, 194), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(194, 195)),
                ]),
              ReservedwordNode(pos=(196, 200), word='then'),
              ListNode(pos=(204, 269), parts=[
                  CommandNode(pos=(204, 220), parts=[
                    WordNode(pos=(204, 209), word='mkdir'),
                    WordNode(pos=(210, 212), word='-p'),
                    WordNode(pos=(213, 220), word='$home', parts=[
                      ParameterNode(pos=(214, 219), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(220, 221)),
                  CommandNode(pos=(225, 246), parts=[
                    WordNode(pos=(225, 230), word='chown'),
                    WordNode(pos=(231, 238), word='$user', parts=[
                      ParameterNode(pos=(232, 237), value='user'),
                    ]),
                    WordNode(pos=(239, 246), word='$home', parts=[
                      ParameterNode(pos=(240, 245), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(246, 247)),
                  CommandNode(pos=(251, 268), parts=[
                    WordNode(pos=(251, 256), word='chmod'),
                    WordNode(pos=(257, 260), word='755'),
                    WordNode(pos=(261, 268), word='$home', parts=[
                      ParameterNode(pos=(262, 267), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(268, 269)),
                ]),
              ReservedwordNode(pos=(272, 274), word='fi'),
            ]),
          ], pos=(175, 274)),
          OperatorNode(op=';', pos=(274, 275)),
        ]),
      ReservedwordNode(pos=(277, 281), word='done'),
    ]),
  ], pos=(26, 281)),
])


77) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


78) set -eux;  if [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then   grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;   sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker;   ! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;  fi;  apt-get update; apt-get install -y locales; rm -rf /var/lib/apt/lists/*;  localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

ListNode(pos=(0, 396), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CompoundNode(list=[
    IfNode(pos=(11, 243), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 49), parts=[
          CommandNode(pos=(14, 48), parts=[
            WordNode(pos=(14, 15), word='['),
            WordNode(pos=(16, 18), word='-f'),
            WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
            WordNode(pos=(47, 48), word=']'),
          ]),
          OperatorNode(op=';', pos=(48, 49)),
        ]),
      ReservedwordNode(pos=(50, 54), word='then'),
      ListNode(pos=(57, 239), parts=[
          CommandNode(pos=(57, 112), parts=[
            WordNode(pos=(57, 61), word='grep'),
            WordNode(pos=(62, 64), word='-q'),
            WordNode(pos=(65, 84), word='/usr/share/locale'),
            WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(112, 113)),
          CommandNode(pos=(116, 177), parts=[
            WordNode(pos=(116, 119), word='sed'),
            WordNode(pos=(120, 123), word='-ri'),
            WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
            WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(177, 178)),
          PipelineNode(pos=(181, 238), parts=[
            ReservedwordNode(pos=(181, 182), word='!'),
            CommandNode(pos=(183, 238), parts=[
              WordNode(pos=(183, 187), word='grep'),
              WordNode(pos=(188, 190), word='-q'),
              WordNode(pos=(191, 210), word='/usr/share/locale'),
              WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
            ]),
          ]),
          OperatorNode(op=';', pos=(238, 239)),
        ]),
      ReservedwordNode(pos=(241, 243), word='fi'),
    ]),
  ], pos=(11, 243)),
  OperatorNode(op=';', pos=(243, 244)),
  CommandNode(pos=(246, 260), parts=[
    WordNode(pos=(246, 253), word='apt-get'),
    WordNode(pos=(254, 260), word='update'),
  ]),
  OperatorNode(op=';', pos=(260, 261)),
  CommandNode(pos=(262, 288), parts=[
    WordNode(pos=(262, 269), word='apt-get'),
    WordNode(pos=(270, 277), word='install'),
    WordNode(pos=(278, 280), word='-y'),
    WordNode(pos=(281, 288), word='locales'),
  ]),
  OperatorNode(op=';', pos=(288, 289)),
  CommandNode(pos=(290, 317), parts=[
    WordNode(pos=(290, 292), word='rm'),
    WordNode(pos=(293, 296), word='-rf'),
    WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(317, 318)),
  CommandNode(pos=(320, 396), parts=[
    WordNode(pos=(320, 329), word='localedef'),
    WordNode(pos=(330, 332), word='-i'),
    WordNode(pos=(333, 338), word='en_US'),
    WordNode(pos=(339, 341), word='-c'),
    WordNode(pos=(342, 344), word='-f'),
    WordNode(pos=(345, 350), word='UTF-8'),
    WordNode(pos=(351, 353), word='-A'),
    WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
    WordNode(pos=(385, 396), word='en_US.UTF-8'),
  ]),
])


79) set -eux;   runDeps='   apr-dev   apr-util-dev   apr-util-ldap   perl  ';  apk add --no-cache --virtual .build-deps   $runDeps   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gnupg   libc-dev   curl-dev   jansson-dev   libxml2-dev   lua-dev   make   nghttp2-dev   openssl   openssl-dev   pcre-dev   tar   zlib-dev  ;   ddist() {   local f="$1"; shift;   local distFile="$1"; shift;   local success=;   local distUrl=;   for distUrl in $APACHE_DIST_URLS; do    if wget -O "$f" "$distUrl$distFile" && [ -s "$f" ]; then     success=1;     break;    fi;   done;   [ -n "$success" ];  };   ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2";  echo "$HTTPD_SHA256 *httpd.tar.bz2" | sha256sum -c -;   ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc";  export GNUPGHOME="$(mktemp -d)";  for key in   A93D62ECC3C8EA12DB220EC934EA76E6791485A8   B9E8213AEFB861AF35A41F2C995E35221AD84DFF  ; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME" httpd.tar.bz2.asc;   mkdir -p src;  tar -xf httpd.tar.bz2 -C src --strip-components=1;  rm httpd.tar.bz2;  cd src;   patches() {   while [ "$#" -gt 0 ]; do    local patchFile="$1"; shift;    local patchSha256="$1"; shift;    ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile";    echo "$patchSha256 *$patchFile" | sha256sum -c -;    patch -p0 < "$patchFile";    rm -f "$patchFile";   done;  };  patches $HTTPD_PATCHES;   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all  ;  make -j "$(nproc)";  make install;   cd ..;  rm -r src man manual;   sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"  ;   runDeps="$runDeps $(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --virtual .httpd-rundeps $runDeps;  apk del .build-deps;   httpd -v

ListNode(pos=(0, 2343), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 72), parts=[
    AssignmentNode(pos=(12, 72), word='runDeps=   apr-dev   apr-util-dev   apr-util-ldap   perl  '),
  ]),
  OperatorNode(op=';', pos=(72, 73)),
  CommandNode(pos=(75, 319), parts=[
    WordNode(pos=(75, 78), word='apk'),
    WordNode(pos=(79, 82), word='add'),
    WordNode(pos=(83, 93), word='--no-cache'),
    WordNode(pos=(94, 103), word='--virtual'),
    WordNode(pos=(104, 115), word='.build-deps'),
    WordNode(pos=(118, 126), word='$runDeps', parts=[
      ParameterNode(pos=(118, 126), value='runDeps'),
    ]),
    WordNode(pos=(129, 144), word='ca-certificates'),
    WordNode(pos=(147, 156), word='coreutils'),
    WordNode(pos=(159, 167), word='dpkg-dev'),
    WordNode(pos=(168, 172), word='dpkg'),
    WordNode(pos=(175, 178), word='gcc'),
    WordNode(pos=(181, 186), word='gnupg'),
    WordNode(pos=(189, 197), word='libc-dev'),
    WordNode(pos=(200, 208), word='curl-dev'),
    WordNode(pos=(211, 222), word='jansson-dev'),
    WordNode(pos=(225, 236), word='libxml2-dev'),
    WordNode(pos=(239, 246), word='lua-dev'),
    WordNode(pos=(249, 253), word='make'),
    WordNode(pos=(256, 267), word='nghttp2-dev'),
    WordNode(pos=(270, 277), word='openssl'),
    WordNode(pos=(280, 291), word='openssl-dev'),
    WordNode(pos=(294, 302), word='pcre-dev'),
    WordNode(pos=(305, 308), word='tar'),
    WordNode(pos=(311, 319), word='zlib-dev'),
  ]),
  OperatorNode(op=';', pos=(321, 322)),
  FunctionNode(pos=(325, 587), parts=[
    WordNode(pos=(325, 330), word='ddist'),
    ReservedwordNode(pos=(330, 331), word='('),
    ReservedwordNode(pos=(331, 332), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(333, 334), word='{'),
      ListNode(pos=(337, 584), parts=[
          CommandNode(pos=(337, 349), parts=[
            WordNode(pos=(337, 342), word='local'),
            WordNode(pos=(343, 349), word='f=$1', parts=[
              ParameterNode(pos=(346, 348), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(349, 350)),
          CommandNode(pos=(351, 356), parts=[
            WordNode(pos=(351, 356), word='shift'),
          ]),
          OperatorNode(op=';', pos=(356, 357)),
          CommandNode(pos=(360, 379), parts=[
            WordNode(pos=(360, 365), word='local'),
            WordNode(pos=(366, 379), word='distFile=$1', parts=[
              ParameterNode(pos=(376, 378), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(381, 386), parts=[
            WordNode(pos=(381, 386), word='shift'),
          ]),
          OperatorNode(op=';', pos=(386, 387)),
          CommandNode(pos=(390, 404), parts=[
            WordNode(pos=(390, 395), word='local'),
            WordNode(pos=(396, 404), word='success='),
          ]),
          OperatorNode(op=';', pos=(404, 405)),
          CommandNode(pos=(408, 422), parts=[
            WordNode(pos=(408, 413), word='local'),
            WordNode(pos=(414, 422), word='distUrl='),
          ]),
          OperatorNode(op=';', pos=(422, 423)),
          CompoundNode(list=[
            ForNode(pos=(426, 562), parts=[
              ReservedwordNode(pos=(426, 429), word='for'),
              WordNode(pos=(430, 437), word='distUrl'),
              ReservedwordNode(pos=(438, 440), word='in'),
              WordNode(pos=(441, 458), word='$APACHE_DIST_URLS', parts=[
                ParameterNode(pos=(441, 458), value='APACHE_DIST_URLS'),
              ]),
              ReservedwordNode(pos=(458, 459), word=';'),
              ReservedwordNode(pos=(460, 462), word='do'),
              ListNode(pos=(466, 555), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(466, 554), parts=[
                      ReservedwordNode(pos=(466, 468), word='if'),
                      ListNode(pos=(469, 517), parts=[
                          CommandNode(pos=(469, 501), parts=[
                            WordNode(pos=(469, 473), word='wget'),
                            WordNode(pos=(474, 476), word='-O'),
                            WordNode(pos=(477, 481), word='$f', parts=[
                              ParameterNode(pos=(478, 480), value='f'),
                            ]),
                            WordNode(pos=(482, 501), word='$distUrl$distFile', parts=[
                              ParameterNode(pos=(483, 491), value='distUrl'),
                              ParameterNode(pos=(491, 500), value='distFile'),
                            ]),
                          ]),
                          OperatorNode(op='&&', pos=(502, 504)),
                          CommandNode(pos=(505, 516), parts=[
                            WordNode(pos=(505, 506), word='['),
                            WordNode(pos=(507, 509), word='-s'),
                            WordNode(pos=(510, 514), word='$f', parts=[
                              ParameterNode(pos=(511, 513), value='f'),
                            ]),
                            WordNode(pos=(515, 516), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(516, 517)),
                        ]),
                      ReservedwordNode(pos=(518, 522), word='then'),
                      ListNode(pos=(527, 548), parts=[
                          CommandNode(pos=(527, 536), parts=[
                            AssignmentNode(pos=(527, 536), word='success=1'),
                          ]),
                          OperatorNode(op=';', pos=(536, 537)),
                          CommandNode(pos=(542, 547), parts=[
                            WordNode(pos=(542, 547), word='break'),
                          ]),
                          OperatorNode(op=';', pos=(547, 548)),
                        ]),
                      ReservedwordNode(pos=(552, 554), word='fi'),
                    ]),
                  ], pos=(466, 554)),
                  OperatorNode(op=';', pos=(554, 555)),
                ]),
              ReservedwordNode(pos=(558, 562), word='done'),
            ]),
          ], pos=(426, 562)),
          OperatorNode(op=';', pos=(562, 563)),
          CommandNode(pos=(566, 583), parts=[
            WordNode(pos=(566, 567), word='['),
            WordNode(pos=(568, 570), word='-n'),
            WordNode(pos=(571, 581), word='$success', parts=[
              ParameterNode(pos=(572, 580), value='success'),
            ]),
            WordNode(pos=(582, 583), word=']'),
          ]),
          OperatorNode(op=';', pos=(583, 584)),
        ]),
      ReservedwordNode(pos=(586, 587), word='}'),
    ], pos=(333, 587)),
  ]),
  OperatorNode(op=';', pos=(587, 588)),
  CommandNode(pos=(591, 649), parts=[
    WordNode(pos=(591, 596), word='ddist'),
    WordNode(pos=(597, 612), word='httpd.tar.bz2'),
    WordNode(pos=(613, 649), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
      ParameterNode(pos=(626, 640), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 704), parts=[
    CommandNode(pos=(652, 687), parts=[
      WordNode(pos=(652, 656), word='echo'),
      WordNode(pos=(657, 687), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
        ParameterNode(pos=(658, 671), value='HTTPD_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(688, 689)),
    CommandNode(pos=(690, 704), parts=[
      WordNode(pos=(690, 699), word='sha256sum'),
      WordNode(pos=(700, 702), word='-c'),
      WordNode(pos=(703, 704), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(708, 774), parts=[
    WordNode(pos=(708, 713), word='ddist'),
    WordNode(pos=(714, 733), word='httpd.tar.bz2.asc'),
    WordNode(pos=(734, 774), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
      ParameterNode(pos=(747, 761), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(774, 775)),
  CommandNode(pos=(777, 808), parts=[
    WordNode(pos=(777, 783), word='export'),
    WordNode(pos=(784, 808), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(797, 806), parts=[
          WordNode(pos=(797, 803), word='mktemp'),
          WordNode(pos=(804, 806), word='-d'),
        ]), pos=(795, 807)),
    ]),
  ]),
  OperatorNode(op=';', pos=(808, 809)),
  CompoundNode(list=[
    ForNode(pos=(811, 992), parts=[
      ReservedwordNode(pos=(811, 814), word='for'),
      WordNode(pos=(815, 818), word='key'),
      ReservedwordNode(pos=(819, 821), word='in'),
      WordNode(pos=(824, 864), word='A93D62ECC3C8EA12DB220EC934EA76E6791485A8'),
      WordNode(pos=(867, 907), word='B9E8213AEFB861AF35A41F2C995E35221AD84DFF'),
      ReservedwordNode(pos=(909, 910), word=';'),
      ReservedwordNode(pos=(911, 913), word='do'),
      ListNode(pos=(916, 986), parts=[
          CommandNode(pos=(916, 985), parts=[
            WordNode(pos=(916, 919), word='gpg'),
            WordNode(pos=(920, 927), word='--batch'),
            WordNode(pos=(928, 939), word='--keyserver'),
            WordNode(pos=(940, 966), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(967, 978), word='--recv-keys'),
            WordNode(pos=(979, 985), word='$key', parts=[
              ParameterNode(pos=(980, 984), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(985, 986)),
        ]),
      ReservedwordNode(pos=(988, 992), word='done'),
    ]),
  ], pos=(811, 992)),
  OperatorNode(op=';', pos=(992, 993)),
  CommandNode(pos=(995, 1047), parts=[
    WordNode(pos=(995, 998), word='gpg'),
    WordNode(pos=(999, 1006), word='--batch'),
    WordNode(pos=(1007, 1015), word='--verify'),
    WordNode(pos=(1016, 1033), word='httpd.tar.bz2.asc'),
    WordNode(pos=(1034, 1047), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1047, 1048)),
  CommandNode(pos=(1050, 1068), parts=[
    WordNode(pos=(1050, 1057), word='command'),
    WordNode(pos=(1058, 1060), word='-v'),
    WordNode(pos=(1061, 1068), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(1069, 1071)),
  CommandNode(pos=(1072, 1090), parts=[
    WordNode(pos=(1072, 1079), word='gpgconf'),
    WordNode(pos=(1080, 1086), word='--kill'),
    WordNode(pos=(1087, 1090), word='all'),
  ]),
  OperatorNode(op='||', pos=(1091, 1093)),
  CommandNode(pos=(1094, 1095), parts=[
    WordNode(pos=(1094, 1095), word=':'),
  ]),
  OperatorNode(op=';', pos=(1095, 1096)),
  CommandNode(pos=(1098, 1135), parts=[
    WordNode(pos=(1098, 1100), word='rm'),
    WordNode(pos=(1101, 1104), word='-rf'),
    WordNode(pos=(1105, 1117), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(1106, 1116), value='GNUPGHOME'),
    ]),
    WordNode(pos=(1118, 1135), word='httpd.tar.bz2.asc'),
  ]),
  OperatorNode(op=';', pos=(1135, 1136)),
  CommandNode(pos=(1139, 1151), parts=[
    WordNode(pos=(1139, 1144), word='mkdir'),
    WordNode(pos=(1145, 1147), word='-p'),
    WordNode(pos=(1148, 1151), word='src'),
  ]),
  OperatorNode(op=';', pos=(1151, 1152)),
  CommandNode(pos=(1154, 1203), parts=[
    WordNode(pos=(1154, 1157), word='tar'),
    WordNode(pos=(1158, 1161), word='-xf'),
    WordNode(pos=(1162, 1175), word='httpd.tar.bz2'),
    WordNode(pos=(1176, 1178), word='-C'),
    WordNode(pos=(1179, 1182), word='src'),
    WordNode(pos=(1183, 1203), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1203, 1204)),
  CommandNode(pos=(1206, 1222), parts=[
    WordNode(pos=(1206, 1208), word='rm'),
    WordNode(pos=(1209, 1222), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1222, 1223)),
  CommandNode(pos=(1225, 1231), parts=[
    WordNode(pos=(1225, 1227), word='cd'),
    WordNode(pos=(1228, 1231), word='src'),
  ]),
  OperatorNode(op=';', pos=(1231, 1232)),
  FunctionNode(pos=(1235, 1529), parts=[
    WordNode(pos=(1235, 1242), word='patches'),
    ReservedwordNode(pos=(1242, 1243), word='('),
    ReservedwordNode(pos=(1243, 1244), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(1245, 1246), word='{'),
      ListNode(pos=(1249, 1526), parts=[
          CompoundNode(list=[
            WhileNode(pos=(1249, 1525), parts=[
              ReservedwordNode(pos=(1249, 1254), word='while'),
              ListNode(pos=(1255, 1270), parts=[
                  CommandNode(pos=(1255, 1269), parts=[
                    WordNode(pos=(1255, 1256), word='['),
                    WordNode(pos=(1257, 1261), word='$#', parts=[
                      ParameterNode(pos=(1258, 1260), value='#'),
                    ]),
                    WordNode(pos=(1262, 1265), word='-gt'),
                    WordNode(pos=(1266, 1267), word='0'),
                    WordNode(pos=(1268, 1269), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(1269, 1270)),
                ]),
              ReservedwordNode(pos=(1271, 1273), word='do'),
              ListNode(pos=(1277, 1518), parts=[
                  CommandNode(pos=(1277, 1297), parts=[
                    WordNode(pos=(1277, 1282), word='local'),
                    WordNode(pos=(1283, 1297), word='patchFile=$1', parts=[
                      ParameterNode(pos=(1294, 1296), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1297, 1298)),
                  CommandNode(pos=(1299, 1304), parts=[
                    WordNode(pos=(1299, 1304), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1304, 1305)),
                  CommandNode(pos=(1309, 1331), parts=[
                    WordNode(pos=(1309, 1314), word='local'),
                    WordNode(pos=(1315, 1331), word='patchSha256=$1', parts=[
                      ParameterNode(pos=(1328, 1330), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1331, 1332)),
                  CommandNode(pos=(1333, 1338), parts=[
                    WordNode(pos=(1333, 1338), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1338, 1339)),
                  CommandNode(pos=(1343, 1412), parts=[
                    WordNode(pos=(1343, 1348), word='ddist'),
                    WordNode(pos=(1349, 1361), word='$patchFile', parts=[
                      ParameterNode(pos=(1350, 1360), value='patchFile'),
                    ]),
                    WordNode(pos=(1362, 1412), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
                      ParameterNode(pos=(1386, 1400), value='HTTPD_VERSION'),
                      ParameterNode(pos=(1401, 1411), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1412, 1413)),
                  PipelineNode(pos=(1417, 1465), parts=[
                    CommandNode(pos=(1417, 1448), parts=[
                      WordNode(pos=(1417, 1421), word='echo'),
                      WordNode(pos=(1422, 1448), word='$patchSha256 *$patchFile', parts=[
                        ParameterNode(pos=(1423, 1435), value='patchSha256'),
                        ParameterNode(pos=(1437, 1447), value='patchFile'),
                      ]),
                    ]),
                    PipeNode(pipe='|', pos=(1449, 1450)),
                    CommandNode(pos=(1451, 1465), parts=[
                      WordNode(pos=(1451, 1460), word='sha256sum'),
                      WordNode(pos=(1461, 1463), word='-c'),
                      WordNode(pos=(1464, 1465), word='-'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1465, 1466)),
                  CommandNode(pos=(1470, 1494), parts=[
                    WordNode(pos=(1470, 1475), word='patch'),
                    WordNode(pos=(1476, 1479), word='-p0'),
                    RedirectNode(output=
                      WordNode(pos=(1482, 1494), word='$patchFile', parts=[
                        ParameterNode(pos=(1483, 1493), value='patchFile'),
                      ]), pos=(1480, 1494), type='<'),
                  ]),
                  OperatorNode(op=';', pos=(1494, 1495)),
                  CommandNode(pos=(1499, 1517), parts=[
                    WordNode(pos=(1499, 1501), word='rm'),
                    WordNode(pos=(1502, 1504), word='-f'),
                    WordNode(pos=(1505, 1517), word='$patchFile', parts=[
                      ParameterNode(pos=(1506, 1516), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1517, 1518)),
                ]),
              ReservedwordNode(pos=(1521, 1525), word='done'),
            ]),
          ], pos=(1249, 1525)),
          OperatorNode(op=';', pos=(1525, 1526)),
        ]),
      ReservedwordNode(pos=(1528, 1529), word='}'),
    ], pos=(1245, 1529)),
  ]),
  OperatorNode(op=';', pos=(1529, 1530)),
  CommandNode(pos=(1532, 1554), parts=[
    WordNode(pos=(1532, 1539), word='patches'),
    WordNode(pos=(1540, 1554), word='$HTTPD_PATCHES', parts=[
      ParameterNode(pos=(1540, 1554), value='HTTPD_PATCHES'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1554, 1555)),
  CommandNode(pos=(1558, 1615), parts=[
    AssignmentNode(pos=(1558, 1615), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1569, 1613), parts=[
          WordNode(pos=(1569, 1586), word='dpkg-architecture'),
          WordNode(pos=(1587, 1594), word='--query'),
          WordNode(pos=(1595, 1613), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1567, 1614)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1615, 1616)),
  CommandNode(pos=(1618, 1737), parts=[
    WordNode(pos=(1618, 1629), word='./configure'),
    WordNode(pos=(1632, 1650), word='--build=$gnuArch', parts=[
      ParameterNode(pos=(1641, 1649), value='gnuArch'),
    ]),
    WordNode(pos=(1653, 1677), word='--prefix=$HTTPD_PREFIX', parts=[
      ParameterNode(pos=(1663, 1676), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(1680, 1710), word='--enable-mods-shared=reallyall'),
    WordNode(pos=(1713, 1737), word='--enable-mpms-shared=all'),
  ]),
  OperatorNode(op=';', pos=(1739, 1740)),
  CommandNode(pos=(1742, 1760), parts=[
    WordNode(pos=(1742, 1746), word='make'),
    WordNode(pos=(1747, 1749), word='-j'),
    WordNode(pos=(1750, 1760), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1753, 1758), parts=[
          WordNode(pos=(1753, 1758), word='nproc'),
        ]), pos=(1751, 1759)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1760, 1761)),
  CommandNode(pos=(1763, 1775), parts=[
    WordNode(pos=(1763, 1767), word='make'),
    WordNode(pos=(1768, 1775), word='install'),
  ]),
  OperatorNode(op=';', pos=(1775, 1776)),
  CommandNode(pos=(1779, 1784), parts=[
    WordNode(pos=(1779, 1781), word='cd'),
    WordNode(pos=(1782, 1784), word='..'),
  ]),
  OperatorNode(op=';', pos=(1784, 1785)),
  CommandNode(pos=(1787, 1807), parts=[
    WordNode(pos=(1787, 1789), word='rm'),
    WordNode(pos=(1790, 1792), word='-r'),
    WordNode(pos=(1793, 1796), word='src'),
    WordNode(pos=(1797, 1800), word='man'),
    WordNode(pos=(1801, 1807), word='manual'),
  ]),
  OperatorNode(op=';', pos=(1807, 1808)),
  CommandNode(pos=(1811, 2053), parts=[
    WordNode(pos=(1811, 1814), word='sed'),
    WordNode(pos=(1815, 1818), word='-ri'),
    WordNode(pos=(1821, 1823), word='-e'),
    WordNode(pos=(1824, 1870), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(1873, 1875), word='-e'),
    WordNode(pos=(1876, 1921), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
    WordNode(pos=(1924, 1926), word='-e'),
    WordNode(pos=(1927, 1975), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(1978, 2009), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
      ParameterNode(pos=(1979, 1992), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(2012, 2053), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
      ParameterNode(pos=(2013, 2026), value='HTTPD_PREFIX'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2055, 2056)),
  CommandNode(pos=(2059, 2265), parts=[
    AssignmentNode(pos=(2059, 2265), word='runDeps=$runDeps $(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      ParameterNode(pos=(2068, 2076), value='runDeps'),
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2082, 2261), parts=[
          CommandNode(pos=(2082, 2148), parts=[
            WordNode(pos=(2082, 2089), word='scanelf'),
            WordNode(pos=(2090, 2098), word='--needed'),
            WordNode(pos=(2099, 2109), word='--nobanner'),
            WordNode(pos=(2110, 2118), word='--format'),
            WordNode(pos=(2119, 2125), word='%n#p'),
            WordNode(pos=(2126, 2137), word='--recursive'),
            WordNode(pos=(2138, 2148), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(2152, 2153)),
          CommandNode(pos=(2154, 2165), parts=[
            WordNode(pos=(2154, 2156), word='tr'),
            WordNode(pos=(2157, 2160), word=','),
            WordNode(pos=(2161, 2165), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(2169, 2170)),
          CommandNode(pos=(2171, 2178), parts=[
            WordNode(pos=(2171, 2175), word='sort'),
            WordNode(pos=(2176, 2178), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(2182, 2183)),
          CommandNode(pos=(2184, 2261), parts=[
            WordNode(pos=(2184, 2187), word='awk'),
            WordNode(pos=(2188, 2261), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2077, 2262)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2265, 2266)),
  CommandNode(pos=(2268, 2309), parts=[
    WordNode(pos=(2268, 2271), word='apk'),
    WordNode(pos=(2272, 2275), word='add'),
    WordNode(pos=(2276, 2285), word='--virtual'),
    WordNode(pos=(2286, 2300), word='.httpd-rundeps'),
    WordNode(pos=(2301, 2309), word='$runDeps', parts=[
      ParameterNode(pos=(2301, 2309), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2309, 2310)),
  CommandNode(pos=(2312, 2331), parts=[
    WordNode(pos=(2312, 2315), word='apk'),
    WordNode(pos=(2316, 2319), word='del'),
    WordNode(pos=(2320, 2331), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(2331, 2332)),
  CommandNode(pos=(2335, 2343), parts=[
    WordNode(pos=(2335, 2340), word='httpd'),
    WordNode(pos=(2341, 2343), word='-v'),
  ]),
])


80) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


81) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


82) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


83) set -ex  && cd /usr/local/etc  && if [ -d php-fpm.d ]; then   sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;   cp php-fpm.d/www.conf.default php-fpm.d/www.conf;  else   mkdir php-fpm.d;   cp php-fpm.conf.default php-fpm.d/www.conf;   {    echo '[global]';    echo 'include=etc/php-fpm.d/*.conf';   } | tee php-fpm.conf;  fi  && {   echo '[global]';   echo 'error_log = /proc/self/fd/2';   echo; echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'; echo 'log_limit = 8192';   echo;   echo '[www]';   echo '; if we send this to /proc/self/fd/1, it never appears';   echo 'access.log = /proc/self/fd/2';   echo;   echo 'clear_env = no';   echo;   echo '; Ensure worker stdout and stderr are sent to the main error log.';   echo 'catch_workers_output = yes';   echo 'decorate_workers_output = no';  } | tee php-fpm.d/docker.conf  && {   echo '[global]';   echo 'daemonize = no';   echo;   echo '[www]';   echo 'listen = 9000';  } | tee php-fpm.d/zz-docker.conf

ListNode(pos=(0, 1008), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 29), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 29), word='/usr/local/etc'),
  ]),
  OperatorNode(op='&&', pos=(31, 33)),
  CompoundNode(list=[
    IfNode(pos=(34, 348), parts=[
      ReservedwordNode(pos=(34, 36), word='if'),
      ListNode(pos=(37, 54), parts=[
          CommandNode(pos=(37, 53), parts=[
            WordNode(pos=(37, 38), word='['),
            WordNode(pos=(39, 41), word='-d'),
            WordNode(pos=(42, 51), word='php-fpm.d'),
            WordNode(pos=(52, 53), word=']'),
          ]),
          OperatorNode(op=';', pos=(53, 54)),
        ]),
      ReservedwordNode(pos=(55, 59), word='then'),
      ListNode(pos=(62, 185), parts=[
          PipelineNode(pos=(62, 132), parts=[
            CommandNode(pos=(62, 101), parts=[
              WordNode(pos=(62, 65), word='sed'),
              WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
              WordNode(pos=(81, 101), word='php-fpm.conf.default'),
            ]),
            PipeNode(pipe='|', pos=(102, 103)),
            CommandNode(pos=(104, 132), parts=[
              WordNode(pos=(104, 107), word='tee'),
              WordNode(pos=(108, 120), word='php-fpm.conf'),
              RedirectNode(output=
                WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(132, 133)),
          CommandNode(pos=(136, 184), parts=[
            WordNode(pos=(136, 138), word='cp'),
            WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
            WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(184, 185)),
        ]),
      ReservedwordNode(pos=(187, 191), word='else'),
      ListNode(pos=(194, 344), parts=[
          CommandNode(pos=(194, 209), parts=[
            WordNode(pos=(194, 199), word='mkdir'),
            WordNode(pos=(200, 209), word='php-fpm.d'),
          ]),
          OperatorNode(op=';', pos=(209, 210)),
          CommandNode(pos=(213, 255), parts=[
            WordNode(pos=(213, 215), word='cp'),
            WordNode(pos=(216, 236), word='php-fpm.conf.default'),
            WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(255, 256)),
          PipelineNode(pos=(259, 343), parts=[
            CompoundNode(list=[
              ReservedwordNode(pos=(259, 260), word='{'),
              ListNode(pos=(264, 320), parts=[
                  CommandNode(pos=(264, 279), parts=[
                    WordNode(pos=(264, 268), word='echo'),
                    WordNode(pos=(269, 279), word='[global]'),
                  ]),
                  OperatorNode(op=';', pos=(279, 280)),
                  CommandNode(pos=(284, 319), parts=[
                    WordNode(pos=(284, 288), word='echo'),
                    WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
                  ]),
                  OperatorNode(op=';', pos=(319, 320)),
                ]),
              ReservedwordNode(pos=(323, 324), word='}'),
            ], pos=(259, 324)),
            PipeNode(pipe='|', pos=(325, 326)),
            CommandNode(pos=(327, 343), parts=[
              WordNode(pos=(327, 330), word='tee'),
              WordNode(pos=(331, 343), word='php-fpm.conf'),
            ]),
          ]),
          OperatorNode(op=';', pos=(343, 344)),
        ]),
      ReservedwordNode(pos=(346, 348), word='fi'),
    ]),
  ], pos=(34, 348)),
  OperatorNode(op='&&', pos=(350, 352)),
  PipelineNode(pos=(353, 876), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(353, 354), word='{'),
      ListNode(pos=(357, 845), parts=[
          CommandNode(pos=(357, 372), parts=[
            WordNode(pos=(357, 361), word='echo'),
            WordNode(pos=(362, 372), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(372, 373)),
          CommandNode(pos=(376, 410), parts=[
            WordNode(pos=(376, 380), word='echo'),
            WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(410, 411)),
          CommandNode(pos=(414, 418), parts=[
            WordNode(pos=(414, 418), word='echo'),
          ]),
          OperatorNode(op=';', pos=(418, 419)),
          CommandNode(pos=(420, 498), parts=[
            WordNode(pos=(420, 424), word='echo'),
            WordNode(pos=(425, 498), word='; https://github.com/docker-library/php/pull/725#issuecomment-443540114'),
          ]),
          OperatorNode(op=';', pos=(498, 499)),
          CommandNode(pos=(500, 523), parts=[
            WordNode(pos=(500, 504), word='echo'),
            WordNode(pos=(505, 523), word='log_limit = 8192'),
          ]),
          OperatorNode(op=';', pos=(523, 524)),
          CommandNode(pos=(527, 531), parts=[
            WordNode(pos=(527, 531), word='echo'),
          ]),
          OperatorNode(op=';', pos=(531, 532)),
          CommandNode(pos=(535, 547), parts=[
            WordNode(pos=(535, 539), word='echo'),
            WordNode(pos=(540, 547), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(547, 548)),
          CommandNode(pos=(551, 612), parts=[
            WordNode(pos=(551, 555), word='echo'),
            WordNode(pos=(556, 612), word='; if we send this to /proc/self/fd/1, it never appears'),
          ]),
          OperatorNode(op=';', pos=(612, 613)),
          CommandNode(pos=(616, 651), parts=[
            WordNode(pos=(616, 620), word='echo'),
            WordNode(pos=(621, 651), word='access.log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(651, 652)),
          CommandNode(pos=(655, 659), parts=[
            WordNode(pos=(655, 659), word='echo'),
          ]),
          OperatorNode(op=';', pos=(659, 660)),
          CommandNode(pos=(663, 684), parts=[
            WordNode(pos=(663, 667), word='echo'),
            WordNode(pos=(668, 684), word='clear_env = no'),
          ]),
          OperatorNode(op=';', pos=(684, 685)),
          CommandNode(pos=(688, 692), parts=[
            WordNode(pos=(688, 692), word='echo'),
          ]),
          OperatorNode(op=';', pos=(692, 693)),
          CommandNode(pos=(696, 768), parts=[
            WordNode(pos=(696, 700), word='echo'),
            WordNode(pos=(701, 768), word='; Ensure worker stdout and stderr are sent to the main error log.'),
          ]),
          OperatorNode(op=';', pos=(768, 769)),
          CommandNode(pos=(772, 805), parts=[
            WordNode(pos=(772, 776), word='echo'),
            WordNode(pos=(777, 805), word='catch_workers_output = yes'),
          ]),
          OperatorNode(op=';', pos=(805, 806)),
          CommandNode(pos=(809, 844), parts=[
            WordNode(pos=(809, 813), word='echo'),
            WordNode(pos=(814, 844), word='decorate_workers_output = no'),
          ]),
          OperatorNode(op=';', pos=(844, 845)),
        ]),
      ReservedwordNode(pos=(847, 848), word='}'),
    ], pos=(353, 848)),
    PipeNode(pipe='|', pos=(849, 850)),
    CommandNode(pos=(851, 876), parts=[
      WordNode(pos=(851, 854), word='tee'),
      WordNode(pos=(855, 876), word='php-fpm.d/docker.conf'),
    ]),
  ]),
  OperatorNode(op='&&', pos=(878, 880)),
  PipelineNode(pos=(881, 1008), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(881, 882), word='{'),
      ListNode(pos=(885, 974), parts=[
          CommandNode(pos=(885, 900), parts=[
            WordNode(pos=(885, 889), word='echo'),
            WordNode(pos=(890, 900), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(900, 901)),
          CommandNode(pos=(904, 925), parts=[
            WordNode(pos=(904, 908), word='echo'),
            WordNode(pos=(909, 925), word='daemonize = no'),
          ]),
          OperatorNode(op=';', pos=(925, 926)),
          CommandNode(pos=(929, 933), parts=[
            WordNode(pos=(929, 933), word='echo'),
          ]),
          OperatorNode(op=';', pos=(933, 934)),
          CommandNode(pos=(937, 949), parts=[
            WordNode(pos=(937, 941), word='echo'),
            WordNode(pos=(942, 949), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(949, 950)),
          CommandNode(pos=(953, 973), parts=[
            WordNode(pos=(953, 957), word='echo'),
            WordNode(pos=(958, 973), word='listen = 9000'),
          ]),
          OperatorNode(op=';', pos=(973, 974)),
        ]),
      ReservedwordNode(pos=(976, 977), word='}'),
    ], pos=(881, 977)),
    PipeNode(pipe='|', pos=(978, 979)),
    CommandNode(pos=(980, 1008), parts=[
      WordNode(pos=(980, 983), word='tee'),
      WordNode(pos=(984, 1008), word='php-fpm.d/zz-docker.conf'),
    ]),
  ]),
])


84) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


85) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


86) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 796), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 300), parts=[
    AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
  ]),
  OperatorNode(op=';', pos=(300, 301)),
  CommandNode(pos=(304, 318), parts=[
    WordNode(pos=(304, 308), word='make'),
    WordNode(pos=(309, 318), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(318, 319)),
  CompoundNode(list=[
    ForNode(pos=(322, 418), parts=[
      ReservedwordNode(pos=(322, 325), word='for'),
      WordNode(pos=(326, 330), word='conf'),
      ReservedwordNode(pos=(331, 333), word='in'),
      WordNode(pos=(334, 345), word='$unsetConfs', parts=[
        ParameterNode(pos=(334, 345), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 412), parts=[
          CommandNode(pos=(352, 411), parts=[
            WordNode(pos=(352, 355), word='sed'),
            WordNode(pos=(356, 358), word='-i'),
            WordNode(pos=(362, 364), word='-e'),
            WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(369, 374), value='conf'),
              ParameterNode(pos=(382, 387), value='conf'),
            ]),
            WordNode(pos=(404, 411), word='.config'),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
        ]),
      ReservedwordNode(pos=(414, 418), word='done'),
    ]),
  ], pos=(322, 418)),
  OperatorNode(op=';', pos=(418, 419)),
  CompoundNode(list=[
    ForNode(pos=(422, 643), parts=[
      ReservedwordNode(pos=(422, 425), word='for'),
      WordNode(pos=(426, 431), word='confV'),
      ReservedwordNode(pos=(432, 434), word='in'),
      WordNode(pos=(435, 444), word='$setConfs', parts=[
        ParameterNode(pos=(435, 444), value='setConfs'),
      ]),
      ReservedwordNode(pos=(444, 445), word=';'),
      ReservedwordNode(pos=(446, 448), word='do'),
      ListNode(pos=(451, 637), parts=[
          CommandNode(pos=(451, 469), parts=[
            AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(457, 468), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(469, 470)),
          CommandNode(pos=(473, 560), parts=[
            WordNode(pos=(473, 476), word='sed'),
            WordNode(pos=(477, 479), word='-i'),
            WordNode(pos=(483, 485), word='-e'),
            WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(490, 495), value='conf'),
              ParameterNode(pos=(501, 507), value='confV'),
            ]),
            WordNode(pos=(513, 515), word='-e'),
            WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(522, 527), value='conf'),
              ParameterNode(pos=(541, 547), value='confV'),
            ]),
            WordNode(pos=(553, 560), word='.config'),
          ]),
          OperatorNode(op=';', pos=(560, 561)),
          CompoundNode(list=[
            IfNode(pos=(564, 636), parts=[
              ReservedwordNode(pos=(564, 566), word='if'),
              ListNode(pos=(567, 597), parts=[
                  PipelineNode(pos=(567, 596), parts=[
                    ReservedwordNode(pos=(567, 568), word='!'),
                    CommandNode(pos=(569, 596), parts=[
                      WordNode(pos=(569, 573), word='grep'),
                      WordNode(pos=(574, 576), word='-q'),
                      WordNode(pos=(577, 588), word='^$confV$', parts=[
                        ParameterNode(pos=(579, 585), value='confV'),
                      ]),
                      WordNode(pos=(589, 596), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(596, 597)),
                ]),
              ReservedwordNode(pos=(598, 602), word='then'),
              ListNode(pos=(606, 631), parts=[
                  CommandNode(pos=(606, 630), parts=[
                    WordNode(pos=(606, 610), word='echo'),
                    WordNode(pos=(611, 619), word='$confV', parts=[
                      ParameterNode(pos=(612, 618), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(630, 631)),
                ]),
              ReservedwordNode(pos=(634, 636), word='fi'),
            ]),
          ], pos=(564, 636)),
          OperatorNode(op=';', pos=(636, 637)),
        ]),
      ReservedwordNode(pos=(639, 643), word='done'),
    ]),
  ], pos=(422, 643)),
  OperatorNode(op=';', pos=(643, 644)),
  CommandNode(pos=(647, 661), parts=[
    WordNode(pos=(647, 651), word='make'),
    WordNode(pos=(652, 661), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(661, 662)),
  CompoundNode(list=[
    ForNode(pos=(665, 729), parts=[
      ReservedwordNode(pos=(665, 668), word='for'),
      WordNode(pos=(669, 673), word='conf'),
      ReservedwordNode(pos=(674, 676), word='in'),
      WordNode(pos=(677, 688), word='$unsetConfs', parts=[
        ParameterNode(pos=(677, 688), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(688, 689), word=';'),
      ReservedwordNode(pos=(690, 692), word='do'),
      ListNode(pos=(695, 723), parts=[
          PipelineNode(pos=(695, 722), parts=[
            ReservedwordNode(pos=(695, 696), word='!'),
            CommandNode(pos=(697, 722), parts=[
              WordNode(pos=(697, 701), word='grep'),
              WordNode(pos=(702, 704), word='-q'),
              WordNode(pos=(705, 714), word='^$conf=', parts=[
                ParameterNode(pos=(707, 712), value='conf'),
              ]),
              WordNode(pos=(715, 722), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(722, 723)),
        ]),
      ReservedwordNode(pos=(725, 729), word='done'),
    ]),
  ], pos=(665, 729)),
  OperatorNode(op=';', pos=(729, 730)),
  CompoundNode(list=[
    ForNode(pos=(732, 795), parts=[
      ReservedwordNode(pos=(732, 735), word='for'),
      WordNode(pos=(736, 741), word='confV'),
      ReservedwordNode(pos=(742, 744), word='in'),
      WordNode(pos=(745, 754), word='$setConfs', parts=[
        ParameterNode(pos=(745, 754), value='setConfs'),
      ]),
      ReservedwordNode(pos=(754, 755), word=';'),
      ReservedwordNode(pos=(756, 758), word='do'),
      ListNode(pos=(761, 789), parts=[
          CommandNode(pos=(761, 788), parts=[
            WordNode(pos=(761, 765), word='grep'),
            WordNode(pos=(766, 768), word='-q'),
            WordNode(pos=(769, 780), word='^$confV$', parts=[
              ParameterNode(pos=(771, 777), value='confV'),
            ]),
            WordNode(pos=(781, 788), word='.config'),
          ]),
          OperatorNode(op=';', pos=(788, 789)),
        ]),
      ReservedwordNode(pos=(791, 795), word='done'),
    ]),
  ], pos=(732, 795)),
  OperatorNode(op=';', pos=(795, 796)),
])


87) set -ex  && cd rootfs  && for userHome in $(awk -F ':' '{ print $3 ":" $4 "=" $6 }' etc/passwd); do   user="${userHome%%=*}";   home="${userHome#*=}";   home="./${home#/}";   if [ ! -d "$home" ]; then    mkdir -p "$home";    chown "$user" "$home";    chmod 755 "$home";   fi;  done

ListNode(pos=(0, 281), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 21), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 21), word='rootfs'),
  ]),
  OperatorNode(op='&&', pos=(23, 25)),
  CompoundNode(list=[
    ForNode(pos=(26, 281), parts=[
      ReservedwordNode(pos=(26, 29), word='for'),
      WordNode(pos=(30, 38), word='userHome'),
      ReservedwordNode(pos=(39, 41), word='in'),
      WordNode(pos=(42, 95), word='$(awk -F \':\' \'{ print $3 ":" $4 "=" $6 }\' etc/passwd)', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(44, 94), parts=[
            WordNode(pos=(44, 47), word='awk'),
            WordNode(pos=(48, 50), word='-F'),
            WordNode(pos=(51, 54), word=':'),
            WordNode(pos=(55, 83), word='{ print $3 ":" $4 "=" $6 }'),
            WordNode(pos=(84, 94), word='etc/passwd'),
          ]), pos=(42, 95)),
      ]),
      ReservedwordNode(pos=(95, 96), word=';'),
      ReservedwordNode(pos=(97, 99), word='do'),
      ListNode(pos=(102, 275), parts=[
          CommandNode(pos=(102, 124), parts=[
            AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
              ParameterNode(pos=(108, 123), value='userHome%%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(124, 125)),
          CommandNode(pos=(128, 149), parts=[
            AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
              ParameterNode(pos=(134, 148), value='userHome#*='),
            ]),
          ]),
          OperatorNode(op=';', pos=(149, 150)),
          CommandNode(pos=(153, 171), parts=[
            AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
              ParameterNode(pos=(161, 170), value='home#/'),
            ]),
          ]),
          OperatorNode(op=';', pos=(171, 172)),
          CompoundNode(list=[
            IfNode(pos=(175, 274), parts=[
              ReservedwordNode(pos=(175, 177), word='if'),
              ListNode(pos=(178, 195), parts=[
                  CommandNode(pos=(178, 194), parts=[
                    WordNode(pos=(178, 179), word='['),
                    WordNode(pos=(180, 181), word='!'),
                    WordNode(pos=(182, 184), word='-d'),
                    WordNode(pos=(185, 192), word='$home', parts=[
                      ParameterNode(pos=(186, 191), value='home'),
                    ]),
                    WordNode(pos=(193, 194), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(194, 195)),
                ]),
              ReservedwordNode(pos=(196, 200), word='then'),
              ListNode(pos=(204, 269), parts=[
                  CommandNode(pos=(204, 220), parts=[
                    WordNode(pos=(204, 209), word='mkdir'),
                    WordNode(pos=(210, 212), word='-p'),
                    WordNode(pos=(213, 220), word='$home', parts=[
                      ParameterNode(pos=(214, 219), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(220, 221)),
                  CommandNode(pos=(225, 246), parts=[
                    WordNode(pos=(225, 230), word='chown'),
                    WordNode(pos=(231, 238), word='$user', parts=[
                      ParameterNode(pos=(232, 237), value='user'),
                    ]),
                    WordNode(pos=(239, 246), word='$home', parts=[
                      ParameterNode(pos=(240, 245), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(246, 247)),
                  CommandNode(pos=(251, 268), parts=[
                    WordNode(pos=(251, 256), word='chmod'),
                    WordNode(pos=(257, 260), word='755'),
                    WordNode(pos=(261, 268), word='$home', parts=[
                      ParameterNode(pos=(262, 267), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(268, 269)),
                ]),
              ReservedwordNode(pos=(272, 274), word='fi'),
            ]),
          ], pos=(175, 274)),
          OperatorNode(op=';', pos=(274, 275)),
        ]),
      ReservedwordNode(pos=(277, 281), word='done'),
    ]),
  ], pos=(26, 281)),
])


88) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


89) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


90) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


91) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


92) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


93) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


94) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


95) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 679), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 136), parts=[
    AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CommandNode(pos=(140, 183), parts=[
    AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(187, 201), parts=[
    WordNode(pos=(187, 191), word='make'),
    WordNode(pos=(192, 201), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CompoundNode(list=[
    ForNode(pos=(205, 301), parts=[
      ReservedwordNode(pos=(205, 208), word='for'),
      WordNode(pos=(209, 213), word='conf'),
      ReservedwordNode(pos=(214, 216), word='in'),
      WordNode(pos=(217, 228), word='$unsetConfs', parts=[
        ParameterNode(pos=(217, 228), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(228, 229), word=';'),
      ReservedwordNode(pos=(230, 232), word='do'),
      ListNode(pos=(235, 295), parts=[
          CommandNode(pos=(235, 294), parts=[
            WordNode(pos=(235, 238), word='sed'),
            WordNode(pos=(239, 241), word='-i'),
            WordNode(pos=(245, 247), word='-e'),
            WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(252, 257), value='conf'),
              ParameterNode(pos=(265, 270), value='conf'),
            ]),
            WordNode(pos=(287, 294), word='.config'),
          ]),
          OperatorNode(op=';', pos=(294, 295)),
        ]),
      ReservedwordNode(pos=(297, 301), word='done'),
    ]),
  ], pos=(205, 301)),
  OperatorNode(op=';', pos=(301, 302)),
  CompoundNode(list=[
    ForNode(pos=(305, 526), parts=[
      ReservedwordNode(pos=(305, 308), word='for'),
      WordNode(pos=(309, 314), word='confV'),
      ReservedwordNode(pos=(315, 317), word='in'),
      WordNode(pos=(318, 327), word='$setConfs', parts=[
        ParameterNode(pos=(318, 327), value='setConfs'),
      ]),
      ReservedwordNode(pos=(327, 328), word=';'),
      ReservedwordNode(pos=(329, 331), word='do'),
      ListNode(pos=(334, 520), parts=[
          CommandNode(pos=(334, 352), parts=[
            AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(340, 351), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(352, 353)),
          CommandNode(pos=(356, 443), parts=[
            WordNode(pos=(356, 359), word='sed'),
            WordNode(pos=(360, 362), word='-i'),
            WordNode(pos=(366, 368), word='-e'),
            WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(373, 378), value='conf'),
              ParameterNode(pos=(384, 390), value='confV'),
            ]),
            WordNode(pos=(396, 398), word='-e'),
            WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(405, 410), value='conf'),
              ParameterNode(pos=(424, 430), value='confV'),
            ]),
            WordNode(pos=(436, 443), word='.config'),
          ]),
          OperatorNode(op=';', pos=(443, 444)),
          CompoundNode(list=[
            IfNode(pos=(447, 519), parts=[
              ReservedwordNode(pos=(447, 449), word='if'),
              ListNode(pos=(450, 480), parts=[
                  PipelineNode(pos=(450, 479), parts=[
                    ReservedwordNode(pos=(450, 451), word='!'),
                    CommandNode(pos=(452, 479), parts=[
                      WordNode(pos=(452, 456), word='grep'),
                      WordNode(pos=(457, 459), word='-q'),
                      WordNode(pos=(460, 471), word='^$confV$', parts=[
                        ParameterNode(pos=(462, 468), value='confV'),
                      ]),
                      WordNode(pos=(472, 479), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(479, 480)),
                ]),
              ReservedwordNode(pos=(481, 485), word='then'),
              ListNode(pos=(489, 514), parts=[
                  CommandNode(pos=(489, 513), parts=[
                    WordNode(pos=(489, 493), word='echo'),
                    WordNode(pos=(494, 502), word='$confV', parts=[
                      ParameterNode(pos=(495, 501), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(513, 514)),
                ]),
              ReservedwordNode(pos=(517, 519), word='fi'),
            ]),
          ], pos=(447, 519)),
          OperatorNode(op=';', pos=(519, 520)),
        ]),
      ReservedwordNode(pos=(522, 526), word='done'),
    ]),
  ], pos=(305, 526)),
  OperatorNode(op=';', pos=(526, 527)),
  CommandNode(pos=(530, 544), parts=[
    WordNode(pos=(530, 534), word='make'),
    WordNode(pos=(535, 544), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CompoundNode(list=[
    ForNode(pos=(548, 612), parts=[
      ReservedwordNode(pos=(548, 551), word='for'),
      WordNode(pos=(552, 556), word='conf'),
      ReservedwordNode(pos=(557, 559), word='in'),
      WordNode(pos=(560, 571), word='$unsetConfs', parts=[
        ParameterNode(pos=(560, 571), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(571, 572), word=';'),
      ReservedwordNode(pos=(573, 575), word='do'),
      ListNode(pos=(578, 606), parts=[
          PipelineNode(pos=(578, 605), parts=[
            ReservedwordNode(pos=(578, 579), word='!'),
            CommandNode(pos=(580, 605), parts=[
              WordNode(pos=(580, 584), word='grep'),
              WordNode(pos=(585, 587), word='-q'),
              WordNode(pos=(588, 597), word='^$conf=', parts=[
                ParameterNode(pos=(590, 595), value='conf'),
              ]),
              WordNode(pos=(598, 605), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(605, 606)),
        ]),
      ReservedwordNode(pos=(608, 612), word='done'),
    ]),
  ], pos=(548, 612)),
  OperatorNode(op=';', pos=(612, 613)),
  CompoundNode(list=[
    ForNode(pos=(615, 678), parts=[
      ReservedwordNode(pos=(615, 618), word='for'),
      WordNode(pos=(619, 624), word='confV'),
      ReservedwordNode(pos=(625, 627), word='in'),
      WordNode(pos=(628, 637), word='$setConfs', parts=[
        ParameterNode(pos=(628, 637), value='setConfs'),
      ]),
      ReservedwordNode(pos=(637, 638), word=';'),
      ReservedwordNode(pos=(639, 641), word='do'),
      ListNode(pos=(644, 672), parts=[
          CommandNode(pos=(644, 671), parts=[
            WordNode(pos=(644, 648), word='grep'),
            WordNode(pos=(649, 651), word='-q'),
            WordNode(pos=(652, 663), word='^$confV$', parts=[
              ParameterNode(pos=(654, 660), value='confV'),
            ]),
            WordNode(pos=(664, 671), word='.config'),
          ]),
          OperatorNode(op=';', pos=(671, 672)),
        ]),
      ReservedwordNode(pos=(674, 678), word='done'),
    ]),
  ], pos=(615, 678)),
  OperatorNode(op=';', pos=(678, 679)),
])


96) set -ex  && make -j "$(nproc)"   busybox  && ./busybox --help  && mkdir -p rootfs/bin  && ln -vL busybox rootfs/bin/   && ln -vL "$(which getconf)" rootfs/bin/getconf   && mkdir -p rootfs/etc  && cp /etc/nsswitch.conf rootfs/etc/  && mkdir -p rootfs/lib  && ln -sT lib rootfs/lib64  && set --   rootfs/bin/busybox   rootfs/bin/getconf   /lib/"$(gcc -print-multiarch)"/libnss*.so.*   /lib/"$(gcc -print-multiarch)"/libpthread*.so.*  && while [ "$#" -gt 0 ]; do   f="$1"; shift;   fn="$(basename "$f")";   if [ -e "rootfs/lib/$fn" ]; then continue; fi;   if [ "${f#rootfs/}" = "$f" ]; then    if [ "${fn#ld-}" = "$fn" ]; then     ln -vL "$f" "rootfs/lib/$fn";    else     cp -v "$f" "rootfs/lib/$fn";    fi;   fi;   set -- "$@" $(ldd "$f" | awk '    $1 ~ /^\// { print $1; next }    $2 == "=>" && $3 ~ /^\// { print $3; next }   ');  done   && chroot rootfs /bin/getconf _NPROCESSORS_ONLN   && chroot rootfs /bin/busybox --install /bin

ListNode(pos=(0, 933), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 40), parts=[
    WordNode(pos=(12, 16), word='make'),
    WordNode(pos=(17, 19), word='-j'),
    WordNode(pos=(20, 30), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(23, 28), parts=[
          WordNode(pos=(23, 28), word='nproc'),
        ]), pos=(21, 29)),
    ]),
    WordNode(pos=(33, 40), word='busybox'),
  ]),
  OperatorNode(op='&&', pos=(42, 44)),
  CommandNode(pos=(45, 61), parts=[
    WordNode(pos=(45, 54), word='./busybox'),
    WordNode(pos=(55, 61), word='--help'),
  ]),
  OperatorNode(op='&&', pos=(63, 65)),
  CommandNode(pos=(66, 85), parts=[
    WordNode(pos=(66, 71), word='mkdir'),
    WordNode(pos=(72, 74), word='-p'),
    WordNode(pos=(75, 85), word='rootfs/bin'),
  ]),
  OperatorNode(op='&&', pos=(87, 89)),
  CommandNode(pos=(90, 116), parts=[
    WordNode(pos=(90, 92), word='ln'),
    WordNode(pos=(93, 96), word='-vL'),
    WordNode(pos=(97, 104), word='busybox'),
    WordNode(pos=(105, 116), word='rootfs/bin/'),
  ]),
  OperatorNode(op='&&', pos=(119, 121)),
  CommandNode(pos=(122, 166), parts=[
    WordNode(pos=(122, 124), word='ln'),
    WordNode(pos=(125, 128), word='-vL'),
    WordNode(pos=(129, 147), word='$(which getconf)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(132, 145), parts=[
          WordNode(pos=(132, 137), word='which'),
          WordNode(pos=(138, 145), word='getconf'),
        ]), pos=(130, 146)),
    ]),
    WordNode(pos=(148, 166), word='rootfs/bin/getconf'),
  ]),
  OperatorNode(op='&&', pos=(169, 171)),
  CommandNode(pos=(172, 191), parts=[
    WordNode(pos=(172, 177), word='mkdir'),
    WordNode(pos=(178, 180), word='-p'),
    WordNode(pos=(181, 191), word='rootfs/etc'),
  ]),
  OperatorNode(op='&&', pos=(193, 195)),
  CommandNode(pos=(196, 229), parts=[
    WordNode(pos=(196, 198), word='cp'),
    WordNode(pos=(199, 217), word='/etc/nsswitch.conf'),
    WordNode(pos=(218, 229), word='rootfs/etc/'),
  ]),
  OperatorNode(op='&&', pos=(231, 233)),
  CommandNode(pos=(234, 253), parts=[
    WordNode(pos=(234, 239), word='mkdir'),
    WordNode(pos=(240, 242), word='-p'),
    WordNode(pos=(243, 253), word='rootfs/lib'),
  ]),
  OperatorNode(op='&&', pos=(255, 257)),
  CommandNode(pos=(258, 281), parts=[
    WordNode(pos=(258, 260), word='ln'),
    WordNode(pos=(261, 264), word='-sT'),
    WordNode(pos=(265, 268), word='lib'),
    WordNode(pos=(269, 281), word='rootfs/lib64'),
  ]),
  OperatorNode(op='&&', pos=(283, 285)),
  CommandNode(pos=(286, 430), parts=[
    WordNode(pos=(286, 289), word='set'),
    WordNode(pos=(290, 292), word='--'),
    WordNode(pos=(295, 313), word='rootfs/bin/busybox'),
    WordNode(pos=(316, 334), word='rootfs/bin/getconf'),
    WordNode(pos=(337, 380), word='/lib/$(gcc -print-multiarch)/libnss*.so.*', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(345, 365), parts=[
          WordNode(pos=(345, 348), word='gcc'),
          WordNode(pos=(349, 365), word='-print-multiarch'),
        ]), pos=(343, 366)),
    ]),
    WordNode(pos=(383, 430), word='/lib/$(gcc -print-multiarch)/libpthread*.so.*', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(391, 411), parts=[
          WordNode(pos=(391, 394), word='gcc'),
          WordNode(pos=(395, 411), word='-print-multiarch'),
        ]), pos=(389, 412)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(432, 434)),
  CompoundNode(list=[
    WhileNode(pos=(435, 836), parts=[
      ReservedwordNode(pos=(435, 440), word='while'),
      ListNode(pos=(441, 456), parts=[
          CommandNode(pos=(441, 455), parts=[
            WordNode(pos=(441, 442), word='['),
            WordNode(pos=(443, 447), word='$#', parts=[
              ParameterNode(pos=(444, 446), value='#'),
            ]),
            WordNode(pos=(448, 451), word='-gt'),
            WordNode(pos=(452, 453), word='0'),
            WordNode(pos=(454, 455), word=']'),
          ]),
          OperatorNode(op=';', pos=(455, 456)),
        ]),
      ReservedwordNode(pos=(457, 459), word='do'),
      ListNode(pos=(462, 830), parts=[
          CommandNode(pos=(462, 468), parts=[
            AssignmentNode(pos=(462, 468), word='f=$1', parts=[
              ParameterNode(pos=(465, 467), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(468, 469)),
          CommandNode(pos=(470, 475), parts=[
            WordNode(pos=(470, 475), word='shift'),
          ]),
          OperatorNode(op=';', pos=(475, 476)),
          CommandNode(pos=(479, 500), parts=[
            AssignmentNode(pos=(479, 500), word='fn=$(basename "$f")', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(485, 498), parts=[
                  WordNode(pos=(485, 493), word='basename'),
                  WordNode(pos=(494, 498), word='$f', parts=[
                    ParameterNode(pos=(495, 497), value='f'),
                  ]),
                ]), pos=(483, 499)),
            ]),
          ]),
          OperatorNode(op=';', pos=(500, 501)),
          CompoundNode(list=[
            IfNode(pos=(504, 549), parts=[
              ReservedwordNode(pos=(504, 506), word='if'),
              ListNode(pos=(507, 531), parts=[
                  CommandNode(pos=(507, 530), parts=[
                    WordNode(pos=(507, 508), word='['),
                    WordNode(pos=(509, 511), word='-e'),
                    WordNode(pos=(512, 528), word='rootfs/lib/$fn', parts=[
                      ParameterNode(pos=(524, 527), value='fn'),
                    ]),
                    WordNode(pos=(529, 530), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(530, 531)),
                ]),
              ReservedwordNode(pos=(532, 536), word='then'),
              ListNode(pos=(537, 546), parts=[
                  CommandNode(pos=(537, 545), parts=[
                    WordNode(pos=(537, 545), word='continue'),
                  ]),
                  OperatorNode(op=';', pos=(545, 546)),
                ]),
              ReservedwordNode(pos=(547, 549), word='fi'),
            ]),
          ], pos=(504, 549)),
          OperatorNode(op=';', pos=(549, 550)),
          CompoundNode(list=[
            IfNode(pos=(553, 710), parts=[
              ReservedwordNode(pos=(553, 555), word='if'),
              ListNode(pos=(556, 582), parts=[
                  CommandNode(pos=(556, 581), parts=[
                    WordNode(pos=(556, 557), word='['),
                    WordNode(pos=(558, 572), word='${f#rootfs/}', parts=[
                      ParameterNode(pos=(559, 571), value='f#rootfs/'),
                    ]),
                    WordNode(pos=(573, 574), word='='),
                    WordNode(pos=(575, 579), word='$f', parts=[
                      ParameterNode(pos=(576, 578), value='f'),
                    ]),
                    WordNode(pos=(580, 581), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(581, 582)),
                ]),
              ReservedwordNode(pos=(583, 587), word='then'),
              ListNode(pos=(591, 705), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(591, 704), parts=[
                      ReservedwordNode(pos=(591, 593), word='if'),
                      ListNode(pos=(594, 618), parts=[
                          CommandNode(pos=(594, 617), parts=[
                            WordNode(pos=(594, 595), word='['),
                            WordNode(pos=(596, 607), word='${fn#ld-}', parts=[
                              ParameterNode(pos=(597, 606), value='fn#ld-'),
                            ]),
                            WordNode(pos=(608, 609), word='='),
                            WordNode(pos=(610, 615), word='$fn', parts=[
                              ParameterNode(pos=(611, 614), value='fn'),
                            ]),
                            WordNode(pos=(616, 617), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(617, 618)),
                        ]),
                      ReservedwordNode(pos=(619, 623), word='then'),
                      ListNode(pos=(628, 657), parts=[
                          CommandNode(pos=(628, 656), parts=[
                            WordNode(pos=(628, 630), word='ln'),
                            WordNode(pos=(631, 634), word='-vL'),
                            WordNode(pos=(635, 639), word='$f', parts=[
                              ParameterNode(pos=(636, 638), value='f'),
                            ]),
                            WordNode(pos=(640, 656), word='rootfs/lib/$fn', parts=[
                              ParameterNode(pos=(652, 655), value='fn'),
                            ]),
                          ]),
                          OperatorNode(op=';', pos=(656, 657)),
                        ]),
                      ReservedwordNode(pos=(661, 665), word='else'),
                      ListNode(pos=(670, 698), parts=[
                          CommandNode(pos=(670, 697), parts=[
                            WordNode(pos=(670, 672), word='cp'),
                            WordNode(pos=(673, 675), word='-v'),
                            WordNode(pos=(676, 680), word='$f', parts=[
                              ParameterNode(pos=(677, 679), value='f'),
                            ]),
                            WordNode(pos=(681, 697), word='rootfs/lib/$fn', parts=[
                              ParameterNode(pos=(693, 696), value='fn'),
                            ]),
                          ]),
                          OperatorNode(op=';', pos=(697, 698)),
                        ]),
                      ReservedwordNode(pos=(702, 704), word='fi'),
                    ]),
                  ], pos=(591, 704)),
                  OperatorNode(op=';', pos=(704, 705)),
                ]),
              ReservedwordNode(pos=(708, 710), word='fi'),
            ]),
          ], pos=(553, 710)),
          OperatorNode(op=';', pos=(710, 711)),
          CommandNode(pos=(714, 829), parts=[
            WordNode(pos=(714, 717), word='set'),
            WordNode(pos=(718, 720), word='--'),
            WordNode(pos=(721, 725), word='$@', parts=[
              ParameterNode(pos=(722, 724), value='@'),
            ]),
            WordNode(pos=(726, 829), word='$(ldd "$f" | awk \'    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   \')', parts=[
              CommandsubstitutionNode(command=
                PipelineNode(pos=(728, 828), parts=[
                  CommandNode(pos=(728, 736), parts=[
                    WordNode(pos=(728, 731), word='ldd'),
                    WordNode(pos=(732, 736), word='$f', parts=[
                      ParameterNode(pos=(733, 735), value='f'),
                    ]),
                  ]),
                  PipeNode(pipe='|', pos=(737, 738)),
                  CommandNode(pos=(739, 828), parts=[
                    WordNode(pos=(739, 742), word='awk'),
                    WordNode(pos=(743, 828), word='    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   '),
                  ]),
                ]), pos=(726, 829)),
            ]),
          ]),
          OperatorNode(op=';', pos=(829, 830)),
        ]),
      ReservedwordNode(pos=(832, 836), word='done'),
    ]),
  ], pos=(435, 836)),
  OperatorNode(op='&&', pos=(839, 841)),
  CommandNode(pos=(842, 886), parts=[
    WordNode(pos=(842, 848), word='chroot'),
    WordNode(pos=(849, 855), word='rootfs'),
    WordNode(pos=(856, 868), word='/bin/getconf'),
    WordNode(pos=(869, 886), word='_NPROCESSORS_ONLN'),
  ]),
  OperatorNode(op='&&', pos=(889, 891)),
  CommandNode(pos=(892, 933), parts=[
    WordNode(pos=(892, 898), word='chroot'),
    WordNode(pos=(899, 905), word='rootfs'),
    WordNode(pos=(906, 918), word='/bin/busybox'),
    WordNode(pos=(919, 928), word='--install'),
    WordNode(pos=(929, 933), word='/bin'),
  ]),
])


97) set -ex  && make -j "$(nproc)"   busybox  && ./busybox --help  && mkdir -p rootfs/bin  && ln -vL busybox rootfs/bin/   && ln -vL "$(which getconf)" rootfs/bin/getconf   && mkdir -p rootfs/etc  && cp /etc/nsswitch.conf rootfs/etc/  && mkdir -p rootfs/lib  && ln -sT lib rootfs/lib64  && set --   rootfs/bin/busybox   rootfs/bin/getconf   /lib/"$(gcc -print-multiarch)"/libnss*.so.*   /lib/"$(gcc -print-multiarch)"/libpthread*.so.*  && while [ "$#" -gt 0 ]; do   f="$1"; shift;   fn="$(basename "$f")";   if [ -e "rootfs/lib/$fn" ]; then continue; fi;   if [ "${f#rootfs/}" = "$f" ]; then    if [ "${fn#ld-}" = "$fn" ]; then     ln -vL "$f" "rootfs/lib/$fn";    else     cp -v "$f" "rootfs/lib/$fn";    fi;   fi;   set -- "$@" $(ldd "$f" | awk '    $1 ~ /^\// { print $1; next }    $2 == "=>" && $3 ~ /^\// { print $3; next }   ');  done   && chroot rootfs /bin/getconf _NPROCESSORS_ONLN   && chroot rootfs /bin/busybox --install /bin

ListNode(pos=(0, 933), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 40), parts=[
    WordNode(pos=(12, 16), word='make'),
    WordNode(pos=(17, 19), word='-j'),
    WordNode(pos=(20, 30), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(23, 28), parts=[
          WordNode(pos=(23, 28), word='nproc'),
        ]), pos=(21, 29)),
    ]),
    WordNode(pos=(33, 40), word='busybox'),
  ]),
  OperatorNode(op='&&', pos=(42, 44)),
  CommandNode(pos=(45, 61), parts=[
    WordNode(pos=(45, 54), word='./busybox'),
    WordNode(pos=(55, 61), word='--help'),
  ]),
  OperatorNode(op='&&', pos=(63, 65)),
  CommandNode(pos=(66, 85), parts=[
    WordNode(pos=(66, 71), word='mkdir'),
    WordNode(pos=(72, 74), word='-p'),
    WordNode(pos=(75, 85), word='rootfs/bin'),
  ]),
  OperatorNode(op='&&', pos=(87, 89)),
  CommandNode(pos=(90, 116), parts=[
    WordNode(pos=(90, 92), word='ln'),
    WordNode(pos=(93, 96), word='-vL'),
    WordNode(pos=(97, 104), word='busybox'),
    WordNode(pos=(105, 116), word='rootfs/bin/'),
  ]),
  OperatorNode(op='&&', pos=(119, 121)),
  CommandNode(pos=(122, 166), parts=[
    WordNode(pos=(122, 124), word='ln'),
    WordNode(pos=(125, 128), word='-vL'),
    WordNode(pos=(129, 147), word='$(which getconf)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(132, 145), parts=[
          WordNode(pos=(132, 137), word='which'),
          WordNode(pos=(138, 145), word='getconf'),
        ]), pos=(130, 146)),
    ]),
    WordNode(pos=(148, 166), word='rootfs/bin/getconf'),
  ]),
  OperatorNode(op='&&', pos=(169, 171)),
  CommandNode(pos=(172, 191), parts=[
    WordNode(pos=(172, 177), word='mkdir'),
    WordNode(pos=(178, 180), word='-p'),
    WordNode(pos=(181, 191), word='rootfs/etc'),
  ]),
  OperatorNode(op='&&', pos=(193, 195)),
  CommandNode(pos=(196, 229), parts=[
    WordNode(pos=(196, 198), word='cp'),
    WordNode(pos=(199, 217), word='/etc/nsswitch.conf'),
    WordNode(pos=(218, 229), word='rootfs/etc/'),
  ]),
  OperatorNode(op='&&', pos=(231, 233)),
  CommandNode(pos=(234, 253), parts=[
    WordNode(pos=(234, 239), word='mkdir'),
    WordNode(pos=(240, 242), word='-p'),
    WordNode(pos=(243, 253), word='rootfs/lib'),
  ]),
  OperatorNode(op='&&', pos=(255, 257)),
  CommandNode(pos=(258, 281), parts=[
    WordNode(pos=(258, 260), word='ln'),
    WordNode(pos=(261, 264), word='-sT'),
    WordNode(pos=(265, 268), word='lib'),
    WordNode(pos=(269, 281), word='rootfs/lib64'),
  ]),
  OperatorNode(op='&&', pos=(283, 285)),
  CommandNode(pos=(286, 430), parts=[
    WordNode(pos=(286, 289), word='set'),
    WordNode(pos=(290, 292), word='--'),
    WordNode(pos=(295, 313), word='rootfs/bin/busybox'),
    WordNode(pos=(316, 334), word='rootfs/bin/getconf'),
    WordNode(pos=(337, 380), word='/lib/$(gcc -print-multiarch)/libnss*.so.*', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(345, 365), parts=[
          WordNode(pos=(345, 348), word='gcc'),
          WordNode(pos=(349, 365), word='-print-multiarch'),
        ]), pos=(343, 366)),
    ]),
    WordNode(pos=(383, 430), word='/lib/$(gcc -print-multiarch)/libpthread*.so.*', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(391, 411), parts=[
          WordNode(pos=(391, 394), word='gcc'),
          WordNode(pos=(395, 411), word='-print-multiarch'),
        ]), pos=(389, 412)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(432, 434)),
  CompoundNode(list=[
    WhileNode(pos=(435, 836), parts=[
      ReservedwordNode(pos=(435, 440), word='while'),
      ListNode(pos=(441, 456), parts=[
          CommandNode(pos=(441, 455), parts=[
            WordNode(pos=(441, 442), word='['),
            WordNode(pos=(443, 447), word='$#', parts=[
              ParameterNode(pos=(444, 446), value='#'),
            ]),
            WordNode(pos=(448, 451), word='-gt'),
            WordNode(pos=(452, 453), word='0'),
            WordNode(pos=(454, 455), word=']'),
          ]),
          OperatorNode(op=';', pos=(455, 456)),
        ]),
      ReservedwordNode(pos=(457, 459), word='do'),
      ListNode(pos=(462, 830), parts=[
          CommandNode(pos=(462, 468), parts=[
            AssignmentNode(pos=(462, 468), word='f=$1', parts=[
              ParameterNode(pos=(465, 467), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(468, 469)),
          CommandNode(pos=(470, 475), parts=[
            WordNode(pos=(470, 475), word='shift'),
          ]),
          OperatorNode(op=';', pos=(475, 476)),
          CommandNode(pos=(479, 500), parts=[
            AssignmentNode(pos=(479, 500), word='fn=$(basename "$f")', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(485, 498), parts=[
                  WordNode(pos=(485, 493), word='basename'),
                  WordNode(pos=(494, 498), word='$f', parts=[
                    ParameterNode(pos=(495, 497), value='f'),
                  ]),
                ]), pos=(483, 499)),
            ]),
          ]),
          OperatorNode(op=';', pos=(500, 501)),
          CompoundNode(list=[
            IfNode(pos=(504, 549), parts=[
              ReservedwordNode(pos=(504, 506), word='if'),
              ListNode(pos=(507, 531), parts=[
                  CommandNode(pos=(507, 530), parts=[
                    WordNode(pos=(507, 508), word='['),
                    WordNode(pos=(509, 511), word='-e'),
                    WordNode(pos=(512, 528), word='rootfs/lib/$fn', parts=[
                      ParameterNode(pos=(524, 527), value='fn'),
                    ]),
                    WordNode(pos=(529, 530), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(530, 531)),
                ]),
              ReservedwordNode(pos=(532, 536), word='then'),
              ListNode(pos=(537, 546), parts=[
                  CommandNode(pos=(537, 545), parts=[
                    WordNode(pos=(537, 545), word='continue'),
                  ]),
                  OperatorNode(op=';', pos=(545, 546)),
                ]),
              ReservedwordNode(pos=(547, 549), word='fi'),
            ]),
          ], pos=(504, 549)),
          OperatorNode(op=';', pos=(549, 550)),
          CompoundNode(list=[
            IfNode(pos=(553, 710), parts=[
              ReservedwordNode(pos=(553, 555), word='if'),
              ListNode(pos=(556, 582), parts=[
                  CommandNode(pos=(556, 581), parts=[
                    WordNode(pos=(556, 557), word='['),
                    WordNode(pos=(558, 572), word='${f#rootfs/}', parts=[
                      ParameterNode(pos=(559, 571), value='f#rootfs/'),
                    ]),
                    WordNode(pos=(573, 574), word='='),
                    WordNode(pos=(575, 579), word='$f', parts=[
                      ParameterNode(pos=(576, 578), value='f'),
                    ]),
                    WordNode(pos=(580, 581), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(581, 582)),
                ]),
              ReservedwordNode(pos=(583, 587), word='then'),
              ListNode(pos=(591, 705), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(591, 704), parts=[
                      ReservedwordNode(pos=(591, 593), word='if'),
                      ListNode(pos=(594, 618), parts=[
                          CommandNode(pos=(594, 617), parts=[
                            WordNode(pos=(594, 595), word='['),
                            WordNode(pos=(596, 607), word='${fn#ld-}', parts=[
                              ParameterNode(pos=(597, 606), value='fn#ld-'),
                            ]),
                            WordNode(pos=(608, 609), word='='),
                            WordNode(pos=(610, 615), word='$fn', parts=[
                              ParameterNode(pos=(611, 614), value='fn'),
                            ]),
                            WordNode(pos=(616, 617), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(617, 618)),
                        ]),
                      ReservedwordNode(pos=(619, 623), word='then'),
                      ListNode(pos=(628, 657), parts=[
                          CommandNode(pos=(628, 656), parts=[
                            WordNode(pos=(628, 630), word='ln'),
                            WordNode(pos=(631, 634), word='-vL'),
                            WordNode(pos=(635, 639), word='$f', parts=[
                              ParameterNode(pos=(636, 638), value='f'),
                            ]),
                            WordNode(pos=(640, 656), word='rootfs/lib/$fn', parts=[
                              ParameterNode(pos=(652, 655), value='fn'),
                            ]),
                          ]),
                          OperatorNode(op=';', pos=(656, 657)),
                        ]),
                      ReservedwordNode(pos=(661, 665), word='else'),
                      ListNode(pos=(670, 698), parts=[
                          CommandNode(pos=(670, 697), parts=[
                            WordNode(pos=(670, 672), word='cp'),
                            WordNode(pos=(673, 675), word='-v'),
                            WordNode(pos=(676, 680), word='$f', parts=[
                              ParameterNode(pos=(677, 679), value='f'),
                            ]),
                            WordNode(pos=(681, 697), word='rootfs/lib/$fn', parts=[
                              ParameterNode(pos=(693, 696), value='fn'),
                            ]),
                          ]),
                          OperatorNode(op=';', pos=(697, 698)),
                        ]),
                      ReservedwordNode(pos=(702, 704), word='fi'),
                    ]),
                  ], pos=(591, 704)),
                  OperatorNode(op=';', pos=(704, 705)),
                ]),
              ReservedwordNode(pos=(708, 710), word='fi'),
            ]),
          ], pos=(553, 710)),
          OperatorNode(op=';', pos=(710, 711)),
          CommandNode(pos=(714, 829), parts=[
            WordNode(pos=(714, 717), word='set'),
            WordNode(pos=(718, 720), word='--'),
            WordNode(pos=(721, 725), word='$@', parts=[
              ParameterNode(pos=(722, 724), value='@'),
            ]),
            WordNode(pos=(726, 829), word='$(ldd "$f" | awk \'    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   \')', parts=[
              CommandsubstitutionNode(command=
                PipelineNode(pos=(728, 828), parts=[
                  CommandNode(pos=(728, 736), parts=[
                    WordNode(pos=(728, 731), word='ldd'),
                    WordNode(pos=(732, 736), word='$f', parts=[
                      ParameterNode(pos=(733, 735), value='f'),
                    ]),
                  ]),
                  PipeNode(pipe='|', pos=(737, 738)),
                  CommandNode(pos=(739, 828), parts=[
                    WordNode(pos=(739, 742), word='awk'),
                    WordNode(pos=(743, 828), word='    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   '),
                  ]),
                ]), pos=(726, 829)),
            ]),
          ]),
          OperatorNode(op=';', pos=(829, 830)),
        ]),
      ReservedwordNode(pos=(832, 836), word='done'),
    ]),
  ], pos=(435, 836)),
  OperatorNode(op='&&', pos=(839, 841)),
  CommandNode(pos=(842, 886), parts=[
    WordNode(pos=(842, 848), word='chroot'),
    WordNode(pos=(849, 855), word='rootfs'),
    WordNode(pos=(856, 868), word='/bin/getconf'),
    WordNode(pos=(869, 886), word='_NPROCESSORS_ONLN'),
  ]),
  OperatorNode(op='&&', pos=(889, 891)),
  CommandNode(pos=(892, 933), parts=[
    WordNode(pos=(892, 898), word='chroot'),
    WordNode(pos=(899, 905), word='rootfs'),
    WordNode(pos=(906, 918), word='/bin/busybox'),
    WordNode(pos=(919, 928), word='--install'),
    WordNode(pos=(929, 933), word='/bin'),
  ]),
])


98) set -ex  && make -j "$(nproc)"   busybox  && ./busybox --help  && mkdir -p rootfs/bin  && ln -vL busybox rootfs/bin/   && ln -vL "$(which getconf)" rootfs/bin/getconf   && mkdir -p rootfs/etc  && cp /etc/nsswitch.conf rootfs/etc/  && mkdir -p rootfs/lib  && ln -sT lib rootfs/lib64  && set --   rootfs/bin/busybox   rootfs/bin/getconf   /lib/"$(gcc -print-multiarch)"/libnss*.so.*   /lib/"$(gcc -print-multiarch)"/libpthread*.so.*  && while [ "$#" -gt 0 ]; do   f="$1"; shift;   fn="$(basename "$f")";   if [ -e "rootfs/lib/$fn" ]; then continue; fi;   if [ "${f#rootfs/}" = "$f" ]; then    if [ "${fn#ld-}" = "$fn" ]; then     ln -vL "$f" "rootfs/lib/$fn";    else     cp -v "$f" "rootfs/lib/$fn";    fi;   fi;   set -- "$@" $(ldd "$f" | awk '    $1 ~ /^\// { print $1; next }    $2 == "=>" && $3 ~ /^\// { print $3; next }   ');  done   && chroot rootfs /bin/getconf _NPROCESSORS_ONLN   && chroot rootfs /bin/busybox --install /bin

ListNode(pos=(0, 933), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 40), parts=[
    WordNode(pos=(12, 16), word='make'),
    WordNode(pos=(17, 19), word='-j'),
    WordNode(pos=(20, 30), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(23, 28), parts=[
          WordNode(pos=(23, 28), word='nproc'),
        ]), pos=(21, 29)),
    ]),
    WordNode(pos=(33, 40), word='busybox'),
  ]),
  OperatorNode(op='&&', pos=(42, 44)),
  CommandNode(pos=(45, 61), parts=[
    WordNode(pos=(45, 54), word='./busybox'),
    WordNode(pos=(55, 61), word='--help'),
  ]),
  OperatorNode(op='&&', pos=(63, 65)),
  CommandNode(pos=(66, 85), parts=[
    WordNode(pos=(66, 71), word='mkdir'),
    WordNode(pos=(72, 74), word='-p'),
    WordNode(pos=(75, 85), word='rootfs/bin'),
  ]),
  OperatorNode(op='&&', pos=(87, 89)),
  CommandNode(pos=(90, 116), parts=[
    WordNode(pos=(90, 92), word='ln'),
    WordNode(pos=(93, 96), word='-vL'),
    WordNode(pos=(97, 104), word='busybox'),
    WordNode(pos=(105, 116), word='rootfs/bin/'),
  ]),
  OperatorNode(op='&&', pos=(119, 121)),
  CommandNode(pos=(122, 166), parts=[
    WordNode(pos=(122, 124), word='ln'),
    WordNode(pos=(125, 128), word='-vL'),
    WordNode(pos=(129, 147), word='$(which getconf)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(132, 145), parts=[
          WordNode(pos=(132, 137), word='which'),
          WordNode(pos=(138, 145), word='getconf'),
        ]), pos=(130, 146)),
    ]),
    WordNode(pos=(148, 166), word='rootfs/bin/getconf'),
  ]),
  OperatorNode(op='&&', pos=(169, 171)),
  CommandNode(pos=(172, 191), parts=[
    WordNode(pos=(172, 177), word='mkdir'),
    WordNode(pos=(178, 180), word='-p'),
    WordNode(pos=(181, 191), word='rootfs/etc'),
  ]),
  OperatorNode(op='&&', pos=(193, 195)),
  CommandNode(pos=(196, 229), parts=[
    WordNode(pos=(196, 198), word='cp'),
    WordNode(pos=(199, 217), word='/etc/nsswitch.conf'),
    WordNode(pos=(218, 229), word='rootfs/etc/'),
  ]),
  OperatorNode(op='&&', pos=(231, 233)),
  CommandNode(pos=(234, 253), parts=[
    WordNode(pos=(234, 239), word='mkdir'),
    WordNode(pos=(240, 242), word='-p'),
    WordNode(pos=(243, 253), word='rootfs/lib'),
  ]),
  OperatorNode(op='&&', pos=(255, 257)),
  CommandNode(pos=(258, 281), parts=[
    WordNode(pos=(258, 260), word='ln'),
    WordNode(pos=(261, 264), word='-sT'),
    WordNode(pos=(265, 268), word='lib'),
    WordNode(pos=(269, 281), word='rootfs/lib64'),
  ]),
  OperatorNode(op='&&', pos=(283, 285)),
  CommandNode(pos=(286, 430), parts=[
    WordNode(pos=(286, 289), word='set'),
    WordNode(pos=(290, 292), word='--'),
    WordNode(pos=(295, 313), word='rootfs/bin/busybox'),
    WordNode(pos=(316, 334), word='rootfs/bin/getconf'),
    WordNode(pos=(337, 380), word='/lib/$(gcc -print-multiarch)/libnss*.so.*', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(345, 365), parts=[
          WordNode(pos=(345, 348), word='gcc'),
          WordNode(pos=(349, 365), word='-print-multiarch'),
        ]), pos=(343, 366)),
    ]),
    WordNode(pos=(383, 430), word='/lib/$(gcc -print-multiarch)/libpthread*.so.*', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(391, 411), parts=[
          WordNode(pos=(391, 394), word='gcc'),
          WordNode(pos=(395, 411), word='-print-multiarch'),
        ]), pos=(389, 412)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(432, 434)),
  CompoundNode(list=[
    WhileNode(pos=(435, 836), parts=[
      ReservedwordNode(pos=(435, 440), word='while'),
      ListNode(pos=(441, 456), parts=[
          CommandNode(pos=(441, 455), parts=[
            WordNode(pos=(441, 442), word='['),
            WordNode(pos=(443, 447), word='$#', parts=[
              ParameterNode(pos=(444, 446), value='#'),
            ]),
            WordNode(pos=(448, 451), word='-gt'),
            WordNode(pos=(452, 453), word='0'),
            WordNode(pos=(454, 455), word=']'),
          ]),
          OperatorNode(op=';', pos=(455, 456)),
        ]),
      ReservedwordNode(pos=(457, 459), word='do'),
      ListNode(pos=(462, 830), parts=[
          CommandNode(pos=(462, 468), parts=[
            AssignmentNode(pos=(462, 468), word='f=$1', parts=[
              ParameterNode(pos=(465, 467), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(468, 469)),
          CommandNode(pos=(470, 475), parts=[
            WordNode(pos=(470, 475), word='shift'),
          ]),
          OperatorNode(op=';', pos=(475, 476)),
          CommandNode(pos=(479, 500), parts=[
            AssignmentNode(pos=(479, 500), word='fn=$(basename "$f")', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(485, 498), parts=[
                  WordNode(pos=(485, 493), word='basename'),
                  WordNode(pos=(494, 498), word='$f', parts=[
                    ParameterNode(pos=(495, 497), value='f'),
                  ]),
                ]), pos=(483, 499)),
            ]),
          ]),
          OperatorNode(op=';', pos=(500, 501)),
          CompoundNode(list=[
            IfNode(pos=(504, 549), parts=[
              ReservedwordNode(pos=(504, 506), word='if'),
              ListNode(pos=(507, 531), parts=[
                  CommandNode(pos=(507, 530), parts=[
                    WordNode(pos=(507, 508), word='['),
                    WordNode(pos=(509, 511), word='-e'),
                    WordNode(pos=(512, 528), word='rootfs/lib/$fn', parts=[
                      ParameterNode(pos=(524, 527), value='fn'),
                    ]),
                    WordNode(pos=(529, 530), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(530, 531)),
                ]),
              ReservedwordNode(pos=(532, 536), word='then'),
              ListNode(pos=(537, 546), parts=[
                  CommandNode(pos=(537, 545), parts=[
                    WordNode(pos=(537, 545), word='continue'),
                  ]),
                  OperatorNode(op=';', pos=(545, 546)),
                ]),
              ReservedwordNode(pos=(547, 549), word='fi'),
            ]),
          ], pos=(504, 549)),
          OperatorNode(op=';', pos=(549, 550)),
          CompoundNode(list=[
            IfNode(pos=(553, 710), parts=[
              ReservedwordNode(pos=(553, 555), word='if'),
              ListNode(pos=(556, 582), parts=[
                  CommandNode(pos=(556, 581), parts=[
                    WordNode(pos=(556, 557), word='['),
                    WordNode(pos=(558, 572), word='${f#rootfs/}', parts=[
                      ParameterNode(pos=(559, 571), value='f#rootfs/'),
                    ]),
                    WordNode(pos=(573, 574), word='='),
                    WordNode(pos=(575, 579), word='$f', parts=[
                      ParameterNode(pos=(576, 578), value='f'),
                    ]),
                    WordNode(pos=(580, 581), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(581, 582)),
                ]),
              ReservedwordNode(pos=(583, 587), word='then'),
              ListNode(pos=(591, 705), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(591, 704), parts=[
                      ReservedwordNode(pos=(591, 593), word='if'),
                      ListNode(pos=(594, 618), parts=[
                          CommandNode(pos=(594, 617), parts=[
                            WordNode(pos=(594, 595), word='['),
                            WordNode(pos=(596, 607), word='${fn#ld-}', parts=[
                              ParameterNode(pos=(597, 606), value='fn#ld-'),
                            ]),
                            WordNode(pos=(608, 609), word='='),
                            WordNode(pos=(610, 615), word='$fn', parts=[
                              ParameterNode(pos=(611, 614), value='fn'),
                            ]),
                            WordNode(pos=(616, 617), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(617, 618)),
                        ]),
                      ReservedwordNode(pos=(619, 623), word='then'),
                      ListNode(pos=(628, 657), parts=[
                          CommandNode(pos=(628, 656), parts=[
                            WordNode(pos=(628, 630), word='ln'),
                            WordNode(pos=(631, 634), word='-vL'),
                            WordNode(pos=(635, 639), word='$f', parts=[
                              ParameterNode(pos=(636, 638), value='f'),
                            ]),
                            WordNode(pos=(640, 656), word='rootfs/lib/$fn', parts=[
                              ParameterNode(pos=(652, 655), value='fn'),
                            ]),
                          ]),
                          OperatorNode(op=';', pos=(656, 657)),
                        ]),
                      ReservedwordNode(pos=(661, 665), word='else'),
                      ListNode(pos=(670, 698), parts=[
                          CommandNode(pos=(670, 697), parts=[
                            WordNode(pos=(670, 672), word='cp'),
                            WordNode(pos=(673, 675), word='-v'),
                            WordNode(pos=(676, 680), word='$f', parts=[
                              ParameterNode(pos=(677, 679), value='f'),
                            ]),
                            WordNode(pos=(681, 697), word='rootfs/lib/$fn', parts=[
                              ParameterNode(pos=(693, 696), value='fn'),
                            ]),
                          ]),
                          OperatorNode(op=';', pos=(697, 698)),
                        ]),
                      ReservedwordNode(pos=(702, 704), word='fi'),
                    ]),
                  ], pos=(591, 704)),
                  OperatorNode(op=';', pos=(704, 705)),
                ]),
              ReservedwordNode(pos=(708, 710), word='fi'),
            ]),
          ], pos=(553, 710)),
          OperatorNode(op=';', pos=(710, 711)),
          CommandNode(pos=(714, 829), parts=[
            WordNode(pos=(714, 717), word='set'),
            WordNode(pos=(718, 720), word='--'),
            WordNode(pos=(721, 725), word='$@', parts=[
              ParameterNode(pos=(722, 724), value='@'),
            ]),
            WordNode(pos=(726, 829), word='$(ldd "$f" | awk \'    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   \')', parts=[
              CommandsubstitutionNode(command=
                PipelineNode(pos=(728, 828), parts=[
                  CommandNode(pos=(728, 736), parts=[
                    WordNode(pos=(728, 731), word='ldd'),
                    WordNode(pos=(732, 736), word='$f', parts=[
                      ParameterNode(pos=(733, 735), value='f'),
                    ]),
                  ]),
                  PipeNode(pipe='|', pos=(737, 738)),
                  CommandNode(pos=(739, 828), parts=[
                    WordNode(pos=(739, 742), word='awk'),
                    WordNode(pos=(743, 828), word='    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   '),
                  ]),
                ]), pos=(726, 829)),
            ]),
          ]),
          OperatorNode(op=';', pos=(829, 830)),
        ]),
      ReservedwordNode(pos=(832, 836), word='done'),
    ]),
  ], pos=(435, 836)),
  OperatorNode(op='&&', pos=(839, 841)),
  CommandNode(pos=(842, 886), parts=[
    WordNode(pos=(842, 848), word='chroot'),
    WordNode(pos=(849, 855), word='rootfs'),
    WordNode(pos=(856, 868), word='/bin/getconf'),
    WordNode(pos=(869, 886), word='_NPROCESSORS_ONLN'),
  ]),
  OperatorNode(op='&&', pos=(889, 891)),
  CommandNode(pos=(892, 933), parts=[
    WordNode(pos=(892, 898), word='chroot'),
    WordNode(pos=(899, 905), word='rootfs'),
    WordNode(pos=(906, 918), word='/bin/busybox'),
    WordNode(pos=(919, 928), word='--install'),
    WordNode(pos=(929, 933), word='/bin'),
  ]),
])


99) set -ex  && cd rootfs  && for userHome in $(awk -F ':' '{ print $3 ":" $4 "=" $6 }' etc/passwd); do   user="${userHome%%=*}";   home="${userHome#*=}";   home="./${home#/}";   if [ ! -d "$home" ]; then    mkdir -p "$home";    chown "$user" "$home";    chmod 755 "$home";   fi;  done

ListNode(pos=(0, 281), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 21), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 21), word='rootfs'),
  ]),
  OperatorNode(op='&&', pos=(23, 25)),
  CompoundNode(list=[
    ForNode(pos=(26, 281), parts=[
      ReservedwordNode(pos=(26, 29), word='for'),
      WordNode(pos=(30, 38), word='userHome'),
      ReservedwordNode(pos=(39, 41), word='in'),
      WordNode(pos=(42, 95), word='$(awk -F \':\' \'{ print $3 ":" $4 "=" $6 }\' etc/passwd)', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(44, 94), parts=[
            WordNode(pos=(44, 47), word='awk'),
            WordNode(pos=(48, 50), word='-F'),
            WordNode(pos=(51, 54), word=':'),
            WordNode(pos=(55, 83), word='{ print $3 ":" $4 "=" $6 }'),
            WordNode(pos=(84, 94), word='etc/passwd'),
          ]), pos=(42, 95)),
      ]),
      ReservedwordNode(pos=(95, 96), word=';'),
      ReservedwordNode(pos=(97, 99), word='do'),
      ListNode(pos=(102, 275), parts=[
          CommandNode(pos=(102, 124), parts=[
            AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
              ParameterNode(pos=(108, 123), value='userHome%%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(124, 125)),
          CommandNode(pos=(128, 149), parts=[
            AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
              ParameterNode(pos=(134, 148), value='userHome#*='),
            ]),
          ]),
          OperatorNode(op=';', pos=(149, 150)),
          CommandNode(pos=(153, 171), parts=[
            AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
              ParameterNode(pos=(161, 170), value='home#/'),
            ]),
          ]),
          OperatorNode(op=';', pos=(171, 172)),
          CompoundNode(list=[
            IfNode(pos=(175, 274), parts=[
              ReservedwordNode(pos=(175, 177), word='if'),
              ListNode(pos=(178, 195), parts=[
                  CommandNode(pos=(178, 194), parts=[
                    WordNode(pos=(178, 179), word='['),
                    WordNode(pos=(180, 181), word='!'),
                    WordNode(pos=(182, 184), word='-d'),
                    WordNode(pos=(185, 192), word='$home', parts=[
                      ParameterNode(pos=(186, 191), value='home'),
                    ]),
                    WordNode(pos=(193, 194), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(194, 195)),
                ]),
              ReservedwordNode(pos=(196, 200), word='then'),
              ListNode(pos=(204, 269), parts=[
                  CommandNode(pos=(204, 220), parts=[
                    WordNode(pos=(204, 209), word='mkdir'),
                    WordNode(pos=(210, 212), word='-p'),
                    WordNode(pos=(213, 220), word='$home', parts=[
                      ParameterNode(pos=(214, 219), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(220, 221)),
                  CommandNode(pos=(225, 246), parts=[
                    WordNode(pos=(225, 230), word='chown'),
                    WordNode(pos=(231, 238), word='$user', parts=[
                      ParameterNode(pos=(232, 237), value='user'),
                    ]),
                    WordNode(pos=(239, 246), word='$home', parts=[
                      ParameterNode(pos=(240, 245), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(246, 247)),
                  CommandNode(pos=(251, 268), parts=[
                    WordNode(pos=(251, 256), word='chmod'),
                    WordNode(pos=(257, 260), word='755'),
                    WordNode(pos=(261, 268), word='$home', parts=[
                      ParameterNode(pos=(262, 267), value='home'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(268, 269)),
                ]),
              ReservedwordNode(pos=(272, 274), word='fi'),
            ]),
          ], pos=(175, 274)),
          OperatorNode(op=';', pos=(274, 275)),
        ]),
      ReservedwordNode(pos=(277, 281), word='done'),
    ]),
  ], pos=(26, 281)),
])


100) set -ex;   %%ARCH-CASE%%;   wget -O pypy.tar.bz2 "https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2" --progress=dot:giga;  echo "$sha256 *pypy.tar.bz2" | sha256sum -c;  tar -xjC /usr/local --strip-components=1 -f pypy.tar.bz2;  find /usr/local/lib-python -depth -type d -a \( -name test -o -name tests \) -exec rm -rf '{}' +;  rm pypy.tar.bz2;   %%CMD%% --version;   if [ -f /usr/local/lib_pypy/_ssl_build.py ]; then   cd /usr/local/lib_pypy;   %%CMD%% _ssl_build.py;  fi

ListNode(pos=(0, 508), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 24), parts=[
    WordNode(pos=(11, 24), word='%%ARCH-CASE%%'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CommandNode(pos=(28, 157), parts=[
    WordNode(pos=(28, 32), word='wget'),
    WordNode(pos=(33, 35), word='-O'),
    WordNode(pos=(36, 48), word='pypy.tar.bz2'),
    WordNode(pos=(49, 137), word='https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2', parts=[
      ParameterNode(pos=(101, 116), value='PYPY_VERSION'),
      ParameterNode(pos=(117, 128), value='pypyArch'),
    ]),
    WordNode(pos=(138, 157), word='--progress=dot:giga'),
  ]),
  OperatorNode(op=';', pos=(157, 158)),
  PipelineNode(pos=(160, 203), parts=[
    CommandNode(pos=(160, 188), parts=[
      WordNode(pos=(160, 164), word='echo'),
      WordNode(pos=(165, 188), word='$sha256 *pypy.tar.bz2', parts=[
        ParameterNode(pos=(166, 173), value='sha256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(189, 190)),
    CommandNode(pos=(191, 203), parts=[
      WordNode(pos=(191, 200), word='sha256sum'),
      WordNode(pos=(201, 203), word='-c'),
    ]),
  ]),
  OperatorNode(op=';', pos=(203, 204)),
  CommandNode(pos=(206, 262), parts=[
    WordNode(pos=(206, 209), word='tar'),
    WordNode(pos=(210, 214), word='-xjC'),
    WordNode(pos=(215, 225), word='/usr/local'),
    WordNode(pos=(226, 246), word='--strip-components=1'),
    WordNode(pos=(247, 249), word='-f'),
    WordNode(pos=(250, 262), word='pypy.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(262, 263)),
  CommandNode(pos=(265, 361), parts=[
    WordNode(pos=(265, 269), word='find'),
    WordNode(pos=(270, 291), word='/usr/local/lib-python'),
    WordNode(pos=(292, 298), word='-depth'),
    WordNode(pos=(299, 304), word='-type'),
    WordNode(pos=(305, 306), word='d'),
    WordNode(pos=(307, 309), word='-a'),
    WordNode(pos=(310, 312), word='('),
    WordNode(pos=(313, 318), word='-name'),
    WordNode(pos=(319, 323), word='test'),
    WordNode(pos=(324, 326), word='-o'),
    WordNode(pos=(327, 332), word='-name'),
    WordNode(pos=(333, 338), word='tests'),
    WordNode(pos=(339, 341), word=')'),
    WordNode(pos=(342, 347), word='-exec'),
    WordNode(pos=(348, 350), word='rm'),
    WordNode(pos=(351, 354), word='-rf'),
    WordNode(pos=(355, 359), word='{}'),
    WordNode(pos=(360, 361), word='+'),
  ]),
  OperatorNode(op=';', pos=(361, 362)),
  CommandNode(pos=(364, 379), parts=[
    WordNode(pos=(364, 366), word='rm'),
    WordNode(pos=(367, 379), word='pypy.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(379, 380)),
  CommandNode(pos=(383, 400), parts=[
    WordNode(pos=(383, 390), word='%%CMD%%'),
    WordNode(pos=(391, 400), word='--version'),
  ]),
  OperatorNode(op=';', pos=(400, 401)),
  CompoundNode(list=[
    IfNode(pos=(404, 508), parts=[
      ReservedwordNode(pos=(404, 406), word='if'),
      ListNode(pos=(407, 448), parts=[
          CommandNode(pos=(407, 447), parts=[
            WordNode(pos=(407, 408), word='['),
            WordNode(pos=(409, 411), word='-f'),
            WordNode(pos=(412, 445), word='/usr/local/lib_pypy/_ssl_build.py'),
            WordNode(pos=(446, 447), word=']'),
          ]),
          OperatorNode(op=';', pos=(447, 448)),
        ]),
      ReservedwordNode(pos=(449, 453), word='then'),
      ListNode(pos=(456, 504), parts=[
          CommandNode(pos=(456, 478), parts=[
            WordNode(pos=(456, 458), word='cd'),
            WordNode(pos=(459, 478), word='/usr/local/lib_pypy'),
          ]),
          OperatorNode(op=';', pos=(478, 479)),
          CommandNode(pos=(482, 503), parts=[
            WordNode(pos=(482, 489), word='%%CMD%%'),
            WordNode(pos=(490, 503), word='_ssl_build.py'),
          ]),
          OperatorNode(op=';', pos=(503, 504)),
        ]),
      ReservedwordNode(pos=(506, 508), word='fi'),
    ]),
  ], pos=(404, 508)),
])


101) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


102) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


103) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


104) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


105) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


106) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


107) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


108) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


109) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


110) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


111) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


112) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


113) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


114) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


115) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


116) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


117) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


118) set -ex  && cd /usr/local/etc  && if [ -d php-fpm.d ]; then   sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;   cp php-fpm.d/www.conf.default php-fpm.d/www.conf;  else   mkdir php-fpm.d;   cp php-fpm.conf.default php-fpm.d/www.conf;   {    echo '[global]';    echo 'include=etc/php-fpm.d/*.conf';   } | tee php-fpm.conf;  fi  && {   echo '[global]';   echo 'error_log = /proc/self/fd/2';   echo; echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'; echo 'log_limit = 8192';   echo;   echo '[www]';   echo '; if we send this to /proc/self/fd/1, it never appears';   echo 'access.log = /proc/self/fd/2';   echo;   echo 'clear_env = no';   echo;   echo '; Ensure worker stdout and stderr are sent to the main error log.';   echo 'catch_workers_output = yes';   echo 'decorate_workers_output = no';  } | tee php-fpm.d/docker.conf  && {   echo '[global]';   echo 'daemonize = no';   echo;   echo '[www]';   echo 'listen = 9000';  } | tee php-fpm.d/zz-docker.conf

ListNode(pos=(0, 1008), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 29), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 29), word='/usr/local/etc'),
  ]),
  OperatorNode(op='&&', pos=(31, 33)),
  CompoundNode(list=[
    IfNode(pos=(34, 348), parts=[
      ReservedwordNode(pos=(34, 36), word='if'),
      ListNode(pos=(37, 54), parts=[
          CommandNode(pos=(37, 53), parts=[
            WordNode(pos=(37, 38), word='['),
            WordNode(pos=(39, 41), word='-d'),
            WordNode(pos=(42, 51), word='php-fpm.d'),
            WordNode(pos=(52, 53), word=']'),
          ]),
          OperatorNode(op=';', pos=(53, 54)),
        ]),
      ReservedwordNode(pos=(55, 59), word='then'),
      ListNode(pos=(62, 185), parts=[
          PipelineNode(pos=(62, 132), parts=[
            CommandNode(pos=(62, 101), parts=[
              WordNode(pos=(62, 65), word='sed'),
              WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
              WordNode(pos=(81, 101), word='php-fpm.conf.default'),
            ]),
            PipeNode(pipe='|', pos=(102, 103)),
            CommandNode(pos=(104, 132), parts=[
              WordNode(pos=(104, 107), word='tee'),
              WordNode(pos=(108, 120), word='php-fpm.conf'),
              RedirectNode(output=
                WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(132, 133)),
          CommandNode(pos=(136, 184), parts=[
            WordNode(pos=(136, 138), word='cp'),
            WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
            WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(184, 185)),
        ]),
      ReservedwordNode(pos=(187, 191), word='else'),
      ListNode(pos=(194, 344), parts=[
          CommandNode(pos=(194, 209), parts=[
            WordNode(pos=(194, 199), word='mkdir'),
            WordNode(pos=(200, 209), word='php-fpm.d'),
          ]),
          OperatorNode(op=';', pos=(209, 210)),
          CommandNode(pos=(213, 255), parts=[
            WordNode(pos=(213, 215), word='cp'),
            WordNode(pos=(216, 236), word='php-fpm.conf.default'),
            WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(255, 256)),
          PipelineNode(pos=(259, 343), parts=[
            CompoundNode(list=[
              ReservedwordNode(pos=(259, 260), word='{'),
              ListNode(pos=(264, 320), parts=[
                  CommandNode(pos=(264, 279), parts=[
                    WordNode(pos=(264, 268), word='echo'),
                    WordNode(pos=(269, 279), word='[global]'),
                  ]),
                  OperatorNode(op=';', pos=(279, 280)),
                  CommandNode(pos=(284, 319), parts=[
                    WordNode(pos=(284, 288), word='echo'),
                    WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
                  ]),
                  OperatorNode(op=';', pos=(319, 320)),
                ]),
              ReservedwordNode(pos=(323, 324), word='}'),
            ], pos=(259, 324)),
            PipeNode(pipe='|', pos=(325, 326)),
            CommandNode(pos=(327, 343), parts=[
              WordNode(pos=(327, 330), word='tee'),
              WordNode(pos=(331, 343), word='php-fpm.conf'),
            ]),
          ]),
          OperatorNode(op=';', pos=(343, 344)),
        ]),
      ReservedwordNode(pos=(346, 348), word='fi'),
    ]),
  ], pos=(34, 348)),
  OperatorNode(op='&&', pos=(350, 352)),
  PipelineNode(pos=(353, 876), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(353, 354), word='{'),
      ListNode(pos=(357, 845), parts=[
          CommandNode(pos=(357, 372), parts=[
            WordNode(pos=(357, 361), word='echo'),
            WordNode(pos=(362, 372), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(372, 373)),
          CommandNode(pos=(376, 410), parts=[
            WordNode(pos=(376, 380), word='echo'),
            WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(410, 411)),
          CommandNode(pos=(414, 418), parts=[
            WordNode(pos=(414, 418), word='echo'),
          ]),
          OperatorNode(op=';', pos=(418, 419)),
          CommandNode(pos=(420, 498), parts=[
            WordNode(pos=(420, 424), word='echo'),
            WordNode(pos=(425, 498), word='; https://github.com/docker-library/php/pull/725#issuecomment-443540114'),
          ]),
          OperatorNode(op=';', pos=(498, 499)),
          CommandNode(pos=(500, 523), parts=[
            WordNode(pos=(500, 504), word='echo'),
            WordNode(pos=(505, 523), word='log_limit = 8192'),
          ]),
          OperatorNode(op=';', pos=(523, 524)),
          CommandNode(pos=(527, 531), parts=[
            WordNode(pos=(527, 531), word='echo'),
          ]),
          OperatorNode(op=';', pos=(531, 532)),
          CommandNode(pos=(535, 547), parts=[
            WordNode(pos=(535, 539), word='echo'),
            WordNode(pos=(540, 547), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(547, 548)),
          CommandNode(pos=(551, 612), parts=[
            WordNode(pos=(551, 555), word='echo'),
            WordNode(pos=(556, 612), word='; if we send this to /proc/self/fd/1, it never appears'),
          ]),
          OperatorNode(op=';', pos=(612, 613)),
          CommandNode(pos=(616, 651), parts=[
            WordNode(pos=(616, 620), word='echo'),
            WordNode(pos=(621, 651), word='access.log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(651, 652)),
          CommandNode(pos=(655, 659), parts=[
            WordNode(pos=(655, 659), word='echo'),
          ]),
          OperatorNode(op=';', pos=(659, 660)),
          CommandNode(pos=(663, 684), parts=[
            WordNode(pos=(663, 667), word='echo'),
            WordNode(pos=(668, 684), word='clear_env = no'),
          ]),
          OperatorNode(op=';', pos=(684, 685)),
          CommandNode(pos=(688, 692), parts=[
            WordNode(pos=(688, 692), word='echo'),
          ]),
          OperatorNode(op=';', pos=(692, 693)),
          CommandNode(pos=(696, 768), parts=[
            WordNode(pos=(696, 700), word='echo'),
            WordNode(pos=(701, 768), word='; Ensure worker stdout and stderr are sent to the main error log.'),
          ]),
          OperatorNode(op=';', pos=(768, 769)),
          CommandNode(pos=(772, 805), parts=[
            WordNode(pos=(772, 776), word='echo'),
            WordNode(pos=(777, 805), word='catch_workers_output = yes'),
          ]),
          OperatorNode(op=';', pos=(805, 806)),
          CommandNode(pos=(809, 844), parts=[
            WordNode(pos=(809, 813), word='echo'),
            WordNode(pos=(814, 844), word='decorate_workers_output = no'),
          ]),
          OperatorNode(op=';', pos=(844, 845)),
        ]),
      ReservedwordNode(pos=(847, 848), word='}'),
    ], pos=(353, 848)),
    PipeNode(pipe='|', pos=(849, 850)),
    CommandNode(pos=(851, 876), parts=[
      WordNode(pos=(851, 854), word='tee'),
      WordNode(pos=(855, 876), word='php-fpm.d/docker.conf'),
    ]),
  ]),
  OperatorNode(op='&&', pos=(878, 880)),
  PipelineNode(pos=(881, 1008), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(881, 882), word='{'),
      ListNode(pos=(885, 974), parts=[
          CommandNode(pos=(885, 900), parts=[
            WordNode(pos=(885, 889), word='echo'),
            WordNode(pos=(890, 900), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(900, 901)),
          CommandNode(pos=(904, 925), parts=[
            WordNode(pos=(904, 908), word='echo'),
            WordNode(pos=(909, 925), word='daemonize = no'),
          ]),
          OperatorNode(op=';', pos=(925, 926)),
          CommandNode(pos=(929, 933), parts=[
            WordNode(pos=(929, 933), word='echo'),
          ]),
          OperatorNode(op=';', pos=(933, 934)),
          CommandNode(pos=(937, 949), parts=[
            WordNode(pos=(937, 941), word='echo'),
            WordNode(pos=(942, 949), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(949, 950)),
          CommandNode(pos=(953, 973), parts=[
            WordNode(pos=(953, 957), word='echo'),
            WordNode(pos=(958, 973), word='listen = 9000'),
          ]),
          OperatorNode(op=';', pos=(973, 974)),
        ]),
      ReservedwordNode(pos=(976, 977), word='}'),
    ], pos=(881, 977)),
    PipeNode(pipe='|', pos=(978, 979)),
    CommandNode(pos=(980, 1008), parts=[
      WordNode(pos=(980, 983), word='tee'),
      WordNode(pos=(984, 1008), word='php-fpm.d/zz-docker.conf'),
    ]),
  ]),
])


119) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


120) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


121) set -eux;  apt-get update;  apt-get install -y --no-install-recommends   ca-certificates   jq   numactl  ;  if ! command -v ps > /dev/null; then   apt-get install -y --no-install-recommends procps;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 231), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 103), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 88), word='ca-certificates'),
    WordNode(pos=(91, 93), word='jq'),
    WordNode(pos=(96, 103), word='numactl'),
  ]),
  OperatorNode(op=';', pos=(105, 106)),
  CompoundNode(list=[
    IfNode(pos=(108, 201), parts=[
      ReservedwordNode(pos=(108, 110), word='if'),
      ListNode(pos=(111, 139), parts=[
          PipelineNode(pos=(111, 138), parts=[
            ReservedwordNode(pos=(111, 112), word='!'),
            CommandNode(pos=(113, 138), parts=[
              WordNode(pos=(113, 120), word='command'),
              WordNode(pos=(121, 123), word='-v'),
              WordNode(pos=(124, 126), word='ps'),
              RedirectNode(output=
                WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(138, 139)),
        ]),
      ReservedwordNode(pos=(140, 144), word='then'),
      ListNode(pos=(147, 197), parts=[
          CommandNode(pos=(147, 196), parts=[
            WordNode(pos=(147, 154), word='apt-get'),
            WordNode(pos=(155, 162), word='install'),
            WordNode(pos=(163, 165), word='-y'),
            WordNode(pos=(166, 189), word='--no-install-recommends'),
            WordNode(pos=(190, 196), word='procps'),
          ]),
          OperatorNode(op=';', pos=(196, 197)),
        ]),
      ReservedwordNode(pos=(199, 201), word='fi'),
    ]),
  ], pos=(108, 201)),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(204, 231), parts=[
    WordNode(pos=(204, 206), word='rm'),
    WordNode(pos=(207, 210), word='-rf'),
    WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
  ]),
])


122) set -ex;   apt-get update;  apt-get install -y --no-install-recommends   wget  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends gnupg dirmngr;  fi;  rm -rf /var/lib/apt/lists/*;   dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')";  wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch";  wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc";  export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc;  chmod +x /usr/local/bin/gosu;  gosu --version;  gosu nobody true;   wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js";   apt-get purge -y --auto-remove wget

ListNode(pos=(0, 1013), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 77), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 77), word='wget'),
  ]),
  OperatorNode(op=';', pos=(79, 80)),
  CompoundNode(list=[
    IfNode(pos=(82, 183), parts=[
      ReservedwordNode(pos=(82, 84), word='if'),
      ListNode(pos=(85, 114), parts=[
          PipelineNode(pos=(85, 113), parts=[
            ReservedwordNode(pos=(85, 86), word='!'),
            CommandNode(pos=(87, 113), parts=[
              WordNode(pos=(87, 94), word='command'),
              WordNode(pos=(95, 97), word='-v'),
              WordNode(pos=(98, 101), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(113, 114)),
        ]),
      ReservedwordNode(pos=(115, 119), word='then'),
      ListNode(pos=(122, 179), parts=[
          CommandNode(pos=(122, 178), parts=[
            WordNode(pos=(122, 129), word='apt-get'),
            WordNode(pos=(130, 137), word='install'),
            WordNode(pos=(138, 140), word='-y'),
            WordNode(pos=(141, 164), word='--no-install-recommends'),
            WordNode(pos=(165, 170), word='gnupg'),
            WordNode(pos=(171, 178), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(178, 179)),
        ]),
      ReservedwordNode(pos=(181, 183), word='fi'),
    ]),
  ], pos=(82, 183)),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(186, 213), parts=[
    WordNode(pos=(186, 188), word='rm'),
    WordNode(pos=(189, 192), word='-rf'),
    WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(213, 214)),
  CommandNode(pos=(217, 282), parts=[
    AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(229, 280), parts=[
          CommandNode(pos=(229, 254), parts=[
            WordNode(pos=(229, 233), word='dpkg'),
            WordNode(pos=(234, 254), word='--print-architecture'),
          ]),
          PipeNode(pipe='|', pos=(255, 256)),
          CommandNode(pos=(257, 280), parts=[
            WordNode(pos=(257, 260), word='awk'),
            WordNode(pos=(261, 264), word='-F-'),
            WordNode(pos=(265, 280), word='{ print $NF }'),
          ]),
        ]), pos=(227, 281)),
    ]),
  ]),
  OperatorNode(op=';', pos=(282, 283)),
  CommandNode(pos=(285, 392), parts=[
    WordNode(pos=(285, 289), word='wget'),
    WordNode(pos=(290, 292), word='-O'),
    WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
    WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
      ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
      ParameterNode(pos=(382, 391), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(392, 393)),
  CommandNode(pos=(395, 510), parts=[
    WordNode(pos=(395, 399), word='wget'),
    WordNode(pos=(400, 402), word='-O'),
    WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
      ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
      ParameterNode(pos=(496, 505), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 544), parts=[
    WordNode(pos=(513, 519), word='export'),
    WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(533, 542), parts=[
          WordNode(pos=(533, 539), word='mktemp'),
          WordNode(pos=(540, 542), word='-d'),
        ]), pos=(531, 543)),
    ]),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(547, 650), parts=[
    WordNode(pos=(547, 550), word='gpg'),
    WordNode(pos=(551, 558), word='--batch'),
    WordNode(pos=(559, 570), word='--keyserver'),
    WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
    WordNode(pos=(598, 609), word='--recv-keys'),
    WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
  ]),
  OperatorNode(op=';', pos=(650, 651)),
  CommandNode(pos=(653, 717), parts=[
    WordNode(pos=(653, 656), word='gpg'),
    WordNode(pos=(657, 664), word='--batch'),
    WordNode(pos=(665, 673), word='--verify'),
    WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(717, 718)),
  CommandNode(pos=(720, 738), parts=[
    WordNode(pos=(720, 727), word='command'),
    WordNode(pos=(728, 730), word='-v'),
    WordNode(pos=(731, 738), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(739, 741)),
  CommandNode(pos=(742, 760), parts=[
    WordNode(pos=(742, 749), word='gpgconf'),
    WordNode(pos=(750, 756), word='--kill'),
    WordNode(pos=(757, 760), word='all'),
  ]),
  OperatorNode(op='||', pos=(761, 763)),
  CommandNode(pos=(764, 765), parts=[
    WordNode(pos=(764, 765), word=':'),
  ]),
  OperatorNode(op=';', pos=(765, 766)),
  CommandNode(pos=(768, 810), parts=[
    WordNode(pos=(768, 770), word='rm'),
    WordNode(pos=(771, 773), word='-r'),
    WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(775, 785), value='GNUPGHOME'),
    ]),
    WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 841), parts=[
    WordNode(pos=(813, 818), word='chmod'),
    WordNode(pos=(819, 821), word='+x'),
    WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(841, 842)),
  CommandNode(pos=(844, 858), parts=[
    WordNode(pos=(844, 848), word='gosu'),
    WordNode(pos=(849, 858), word='--version'),
  ]),
  OperatorNode(op=';', pos=(858, 859)),
  CommandNode(pos=(861, 877), parts=[
    WordNode(pos=(861, 865), word='gosu'),
    WordNode(pos=(866, 872), word='nobody'),
    WordNode(pos=(873, 877), word='true'),
  ]),
  OperatorNode(op=';', pos=(877, 878)),
  CommandNode(pos=(881, 974), parts=[
    WordNode(pos=(881, 885), word='wget'),
    WordNode(pos=(886, 888), word='-O'),
    WordNode(pos=(889, 900), word='/js-yaml.js'),
    WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
      ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(978, 1013), parts=[
    WordNode(pos=(978, 985), word='apt-get'),
    WordNode(pos=(986, 991), word='purge'),
    WordNode(pos=(992, 994), word='-y'),
    WordNode(pos=(995, 1008), word='--auto-remove'),
    WordNode(pos=(1009, 1013), word='wget'),
  ]),
])


123) set -eux;  mkdir -p "$GHOST_INSTALL";  chown node:node "$GHOST_INSTALL";   su-exec node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL";   cd "$GHOST_INSTALL";  su-exec node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db";  su-exec node ghost config paths.contentPath "$GHOST_CONTENT";   su-exec node ln -s config.production.json "$GHOST_INSTALL/config.development.json";  readlink -f "$GHOST_INSTALL/config.development.json";   mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig";  mkdir -p "$GHOST_CONTENT";  chown node:node "$GHOST_CONTENT";   cd "$GHOST_INSTALL/current";  sqlite3Version="$(npm view . optionalDependencies.sqlite3)";  if ! su-exec node yarn add "sqlite3@$sqlite3Version" --force; then   apk add --no-cache --virtual .build-deps python make gcc g++ libc-dev;     su-exec node yarn add "sqlite3@$sqlite3Version" --force --build-from-source;     apk del --no-network .build-deps;  fi;   su-exec node yarn cache clean;  su-exec node npm cache clean --force;  npm cache clean --force;  rm -rv /tmp/yarn* /tmp/v8*

ListNode(pos=(0, 1162), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 36), parts=[
    WordNode(pos=(11, 16), word='mkdir'),
    WordNode(pos=(17, 19), word='-p'),
    WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(36, 37)),
  CommandNode(pos=(39, 71), parts=[
    WordNode(pos=(39, 44), word='chown'),
    WordNode(pos=(45, 54), word='node:node'),
    WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(71, 72)),
  CommandNode(pos=(75, 188), parts=[
    WordNode(pos=(75, 82), word='su-exec'),
    WordNode(pos=(83, 87), word='node'),
    WordNode(pos=(88, 93), word='ghost'),
    WordNode(pos=(94, 101), word='install'),
    WordNode(pos=(102, 118), word='$GHOST_VERSION', parts=[
      ParameterNode(pos=(103, 117), value='GHOST_VERSION'),
    ]),
    WordNode(pos=(119, 123), word='--db'),
    WordNode(pos=(124, 131), word='sqlite3'),
    WordNode(pos=(132, 143), word='--no-prompt'),
    WordNode(pos=(144, 154), word='--no-stack'),
    WordNode(pos=(155, 165), word='--no-setup'),
    WordNode(pos=(166, 171), word='--dir'),
    WordNode(pos=(172, 188), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(173, 187), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(188, 189)),
  CommandNode(pos=(192, 211), parts=[
    WordNode(pos=(192, 194), word='cd'),
    WordNode(pos=(195, 211), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(196, 210), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(211, 212)),
  CommandNode(pos=(214, 357), parts=[
    WordNode(pos=(214, 221), word='su-exec'),
    WordNode(pos=(222, 226), word='node'),
    WordNode(pos=(227, 232), word='ghost'),
    WordNode(pos=(233, 239), word='config'),
    WordNode(pos=(240, 244), word='--ip'),
    WordNode(pos=(245, 252), word='0.0.0.0'),
    WordNode(pos=(253, 259), word='--port'),
    WordNode(pos=(260, 264), word='2368'),
    WordNode(pos=(265, 276), word='--no-prompt'),
    WordNode(pos=(277, 281), word='--db'),
    WordNode(pos=(282, 289), word='sqlite3'),
    WordNode(pos=(290, 295), word='--url'),
    WordNode(pos=(296, 317), word='http://localhost:2368'),
    WordNode(pos=(318, 326), word='--dbpath'),
    WordNode(pos=(327, 357), word='$GHOST_CONTENT/data/ghost.db', parts=[
      ParameterNode(pos=(328, 342), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(357, 358)),
  CommandNode(pos=(360, 420), parts=[
    WordNode(pos=(360, 367), word='su-exec'),
    WordNode(pos=(368, 372), word='node'),
    WordNode(pos=(373, 378), word='ghost'),
    WordNode(pos=(379, 385), word='config'),
    WordNode(pos=(386, 403), word='paths.contentPath'),
    WordNode(pos=(404, 420), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(405, 419), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(420, 421)),
  CommandNode(pos=(424, 506), parts=[
    WordNode(pos=(424, 431), word='su-exec'),
    WordNode(pos=(432, 436), word='node'),
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 442), word='-s'),
    WordNode(pos=(443, 465), word='config.production.json'),
    WordNode(pos=(466, 506), word='$GHOST_INSTALL/config.development.json', parts=[
      ParameterNode(pos=(467, 481), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(506, 507)),
  CommandNode(pos=(509, 561), parts=[
    WordNode(pos=(509, 517), word='readlink'),
    WordNode(pos=(518, 520), word='-f'),
    WordNode(pos=(521, 561), word='$GHOST_INSTALL/config.development.json', parts=[
      ParameterNode(pos=(522, 536), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(561, 562)),
  CommandNode(pos=(565, 614), parts=[
    WordNode(pos=(565, 567), word='mv'),
    WordNode(pos=(568, 584), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(569, 583), value='GHOST_CONTENT'),
    ]),
    WordNode(pos=(585, 614), word='$GHOST_INSTALL/content.orig', parts=[
      ParameterNode(pos=(586, 600), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(614, 615)),
  CommandNode(pos=(617, 642), parts=[
    WordNode(pos=(617, 622), word='mkdir'),
    WordNode(pos=(623, 625), word='-p'),
    WordNode(pos=(626, 642), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(627, 641), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(642, 643)),
  CommandNode(pos=(645, 677), parts=[
    WordNode(pos=(645, 650), word='chown'),
    WordNode(pos=(651, 660), word='node:node'),
    WordNode(pos=(661, 677), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(662, 676), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(677, 678)),
  CommandNode(pos=(681, 708), parts=[
    WordNode(pos=(681, 683), word='cd'),
    WordNode(pos=(684, 708), word='$GHOST_INSTALL/current', parts=[
      ParameterNode(pos=(685, 699), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(708, 709)),
  CommandNode(pos=(711, 770), parts=[
    WordNode(pos=(711, 770), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(729, 768), parts=[
          WordNode(pos=(729, 732), word='npm'),
          WordNode(pos=(733, 737), word='view'),
          WordNode(pos=(738, 739), word='.'),
          WordNode(pos=(740, 768), word='optionalDependencies.sqlite3'),
        ]), pos=(727, 769)),
    ]),
  ]),
  OperatorNode(op=';', pos=(770, 771)),
  CompoundNode(list=[
    IfNode(pos=(773, 1035), parts=[
      ReservedwordNode(pos=(773, 775), word='if'),
      ListNode(pos=(776, 834), parts=[
          PipelineNode(pos=(776, 833), parts=[
            ReservedwordNode(pos=(776, 777), word='!'),
            CommandNode(pos=(778, 833), parts=[
              WordNode(pos=(778, 785), word='su-exec'),
              WordNode(pos=(786, 790), word='node'),
              WordNode(pos=(791, 795), word='yarn'),
              WordNode(pos=(796, 799), word='add'),
              WordNode(pos=(800, 825), word='sqlite3@$sqlite3Version', parts=[
                ParameterNode(pos=(809, 824), value='sqlite3Version'),
              ]),
              WordNode(pos=(826, 833), word='--force'),
            ]),
          ]),
          OperatorNode(op=';', pos=(833, 834)),
        ]),
      ReservedwordNode(pos=(835, 839), word='then'),
      ListNode(pos=(842, 1031), parts=[
          CommandNode(pos=(842, 911), parts=[
            WordNode(pos=(842, 845), word='apk'),
            WordNode(pos=(846, 849), word='add'),
            WordNode(pos=(850, 860), word='--no-cache'),
            WordNode(pos=(861, 870), word='--virtual'),
            WordNode(pos=(871, 882), word='.build-deps'),
            WordNode(pos=(883, 889), word='python'),
            WordNode(pos=(890, 894), word='make'),
            WordNode(pos=(895, 898), word='gcc'),
            WordNode(pos=(899, 902), word='g++'),
            WordNode(pos=(903, 911), word='libc-dev'),
          ]),
          OperatorNode(op=';', pos=(911, 912)),
          CommandNode(pos=(917, 992), parts=[
            WordNode(pos=(917, 924), word='su-exec'),
            WordNode(pos=(925, 929), word='node'),
            WordNode(pos=(930, 934), word='yarn'),
            WordNode(pos=(935, 938), word='add'),
            WordNode(pos=(939, 964), word='sqlite3@$sqlite3Version', parts=[
              ParameterNode(pos=(948, 963), value='sqlite3Version'),
            ]),
            WordNode(pos=(965, 972), word='--force'),
            WordNode(pos=(973, 992), word='--build-from-source'),
          ]),
          OperatorNode(op=';', pos=(992, 993)),
          CommandNode(pos=(998, 1030), parts=[
            WordNode(pos=(998, 1001), word='apk'),
            WordNode(pos=(1002, 1005), word='del'),
            WordNode(pos=(1006, 1018), word='--no-network'),
            WordNode(pos=(1019, 1030), word='.build-deps'),
          ]),
          OperatorNode(op=';', pos=(1030, 1031)),
        ]),
      ReservedwordNode(pos=(1033, 1035), word='fi'),
    ]),
  ], pos=(773, 1035)),
  OperatorNode(op=';', pos=(1035, 1036)),
  CommandNode(pos=(1039, 1068), parts=[
    WordNode(pos=(1039, 1046), word='su-exec'),
    WordNode(pos=(1047, 1051), word='node'),
    WordNode(pos=(1052, 1056), word='yarn'),
    WordNode(pos=(1057, 1062), word='cache'),
    WordNode(pos=(1063, 1068), word='clean'),
  ]),
  OperatorNode(op=';', pos=(1068, 1069)),
  CommandNode(pos=(1071, 1107), parts=[
    WordNode(pos=(1071, 1078), word='su-exec'),
    WordNode(pos=(1079, 1083), word='node'),
    WordNode(pos=(1084, 1087), word='npm'),
    WordNode(pos=(1088, 1093), word='cache'),
    WordNode(pos=(1094, 1099), word='clean'),
    WordNode(pos=(1100, 1107), word='--force'),
  ]),
  OperatorNode(op=';', pos=(1107, 1108)),
  CommandNode(pos=(1110, 1133), parts=[
    WordNode(pos=(1110, 1113), word='npm'),
    WordNode(pos=(1114, 1119), word='cache'),
    WordNode(pos=(1120, 1125), word='clean'),
    WordNode(pos=(1126, 1133), word='--force'),
  ]),
  OperatorNode(op=';', pos=(1133, 1134)),
  CommandNode(pos=(1136, 1162), parts=[
    WordNode(pos=(1136, 1138), word='rm'),
    WordNode(pos=(1139, 1142), word='-rv'),
    WordNode(pos=(1143, 1153), word='/tmp/yarn*'),
    WordNode(pos=(1154, 1162), word='/tmp/v8*'),
  ]),
])


124) set -ex;  apt-get update;  apt-get install -y --no-install-recommends   libjemalloc1   procps   iproute2  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends    dirmngr    gnupg   ;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 249), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CommandNode(pos=(27, 104), parts=[
    WordNode(pos=(27, 34), word='apt-get'),
    WordNode(pos=(35, 42), word='install'),
    WordNode(pos=(43, 45), word='-y'),
    WordNode(pos=(46, 69), word='--no-install-recommends'),
    WordNode(pos=(72, 84), word='libjemalloc1'),
    WordNode(pos=(87, 93), word='procps'),
    WordNode(pos=(96, 104), word='iproute2'),
  ]),
  OperatorNode(op=';', pos=(106, 107)),
  CompoundNode(list=[
    IfNode(pos=(109, 219), parts=[
      ReservedwordNode(pos=(109, 111), word='if'),
      ListNode(pos=(112, 141), parts=[
          PipelineNode(pos=(112, 140), parts=[
            ReservedwordNode(pos=(112, 113), word='!'),
            CommandNode(pos=(114, 140), parts=[
              WordNode(pos=(114, 121), word='command'),
              WordNode(pos=(122, 124), word='-v'),
              WordNode(pos=(125, 128), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(131, 140), word='/dev/null'), pos=(129, 140), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(142, 146), word='then'),
      ListNode(pos=(149, 215), parts=[
          CommandNode(pos=(149, 211), parts=[
            WordNode(pos=(149, 156), word='apt-get'),
            WordNode(pos=(157, 164), word='install'),
            WordNode(pos=(165, 167), word='-y'),
            WordNode(pos=(168, 191), word='--no-install-recommends'),
            WordNode(pos=(195, 202), word='dirmngr'),
            WordNode(pos=(206, 211), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(214, 215)),
        ]),
      ReservedwordNode(pos=(217, 219), word='fi'),
    ]),
  ], pos=(109, 219)),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 249), parts=[
    WordNode(pos=(222, 224), word='rm'),
    WordNode(pos=(225, 228), word='-rf'),
    WordNode(pos=(229, 249), word='/var/lib/apt/lists/*'),
  ]),
])


125) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   gcc   make  ;  rm -rf /var/lib/apt/lists/*;   gem install passenger --version "$PASSENGER_VERSION";  passenger-config build-native-support;  if [ -n "$(passenger-config build-native-support 2>&1)" ]; then cat /tmp/passenger_native_support-*.log; false; fi;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

ListNode(pos=(0, 540), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 124), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 87), word='-y'),
    WordNode(pos=(88, 111), word='--no-install-recommends'),
    WordNode(pos=(114, 117), word='gcc'),
    WordNode(pos=(120, 124), word='make'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(129, 156), parts=[
    WordNode(pos=(129, 131), word='rm'),
    WordNode(pos=(132, 135), word='-rf'),
    WordNode(pos=(136, 156), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(156, 157)),
  CommandNode(pos=(160, 212), parts=[
    WordNode(pos=(160, 163), word='gem'),
    WordNode(pos=(164, 171), word='install'),
    WordNode(pos=(172, 181), word='passenger'),
    WordNode(pos=(182, 191), word='--version'),
    WordNode(pos=(192, 212), word='$PASSENGER_VERSION', parts=[
      ParameterNode(pos=(193, 211), value='PASSENGER_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(212, 213)),
  CommandNode(pos=(215, 252), parts=[
    WordNode(pos=(215, 231), word='passenger-config'),
    WordNode(pos=(232, 252), word='build-native-support'),
  ]),
  OperatorNode(op=';', pos=(252, 253)),
  CompoundNode(list=[
    IfNode(pos=(255, 369), parts=[
      ReservedwordNode(pos=(255, 257), word='if'),
      ListNode(pos=(258, 313), parts=[
          CommandNode(pos=(258, 312), parts=[
            WordNode(pos=(258, 259), word='['),
            WordNode(pos=(260, 262), word='-n'),
            WordNode(pos=(263, 310), word='$(passenger-config build-native-support 2>&1)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(266, 308), parts=[
                  WordNode(pos=(266, 282), word='passenger-config'),
                  WordNode(pos=(283, 303), word='build-native-support'),
                  RedirectNode(input=2, output=1, pos=(304, 308), type='>&'),
                ]), pos=(264, 309)),
            ]),
            WordNode(pos=(311, 312), word=']'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(314, 318), word='then'),
      ListNode(pos=(319, 366), parts=[
          CommandNode(pos=(319, 358), parts=[
            WordNode(pos=(319, 322), word='cat'),
            WordNode(pos=(323, 358), word='/tmp/passenger_native_support-*.log'),
          ]),
          OperatorNode(op=';', pos=(358, 359)),
          CommandNode(pos=(360, 365), parts=[
            WordNode(pos=(360, 365), word='false'),
          ]),
          OperatorNode(op=';', pos=(365, 366)),
        ]),
      ReservedwordNode(pos=(367, 369), word='fi'),
    ]),
  ], pos=(255, 369)),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 403), parts=[
    WordNode(pos=(373, 381), word='apt-mark'),
    WordNode(pos=(382, 386), word='auto'),
    WordNode(pos=(387, 391), word='.*'),
    RedirectNode(output=
      WordNode(pos=(394, 403), word='/dev/null'), pos=(392, 403), type='>'),
  ]),
  OperatorNode(op=';', pos=(403, 404)),
  CommandNode(pos=(406, 428), parts=[
    WordNode(pos=(406, 407), word='['),
    WordNode(pos=(408, 410), word='-z'),
    WordNode(pos=(411, 426), word='$savedAptMark', parts=[
      ParameterNode(pos=(412, 425), value='savedAptMark'),
    ]),
    WordNode(pos=(427, 428), word=']'),
  ]),
  OperatorNode(op='||', pos=(429, 431)),
  CommandNode(pos=(432, 461), parts=[
    WordNode(pos=(432, 440), word='apt-mark'),
    WordNode(pos=(441, 447), word='manual'),
    WordNode(pos=(448, 461), word='$savedAptMark', parts=[
      ParameterNode(pos=(448, 461), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(461, 462)),
  CommandNode(pos=(464, 540), parts=[
    WordNode(pos=(464, 471), word='apt-get'),
    WordNode(pos=(472, 477), word='purge'),
    WordNode(pos=(478, 480), word='-y'),
    WordNode(pos=(481, 494), word='--auto-remove'),
    WordNode(pos=(495, 497), word='-o'),
    WordNode(pos=(498, 540), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
])


126) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


127) set -euxo pipefail;   export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$MANIFEST_TOOL_GPG_KEY";   mkdir -p bin;   for bashbrewArch in $BASHBREW_ARCHES; do   (    goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"; eval "$goEnv";    srcBin="manifest-tool-$GOOS-$GOARCH";    if [ "$GOARCH" = 'arm' ]; then [ -n "$GOARM" ]; srcBin="${srcBin}v$GOARM"; fi;    [ "$GOOS" = 'windows' ] && ext='.exe' || ext=;    srcBin="$srcBin$ext";    targetBin="bin/manifest-tool-$bashbrewArch$ext";    wget -O "$targetBin.asc" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc";    wget -O "$targetBin" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin";    gpg --batch --verify "$targetBin.asc" "$targetBin";    ls -lAFh "$targetBin"*;    file "$targetBin"*;   )  done;   gpgconf --kill all;  rm -r "$GNUPGHOME";   ls -lAFh bin/manifest-tool-*;  file bin/manifest-tool-*

ListNode(pos=(0, 993), parts=[
  CommandNode(pos=(0, 18), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 9), word='-euxo'),
    WordNode(pos=(10, 18), word='pipefail'),
  ]),
  OperatorNode(op=';', pos=(18, 19)),
  CommandNode(pos=(22, 53), parts=[
    WordNode(pos=(22, 28), word='export'),
    WordNode(pos=(29, 53), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(42, 51), parts=[
          WordNode(pos=(42, 48), word='mktemp'),
          WordNode(pos=(49, 51), word='-d'),
        ]), pos=(40, 52)),
    ]),
  ]),
  OperatorNode(op=';', pos=(53, 54)),
  CommandNode(pos=(56, 143), parts=[
    WordNode(pos=(56, 59), word='gpg'),
    WordNode(pos=(60, 67), word='--batch'),
    WordNode(pos=(68, 79), word='--keyserver'),
    WordNode(pos=(80, 106), word='ha.pool.sks-keyservers.net'),
    WordNode(pos=(107, 118), word='--recv-keys'),
    WordNode(pos=(119, 143), word='$MANIFEST_TOOL_GPG_KEY', parts=[
      ParameterNode(pos=(120, 142), value='MANIFEST_TOOL_GPG_KEY'),
    ]),
  ]),
  OperatorNode(op=';', pos=(143, 144)),
  CommandNode(pos=(147, 159), parts=[
    WordNode(pos=(147, 152), word='mkdir'),
    WordNode(pos=(153, 155), word='-p'),
    WordNode(pos=(156, 159), word='bin'),
  ]),
  OperatorNode(op=';', pos=(159, 160)),
  CompoundNode(list=[
    ForNode(pos=(163, 891), parts=[
      ReservedwordNode(pos=(163, 166), word='for'),
      WordNode(pos=(167, 179), word='bashbrewArch'),
      ReservedwordNode(pos=(180, 182), word='in'),
      WordNode(pos=(183, 199), word='$BASHBREW_ARCHES', parts=[
        ParameterNode(pos=(183, 199), value='BASHBREW_ARCHES'),
      ]),
      ReservedwordNode(pos=(199, 200), word=';'),
      ReservedwordNode(pos=(201, 203), word='do'),
      CompoundNode(list=[
        ReservedwordNode(pos=(206, 207), word='('),
        ListNode(pos=(211, 881), parts=[
            CommandNode(pos=(211, 264), parts=[
              AssignmentNode(pos=(211, 264), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
                CommandsubstitutionNode(command=
                  CommandNode(pos=(220, 262), parts=[
                    WordNode(pos=(220, 246), word='.bashbrew-arch-to-goenv.sh'),
                    WordNode(pos=(247, 262), word='$bashbrewArch', parts=[
                      ParameterNode(pos=(248, 261), value='bashbrewArch'),
                    ]),
                  ]), pos=(218, 263)),
              ]),
            ]),
            OperatorNode(op=';', pos=(264, 265)),
            CommandNode(pos=(266, 279), parts=[
              WordNode(pos=(266, 270), word='eval'),
              WordNode(pos=(271, 279), word='$goEnv', parts=[
                ParameterNode(pos=(272, 278), value='goEnv'),
              ]),
            ]),
            OperatorNode(op=';', pos=(279, 280)),
            CommandNode(pos=(284, 320), parts=[
              AssignmentNode(pos=(284, 320), word='srcBin=manifest-tool-$GOOS-$GOARCH', parts=[
                ParameterNode(pos=(306, 311), value='GOOS'),
                ParameterNode(pos=(312, 319), value='GOARCH'),
              ]),
            ]),
            OperatorNode(op=';', pos=(320, 321)),
            CompoundNode(list=[
              IfNode(pos=(325, 402), parts=[
                ReservedwordNode(pos=(325, 327), word='if'),
                ListNode(pos=(328, 350), parts=[
                    CommandNode(pos=(328, 349), parts=[
                      WordNode(pos=(328, 329), word='['),
                      WordNode(pos=(330, 339), word='$GOARCH', parts=[
                        ParameterNode(pos=(331, 338), value='GOARCH'),
                      ]),
                      WordNode(pos=(340, 341), word='='),
                      WordNode(pos=(342, 347), word='arm'),
                      WordNode(pos=(348, 349), word=']'),
                    ]),
                    OperatorNode(op=';', pos=(349, 350)),
                  ]),
                ReservedwordNode(pos=(351, 355), word='then'),
                ListNode(pos=(356, 399), parts=[
                    CommandNode(pos=(356, 371), parts=[
                      WordNode(pos=(356, 357), word='['),
                      WordNode(pos=(358, 360), word='-n'),
                      WordNode(pos=(361, 369), word='$GOARM', parts=[
                        ParameterNode(pos=(362, 368), value='GOARM'),
                      ]),
                      WordNode(pos=(370, 371), word=']'),
                    ]),
                    OperatorNode(op=';', pos=(371, 372)),
                    CommandNode(pos=(373, 398), parts=[
                      AssignmentNode(pos=(373, 398), word='srcBin=${srcBin}v$GOARM', parts=[
                        ParameterNode(pos=(381, 390), value='srcBin'),
                        ParameterNode(pos=(391, 397), value='GOARM'),
                      ]),
                    ]),
                    OperatorNode(op=';', pos=(398, 399)),
                  ]),
                ReservedwordNode(pos=(400, 402), word='fi'),
              ]),
            ], pos=(325, 402)),
            OperatorNode(op=';', pos=(402, 403)),
            CommandNode(pos=(407, 430), parts=[
              WordNode(pos=(407, 408), word='['),
              WordNode(pos=(409, 416), word='$GOOS', parts=[
                ParameterNode(pos=(410, 415), value='GOOS'),
              ]),
              WordNode(pos=(417, 418), word='='),
              WordNode(pos=(419, 428), word='windows'),
              WordNode(pos=(429, 430), word=']'),
            ]),
            OperatorNode(op='&&', pos=(431, 433)),
            CommandNode(pos=(434, 444), parts=[
              AssignmentNode(pos=(434, 444), word='ext=.exe'),
            ]),
            OperatorNode(op='||', pos=(445, 447)),
            CommandNode(pos=(448, 452), parts=[
              AssignmentNode(pos=(448, 452), word='ext='),
            ]),
            OperatorNode(op=';', pos=(452, 453)),
            CommandNode(pos=(457, 477), parts=[
              AssignmentNode(pos=(457, 477), word='srcBin=$srcBin$ext', parts=[
                ParameterNode(pos=(465, 472), value='srcBin'),
                ParameterNode(pos=(472, 476), value='ext'),
              ]),
            ]),
            OperatorNode(op=';', pos=(477, 478)),
            CommandNode(pos=(482, 529), parts=[
              AssignmentNode(pos=(482, 529), word='targetBin=bin/manifest-tool-$bashbrewArch$ext', parts=[
                ParameterNode(pos=(511, 524), value='bashbrewArch'),
                ParameterNode(pos=(524, 528), value='ext'),
              ]),
            ]),
            OperatorNode(op=';', pos=(529, 530)),
            CommandNode(pos=(534, 656), parts=[
              WordNode(pos=(534, 538), word='wget'),
              WordNode(pos=(539, 541), word='-O'),
              WordNode(pos=(542, 558), word='$targetBin.asc', parts=[
                ParameterNode(pos=(543, 553), value='targetBin'),
              ]),
              WordNode(pos=(559, 656), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc', parts=[
                ParameterNode(pos=(619, 643), value='MANIFEST_TOOL_VERSION'),
                ParameterNode(pos=(644, 651), value='srcBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(656, 657)),
            CommandNode(pos=(661, 775), parts=[
              WordNode(pos=(661, 665), word='wget'),
              WordNode(pos=(666, 668), word='-O'),
              WordNode(pos=(669, 681), word='$targetBin', parts=[
                ParameterNode(pos=(670, 680), value='targetBin'),
              ]),
              WordNode(pos=(682, 775), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin', parts=[
                ParameterNode(pos=(742, 766), value='MANIFEST_TOOL_VERSION'),
                ParameterNode(pos=(767, 774), value='srcBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(775, 776)),
            CommandNode(pos=(780, 830), parts=[
              WordNode(pos=(780, 783), word='gpg'),
              WordNode(pos=(784, 791), word='--batch'),
              WordNode(pos=(792, 800), word='--verify'),
              WordNode(pos=(801, 817), word='$targetBin.asc', parts=[
                ParameterNode(pos=(802, 812), value='targetBin'),
              ]),
              WordNode(pos=(818, 830), word='$targetBin', parts=[
                ParameterNode(pos=(819, 829), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(830, 831)),
            CommandNode(pos=(835, 857), parts=[
              WordNode(pos=(835, 837), word='ls'),
              WordNode(pos=(838, 843), word='-lAFh'),
              WordNode(pos=(844, 857), word='$targetBin*', parts=[
                ParameterNode(pos=(845, 855), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(857, 858)),
            CommandNode(pos=(862, 880), parts=[
              WordNode(pos=(862, 866), word='file'),
              WordNode(pos=(867, 880), word='$targetBin*', parts=[
                ParameterNode(pos=(868, 878), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(880, 881)),
          ]),
        ReservedwordNode(pos=(884, 885), word=')'),
      ], pos=(206, 885)),
      ReservedwordNode(pos=(887, 891), word='done'),
    ]),
  ], pos=(163, 891)),
  OperatorNode(op=';', pos=(891, 892)),
  CommandNode(pos=(895, 913), parts=[
    WordNode(pos=(895, 902), word='gpgconf'),
    WordNode(pos=(903, 909), word='--kill'),
    WordNode(pos=(910, 913), word='all'),
  ]),
  OperatorNode(op=';', pos=(913, 914)),
  CommandNode(pos=(916, 934), parts=[
    WordNode(pos=(916, 918), word='rm'),
    WordNode(pos=(919, 921), word='-r'),
    WordNode(pos=(922, 934), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(923, 933), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(934, 935)),
  CommandNode(pos=(938, 966), parts=[
    WordNode(pos=(938, 940), word='ls'),
    WordNode(pos=(941, 946), word='-lAFh'),
    WordNode(pos=(947, 966), word='bin/manifest-tool-*'),
  ]),
  OperatorNode(op=';', pos=(966, 967)),
  CommandNode(pos=(969, 993), parts=[
    WordNode(pos=(969, 973), word='file'),
    WordNode(pos=(974, 993), word='bin/manifest-tool-*'),
  ]),
])


128) set -eux;   echo 'deb http://deb.debian.org/debian stretch-backports main' > /etc/apt/sources.list.d/stretch-backports.list;  savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   bzip2   ca-certificates   dirmngr   dpkg-dev   gcc   gnupg   libbrotli-dev   libcurl4-openssl-dev   libjansson-dev   liblua5.2-dev   libnghttp2-dev   libpcre3-dev   libssl-dev   libxml2-dev   make   wget   zlib1g-dev  ;  rm -r /var/lib/apt/lists/*;   ddist() {   local f="$1"; shift;   local distFile="$1"; shift;   local success=;   local distUrl=;   for distUrl in $APACHE_DIST_URLS; do    if wget -O "$f" "$distUrl$distFile" && [ -s "$f" ]; then     success=1;     break;    fi;   done;   [ -n "$success" ];  };   ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2";  echo "$HTTPD_SHA256 *httpd.tar.bz2" | sha256sum -c -;   ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc";  export GNUPGHOME="$(mktemp -d)";  for key in   A93D62ECC3C8EA12DB220EC934EA76E6791485A8   B9E8213AEFB861AF35A41F2C995E35221AD84DFF  ; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME" httpd.tar.bz2.asc;   mkdir -p src;  tar -xf httpd.tar.bz2 -C src --strip-components=1;  rm httpd.tar.bz2;  cd src;   patches() {   while [ "$#" -gt 0 ]; do    local patchFile="$1"; shift;    local patchSha256="$1"; shift;    ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile";    echo "$patchSha256 *$patchFile" | sha256sum -c -;    patch -p0 < "$patchFile";    rm -f "$patchFile";   done;  };  patches $HTTPD_PATCHES;   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all  ;  make -j "$(nproc)";  make install;   cd ..;  rm -r src man manual;   sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   httpd -v

ListNode(pos=(0, 2586), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 123), parts=[
    WordNode(pos=(12, 16), word='echo'),
    WordNode(pos=(17, 74), word='deb http://deb.debian.org/debian stretch-backports main'),
    RedirectNode(output=
      WordNode(pos=(77, 123), word='/etc/apt/sources.list.d/stretch-backports.list'), pos=(75, 123), type='>'),
  ]),
  OperatorNode(op=';', pos=(123, 124)),
  CommandNode(pos=(126, 163), parts=[
    AssignmentNode(pos=(126, 163), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(142, 161), parts=[
          WordNode(pos=(142, 150), word='apt-mark'),
          WordNode(pos=(151, 161), word='showmanual'),
        ]), pos=(140, 162)),
    ]),
  ]),
  OperatorNode(op=';', pos=(163, 164)),
  CommandNode(pos=(166, 180), parts=[
    WordNode(pos=(166, 173), word='apt-get'),
    WordNode(pos=(174, 180), word='update'),
  ]),
  OperatorNode(op=';', pos=(180, 181)),
  CommandNode(pos=(183, 444), parts=[
    WordNode(pos=(183, 190), word='apt-get'),
    WordNode(pos=(191, 198), word='install'),
    WordNode(pos=(199, 201), word='-y'),
    WordNode(pos=(202, 225), word='--no-install-recommends'),
    WordNode(pos=(228, 233), word='bzip2'),
    WordNode(pos=(236, 251), word='ca-certificates'),
    WordNode(pos=(254, 261), word='dirmngr'),
    WordNode(pos=(264, 272), word='dpkg-dev'),
    WordNode(pos=(275, 278), word='gcc'),
    WordNode(pos=(281, 286), word='gnupg'),
    WordNode(pos=(289, 302), word='libbrotli-dev'),
    WordNode(pos=(305, 325), word='libcurl4-openssl-dev'),
    WordNode(pos=(328, 342), word='libjansson-dev'),
    WordNode(pos=(345, 358), word='liblua5.2-dev'),
    WordNode(pos=(361, 375), word='libnghttp2-dev'),
    WordNode(pos=(378, 390), word='libpcre3-dev'),
    WordNode(pos=(393, 403), word='libssl-dev'),
    WordNode(pos=(406, 417), word='libxml2-dev'),
    WordNode(pos=(420, 424), word='make'),
    WordNode(pos=(427, 431), word='wget'),
    WordNode(pos=(434, 444), word='zlib1g-dev'),
  ]),
  OperatorNode(op=';', pos=(446, 447)),
  CommandNode(pos=(449, 475), parts=[
    WordNode(pos=(449, 451), word='rm'),
    WordNode(pos=(452, 454), word='-r'),
    WordNode(pos=(455, 475), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(475, 476)),
  FunctionNode(pos=(479, 741), parts=[
    WordNode(pos=(479, 484), word='ddist'),
    ReservedwordNode(pos=(484, 485), word='('),
    ReservedwordNode(pos=(485, 486), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(487, 488), word='{'),
      ListNode(pos=(491, 738), parts=[
          CommandNode(pos=(491, 503), parts=[
            WordNode(pos=(491, 496), word='local'),
            WordNode(pos=(497, 503), word='f=$1', parts=[
              ParameterNode(pos=(500, 502), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(503, 504)),
          CommandNode(pos=(505, 510), parts=[
            WordNode(pos=(505, 510), word='shift'),
          ]),
          OperatorNode(op=';', pos=(510, 511)),
          CommandNode(pos=(514, 533), parts=[
            WordNode(pos=(514, 519), word='local'),
            WordNode(pos=(520, 533), word='distFile=$1', parts=[
              ParameterNode(pos=(530, 532), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(533, 534)),
          CommandNode(pos=(535, 540), parts=[
            WordNode(pos=(535, 540), word='shift'),
          ]),
          OperatorNode(op=';', pos=(540, 541)),
          CommandNode(pos=(544, 558), parts=[
            WordNode(pos=(544, 549), word='local'),
            WordNode(pos=(550, 558), word='success='),
          ]),
          OperatorNode(op=';', pos=(558, 559)),
          CommandNode(pos=(562, 576), parts=[
            WordNode(pos=(562, 567), word='local'),
            WordNode(pos=(568, 576), word='distUrl='),
          ]),
          OperatorNode(op=';', pos=(576, 577)),
          CompoundNode(list=[
            ForNode(pos=(580, 716), parts=[
              ReservedwordNode(pos=(580, 583), word='for'),
              WordNode(pos=(584, 591), word='distUrl'),
              ReservedwordNode(pos=(592, 594), word='in'),
              WordNode(pos=(595, 612), word='$APACHE_DIST_URLS', parts=[
                ParameterNode(pos=(595, 612), value='APACHE_DIST_URLS'),
              ]),
              ReservedwordNode(pos=(612, 613), word=';'),
              ReservedwordNode(pos=(614, 616), word='do'),
              ListNode(pos=(620, 709), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(620, 708), parts=[
                      ReservedwordNode(pos=(620, 622), word='if'),
                      ListNode(pos=(623, 671), parts=[
                          CommandNode(pos=(623, 655), parts=[
                            WordNode(pos=(623, 627), word='wget'),
                            WordNode(pos=(628, 630), word='-O'),
                            WordNode(pos=(631, 635), word='$f', parts=[
                              ParameterNode(pos=(632, 634), value='f'),
                            ]),
                            WordNode(pos=(636, 655), word='$distUrl$distFile', parts=[
                              ParameterNode(pos=(637, 645), value='distUrl'),
                              ParameterNode(pos=(645, 654), value='distFile'),
                            ]),
                          ]),
                          OperatorNode(op='&&', pos=(656, 658)),
                          CommandNode(pos=(659, 670), parts=[
                            WordNode(pos=(659, 660), word='['),
                            WordNode(pos=(661, 663), word='-s'),
                            WordNode(pos=(664, 668), word='$f', parts=[
                              ParameterNode(pos=(665, 667), value='f'),
                            ]),
                            WordNode(pos=(669, 670), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(670, 671)),
                        ]),
                      ReservedwordNode(pos=(672, 676), word='then'),
                      ListNode(pos=(681, 702), parts=[
                          CommandNode(pos=(681, 690), parts=[
                            AssignmentNode(pos=(681, 690), word='success=1'),
                          ]),
                          OperatorNode(op=';', pos=(690, 691)),
                          CommandNode(pos=(696, 701), parts=[
                            WordNode(pos=(696, 701), word='break'),
                          ]),
                          OperatorNode(op=';', pos=(701, 702)),
                        ]),
                      ReservedwordNode(pos=(706, 708), word='fi'),
                    ]),
                  ], pos=(620, 708)),
                  OperatorNode(op=';', pos=(708, 709)),
                ]),
              ReservedwordNode(pos=(712, 716), word='done'),
            ]),
          ], pos=(580, 716)),
          OperatorNode(op=';', pos=(716, 717)),
          CommandNode(pos=(720, 737), parts=[
            WordNode(pos=(720, 721), word='['),
            WordNode(pos=(722, 724), word='-n'),
            WordNode(pos=(725, 735), word='$success', parts=[
              ParameterNode(pos=(726, 734), value='success'),
            ]),
            WordNode(pos=(736, 737), word=']'),
          ]),
          OperatorNode(op=';', pos=(737, 738)),
        ]),
      ReservedwordNode(pos=(740, 741), word='}'),
    ], pos=(487, 741)),
  ]),
  OperatorNode(op=';', pos=(741, 742)),
  CommandNode(pos=(745, 803), parts=[
    WordNode(pos=(745, 750), word='ddist'),
    WordNode(pos=(751, 766), word='httpd.tar.bz2'),
    WordNode(pos=(767, 803), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
      ParameterNode(pos=(780, 794), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(803, 804)),
  PipelineNode(pos=(806, 858), parts=[
    CommandNode(pos=(806, 841), parts=[
      WordNode(pos=(806, 810), word='echo'),
      WordNode(pos=(811, 841), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
        ParameterNode(pos=(812, 825), value='HTTPD_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(842, 843)),
    CommandNode(pos=(844, 858), parts=[
      WordNode(pos=(844, 853), word='sha256sum'),
      WordNode(pos=(854, 856), word='-c'),
      WordNode(pos=(857, 858), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(858, 859)),
  CommandNode(pos=(862, 928), parts=[
    WordNode(pos=(862, 867), word='ddist'),
    WordNode(pos=(868, 887), word='httpd.tar.bz2.asc'),
    WordNode(pos=(888, 928), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
      ParameterNode(pos=(901, 915), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(928, 929)),
  CommandNode(pos=(931, 962), parts=[
    WordNode(pos=(931, 937), word='export'),
    WordNode(pos=(938, 962), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(951, 960), parts=[
          WordNode(pos=(951, 957), word='mktemp'),
          WordNode(pos=(958, 960), word='-d'),
        ]), pos=(949, 961)),
    ]),
  ]),
  OperatorNode(op=';', pos=(962, 963)),
  CompoundNode(list=[
    ForNode(pos=(965, 1146), parts=[
      ReservedwordNode(pos=(965, 968), word='for'),
      WordNode(pos=(969, 972), word='key'),
      ReservedwordNode(pos=(973, 975), word='in'),
      WordNode(pos=(978, 1018), word='A93D62ECC3C8EA12DB220EC934EA76E6791485A8'),
      WordNode(pos=(1021, 1061), word='B9E8213AEFB861AF35A41F2C995E35221AD84DFF'),
      ReservedwordNode(pos=(1063, 1064), word=';'),
      ReservedwordNode(pos=(1065, 1067), word='do'),
      ListNode(pos=(1070, 1140), parts=[
          CommandNode(pos=(1070, 1139), parts=[
            WordNode(pos=(1070, 1073), word='gpg'),
            WordNode(pos=(1074, 1081), word='--batch'),
            WordNode(pos=(1082, 1093), word='--keyserver'),
            WordNode(pos=(1094, 1120), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(1121, 1132), word='--recv-keys'),
            WordNode(pos=(1133, 1139), word='$key', parts=[
              ParameterNode(pos=(1134, 1138), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1139, 1140)),
        ]),
      ReservedwordNode(pos=(1142, 1146), word='done'),
    ]),
  ], pos=(965, 1146)),
  OperatorNode(op=';', pos=(1146, 1147)),
  CommandNode(pos=(1149, 1201), parts=[
    WordNode(pos=(1149, 1152), word='gpg'),
    WordNode(pos=(1153, 1160), word='--batch'),
    WordNode(pos=(1161, 1169), word='--verify'),
    WordNode(pos=(1170, 1187), word='httpd.tar.bz2.asc'),
    WordNode(pos=(1188, 1201), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1201, 1202)),
  CommandNode(pos=(1204, 1222), parts=[
    WordNode(pos=(1204, 1211), word='command'),
    WordNode(pos=(1212, 1214), word='-v'),
    WordNode(pos=(1215, 1222), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(1223, 1225)),
  CommandNode(pos=(1226, 1244), parts=[
    WordNode(pos=(1226, 1233), word='gpgconf'),
    WordNode(pos=(1234, 1240), word='--kill'),
    WordNode(pos=(1241, 1244), word='all'),
  ]),
  OperatorNode(op='||', pos=(1245, 1247)),
  CommandNode(pos=(1248, 1249), parts=[
    WordNode(pos=(1248, 1249), word=':'),
  ]),
  OperatorNode(op=';', pos=(1249, 1250)),
  CommandNode(pos=(1252, 1289), parts=[
    WordNode(pos=(1252, 1254), word='rm'),
    WordNode(pos=(1255, 1258), word='-rf'),
    WordNode(pos=(1259, 1271), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(1260, 1270), value='GNUPGHOME'),
    ]),
    WordNode(pos=(1272, 1289), word='httpd.tar.bz2.asc'),
  ]),
  OperatorNode(op=';', pos=(1289, 1290)),
  CommandNode(pos=(1293, 1305), parts=[
    WordNode(pos=(1293, 1298), word='mkdir'),
    WordNode(pos=(1299, 1301), word='-p'),
    WordNode(pos=(1302, 1305), word='src'),
  ]),
  OperatorNode(op=';', pos=(1305, 1306)),
  CommandNode(pos=(1308, 1357), parts=[
    WordNode(pos=(1308, 1311), word='tar'),
    WordNode(pos=(1312, 1315), word='-xf'),
    WordNode(pos=(1316, 1329), word='httpd.tar.bz2'),
    WordNode(pos=(1330, 1332), word='-C'),
    WordNode(pos=(1333, 1336), word='src'),
    WordNode(pos=(1337, 1357), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1357, 1358)),
  CommandNode(pos=(1360, 1376), parts=[
    WordNode(pos=(1360, 1362), word='rm'),
    WordNode(pos=(1363, 1376), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1376, 1377)),
  CommandNode(pos=(1379, 1385), parts=[
    WordNode(pos=(1379, 1381), word='cd'),
    WordNode(pos=(1382, 1385), word='src'),
  ]),
  OperatorNode(op=';', pos=(1385, 1386)),
  FunctionNode(pos=(1389, 1683), parts=[
    WordNode(pos=(1389, 1396), word='patches'),
    ReservedwordNode(pos=(1396, 1397), word='('),
    ReservedwordNode(pos=(1397, 1398), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(1399, 1400), word='{'),
      ListNode(pos=(1403, 1680), parts=[
          CompoundNode(list=[
            WhileNode(pos=(1403, 1679), parts=[
              ReservedwordNode(pos=(1403, 1408), word='while'),
              ListNode(pos=(1409, 1424), parts=[
                  CommandNode(pos=(1409, 1423), parts=[
                    WordNode(pos=(1409, 1410), word='['),
                    WordNode(pos=(1411, 1415), word='$#', parts=[
                      ParameterNode(pos=(1412, 1414), value='#'),
                    ]),
                    WordNode(pos=(1416, 1419), word='-gt'),
                    WordNode(pos=(1420, 1421), word='0'),
                    WordNode(pos=(1422, 1423), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(1423, 1424)),
                ]),
              ReservedwordNode(pos=(1425, 1427), word='do'),
              ListNode(pos=(1431, 1672), parts=[
                  CommandNode(pos=(1431, 1451), parts=[
                    WordNode(pos=(1431, 1436), word='local'),
                    WordNode(pos=(1437, 1451), word='patchFile=$1', parts=[
                      ParameterNode(pos=(1448, 1450), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1451, 1452)),
                  CommandNode(pos=(1453, 1458), parts=[
                    WordNode(pos=(1453, 1458), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1458, 1459)),
                  CommandNode(pos=(1463, 1485), parts=[
                    WordNode(pos=(1463, 1468), word='local'),
                    WordNode(pos=(1469, 1485), word='patchSha256=$1', parts=[
                      ParameterNode(pos=(1482, 1484), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1485, 1486)),
                  CommandNode(pos=(1487, 1492), parts=[
                    WordNode(pos=(1487, 1492), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1492, 1493)),
                  CommandNode(pos=(1497, 1566), parts=[
                    WordNode(pos=(1497, 1502), word='ddist'),
                    WordNode(pos=(1503, 1515), word='$patchFile', parts=[
                      ParameterNode(pos=(1504, 1514), value='patchFile'),
                    ]),
                    WordNode(pos=(1516, 1566), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
                      ParameterNode(pos=(1540, 1554), value='HTTPD_VERSION'),
                      ParameterNode(pos=(1555, 1565), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1566, 1567)),
                  PipelineNode(pos=(1571, 1619), parts=[
                    CommandNode(pos=(1571, 1602), parts=[
                      WordNode(pos=(1571, 1575), word='echo'),
                      WordNode(pos=(1576, 1602), word='$patchSha256 *$patchFile', parts=[
                        ParameterNode(pos=(1577, 1589), value='patchSha256'),
                        ParameterNode(pos=(1591, 1601), value='patchFile'),
                      ]),
                    ]),
                    PipeNode(pipe='|', pos=(1603, 1604)),
                    CommandNode(pos=(1605, 1619), parts=[
                      WordNode(pos=(1605, 1614), word='sha256sum'),
                      WordNode(pos=(1615, 1617), word='-c'),
                      WordNode(pos=(1618, 1619), word='-'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1619, 1620)),
                  CommandNode(pos=(1624, 1648), parts=[
                    WordNode(pos=(1624, 1629), word='patch'),
                    WordNode(pos=(1630, 1633), word='-p0'),
                    RedirectNode(output=
                      WordNode(pos=(1636, 1648), word='$patchFile', parts=[
                        ParameterNode(pos=(1637, 1647), value='patchFile'),
                      ]), pos=(1634, 1648), type='<'),
                  ]),
                  OperatorNode(op=';', pos=(1648, 1649)),
                  CommandNode(pos=(1653, 1671), parts=[
                    WordNode(pos=(1653, 1655), word='rm'),
                    WordNode(pos=(1656, 1658), word='-f'),
                    WordNode(pos=(1659, 1671), word='$patchFile', parts=[
                      ParameterNode(pos=(1660, 1670), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1671, 1672)),
                ]),
              ReservedwordNode(pos=(1675, 1679), word='done'),
            ]),
          ], pos=(1403, 1679)),
          OperatorNode(op=';', pos=(1679, 1680)),
        ]),
      ReservedwordNode(pos=(1682, 1683), word='}'),
    ], pos=(1399, 1683)),
  ]),
  OperatorNode(op=';', pos=(1683, 1684)),
  CommandNode(pos=(1686, 1708), parts=[
    WordNode(pos=(1686, 1693), word='patches'),
    WordNode(pos=(1694, 1708), word='$HTTPD_PATCHES', parts=[
      ParameterNode(pos=(1694, 1708), value='HTTPD_PATCHES'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1708, 1709)),
  CommandNode(pos=(1712, 1769), parts=[
    AssignmentNode(pos=(1712, 1769), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1723, 1767), parts=[
          WordNode(pos=(1723, 1740), word='dpkg-architecture'),
          WordNode(pos=(1741, 1748), word='--query'),
          WordNode(pos=(1749, 1767), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1721, 1768)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1769, 1770)),
  CommandNode(pos=(1772, 1891), parts=[
    WordNode(pos=(1772, 1783), word='./configure'),
    WordNode(pos=(1786, 1804), word='--build=$gnuArch', parts=[
      ParameterNode(pos=(1795, 1803), value='gnuArch'),
    ]),
    WordNode(pos=(1807, 1831), word='--prefix=$HTTPD_PREFIX', parts=[
      ParameterNode(pos=(1817, 1830), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(1834, 1864), word='--enable-mods-shared=reallyall'),
    WordNode(pos=(1867, 1891), word='--enable-mpms-shared=all'),
  ]),
  OperatorNode(op=';', pos=(1893, 1894)),
  CommandNode(pos=(1896, 1914), parts=[
    WordNode(pos=(1896, 1900), word='make'),
    WordNode(pos=(1901, 1903), word='-j'),
    WordNode(pos=(1904, 1914), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1907, 1912), parts=[
          WordNode(pos=(1907, 1912), word='nproc'),
        ]), pos=(1905, 1913)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1914, 1915)),
  CommandNode(pos=(1917, 1929), parts=[
    WordNode(pos=(1917, 1921), word='make'),
    WordNode(pos=(1922, 1929), word='install'),
  ]),
  OperatorNode(op=';', pos=(1929, 1930)),
  CommandNode(pos=(1933, 1938), parts=[
    WordNode(pos=(1933, 1935), word='cd'),
    WordNode(pos=(1936, 1938), word='..'),
  ]),
  OperatorNode(op=';', pos=(1938, 1939)),
  CommandNode(pos=(1941, 1961), parts=[
    WordNode(pos=(1941, 1943), word='rm'),
    WordNode(pos=(1944, 1946), word='-r'),
    WordNode(pos=(1947, 1950), word='src'),
    WordNode(pos=(1951, 1954), word='man'),
    WordNode(pos=(1955, 1961), word='manual'),
  ]),
  OperatorNode(op=';', pos=(1961, 1962)),
  CommandNode(pos=(1965, 2207), parts=[
    WordNode(pos=(1965, 1968), word='sed'),
    WordNode(pos=(1969, 1972), word='-ri'),
    WordNode(pos=(1975, 1977), word='-e'),
    WordNode(pos=(1978, 2024), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(2027, 2029), word='-e'),
    WordNode(pos=(2030, 2075), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
    WordNode(pos=(2078, 2080), word='-e'),
    WordNode(pos=(2081, 2129), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(2132, 2163), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
      ParameterNode(pos=(2133, 2146), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(2166, 2207), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
      ParameterNode(pos=(2167, 2180), value='HTTPD_PREFIX'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2209, 2210)),
  CommandNode(pos=(2213, 2243), parts=[
    WordNode(pos=(2213, 2221), word='apt-mark'),
    WordNode(pos=(2222, 2226), word='auto'),
    WordNode(pos=(2227, 2231), word='.*'),
    RedirectNode(output=
      WordNode(pos=(2234, 2243), word='/dev/null'), pos=(2232, 2243), type='>'),
  ]),
  OperatorNode(op=';', pos=(2243, 2244)),
  CommandNode(pos=(2246, 2268), parts=[
    WordNode(pos=(2246, 2247), word='['),
    WordNode(pos=(2248, 2250), word='-z'),
    WordNode(pos=(2251, 2266), word='$savedAptMark', parts=[
      ParameterNode(pos=(2252, 2265), value='savedAptMark'),
    ]),
    WordNode(pos=(2267, 2268), word=']'),
  ]),
  OperatorNode(op='||', pos=(2269, 2271)),
  CommandNode(pos=(2272, 2301), parts=[
    WordNode(pos=(2272, 2280), word='apt-mark'),
    WordNode(pos=(2281, 2287), word='manual'),
    WordNode(pos=(2288, 2301), word='$savedAptMark', parts=[
      ParameterNode(pos=(2288, 2301), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2301, 2302)),
  PipelineNode(pos=(2304, 2493), parts=[
    CommandNode(pos=(2304, 2358), parts=[
      WordNode(pos=(2304, 2308), word='find'),
      WordNode(pos=(2309, 2319), word='/usr/local'),
      WordNode(pos=(2320, 2325), word='-type'),
      WordNode(pos=(2326, 2327), word='f'),
      WordNode(pos=(2328, 2339), word='-executable'),
      WordNode(pos=(2340, 2345), word='-exec'),
      WordNode(pos=(2346, 2349), word='ldd'),
      WordNode(pos=(2350, 2354), word='{}'),
      WordNode(pos=(2355, 2358), word=';'),
    ]),
    PipeNode(pipe='|', pos=(2361, 2362)),
    CommandNode(pos=(2363, 2391), parts=[
      WordNode(pos=(2363, 2366), word='awk'),
      WordNode(pos=(2367, 2391), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(2394, 2395)),
    CommandNode(pos=(2396, 2403), parts=[
      WordNode(pos=(2396, 2400), word='sort'),
      WordNode(pos=(2401, 2403), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(2406, 2407)),
    CommandNode(pos=(2408, 2436), parts=[
      WordNode(pos=(2408, 2413), word='xargs'),
      WordNode(pos=(2414, 2416), word='-r'),
      WordNode(pos=(2417, 2427), word='dpkg-query'),
      WordNode(pos=(2428, 2436), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(2439, 2440)),
    CommandNode(pos=(2441, 2452), parts=[
      WordNode(pos=(2441, 2444), word='cut'),
      WordNode(pos=(2445, 2448), word='-d:'),
      WordNode(pos=(2449, 2452), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(2455, 2456)),
    CommandNode(pos=(2457, 2464), parts=[
      WordNode(pos=(2457, 2461), word='sort'),
      WordNode(pos=(2462, 2464), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(2467, 2468)),
    CommandNode(pos=(2469, 2493), parts=[
      WordNode(pos=(2469, 2474), word='xargs'),
      WordNode(pos=(2475, 2477), word='-r'),
      WordNode(pos=(2478, 2486), word='apt-mark'),
      WordNode(pos=(2487, 2493), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2495, 2496)),
  CommandNode(pos=(2498, 2574), parts=[
    WordNode(pos=(2498, 2505), word='apt-get'),
    WordNode(pos=(2506, 2511), word='purge'),
    WordNode(pos=(2512, 2514), word='-y'),
    WordNode(pos=(2515, 2528), word='--auto-remove'),
    WordNode(pos=(2529, 2531), word='-o'),
    WordNode(pos=(2532, 2574), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(2574, 2575)),
  CommandNode(pos=(2578, 2586), parts=[
    WordNode(pos=(2578, 2583), word='httpd'),
    WordNode(pos=(2584, 2586), word='-v'),
  ]),
])


129) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


130) set -eux;  if [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then   grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;   sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker;   ! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;  fi;  apt-get update; apt-get install -y locales; rm -rf /var/lib/apt/lists/*;  localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

ListNode(pos=(0, 396), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CompoundNode(list=[
    IfNode(pos=(11, 243), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 49), parts=[
          CommandNode(pos=(14, 48), parts=[
            WordNode(pos=(14, 15), word='['),
            WordNode(pos=(16, 18), word='-f'),
            WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
            WordNode(pos=(47, 48), word=']'),
          ]),
          OperatorNode(op=';', pos=(48, 49)),
        ]),
      ReservedwordNode(pos=(50, 54), word='then'),
      ListNode(pos=(57, 239), parts=[
          CommandNode(pos=(57, 112), parts=[
            WordNode(pos=(57, 61), word='grep'),
            WordNode(pos=(62, 64), word='-q'),
            WordNode(pos=(65, 84), word='/usr/share/locale'),
            WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(112, 113)),
          CommandNode(pos=(116, 177), parts=[
            WordNode(pos=(116, 119), word='sed'),
            WordNode(pos=(120, 123), word='-ri'),
            WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
            WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(177, 178)),
          PipelineNode(pos=(181, 238), parts=[
            ReservedwordNode(pos=(181, 182), word='!'),
            CommandNode(pos=(183, 238), parts=[
              WordNode(pos=(183, 187), word='grep'),
              WordNode(pos=(188, 190), word='-q'),
              WordNode(pos=(191, 210), word='/usr/share/locale'),
              WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
            ]),
          ]),
          OperatorNode(op=';', pos=(238, 239)),
        ]),
      ReservedwordNode(pos=(241, 243), word='fi'),
    ]),
  ], pos=(11, 243)),
  OperatorNode(op=';', pos=(243, 244)),
  CommandNode(pos=(246, 260), parts=[
    WordNode(pos=(246, 253), word='apt-get'),
    WordNode(pos=(254, 260), word='update'),
  ]),
  OperatorNode(op=';', pos=(260, 261)),
  CommandNode(pos=(262, 288), parts=[
    WordNode(pos=(262, 269), word='apt-get'),
    WordNode(pos=(270, 277), word='install'),
    WordNode(pos=(278, 280), word='-y'),
    WordNode(pos=(281, 288), word='locales'),
  ]),
  OperatorNode(op=';', pos=(288, 289)),
  CommandNode(pos=(290, 317), parts=[
    WordNode(pos=(290, 292), word='rm'),
    WordNode(pos=(293, 296), word='-rf'),
    WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(317, 318)),
  CommandNode(pos=(320, 396), parts=[
    WordNode(pos=(320, 329), word='localedef'),
    WordNode(pos=(330, 332), word='-i'),
    WordNode(pos=(333, 338), word='en_US'),
    WordNode(pos=(339, 341), word='-c'),
    WordNode(pos=(342, 344), word='-f'),
    WordNode(pos=(345, 350), word='UTF-8'),
    WordNode(pos=(351, 353), word='-A'),
    WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
    WordNode(pos=(385, 396), word='en_US.UTF-8'),
  ]),
])


131) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


132) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


133) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


134) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


135) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


136) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


137) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


138) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


139) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


140) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


141) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


142) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


143) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


144) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


145) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


146) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


147) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


148) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


149) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


150) set -ex;   if command -v a2enmod; then   a2enmod rewrite;  fi;   savedAptMark="$(apt-mark showmanual)";   apt-get update;  apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev  ;   docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr;  docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip  ;   apt-mark auto '.*' > /dev/null;  apt-mark manual $savedAptMark;  ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so   | awk '/=>/ { print $3 }'   | sort -u   | xargs -r dpkg-query -S   | cut -d: -f1   | sort -u   | xargs -rt apt-mark manual;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 734), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(11, 61), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 33), parts=[
          CommandNode(pos=(14, 32), parts=[
            WordNode(pos=(14, 21), word='command'),
            WordNode(pos=(22, 24), word='-v'),
            WordNode(pos=(25, 32), word='a2enmod'),
          ]),
          OperatorNode(op=';', pos=(32, 33)),
        ]),
      ReservedwordNode(pos=(34, 38), word='then'),
      ListNode(pos=(41, 57), parts=[
          CommandNode(pos=(41, 56), parts=[
            WordNode(pos=(41, 48), word='a2enmod'),
            WordNode(pos=(49, 56), word='rewrite'),
          ]),
          OperatorNode(op=';', pos=(56, 57)),
        ]),
      ReservedwordNode(pos=(59, 61), word='fi'),
    ]),
  ], pos=(11, 61)),
  OperatorNode(op=';', pos=(61, 62)),
  CommandNode(pos=(65, 102), parts=[
    AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(81, 100), parts=[
          WordNode(pos=(81, 89), word='apt-mark'),
          WordNode(pos=(90, 100), word='showmanual'),
        ]), pos=(79, 101)),
    ]),
  ]),
  OperatorNode(op=';', pos=(102, 103)),
  CommandNode(pos=(106, 120), parts=[
    WordNode(pos=(106, 113), word='apt-get'),
    WordNode(pos=(114, 120), word='update'),
  ]),
  OperatorNode(op=';', pos=(120, 121)),
  CommandNode(pos=(123, 217), parts=[
    WordNode(pos=(123, 130), word='apt-get'),
    WordNode(pos=(131, 138), word='install'),
    WordNode(pos=(139, 141), word='-y'),
    WordNode(pos=(142, 165), word='--no-install-recommends'),
    WordNode(pos=(168, 179), word='libjpeg-dev'),
    WordNode(pos=(182, 192), word='libpng-dev'),
    WordNode(pos=(195, 204), word='libpq-dev'),
    WordNode(pos=(207, 217), word='libzip-dev'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(223, 291), parts=[
    WordNode(pos=(223, 247), word='docker-php-ext-configure'),
    WordNode(pos=(248, 250), word='gd'),
    WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
    WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
  ]),
  OperatorNode(op=';', pos=(291, 292)),
  CommandNode(pos=(294, 375), parts=[
    WordNode(pos=(294, 316), word='docker-php-ext-install'),
    WordNode(pos=(317, 319), word='-j'),
    WordNode(pos=(320, 330), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(323, 328), parts=[
          WordNode(pos=(323, 328), word='nproc'),
        ]), pos=(321, 329)),
    ]),
    WordNode(pos=(333, 335), word='gd'),
    WordNode(pos=(338, 345), word='opcache'),
    WordNode(pos=(348, 357), word='pdo_mysql'),
    WordNode(pos=(360, 369), word='pdo_pgsql'),
    WordNode(pos=(372, 375), word='zip'),
  ]),
  OperatorNode(op=';', pos=(377, 378)),
  CommandNode(pos=(381, 411), parts=[
    WordNode(pos=(381, 389), word='apt-mark'),
    WordNode(pos=(390, 394), word='auto'),
    WordNode(pos=(395, 399), word='.*'),
    RedirectNode(output=
      WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
  ]),
  OperatorNode(op=';', pos=(411, 412)),
  CommandNode(pos=(414, 443), parts=[
    WordNode(pos=(414, 422), word='apt-mark'),
    WordNode(pos=(423, 429), word='manual'),
    WordNode(pos=(430, 443), word='$savedAptMark', parts=[
      ParameterNode(pos=(430, 443), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(443, 444)),
  PipelineNode(pos=(446, 624), parts=[
    CommandNode(pos=(446, 499), parts=[
      WordNode(pos=(446, 449), word='ldd'),
      WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(453, 492), parts=[
            WordNode(pos=(453, 456), word='php'),
            WordNode(pos=(457, 459), word='-r'),
            WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
          ]), pos=(451, 493)),
      ]),
    ]),
    PipeNode(pipe='|', pos=(502, 503)),
    CommandNode(pos=(504, 527), parts=[
      WordNode(pos=(504, 507), word='awk'),
      WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
    ]),
    PipeNode(pipe='|', pos=(530, 531)),
    CommandNode(pos=(532, 539), parts=[
      WordNode(pos=(532, 536), word='sort'),
      WordNode(pos=(537, 539), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(542, 543)),
    CommandNode(pos=(544, 566), parts=[
      WordNode(pos=(544, 549), word='xargs'),
      WordNode(pos=(550, 552), word='-r'),
      WordNode(pos=(553, 563), word='dpkg-query'),
      WordNode(pos=(564, 566), word='-S'),
    ]),
    PipeNode(pipe='|', pos=(569, 570)),
    CommandNode(pos=(571, 582), parts=[
      WordNode(pos=(571, 574), word='cut'),
      WordNode(pos=(575, 578), word='-d:'),
      WordNode(pos=(579, 582), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(585, 586)),
    CommandNode(pos=(587, 594), parts=[
      WordNode(pos=(587, 591), word='sort'),
      WordNode(pos=(592, 594), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(597, 598)),
    CommandNode(pos=(599, 624), parts=[
      WordNode(pos=(599, 604), word='xargs'),
      WordNode(pos=(605, 608), word='-rt'),
      WordNode(pos=(609, 617), word='apt-mark'),
      WordNode(pos=(618, 624), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(624, 625)),
  CommandNode(pos=(628, 704), parts=[
    WordNode(pos=(628, 635), word='apt-get'),
    WordNode(pos=(636, 641), word='purge'),
    WordNode(pos=(642, 644), word='-y'),
    WordNode(pos=(645, 658), word='--auto-remove'),
    WordNode(pos=(659, 661), word='-o'),
    WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(707, 734), parts=[
    WordNode(pos=(707, 709), word='rm'),
    WordNode(pos=(710, 713), word='-rf'),
    WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
  ]),
])


151) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


152) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


153) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


154) set -ex;  apt-get update;  apt-get install -y --no-install-recommends   libjemalloc1   procps   iproute2  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends    dirmngr    gnupg   ;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 249), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CommandNode(pos=(27, 104), parts=[
    WordNode(pos=(27, 34), word='apt-get'),
    WordNode(pos=(35, 42), word='install'),
    WordNode(pos=(43, 45), word='-y'),
    WordNode(pos=(46, 69), word='--no-install-recommends'),
    WordNode(pos=(72, 84), word='libjemalloc1'),
    WordNode(pos=(87, 93), word='procps'),
    WordNode(pos=(96, 104), word='iproute2'),
  ]),
  OperatorNode(op=';', pos=(106, 107)),
  CompoundNode(list=[
    IfNode(pos=(109, 219), parts=[
      ReservedwordNode(pos=(109, 111), word='if'),
      ListNode(pos=(112, 141), parts=[
          PipelineNode(pos=(112, 140), parts=[
            ReservedwordNode(pos=(112, 113), word='!'),
            CommandNode(pos=(114, 140), parts=[
              WordNode(pos=(114, 121), word='command'),
              WordNode(pos=(122, 124), word='-v'),
              WordNode(pos=(125, 128), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(131, 140), word='/dev/null'), pos=(129, 140), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(142, 146), word='then'),
      ListNode(pos=(149, 215), parts=[
          CommandNode(pos=(149, 211), parts=[
            WordNode(pos=(149, 156), word='apt-get'),
            WordNode(pos=(157, 164), word='install'),
            WordNode(pos=(165, 167), word='-y'),
            WordNode(pos=(168, 191), word='--no-install-recommends'),
            WordNode(pos=(195, 202), word='dirmngr'),
            WordNode(pos=(206, 211), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(214, 215)),
        ]),
      ReservedwordNode(pos=(217, 219), word='fi'),
    ]),
  ], pos=(109, 219)),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 249), parts=[
    WordNode(pos=(222, 224), word='rm'),
    WordNode(pos=(225, 228), word='-rf'),
    WordNode(pos=(229, 249), word='/var/lib/apt/lists/*'),
  ]),
])


155) set -eux;  mkdir -p "$GHOST_INSTALL";  chown node:node "$GHOST_INSTALL";   su-exec node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL";   cd "$GHOST_INSTALL";  su-exec node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db";  su-exec node ghost config paths.contentPath "$GHOST_CONTENT";   su-exec node ln -s config.production.json "$GHOST_INSTALL/config.development.json";  readlink -f "$GHOST_INSTALL/config.development.json";   mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig";  mkdir -p "$GHOST_CONTENT";  chown node:node "$GHOST_CONTENT";   "$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator" --version;   cd "$GHOST_INSTALL/current";  sqlite3Version="$(npm view . optionalDependencies.sqlite3)";  if ! su-exec node yarn add "sqlite3@$sqlite3Version" --force; then   apk add --no-cache --virtual .build-deps python make gcc g++ libc-dev;     su-exec node yarn add "sqlite3@$sqlite3Version" --force --build-from-source;     apk del --no-network .build-deps;  fi;   su-exec node yarn cache clean;  su-exec node npm cache clean --force;  npm cache clean --force;  rm -rv /tmp/yarn* /tmp/v8*

ListNode(pos=(0, 1245), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 36), parts=[
    WordNode(pos=(11, 16), word='mkdir'),
    WordNode(pos=(17, 19), word='-p'),
    WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(36, 37)),
  CommandNode(pos=(39, 71), parts=[
    WordNode(pos=(39, 44), word='chown'),
    WordNode(pos=(45, 54), word='node:node'),
    WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(71, 72)),
  CommandNode(pos=(75, 188), parts=[
    WordNode(pos=(75, 82), word='su-exec'),
    WordNode(pos=(83, 87), word='node'),
    WordNode(pos=(88, 93), word='ghost'),
    WordNode(pos=(94, 101), word='install'),
    WordNode(pos=(102, 118), word='$GHOST_VERSION', parts=[
      ParameterNode(pos=(103, 117), value='GHOST_VERSION'),
    ]),
    WordNode(pos=(119, 123), word='--db'),
    WordNode(pos=(124, 131), word='sqlite3'),
    WordNode(pos=(132, 143), word='--no-prompt'),
    WordNode(pos=(144, 154), word='--no-stack'),
    WordNode(pos=(155, 165), word='--no-setup'),
    WordNode(pos=(166, 171), word='--dir'),
    WordNode(pos=(172, 188), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(173, 187), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(188, 189)),
  CommandNode(pos=(192, 211), parts=[
    WordNode(pos=(192, 194), word='cd'),
    WordNode(pos=(195, 211), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(196, 210), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(211, 212)),
  CommandNode(pos=(214, 357), parts=[
    WordNode(pos=(214, 221), word='su-exec'),
    WordNode(pos=(222, 226), word='node'),
    WordNode(pos=(227, 232), word='ghost'),
    WordNode(pos=(233, 239), word='config'),
    WordNode(pos=(240, 244), word='--ip'),
    WordNode(pos=(245, 252), word='0.0.0.0'),
    WordNode(pos=(253, 259), word='--port'),
    WordNode(pos=(260, 264), word='2368'),
    WordNode(pos=(265, 276), word='--no-prompt'),
    WordNode(pos=(277, 281), word='--db'),
    WordNode(pos=(282, 289), word='sqlite3'),
    WordNode(pos=(290, 295), word='--url'),
    WordNode(pos=(296, 317), word='http://localhost:2368'),
    WordNode(pos=(318, 326), word='--dbpath'),
    WordNode(pos=(327, 357), word='$GHOST_CONTENT/data/ghost.db', parts=[
      ParameterNode(pos=(328, 342), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(357, 358)),
  CommandNode(pos=(360, 420), parts=[
    WordNode(pos=(360, 367), word='su-exec'),
    WordNode(pos=(368, 372), word='node'),
    WordNode(pos=(373, 378), word='ghost'),
    WordNode(pos=(379, 385), word='config'),
    WordNode(pos=(386, 403), word='paths.contentPath'),
    WordNode(pos=(404, 420), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(405, 419), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(420, 421)),
  CommandNode(pos=(424, 506), parts=[
    WordNode(pos=(424, 431), word='su-exec'),
    WordNode(pos=(432, 436), word='node'),
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 442), word='-s'),
    WordNode(pos=(443, 465), word='config.production.json'),
    WordNode(pos=(466, 506), word='$GHOST_INSTALL/config.development.json', parts=[
      ParameterNode(pos=(467, 481), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(506, 507)),
  CommandNode(pos=(509, 561), parts=[
    WordNode(pos=(509, 517), word='readlink'),
    WordNode(pos=(518, 520), word='-f'),
    WordNode(pos=(521, 561), word='$GHOST_INSTALL/config.development.json', parts=[
      ParameterNode(pos=(522, 536), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(561, 562)),
  CommandNode(pos=(565, 614), parts=[
    WordNode(pos=(565, 567), word='mv'),
    WordNode(pos=(568, 584), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(569, 583), value='GHOST_CONTENT'),
    ]),
    WordNode(pos=(585, 614), word='$GHOST_INSTALL/content.orig', parts=[
      ParameterNode(pos=(586, 600), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(614, 615)),
  CommandNode(pos=(617, 642), parts=[
    WordNode(pos=(617, 622), word='mkdir'),
    WordNode(pos=(623, 625), word='-p'),
    WordNode(pos=(626, 642), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(627, 641), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(642, 643)),
  CommandNode(pos=(645, 677), parts=[
    WordNode(pos=(645, 650), word='chown'),
    WordNode(pos=(651, 660), word='node:node'),
    WordNode(pos=(661, 677), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(662, 676), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(677, 678)),
  CommandNode(pos=(681, 760), parts=[
    WordNode(pos=(681, 750), word='$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator', parts=[
      ParameterNode(pos=(682, 696), value='GHOST_INSTALL'),
    ]),
    WordNode(pos=(751, 760), word='--version'),
  ]),
  OperatorNode(op=';', pos=(760, 761)),
  CommandNode(pos=(764, 791), parts=[
    WordNode(pos=(764, 766), word='cd'),
    WordNode(pos=(767, 791), word='$GHOST_INSTALL/current', parts=[
      ParameterNode(pos=(768, 782), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(791, 792)),
  CommandNode(pos=(794, 853), parts=[
    WordNode(pos=(794, 853), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(812, 851), parts=[
          WordNode(pos=(812, 815), word='npm'),
          WordNode(pos=(816, 820), word='view'),
          WordNode(pos=(821, 822), word='.'),
          WordNode(pos=(823, 851), word='optionalDependencies.sqlite3'),
        ]), pos=(810, 852)),
    ]),
  ]),
  OperatorNode(op=';', pos=(853, 854)),
  CompoundNode(list=[
    IfNode(pos=(856, 1118), parts=[
      ReservedwordNode(pos=(856, 858), word='if'),
      ListNode(pos=(859, 917), parts=[
          PipelineNode(pos=(859, 916), parts=[
            ReservedwordNode(pos=(859, 860), word='!'),
            CommandNode(pos=(861, 916), parts=[
              WordNode(pos=(861, 868), word='su-exec'),
              WordNode(pos=(869, 873), word='node'),
              WordNode(pos=(874, 878), word='yarn'),
              WordNode(pos=(879, 882), word='add'),
              WordNode(pos=(883, 908), word='sqlite3@$sqlite3Version', parts=[
                ParameterNode(pos=(892, 907), value='sqlite3Version'),
              ]),
              WordNode(pos=(909, 916), word='--force'),
            ]),
          ]),
          OperatorNode(op=';', pos=(916, 917)),
        ]),
      ReservedwordNode(pos=(918, 922), word='then'),
      ListNode(pos=(925, 1114), parts=[
          CommandNode(pos=(925, 994), parts=[
            WordNode(pos=(925, 928), word='apk'),
            WordNode(pos=(929, 932), word='add'),
            WordNode(pos=(933, 943), word='--no-cache'),
            WordNode(pos=(944, 953), word='--virtual'),
            WordNode(pos=(954, 965), word='.build-deps'),
            WordNode(pos=(966, 972), word='python'),
            WordNode(pos=(973, 977), word='make'),
            WordNode(pos=(978, 981), word='gcc'),
            WordNode(pos=(982, 985), word='g++'),
            WordNode(pos=(986, 994), word='libc-dev'),
          ]),
          OperatorNode(op=';', pos=(994, 995)),
          CommandNode(pos=(1000, 1075), parts=[
            WordNode(pos=(1000, 1007), word='su-exec'),
            WordNode(pos=(1008, 1012), word='node'),
            WordNode(pos=(1013, 1017), word='yarn'),
            WordNode(pos=(1018, 1021), word='add'),
            WordNode(pos=(1022, 1047), word='sqlite3@$sqlite3Version', parts=[
              ParameterNode(pos=(1031, 1046), value='sqlite3Version'),
            ]),
            WordNode(pos=(1048, 1055), word='--force'),
            WordNode(pos=(1056, 1075), word='--build-from-source'),
          ]),
          OperatorNode(op=';', pos=(1075, 1076)),
          CommandNode(pos=(1081, 1113), parts=[
            WordNode(pos=(1081, 1084), word='apk'),
            WordNode(pos=(1085, 1088), word='del'),
            WordNode(pos=(1089, 1101), word='--no-network'),
            WordNode(pos=(1102, 1113), word='.build-deps'),
          ]),
          OperatorNode(op=';', pos=(1113, 1114)),
        ]),
      ReservedwordNode(pos=(1116, 1118), word='fi'),
    ]),
  ], pos=(856, 1118)),
  OperatorNode(op=';', pos=(1118, 1119)),
  CommandNode(pos=(1122, 1151), parts=[
    WordNode(pos=(1122, 1129), word='su-exec'),
    WordNode(pos=(1130, 1134), word='node'),
    WordNode(pos=(1135, 1139), word='yarn'),
    WordNode(pos=(1140, 1145), word='cache'),
    WordNode(pos=(1146, 1151), word='clean'),
  ]),
  OperatorNode(op=';', pos=(1151, 1152)),
  CommandNode(pos=(1154, 1190), parts=[
    WordNode(pos=(1154, 1161), word='su-exec'),
    WordNode(pos=(1162, 1166), word='node'),
    WordNode(pos=(1167, 1170), word='npm'),
    WordNode(pos=(1171, 1176), word='cache'),
    WordNode(pos=(1177, 1182), word='clean'),
    WordNode(pos=(1183, 1190), word='--force'),
  ]),
  OperatorNode(op=';', pos=(1190, 1191)),
  CommandNode(pos=(1193, 1216), parts=[
    WordNode(pos=(1193, 1196), word='npm'),
    WordNode(pos=(1197, 1202), word='cache'),
    WordNode(pos=(1203, 1208), word='clean'),
    WordNode(pos=(1209, 1216), word='--force'),
  ]),
  OperatorNode(op=';', pos=(1216, 1217)),
  CommandNode(pos=(1219, 1245), parts=[
    WordNode(pos=(1219, 1221), word='rm'),
    WordNode(pos=(1222, 1225), word='-rv'),
    WordNode(pos=(1226, 1236), word='/tmp/yarn*'),
    WordNode(pos=(1237, 1245), word='/tmp/v8*'),
  ]),
])


156) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


157) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


158) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


159) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


160) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


161) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


162) set -ex  && cd /usr/local/etc  && if [ -d php-fpm.d ]; then   sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;   cp php-fpm.d/www.conf.default php-fpm.d/www.conf;  else   mkdir php-fpm.d;   cp php-fpm.conf.default php-fpm.d/www.conf;   {    echo '[global]';    echo 'include=etc/php-fpm.d/*.conf';   } | tee php-fpm.conf;  fi  && {   echo '[global]';   echo 'error_log = /proc/self/fd/2';   echo;   echo '[www]';   echo '; if we send this to /proc/self/fd/1, it never appears';   echo 'access.log = /proc/self/fd/2';   echo;   echo 'clear_env = no';   echo;   echo '; Ensure worker stdout and stderr are sent to the main error log.';   echo 'catch_workers_output = yes';  } | tee php-fpm.d/docker.conf  && {   echo '[global]';   echo 'daemonize = no';   echo;   echo '[www]';   echo 'listen = 9000';  } | tee php-fpm.d/zz-docker.conf

ListNode(pos=(0, 856), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 29), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 29), word='/usr/local/etc'),
  ]),
  OperatorNode(op='&&', pos=(31, 33)),
  CompoundNode(list=[
    IfNode(pos=(34, 348), parts=[
      ReservedwordNode(pos=(34, 36), word='if'),
      ListNode(pos=(37, 54), parts=[
          CommandNode(pos=(37, 53), parts=[
            WordNode(pos=(37, 38), word='['),
            WordNode(pos=(39, 41), word='-d'),
            WordNode(pos=(42, 51), word='php-fpm.d'),
            WordNode(pos=(52, 53), word=']'),
          ]),
          OperatorNode(op=';', pos=(53, 54)),
        ]),
      ReservedwordNode(pos=(55, 59), word='then'),
      ListNode(pos=(62, 185), parts=[
          PipelineNode(pos=(62, 132), parts=[
            CommandNode(pos=(62, 101), parts=[
              WordNode(pos=(62, 65), word='sed'),
              WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
              WordNode(pos=(81, 101), word='php-fpm.conf.default'),
            ]),
            PipeNode(pipe='|', pos=(102, 103)),
            CommandNode(pos=(104, 132), parts=[
              WordNode(pos=(104, 107), word='tee'),
              WordNode(pos=(108, 120), word='php-fpm.conf'),
              RedirectNode(output=
                WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(132, 133)),
          CommandNode(pos=(136, 184), parts=[
            WordNode(pos=(136, 138), word='cp'),
            WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
            WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(184, 185)),
        ]),
      ReservedwordNode(pos=(187, 191), word='else'),
      ListNode(pos=(194, 344), parts=[
          CommandNode(pos=(194, 209), parts=[
            WordNode(pos=(194, 199), word='mkdir'),
            WordNode(pos=(200, 209), word='php-fpm.d'),
          ]),
          OperatorNode(op=';', pos=(209, 210)),
          CommandNode(pos=(213, 255), parts=[
            WordNode(pos=(213, 215), word='cp'),
            WordNode(pos=(216, 236), word='php-fpm.conf.default'),
            WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(255, 256)),
          PipelineNode(pos=(259, 343), parts=[
            CompoundNode(list=[
              ReservedwordNode(pos=(259, 260), word='{'),
              ListNode(pos=(264, 320), parts=[
                  CommandNode(pos=(264, 279), parts=[
                    WordNode(pos=(264, 268), word='echo'),
                    WordNode(pos=(269, 279), word='[global]'),
                  ]),
                  OperatorNode(op=';', pos=(279, 280)),
                  CommandNode(pos=(284, 319), parts=[
                    WordNode(pos=(284, 288), word='echo'),
                    WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
                  ]),
                  OperatorNode(op=';', pos=(319, 320)),
                ]),
              ReservedwordNode(pos=(323, 324), word='}'),
            ], pos=(259, 324)),
            PipeNode(pipe='|', pos=(325, 326)),
            CommandNode(pos=(327, 343), parts=[
              WordNode(pos=(327, 330), word='tee'),
              WordNode(pos=(331, 343), word='php-fpm.conf'),
            ]),
          ]),
          OperatorNode(op=';', pos=(343, 344)),
        ]),
      ReservedwordNode(pos=(346, 348), word='fi'),
    ]),
  ], pos=(34, 348)),
  OperatorNode(op='&&', pos=(350, 352)),
  PipelineNode(pos=(353, 724), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(353, 354), word='{'),
      ListNode(pos=(357, 693), parts=[
          CommandNode(pos=(357, 372), parts=[
            WordNode(pos=(357, 361), word='echo'),
            WordNode(pos=(362, 372), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(372, 373)),
          CommandNode(pos=(376, 410), parts=[
            WordNode(pos=(376, 380), word='echo'),
            WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(410, 411)),
          CommandNode(pos=(414, 418), parts=[
            WordNode(pos=(414, 418), word='echo'),
          ]),
          OperatorNode(op=';', pos=(418, 419)),
          CommandNode(pos=(422, 434), parts=[
            WordNode(pos=(422, 426), word='echo'),
            WordNode(pos=(427, 434), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(434, 435)),
          CommandNode(pos=(438, 499), parts=[
            WordNode(pos=(438, 442), word='echo'),
            WordNode(pos=(443, 499), word='; if we send this to /proc/self/fd/1, it never appears'),
          ]),
          OperatorNode(op=';', pos=(499, 500)),
          CommandNode(pos=(503, 538), parts=[
            WordNode(pos=(503, 507), word='echo'),
            WordNode(pos=(508, 538), word='access.log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(538, 539)),
          CommandNode(pos=(542, 546), parts=[
            WordNode(pos=(542, 546), word='echo'),
          ]),
          OperatorNode(op=';', pos=(546, 547)),
          CommandNode(pos=(550, 571), parts=[
            WordNode(pos=(550, 554), word='echo'),
            WordNode(pos=(555, 571), word='clear_env = no'),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CommandNode(pos=(575, 579), parts=[
            WordNode(pos=(575, 579), word='echo'),
          ]),
          OperatorNode(op=';', pos=(579, 580)),
          CommandNode(pos=(583, 655), parts=[
            WordNode(pos=(583, 587), word='echo'),
            WordNode(pos=(588, 655), word='; Ensure worker stdout and stderr are sent to the main error log.'),
          ]),
          OperatorNode(op=';', pos=(655, 656)),
          CommandNode(pos=(659, 692), parts=[
            WordNode(pos=(659, 663), word='echo'),
            WordNode(pos=(664, 692), word='catch_workers_output = yes'),
          ]),
          OperatorNode(op=';', pos=(692, 693)),
        ]),
      ReservedwordNode(pos=(695, 696), word='}'),
    ], pos=(353, 696)),
    PipeNode(pipe='|', pos=(697, 698)),
    CommandNode(pos=(699, 724), parts=[
      WordNode(pos=(699, 702), word='tee'),
      WordNode(pos=(703, 724), word='php-fpm.d/docker.conf'),
    ]),
  ]),
  OperatorNode(op='&&', pos=(726, 728)),
  PipelineNode(pos=(729, 856), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(729, 730), word='{'),
      ListNode(pos=(733, 822), parts=[
          CommandNode(pos=(733, 748), parts=[
            WordNode(pos=(733, 737), word='echo'),
            WordNode(pos=(738, 748), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(748, 749)),
          CommandNode(pos=(752, 773), parts=[
            WordNode(pos=(752, 756), word='echo'),
            WordNode(pos=(757, 773), word='daemonize = no'),
          ]),
          OperatorNode(op=';', pos=(773, 774)),
          CommandNode(pos=(777, 781), parts=[
            WordNode(pos=(777, 781), word='echo'),
          ]),
          OperatorNode(op=';', pos=(781, 782)),
          CommandNode(pos=(785, 797), parts=[
            WordNode(pos=(785, 789), word='echo'),
            WordNode(pos=(790, 797), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(797, 798)),
          CommandNode(pos=(801, 821), parts=[
            WordNode(pos=(801, 805), word='echo'),
            WordNode(pos=(806, 821), word='listen = 9000'),
          ]),
          OperatorNode(op=';', pos=(821, 822)),
        ]),
      ReservedwordNode(pos=(824, 825), word='}'),
    ], pos=(729, 825)),
    PipeNode(pipe='|', pos=(826, 827)),
    CommandNode(pos=(828, 856), parts=[
      WordNode(pos=(828, 831), word='tee'),
      WordNode(pos=(832, 856), word='php-fpm.d/zz-docker.conf'),
    ]),
  ]),
])


163) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


164) set -eux;  if [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then   grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;   sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker;   ! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;  fi;  apt-get update; apt-get install -y locales; rm -rf /var/lib/apt/lists/*;  localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

ListNode(pos=(0, 396), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CompoundNode(list=[
    IfNode(pos=(11, 243), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 49), parts=[
          CommandNode(pos=(14, 48), parts=[
            WordNode(pos=(14, 15), word='['),
            WordNode(pos=(16, 18), word='-f'),
            WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
            WordNode(pos=(47, 48), word=']'),
          ]),
          OperatorNode(op=';', pos=(48, 49)),
        ]),
      ReservedwordNode(pos=(50, 54), word='then'),
      ListNode(pos=(57, 239), parts=[
          CommandNode(pos=(57, 112), parts=[
            WordNode(pos=(57, 61), word='grep'),
            WordNode(pos=(62, 64), word='-q'),
            WordNode(pos=(65, 84), word='/usr/share/locale'),
            WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(112, 113)),
          CommandNode(pos=(116, 177), parts=[
            WordNode(pos=(116, 119), word='sed'),
            WordNode(pos=(120, 123), word='-ri'),
            WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
            WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(177, 178)),
          PipelineNode(pos=(181, 238), parts=[
            ReservedwordNode(pos=(181, 182), word='!'),
            CommandNode(pos=(183, 238), parts=[
              WordNode(pos=(183, 187), word='grep'),
              WordNode(pos=(188, 190), word='-q'),
              WordNode(pos=(191, 210), word='/usr/share/locale'),
              WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
            ]),
          ]),
          OperatorNode(op=';', pos=(238, 239)),
        ]),
      ReservedwordNode(pos=(241, 243), word='fi'),
    ]),
  ], pos=(11, 243)),
  OperatorNode(op=';', pos=(243, 244)),
  CommandNode(pos=(246, 260), parts=[
    WordNode(pos=(246, 253), word='apt-get'),
    WordNode(pos=(254, 260), word='update'),
  ]),
  OperatorNode(op=';', pos=(260, 261)),
  CommandNode(pos=(262, 288), parts=[
    WordNode(pos=(262, 269), word='apt-get'),
    WordNode(pos=(270, 277), word='install'),
    WordNode(pos=(278, 280), word='-y'),
    WordNode(pos=(281, 288), word='locales'),
  ]),
  OperatorNode(op=';', pos=(288, 289)),
  CommandNode(pos=(290, 317), parts=[
    WordNode(pos=(290, 292), word='rm'),
    WordNode(pos=(293, 296), word='-rf'),
    WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(317, 318)),
  CommandNode(pos=(320, 396), parts=[
    WordNode(pos=(320, 329), word='localedef'),
    WordNode(pos=(330, 332), word='-i'),
    WordNode(pos=(333, 338), word='en_US'),
    WordNode(pos=(339, 341), word='-c'),
    WordNode(pos=(342, 344), word='-f'),
    WordNode(pos=(345, 350), word='UTF-8'),
    WordNode(pos=(351, 353), word='-A'),
    WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
    WordNode(pos=(385, 396), word='en_US.UTF-8'),
  ]),
])


165) set -eux;   %%ARCH-CASE%%;   if ! wget -O docker.tgz "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz"; then   echo >&2 "error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'";   exit 1;  fi;   tar --extract   --file docker.tgz   --strip-components 1   --directory /usr/local/bin/  ;  rm docker.tgz;   dockerd --version;  docker --version

ListNode(pos=(0, 436), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 25), parts=[
    WordNode(pos=(12, 25), word='%%ARCH-CASE%%'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CompoundNode(list=[
    IfNode(pos=(29, 288), parts=[
      ReservedwordNode(pos=(29, 31), word='if'),
      ListNode(pos=(32, 157), parts=[
          PipelineNode(pos=(32, 156), parts=[
            ReservedwordNode(pos=(32, 33), word='!'),
            CommandNode(pos=(34, 156), parts=[
              WordNode(pos=(34, 38), word='wget'),
              WordNode(pos=(39, 41), word='-O'),
              WordNode(pos=(42, 52), word='docker.tgz'),
              WordNode(pos=(53, 156), word='https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz', parts=[
                ParameterNode(pos=(95, 112), value='DOCKER_CHANNEL'),
                ParameterNode(pos=(113, 126), value='dockerArch'),
                ParameterNode(pos=(134, 151), value='DOCKER_VERSION'),
              ]),
            ]),
          ]),
          OperatorNode(op=';', pos=(156, 157)),
        ]),
      ReservedwordNode(pos=(158, 162), word='then'),
      ListNode(pos=(165, 284), parts=[
          CommandNode(pos=(165, 273), parts=[
            WordNode(pos=(165, 169), word='echo'),
            RedirectNode(output=2, pos=(170, 173), type='>&'),
            WordNode(pos=(174, 273), word="error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'", parts=[
              ParameterNode(pos=(209, 226), value='DOCKER_VERSION'),
              ParameterNode(pos=(234, 251), value='DOCKER_CHANNEL'),
              ParameterNode(pos=(258, 271), value='dockerArch'),
            ]),
          ]),
          OperatorNode(op=';', pos=(273, 274)),
          CommandNode(pos=(277, 283), parts=[
            WordNode(pos=(277, 281), word='exit'),
            WordNode(pos=(282, 283), word='1'),
          ]),
          OperatorNode(op=';', pos=(283, 284)),
        ]),
      ReservedwordNode(pos=(286, 288), word='fi'),
    ]),
  ], pos=(29, 288)),
  OperatorNode(op=';', pos=(288, 289)),
  CommandNode(pos=(292, 378), parts=[
    WordNode(pos=(292, 295), word='tar'),
    WordNode(pos=(296, 305), word='--extract'),
    WordNode(pos=(308, 314), word='--file'),
    WordNode(pos=(315, 325), word='docker.tgz'),
    WordNode(pos=(328, 346), word='--strip-components'),
    WordNode(pos=(347, 348), word='1'),
    WordNode(pos=(351, 362), word='--directory'),
    WordNode(pos=(363, 378), word='/usr/local/bin/'),
  ]),
  OperatorNode(op=';', pos=(380, 381)),
  CommandNode(pos=(383, 396), parts=[
    WordNode(pos=(383, 385), word='rm'),
    WordNode(pos=(386, 396), word='docker.tgz'),
  ]),
  OperatorNode(op=';', pos=(396, 397)),
  CommandNode(pos=(400, 417), parts=[
    WordNode(pos=(400, 407), word='dockerd'),
    WordNode(pos=(408, 417), word='--version'),
  ]),
  OperatorNode(op=';', pos=(417, 418)),
  CommandNode(pos=(420, 436), parts=[
    WordNode(pos=(420, 426), word='docker'),
    WordNode(pos=(427, 436), word='--version'),
  ]),
])


166) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


167) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


168) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


169) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


170) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


171) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


172) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


173) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


174) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


175) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


176) set -ex;   if command -v a2enmod; then   a2enmod rewrite;  fi;   savedAptMark="$(apt-mark showmanual)";   apt-get update;  apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev  ;   docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr;  docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip  ;   apt-mark auto '.*' > /dev/null;  apt-mark manual $savedAptMark;  ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so   | awk '/=>/ { print $3 }'   | sort -u   | xargs -r dpkg-query -S   | cut -d: -f1   | sort -u   | xargs -rt apt-mark manual;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 734), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(11, 61), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 33), parts=[
          CommandNode(pos=(14, 32), parts=[
            WordNode(pos=(14, 21), word='command'),
            WordNode(pos=(22, 24), word='-v'),
            WordNode(pos=(25, 32), word='a2enmod'),
          ]),
          OperatorNode(op=';', pos=(32, 33)),
        ]),
      ReservedwordNode(pos=(34, 38), word='then'),
      ListNode(pos=(41, 57), parts=[
          CommandNode(pos=(41, 56), parts=[
            WordNode(pos=(41, 48), word='a2enmod'),
            WordNode(pos=(49, 56), word='rewrite'),
          ]),
          OperatorNode(op=';', pos=(56, 57)),
        ]),
      ReservedwordNode(pos=(59, 61), word='fi'),
    ]),
  ], pos=(11, 61)),
  OperatorNode(op=';', pos=(61, 62)),
  CommandNode(pos=(65, 102), parts=[
    AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(81, 100), parts=[
          WordNode(pos=(81, 89), word='apt-mark'),
          WordNode(pos=(90, 100), word='showmanual'),
        ]), pos=(79, 101)),
    ]),
  ]),
  OperatorNode(op=';', pos=(102, 103)),
  CommandNode(pos=(106, 120), parts=[
    WordNode(pos=(106, 113), word='apt-get'),
    WordNode(pos=(114, 120), word='update'),
  ]),
  OperatorNode(op=';', pos=(120, 121)),
  CommandNode(pos=(123, 217), parts=[
    WordNode(pos=(123, 130), word='apt-get'),
    WordNode(pos=(131, 138), word='install'),
    WordNode(pos=(139, 141), word='-y'),
    WordNode(pos=(142, 165), word='--no-install-recommends'),
    WordNode(pos=(168, 179), word='libjpeg-dev'),
    WordNode(pos=(182, 192), word='libpng-dev'),
    WordNode(pos=(195, 204), word='libpq-dev'),
    WordNode(pos=(207, 217), word='libzip-dev'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(223, 291), parts=[
    WordNode(pos=(223, 247), word='docker-php-ext-configure'),
    WordNode(pos=(248, 250), word='gd'),
    WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
    WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
  ]),
  OperatorNode(op=';', pos=(291, 292)),
  CommandNode(pos=(294, 375), parts=[
    WordNode(pos=(294, 316), word='docker-php-ext-install'),
    WordNode(pos=(317, 319), word='-j'),
    WordNode(pos=(320, 330), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(323, 328), parts=[
          WordNode(pos=(323, 328), word='nproc'),
        ]), pos=(321, 329)),
    ]),
    WordNode(pos=(333, 335), word='gd'),
    WordNode(pos=(338, 345), word='opcache'),
    WordNode(pos=(348, 357), word='pdo_mysql'),
    WordNode(pos=(360, 369), word='pdo_pgsql'),
    WordNode(pos=(372, 375), word='zip'),
  ]),
  OperatorNode(op=';', pos=(377, 378)),
  CommandNode(pos=(381, 411), parts=[
    WordNode(pos=(381, 389), word='apt-mark'),
    WordNode(pos=(390, 394), word='auto'),
    WordNode(pos=(395, 399), word='.*'),
    RedirectNode(output=
      WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
  ]),
  OperatorNode(op=';', pos=(411, 412)),
  CommandNode(pos=(414, 443), parts=[
    WordNode(pos=(414, 422), word='apt-mark'),
    WordNode(pos=(423, 429), word='manual'),
    WordNode(pos=(430, 443), word='$savedAptMark', parts=[
      ParameterNode(pos=(430, 443), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(443, 444)),
  PipelineNode(pos=(446, 624), parts=[
    CommandNode(pos=(446, 499), parts=[
      WordNode(pos=(446, 449), word='ldd'),
      WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(453, 492), parts=[
            WordNode(pos=(453, 456), word='php'),
            WordNode(pos=(457, 459), word='-r'),
            WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
          ]), pos=(451, 493)),
      ]),
    ]),
    PipeNode(pipe='|', pos=(502, 503)),
    CommandNode(pos=(504, 527), parts=[
      WordNode(pos=(504, 507), word='awk'),
      WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
    ]),
    PipeNode(pipe='|', pos=(530, 531)),
    CommandNode(pos=(532, 539), parts=[
      WordNode(pos=(532, 536), word='sort'),
      WordNode(pos=(537, 539), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(542, 543)),
    CommandNode(pos=(544, 566), parts=[
      WordNode(pos=(544, 549), word='xargs'),
      WordNode(pos=(550, 552), word='-r'),
      WordNode(pos=(553, 563), word='dpkg-query'),
      WordNode(pos=(564, 566), word='-S'),
    ]),
    PipeNode(pipe='|', pos=(569, 570)),
    CommandNode(pos=(571, 582), parts=[
      WordNode(pos=(571, 574), word='cut'),
      WordNode(pos=(575, 578), word='-d:'),
      WordNode(pos=(579, 582), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(585, 586)),
    CommandNode(pos=(587, 594), parts=[
      WordNode(pos=(587, 591), word='sort'),
      WordNode(pos=(592, 594), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(597, 598)),
    CommandNode(pos=(599, 624), parts=[
      WordNode(pos=(599, 604), word='xargs'),
      WordNode(pos=(605, 608), word='-rt'),
      WordNode(pos=(609, 617), word='apt-mark'),
      WordNode(pos=(618, 624), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(624, 625)),
  CommandNode(pos=(628, 704), parts=[
    WordNode(pos=(628, 635), word='apt-get'),
    WordNode(pos=(636, 641), word='purge'),
    WordNode(pos=(642, 644), word='-y'),
    WordNode(pos=(645, 658), word='--auto-remove'),
    WordNode(pos=(659, 661), word='-o'),
    WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(707, 734), parts=[
    WordNode(pos=(707, 709), word='rm'),
    WordNode(pos=(710, 713), word='-rf'),
    WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
  ]),
])


177) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


178) set -eux;  if [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then   grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;   sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker;   ! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;  fi;  apt-get update; apt-get install -y locales; rm -rf /var/lib/apt/lists/*;  localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

ListNode(pos=(0, 396), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CompoundNode(list=[
    IfNode(pos=(11, 243), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 49), parts=[
          CommandNode(pos=(14, 48), parts=[
            WordNode(pos=(14, 15), word='['),
            WordNode(pos=(16, 18), word='-f'),
            WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
            WordNode(pos=(47, 48), word=']'),
          ]),
          OperatorNode(op=';', pos=(48, 49)),
        ]),
      ReservedwordNode(pos=(50, 54), word='then'),
      ListNode(pos=(57, 239), parts=[
          CommandNode(pos=(57, 112), parts=[
            WordNode(pos=(57, 61), word='grep'),
            WordNode(pos=(62, 64), word='-q'),
            WordNode(pos=(65, 84), word='/usr/share/locale'),
            WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(112, 113)),
          CommandNode(pos=(116, 177), parts=[
            WordNode(pos=(116, 119), word='sed'),
            WordNode(pos=(120, 123), word='-ri'),
            WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
            WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(177, 178)),
          PipelineNode(pos=(181, 238), parts=[
            ReservedwordNode(pos=(181, 182), word='!'),
            CommandNode(pos=(183, 238), parts=[
              WordNode(pos=(183, 187), word='grep'),
              WordNode(pos=(188, 190), word='-q'),
              WordNode(pos=(191, 210), word='/usr/share/locale'),
              WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
            ]),
          ]),
          OperatorNode(op=';', pos=(238, 239)),
        ]),
      ReservedwordNode(pos=(241, 243), word='fi'),
    ]),
  ], pos=(11, 243)),
  OperatorNode(op=';', pos=(243, 244)),
  CommandNode(pos=(246, 260), parts=[
    WordNode(pos=(246, 253), word='apt-get'),
    WordNode(pos=(254, 260), word='update'),
  ]),
  OperatorNode(op=';', pos=(260, 261)),
  CommandNode(pos=(262, 288), parts=[
    WordNode(pos=(262, 269), word='apt-get'),
    WordNode(pos=(270, 277), word='install'),
    WordNode(pos=(278, 280), word='-y'),
    WordNode(pos=(281, 288), word='locales'),
  ]),
  OperatorNode(op=';', pos=(288, 289)),
  CommandNode(pos=(290, 317), parts=[
    WordNode(pos=(290, 292), word='rm'),
    WordNode(pos=(293, 296), word='-rf'),
    WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(317, 318)),
  CommandNode(pos=(320, 396), parts=[
    WordNode(pos=(320, 329), word='localedef'),
    WordNode(pos=(330, 332), word='-i'),
    WordNode(pos=(333, 338), word='en_US'),
    WordNode(pos=(339, 341), word='-c'),
    WordNode(pos=(342, 344), word='-f'),
    WordNode(pos=(345, 350), word='UTF-8'),
    WordNode(pos=(351, 353), word='-A'),
    WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
    WordNode(pos=(385, 396), word='en_US.UTF-8'),
  ]),
])


179) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


180) set -eux;  mkdir -p "$GHOST_INSTALL";  chown node:node "$GHOST_INSTALL";   gosu node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL";   cd "$GHOST_INSTALL";  gosu node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db";  gosu node ghost config paths.contentPath "$GHOST_CONTENT";   gosu node ln -s config.production.json "$GHOST_INSTALL/config.development.json";  readlink -f "$GHOST_INSTALL/config.development.json";   mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig";  mkdir -p "$GHOST_CONTENT";  chown node:node "$GHOST_CONTENT";   "$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator" --version;   cd "$GHOST_INSTALL/current";  sqlite3Version="$(npm view . optionalDependencies.sqlite3)";  if ! gosu node yarn add "sqlite3@$sqlite3Version" --force; then   savedAptMark="$(apt-mark showmanual)";   apt-get update;   apt-get install -y --no-install-recommends python make gcc g++ libc-dev;   rm -rf /var/lib/apt/lists/*;     gosu node yarn add "sqlite3@$sqlite3Version" --force --build-from-source;     apt-mark showmanual | xargs apt-mark auto > /dev/null;   [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;   apt-get purge -y --auto-remove;  fi;   gosu node yarn cache clean;  gosu node npm cache clean --force;  npm cache clean --force;  rm -rv /tmp/yarn* /tmp/v8*

ListNode(pos=(0, 1427), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 36), parts=[
    WordNode(pos=(11, 16), word='mkdir'),
    WordNode(pos=(17, 19), word='-p'),
    WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(36, 37)),
  CommandNode(pos=(39, 71), parts=[
    WordNode(pos=(39, 44), word='chown'),
    WordNode(pos=(45, 54), word='node:node'),
    WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(71, 72)),
  CommandNode(pos=(75, 185), parts=[
    WordNode(pos=(75, 79), word='gosu'),
    WordNode(pos=(80, 84), word='node'),
    WordNode(pos=(85, 90), word='ghost'),
    WordNode(pos=(91, 98), word='install'),
    WordNode(pos=(99, 115), word='$GHOST_VERSION', parts=[
      ParameterNode(pos=(100, 114), value='GHOST_VERSION'),
    ]),
    WordNode(pos=(116, 120), word='--db'),
    WordNode(pos=(121, 128), word='sqlite3'),
    WordNode(pos=(129, 140), word='--no-prompt'),
    WordNode(pos=(141, 151), word='--no-stack'),
    WordNode(pos=(152, 162), word='--no-setup'),
    WordNode(pos=(163, 168), word='--dir'),
    WordNode(pos=(169, 185), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(170, 184), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(185, 186)),
  CommandNode(pos=(189, 208), parts=[
    WordNode(pos=(189, 191), word='cd'),
    WordNode(pos=(192, 208), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(193, 207), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(208, 209)),
  CommandNode(pos=(211, 351), parts=[
    WordNode(pos=(211, 215), word='gosu'),
    WordNode(pos=(216, 220), word='node'),
    WordNode(pos=(221, 226), word='ghost'),
    WordNode(pos=(227, 233), word='config'),
    WordNode(pos=(234, 238), word='--ip'),
    WordNode(pos=(239, 246), word='0.0.0.0'),
    WordNode(pos=(247, 253), word='--port'),
    WordNode(pos=(254, 258), word='2368'),
    WordNode(pos=(259, 270), word='--no-prompt'),
    WordNode(pos=(271, 275), word='--db'),
    WordNode(pos=(276, 283), word='sqlite3'),
    WordNode(pos=(284, 289), word='--url'),
    WordNode(pos=(290, 311), word='http://localhost:2368'),
    WordNode(pos=(312, 320), word='--dbpath'),
    WordNode(pos=(321, 351), word='$GHOST_CONTENT/data/ghost.db', parts=[
      ParameterNode(pos=(322, 336), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(351, 352)),
  CommandNode(pos=(354, 411), parts=[
    WordNode(pos=(354, 358), word='gosu'),
    WordNode(pos=(359, 363), word='node'),
    WordNode(pos=(364, 369), word='ghost'),
    WordNode(pos=(370, 376), word='config'),
    WordNode(pos=(377, 394), word='paths.contentPath'),
    WordNode(pos=(395, 411), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(396, 410), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(411, 412)),
  CommandNode(pos=(415, 494), parts=[
    WordNode(pos=(415, 419), word='gosu'),
    WordNode(pos=(420, 424), word='node'),
    WordNode(pos=(425, 427), word='ln'),
    WordNode(pos=(428, 430), word='-s'),
    WordNode(pos=(431, 453), word='config.production.json'),
    WordNode(pos=(454, 494), word='$GHOST_INSTALL/config.development.json', parts=[
      ParameterNode(pos=(455, 469), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(494, 495)),
  CommandNode(pos=(497, 549), parts=[
    WordNode(pos=(497, 505), word='readlink'),
    WordNode(pos=(506, 508), word='-f'),
    WordNode(pos=(509, 549), word='$GHOST_INSTALL/config.development.json', parts=[
      ParameterNode(pos=(510, 524), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(549, 550)),
  CommandNode(pos=(553, 602), parts=[
    WordNode(pos=(553, 555), word='mv'),
    WordNode(pos=(556, 572), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(557, 571), value='GHOST_CONTENT'),
    ]),
    WordNode(pos=(573, 602), word='$GHOST_INSTALL/content.orig', parts=[
      ParameterNode(pos=(574, 588), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(602, 603)),
  CommandNode(pos=(605, 630), parts=[
    WordNode(pos=(605, 610), word='mkdir'),
    WordNode(pos=(611, 613), word='-p'),
    WordNode(pos=(614, 630), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(615, 629), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(630, 631)),
  CommandNode(pos=(633, 665), parts=[
    WordNode(pos=(633, 638), word='chown'),
    WordNode(pos=(639, 648), word='node:node'),
    WordNode(pos=(649, 665), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(650, 664), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(665, 666)),
  CommandNode(pos=(669, 748), parts=[
    WordNode(pos=(669, 738), word='$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator', parts=[
      ParameterNode(pos=(670, 684), value='GHOST_INSTALL'),
    ]),
    WordNode(pos=(739, 748), word='--version'),
  ]),
  OperatorNode(op=';', pos=(748, 749)),
  CommandNode(pos=(752, 779), parts=[
    WordNode(pos=(752, 754), word='cd'),
    WordNode(pos=(755, 779), word='$GHOST_INSTALL/current', parts=[
      ParameterNode(pos=(756, 770), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(779, 780)),
  CommandNode(pos=(782, 841), parts=[
    WordNode(pos=(782, 841), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(800, 839), parts=[
          WordNode(pos=(800, 803), word='npm'),
          WordNode(pos=(804, 808), word='view'),
          WordNode(pos=(809, 810), word='.'),
          WordNode(pos=(811, 839), word='optionalDependencies.sqlite3'),
        ]), pos=(798, 840)),
    ]),
  ]),
  OperatorNode(op=';', pos=(841, 842)),
  CompoundNode(list=[
    IfNode(pos=(844, 1306), parts=[
      ReservedwordNode(pos=(844, 846), word='if'),
      ListNode(pos=(847, 902), parts=[
          PipelineNode(pos=(847, 901), parts=[
            ReservedwordNode(pos=(847, 848), word='!'),
            CommandNode(pos=(849, 901), parts=[
              WordNode(pos=(849, 853), word='gosu'),
              WordNode(pos=(854, 858), word='node'),
              WordNode(pos=(859, 863), word='yarn'),
              WordNode(pos=(864, 867), word='add'),
              WordNode(pos=(868, 893), word='sqlite3@$sqlite3Version', parts=[
                ParameterNode(pos=(877, 892), value='sqlite3Version'),
              ]),
              WordNode(pos=(894, 901), word='--force'),
            ]),
          ]),
          OperatorNode(op=';', pos=(901, 902)),
        ]),
      ReservedwordNode(pos=(903, 907), word='then'),
      ListNode(pos=(910, 1302), parts=[
          CommandNode(pos=(910, 947), parts=[
            AssignmentNode(pos=(910, 947), word='savedAptMark=$(apt-mark showmanual)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(926, 945), parts=[
                  WordNode(pos=(926, 934), word='apt-mark'),
                  WordNode(pos=(935, 945), word='showmanual'),
                ]), pos=(924, 946)),
            ]),
          ]),
          OperatorNode(op=';', pos=(947, 948)),
          CommandNode(pos=(951, 965), parts=[
            WordNode(pos=(951, 958), word='apt-get'),
            WordNode(pos=(959, 965), word='update'),
          ]),
          OperatorNode(op=';', pos=(965, 966)),
          CommandNode(pos=(969, 1040), parts=[
            WordNode(pos=(969, 976), word='apt-get'),
            WordNode(pos=(977, 984), word='install'),
            WordNode(pos=(985, 987), word='-y'),
            WordNode(pos=(988, 1011), word='--no-install-recommends'),
            WordNode(pos=(1012, 1018), word='python'),
            WordNode(pos=(1019, 1023), word='make'),
            WordNode(pos=(1024, 1027), word='gcc'),
            WordNode(pos=(1028, 1031), word='g++'),
            WordNode(pos=(1032, 1040), word='libc-dev'),
          ]),
          OperatorNode(op=';', pos=(1040, 1041)),
          CommandNode(pos=(1044, 1071), parts=[
            WordNode(pos=(1044, 1046), word='rm'),
            WordNode(pos=(1047, 1050), word='-rf'),
            WordNode(pos=(1051, 1071), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(1071, 1072)),
          CommandNode(pos=(1077, 1149), parts=[
            WordNode(pos=(1077, 1081), word='gosu'),
            WordNode(pos=(1082, 1086), word='node'),
            WordNode(pos=(1087, 1091), word='yarn'),
            WordNode(pos=(1092, 1095), word='add'),
            WordNode(pos=(1096, 1121), word='sqlite3@$sqlite3Version', parts=[
              ParameterNode(pos=(1105, 1120), value='sqlite3Version'),
            ]),
            WordNode(pos=(1122, 1129), word='--force'),
            WordNode(pos=(1130, 1149), word='--build-from-source'),
          ]),
          OperatorNode(op=';', pos=(1149, 1150)),
          PipelineNode(pos=(1155, 1208), parts=[
            CommandNode(pos=(1155, 1174), parts=[
              WordNode(pos=(1155, 1163), word='apt-mark'),
              WordNode(pos=(1164, 1174), word='showmanual'),
            ]),
            PipeNode(pipe='|', pos=(1175, 1176)),
            CommandNode(pos=(1177, 1208), parts=[
              WordNode(pos=(1177, 1182), word='xargs'),
              WordNode(pos=(1183, 1191), word='apt-mark'),
              WordNode(pos=(1192, 1196), word='auto'),
              RedirectNode(output=
                WordNode(pos=(1199, 1208), word='/dev/null'), pos=(1197, 1208), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1208, 1209)),
          CommandNode(pos=(1212, 1234), parts=[
            WordNode(pos=(1212, 1213), word='['),
            WordNode(pos=(1214, 1216), word='-z'),
            WordNode(pos=(1217, 1232), word='$savedAptMark', parts=[
              ParameterNode(pos=(1218, 1231), value='savedAptMark'),
            ]),
            WordNode(pos=(1233, 1234), word=']'),
          ]),
          OperatorNode(op='||', pos=(1235, 1237)),
          CommandNode(pos=(1238, 1267), parts=[
            WordNode(pos=(1238, 1246), word='apt-mark'),
            WordNode(pos=(1247, 1253), word='manual'),
            WordNode(pos=(1254, 1267), word='$savedAptMark', parts=[
              ParameterNode(pos=(1254, 1267), value='savedAptMark'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1267, 1268)),
          CommandNode(pos=(1271, 1301), parts=[
            WordNode(pos=(1271, 1278), word='apt-get'),
            WordNode(pos=(1279, 1284), word='purge'),
            WordNode(pos=(1285, 1287), word='-y'),
            WordNode(pos=(1288, 1301), word='--auto-remove'),
          ]),
          OperatorNode(op=';', pos=(1301, 1302)),
        ]),
      ReservedwordNode(pos=(1304, 1306), word='fi'),
    ]),
  ], pos=(844, 1306)),
  OperatorNode(op=';', pos=(1306, 1307)),
  CommandNode(pos=(1310, 1336), parts=[
    WordNode(pos=(1310, 1314), word='gosu'),
    WordNode(pos=(1315, 1319), word='node'),
    WordNode(pos=(1320, 1324), word='yarn'),
    WordNode(pos=(1325, 1330), word='cache'),
    WordNode(pos=(1331, 1336), word='clean'),
  ]),
  OperatorNode(op=';', pos=(1336, 1337)),
  CommandNode(pos=(1339, 1372), parts=[
    WordNode(pos=(1339, 1343), word='gosu'),
    WordNode(pos=(1344, 1348), word='node'),
    WordNode(pos=(1349, 1352), word='npm'),
    WordNode(pos=(1353, 1358), word='cache'),
    WordNode(pos=(1359, 1364), word='clean'),
    WordNode(pos=(1365, 1372), word='--force'),
  ]),
  OperatorNode(op=';', pos=(1372, 1373)),
  CommandNode(pos=(1375, 1398), parts=[
    WordNode(pos=(1375, 1378), word='npm'),
    WordNode(pos=(1379, 1384), word='cache'),
    WordNode(pos=(1385, 1390), word='clean'),
    WordNode(pos=(1391, 1398), word='--force'),
  ]),
  OperatorNode(op=';', pos=(1398, 1399)),
  CommandNode(pos=(1401, 1427), parts=[
    WordNode(pos=(1401, 1403), word='rm'),
    WordNode(pos=(1404, 1407), word='-rv'),
    WordNode(pos=(1408, 1418), word='/tmp/yarn*'),
    WordNode(pos=(1419, 1427), word='/tmp/v8*'),
  ]),
])


181) set -ex;   if command -v a2enmod; then   a2enmod rewrite;  fi;   savedAptMark="$(apt-mark showmanual)";   apt-get update;  apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev  ;   docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr;  docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip  ;   apt-mark auto '.*' > /dev/null;  apt-mark manual $savedAptMark;  ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so   | awk '/=>/ { print $3 }'   | sort -u   | xargs -r dpkg-query -S   | cut -d: -f1   | sort -u   | xargs -rt apt-mark manual;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 734), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(11, 61), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 33), parts=[
          CommandNode(pos=(14, 32), parts=[
            WordNode(pos=(14, 21), word='command'),
            WordNode(pos=(22, 24), word='-v'),
            WordNode(pos=(25, 32), word='a2enmod'),
          ]),
          OperatorNode(op=';', pos=(32, 33)),
        ]),
      ReservedwordNode(pos=(34, 38), word='then'),
      ListNode(pos=(41, 57), parts=[
          CommandNode(pos=(41, 56), parts=[
            WordNode(pos=(41, 48), word='a2enmod'),
            WordNode(pos=(49, 56), word='rewrite'),
          ]),
          OperatorNode(op=';', pos=(56, 57)),
        ]),
      ReservedwordNode(pos=(59, 61), word='fi'),
    ]),
  ], pos=(11, 61)),
  OperatorNode(op=';', pos=(61, 62)),
  CommandNode(pos=(65, 102), parts=[
    AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(81, 100), parts=[
          WordNode(pos=(81, 89), word='apt-mark'),
          WordNode(pos=(90, 100), word='showmanual'),
        ]), pos=(79, 101)),
    ]),
  ]),
  OperatorNode(op=';', pos=(102, 103)),
  CommandNode(pos=(106, 120), parts=[
    WordNode(pos=(106, 113), word='apt-get'),
    WordNode(pos=(114, 120), word='update'),
  ]),
  OperatorNode(op=';', pos=(120, 121)),
  CommandNode(pos=(123, 217), parts=[
    WordNode(pos=(123, 130), word='apt-get'),
    WordNode(pos=(131, 138), word='install'),
    WordNode(pos=(139, 141), word='-y'),
    WordNode(pos=(142, 165), word='--no-install-recommends'),
    WordNode(pos=(168, 179), word='libjpeg-dev'),
    WordNode(pos=(182, 192), word='libpng-dev'),
    WordNode(pos=(195, 204), word='libpq-dev'),
    WordNode(pos=(207, 217), word='libzip-dev'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(223, 291), parts=[
    WordNode(pos=(223, 247), word='docker-php-ext-configure'),
    WordNode(pos=(248, 250), word='gd'),
    WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
    WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
  ]),
  OperatorNode(op=';', pos=(291, 292)),
  CommandNode(pos=(294, 375), parts=[
    WordNode(pos=(294, 316), word='docker-php-ext-install'),
    WordNode(pos=(317, 319), word='-j'),
    WordNode(pos=(320, 330), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(323, 328), parts=[
          WordNode(pos=(323, 328), word='nproc'),
        ]), pos=(321, 329)),
    ]),
    WordNode(pos=(333, 335), word='gd'),
    WordNode(pos=(338, 345), word='opcache'),
    WordNode(pos=(348, 357), word='pdo_mysql'),
    WordNode(pos=(360, 369), word='pdo_pgsql'),
    WordNode(pos=(372, 375), word='zip'),
  ]),
  OperatorNode(op=';', pos=(377, 378)),
  CommandNode(pos=(381, 411), parts=[
    WordNode(pos=(381, 389), word='apt-mark'),
    WordNode(pos=(390, 394), word='auto'),
    WordNode(pos=(395, 399), word='.*'),
    RedirectNode(output=
      WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
  ]),
  OperatorNode(op=';', pos=(411, 412)),
  CommandNode(pos=(414, 443), parts=[
    WordNode(pos=(414, 422), word='apt-mark'),
    WordNode(pos=(423, 429), word='manual'),
    WordNode(pos=(430, 443), word='$savedAptMark', parts=[
      ParameterNode(pos=(430, 443), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(443, 444)),
  PipelineNode(pos=(446, 624), parts=[
    CommandNode(pos=(446, 499), parts=[
      WordNode(pos=(446, 449), word='ldd'),
      WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(453, 492), parts=[
            WordNode(pos=(453, 456), word='php'),
            WordNode(pos=(457, 459), word='-r'),
            WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
          ]), pos=(451, 493)),
      ]),
    ]),
    PipeNode(pipe='|', pos=(502, 503)),
    CommandNode(pos=(504, 527), parts=[
      WordNode(pos=(504, 507), word='awk'),
      WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
    ]),
    PipeNode(pipe='|', pos=(530, 531)),
    CommandNode(pos=(532, 539), parts=[
      WordNode(pos=(532, 536), word='sort'),
      WordNode(pos=(537, 539), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(542, 543)),
    CommandNode(pos=(544, 566), parts=[
      WordNode(pos=(544, 549), word='xargs'),
      WordNode(pos=(550, 552), word='-r'),
      WordNode(pos=(553, 563), word='dpkg-query'),
      WordNode(pos=(564, 566), word='-S'),
    ]),
    PipeNode(pipe='|', pos=(569, 570)),
    CommandNode(pos=(571, 582), parts=[
      WordNode(pos=(571, 574), word='cut'),
      WordNode(pos=(575, 578), word='-d:'),
      WordNode(pos=(579, 582), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(585, 586)),
    CommandNode(pos=(587, 594), parts=[
      WordNode(pos=(587, 591), word='sort'),
      WordNode(pos=(592, 594), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(597, 598)),
    CommandNode(pos=(599, 624), parts=[
      WordNode(pos=(599, 604), word='xargs'),
      WordNode(pos=(605, 608), word='-rt'),
      WordNode(pos=(609, 617), word='apt-mark'),
      WordNode(pos=(618, 624), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(624, 625)),
  CommandNode(pos=(628, 704), parts=[
    WordNode(pos=(628, 635), word='apt-get'),
    WordNode(pos=(636, 641), word='purge'),
    WordNode(pos=(642, 644), word='-y'),
    WordNode(pos=(645, 658), word='--auto-remove'),
    WordNode(pos=(659, 661), word='-o'),
    WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(707, 734), parts=[
    WordNode(pos=(707, 709), word='rm'),
    WordNode(pos=(710, 713), word='-rf'),
    WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
  ]),
])


182) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


183) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


184) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


185) set -eux;  apt-get update;  apt-get install -y --no-install-recommends   ca-certificates   jq   numactl  ;  if ! command -v ps > /dev/null; then   apt-get install -y --no-install-recommends procps;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 231), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 103), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 88), word='ca-certificates'),
    WordNode(pos=(91, 93), word='jq'),
    WordNode(pos=(96, 103), word='numactl'),
  ]),
  OperatorNode(op=';', pos=(105, 106)),
  CompoundNode(list=[
    IfNode(pos=(108, 201), parts=[
      ReservedwordNode(pos=(108, 110), word='if'),
      ListNode(pos=(111, 139), parts=[
          PipelineNode(pos=(111, 138), parts=[
            ReservedwordNode(pos=(111, 112), word='!'),
            CommandNode(pos=(113, 138), parts=[
              WordNode(pos=(113, 120), word='command'),
              WordNode(pos=(121, 123), word='-v'),
              WordNode(pos=(124, 126), word='ps'),
              RedirectNode(output=
                WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(138, 139)),
        ]),
      ReservedwordNode(pos=(140, 144), word='then'),
      ListNode(pos=(147, 197), parts=[
          CommandNode(pos=(147, 196), parts=[
            WordNode(pos=(147, 154), word='apt-get'),
            WordNode(pos=(155, 162), word='install'),
            WordNode(pos=(163, 165), word='-y'),
            WordNode(pos=(166, 189), word='--no-install-recommends'),
            WordNode(pos=(190, 196), word='procps'),
          ]),
          OperatorNode(op=';', pos=(196, 197)),
        ]),
      ReservedwordNode(pos=(199, 201), word='fi'),
    ]),
  ], pos=(108, 201)),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(204, 231), parts=[
    WordNode(pos=(204, 206), word='rm'),
    WordNode(pos=(207, 210), word='-rf'),
    WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
  ]),
])


186) set -ex;   apt-get update;  apt-get install -y --no-install-recommends   wget  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends gnupg dirmngr;  fi;  rm -rf /var/lib/apt/lists/*;   dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')";  wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch";  wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc";  export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc;  chmod +x /usr/local/bin/gosu;  gosu --version;  gosu nobody true;   wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js";   apt-get purge -y --auto-remove wget

ListNode(pos=(0, 1013), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 77), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 77), word='wget'),
  ]),
  OperatorNode(op=';', pos=(79, 80)),
  CompoundNode(list=[
    IfNode(pos=(82, 183), parts=[
      ReservedwordNode(pos=(82, 84), word='if'),
      ListNode(pos=(85, 114), parts=[
          PipelineNode(pos=(85, 113), parts=[
            ReservedwordNode(pos=(85, 86), word='!'),
            CommandNode(pos=(87, 113), parts=[
              WordNode(pos=(87, 94), word='command'),
              WordNode(pos=(95, 97), word='-v'),
              WordNode(pos=(98, 101), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(113, 114)),
        ]),
      ReservedwordNode(pos=(115, 119), word='then'),
      ListNode(pos=(122, 179), parts=[
          CommandNode(pos=(122, 178), parts=[
            WordNode(pos=(122, 129), word='apt-get'),
            WordNode(pos=(130, 137), word='install'),
            WordNode(pos=(138, 140), word='-y'),
            WordNode(pos=(141, 164), word='--no-install-recommends'),
            WordNode(pos=(165, 170), word='gnupg'),
            WordNode(pos=(171, 178), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(178, 179)),
        ]),
      ReservedwordNode(pos=(181, 183), word='fi'),
    ]),
  ], pos=(82, 183)),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(186, 213), parts=[
    WordNode(pos=(186, 188), word='rm'),
    WordNode(pos=(189, 192), word='-rf'),
    WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(213, 214)),
  CommandNode(pos=(217, 282), parts=[
    AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(229, 280), parts=[
          CommandNode(pos=(229, 254), parts=[
            WordNode(pos=(229, 233), word='dpkg'),
            WordNode(pos=(234, 254), word='--print-architecture'),
          ]),
          PipeNode(pipe='|', pos=(255, 256)),
          CommandNode(pos=(257, 280), parts=[
            WordNode(pos=(257, 260), word='awk'),
            WordNode(pos=(261, 264), word='-F-'),
            WordNode(pos=(265, 280), word='{ print $NF }'),
          ]),
        ]), pos=(227, 281)),
    ]),
  ]),
  OperatorNode(op=';', pos=(282, 283)),
  CommandNode(pos=(285, 392), parts=[
    WordNode(pos=(285, 289), word='wget'),
    WordNode(pos=(290, 292), word='-O'),
    WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
    WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
      ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
      ParameterNode(pos=(382, 391), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(392, 393)),
  CommandNode(pos=(395, 510), parts=[
    WordNode(pos=(395, 399), word='wget'),
    WordNode(pos=(400, 402), word='-O'),
    WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
      ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
      ParameterNode(pos=(496, 505), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 544), parts=[
    WordNode(pos=(513, 519), word='export'),
    WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(533, 542), parts=[
          WordNode(pos=(533, 539), word='mktemp'),
          WordNode(pos=(540, 542), word='-d'),
        ]), pos=(531, 543)),
    ]),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(547, 650), parts=[
    WordNode(pos=(547, 550), word='gpg'),
    WordNode(pos=(551, 558), word='--batch'),
    WordNode(pos=(559, 570), word='--keyserver'),
    WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
    WordNode(pos=(598, 609), word='--recv-keys'),
    WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
  ]),
  OperatorNode(op=';', pos=(650, 651)),
  CommandNode(pos=(653, 717), parts=[
    WordNode(pos=(653, 656), word='gpg'),
    WordNode(pos=(657, 664), word='--batch'),
    WordNode(pos=(665, 673), word='--verify'),
    WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(717, 718)),
  CommandNode(pos=(720, 738), parts=[
    WordNode(pos=(720, 727), word='command'),
    WordNode(pos=(728, 730), word='-v'),
    WordNode(pos=(731, 738), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(739, 741)),
  CommandNode(pos=(742, 760), parts=[
    WordNode(pos=(742, 749), word='gpgconf'),
    WordNode(pos=(750, 756), word='--kill'),
    WordNode(pos=(757, 760), word='all'),
  ]),
  OperatorNode(op='||', pos=(761, 763)),
  CommandNode(pos=(764, 765), parts=[
    WordNode(pos=(764, 765), word=':'),
  ]),
  OperatorNode(op=';', pos=(765, 766)),
  CommandNode(pos=(768, 810), parts=[
    WordNode(pos=(768, 770), word='rm'),
    WordNode(pos=(771, 773), word='-r'),
    WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(775, 785), value='GNUPGHOME'),
    ]),
    WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 841), parts=[
    WordNode(pos=(813, 818), word='chmod'),
    WordNode(pos=(819, 821), word='+x'),
    WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(841, 842)),
  CommandNode(pos=(844, 858), parts=[
    WordNode(pos=(844, 848), word='gosu'),
    WordNode(pos=(849, 858), word='--version'),
  ]),
  OperatorNode(op=';', pos=(858, 859)),
  CommandNode(pos=(861, 877), parts=[
    WordNode(pos=(861, 865), word='gosu'),
    WordNode(pos=(866, 872), word='nobody'),
    WordNode(pos=(873, 877), word='true'),
  ]),
  OperatorNode(op=';', pos=(877, 878)),
  CommandNode(pos=(881, 974), parts=[
    WordNode(pos=(881, 885), word='wget'),
    WordNode(pos=(886, 888), word='-O'),
    WordNode(pos=(889, 900), word='/js-yaml.js'),
    WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
      ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(978, 1013), parts=[
    WordNode(pos=(978, 985), word='apt-get'),
    WordNode(pos=(986, 991), word='purge'),
    WordNode(pos=(992, 994), word='-y'),
    WordNode(pos=(995, 1008), word='--auto-remove'),
    WordNode(pos=(1009, 1013), word='wget'),
  ]),
])


187) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


188) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


189) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


190) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


191) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


192) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


193) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


194) set -ex  && cd /usr/local/etc  && if [ -d php-fpm.d ]; then   sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;   cp php-fpm.d/www.conf.default php-fpm.d/www.conf;  else   mkdir php-fpm.d;   cp php-fpm.conf.default php-fpm.d/www.conf;   {    echo '[global]';    echo 'include=etc/php-fpm.d/*.conf';   } | tee php-fpm.conf;  fi  && {   echo '[global]';   echo 'error_log = /proc/self/fd/2';   echo;   echo '[www]';   echo '; if we send this to /proc/self/fd/1, it never appears';   echo 'access.log = /proc/self/fd/2';   echo;   echo 'clear_env = no';   echo;   echo '; Ensure worker stdout and stderr are sent to the main error log.';   echo 'catch_workers_output = yes';  } | tee php-fpm.d/docker.conf  && {   echo '[global]';   echo 'daemonize = no';   echo;   echo '[www]';   echo 'listen = 9000';  } | tee php-fpm.d/zz-docker.conf

ListNode(pos=(0, 856), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 29), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 29), word='/usr/local/etc'),
  ]),
  OperatorNode(op='&&', pos=(31, 33)),
  CompoundNode(list=[
    IfNode(pos=(34, 348), parts=[
      ReservedwordNode(pos=(34, 36), word='if'),
      ListNode(pos=(37, 54), parts=[
          CommandNode(pos=(37, 53), parts=[
            WordNode(pos=(37, 38), word='['),
            WordNode(pos=(39, 41), word='-d'),
            WordNode(pos=(42, 51), word='php-fpm.d'),
            WordNode(pos=(52, 53), word=']'),
          ]),
          OperatorNode(op=';', pos=(53, 54)),
        ]),
      ReservedwordNode(pos=(55, 59), word='then'),
      ListNode(pos=(62, 185), parts=[
          PipelineNode(pos=(62, 132), parts=[
            CommandNode(pos=(62, 101), parts=[
              WordNode(pos=(62, 65), word='sed'),
              WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
              WordNode(pos=(81, 101), word='php-fpm.conf.default'),
            ]),
            PipeNode(pipe='|', pos=(102, 103)),
            CommandNode(pos=(104, 132), parts=[
              WordNode(pos=(104, 107), word='tee'),
              WordNode(pos=(108, 120), word='php-fpm.conf'),
              RedirectNode(output=
                WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(132, 133)),
          CommandNode(pos=(136, 184), parts=[
            WordNode(pos=(136, 138), word='cp'),
            WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
            WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(184, 185)),
        ]),
      ReservedwordNode(pos=(187, 191), word='else'),
      ListNode(pos=(194, 344), parts=[
          CommandNode(pos=(194, 209), parts=[
            WordNode(pos=(194, 199), word='mkdir'),
            WordNode(pos=(200, 209), word='php-fpm.d'),
          ]),
          OperatorNode(op=';', pos=(209, 210)),
          CommandNode(pos=(213, 255), parts=[
            WordNode(pos=(213, 215), word='cp'),
            WordNode(pos=(216, 236), word='php-fpm.conf.default'),
            WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(255, 256)),
          PipelineNode(pos=(259, 343), parts=[
            CompoundNode(list=[
              ReservedwordNode(pos=(259, 260), word='{'),
              ListNode(pos=(264, 320), parts=[
                  CommandNode(pos=(264, 279), parts=[
                    WordNode(pos=(264, 268), word='echo'),
                    WordNode(pos=(269, 279), word='[global]'),
                  ]),
                  OperatorNode(op=';', pos=(279, 280)),
                  CommandNode(pos=(284, 319), parts=[
                    WordNode(pos=(284, 288), word='echo'),
                    WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
                  ]),
                  OperatorNode(op=';', pos=(319, 320)),
                ]),
              ReservedwordNode(pos=(323, 324), word='}'),
            ], pos=(259, 324)),
            PipeNode(pipe='|', pos=(325, 326)),
            CommandNode(pos=(327, 343), parts=[
              WordNode(pos=(327, 330), word='tee'),
              WordNode(pos=(331, 343), word='php-fpm.conf'),
            ]),
          ]),
          OperatorNode(op=';', pos=(343, 344)),
        ]),
      ReservedwordNode(pos=(346, 348), word='fi'),
    ]),
  ], pos=(34, 348)),
  OperatorNode(op='&&', pos=(350, 352)),
  PipelineNode(pos=(353, 724), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(353, 354), word='{'),
      ListNode(pos=(357, 693), parts=[
          CommandNode(pos=(357, 372), parts=[
            WordNode(pos=(357, 361), word='echo'),
            WordNode(pos=(362, 372), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(372, 373)),
          CommandNode(pos=(376, 410), parts=[
            WordNode(pos=(376, 380), word='echo'),
            WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(410, 411)),
          CommandNode(pos=(414, 418), parts=[
            WordNode(pos=(414, 418), word='echo'),
          ]),
          OperatorNode(op=';', pos=(418, 419)),
          CommandNode(pos=(422, 434), parts=[
            WordNode(pos=(422, 426), word='echo'),
            WordNode(pos=(427, 434), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(434, 435)),
          CommandNode(pos=(438, 499), parts=[
            WordNode(pos=(438, 442), word='echo'),
            WordNode(pos=(443, 499), word='; if we send this to /proc/self/fd/1, it never appears'),
          ]),
          OperatorNode(op=';', pos=(499, 500)),
          CommandNode(pos=(503, 538), parts=[
            WordNode(pos=(503, 507), word='echo'),
            WordNode(pos=(508, 538), word='access.log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(538, 539)),
          CommandNode(pos=(542, 546), parts=[
            WordNode(pos=(542, 546), word='echo'),
          ]),
          OperatorNode(op=';', pos=(546, 547)),
          CommandNode(pos=(550, 571), parts=[
            WordNode(pos=(550, 554), word='echo'),
            WordNode(pos=(555, 571), word='clear_env = no'),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CommandNode(pos=(575, 579), parts=[
            WordNode(pos=(575, 579), word='echo'),
          ]),
          OperatorNode(op=';', pos=(579, 580)),
          CommandNode(pos=(583, 655), parts=[
            WordNode(pos=(583, 587), word='echo'),
            WordNode(pos=(588, 655), word='; Ensure worker stdout and stderr are sent to the main error log.'),
          ]),
          OperatorNode(op=';', pos=(655, 656)),
          CommandNode(pos=(659, 692), parts=[
            WordNode(pos=(659, 663), word='echo'),
            WordNode(pos=(664, 692), word='catch_workers_output = yes'),
          ]),
          OperatorNode(op=';', pos=(692, 693)),
        ]),
      ReservedwordNode(pos=(695, 696), word='}'),
    ], pos=(353, 696)),
    PipeNode(pipe='|', pos=(697, 698)),
    CommandNode(pos=(699, 724), parts=[
      WordNode(pos=(699, 702), word='tee'),
      WordNode(pos=(703, 724), word='php-fpm.d/docker.conf'),
    ]),
  ]),
  OperatorNode(op='&&', pos=(726, 728)),
  PipelineNode(pos=(729, 856), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(729, 730), word='{'),
      ListNode(pos=(733, 822), parts=[
          CommandNode(pos=(733, 748), parts=[
            WordNode(pos=(733, 737), word='echo'),
            WordNode(pos=(738, 748), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(748, 749)),
          CommandNode(pos=(752, 773), parts=[
            WordNode(pos=(752, 756), word='echo'),
            WordNode(pos=(757, 773), word='daemonize = no'),
          ]),
          OperatorNode(op=';', pos=(773, 774)),
          CommandNode(pos=(777, 781), parts=[
            WordNode(pos=(777, 781), word='echo'),
          ]),
          OperatorNode(op=';', pos=(781, 782)),
          CommandNode(pos=(785, 797), parts=[
            WordNode(pos=(785, 789), word='echo'),
            WordNode(pos=(790, 797), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(797, 798)),
          CommandNode(pos=(801, 821), parts=[
            WordNode(pos=(801, 805), word='echo'),
            WordNode(pos=(806, 821), word='listen = 9000'),
          ]),
          OperatorNode(op=';', pos=(821, 822)),
        ]),
      ReservedwordNode(pos=(824, 825), word='}'),
    ], pos=(729, 825)),
    PipeNode(pipe='|', pos=(826, 827)),
    CommandNode(pos=(828, 856), parts=[
      WordNode(pos=(828, 831), word='tee'),
      WordNode(pos=(832, 856), word='php-fpm.d/zz-docker.conf'),
    ]),
  ]),
])


195) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


196) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


197) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


198) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


199) set -ex  && cd /usr/local/etc  && if [ -d php-fpm.d ]; then   sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;   cp php-fpm.d/www.conf.default php-fpm.d/www.conf;  else   mkdir php-fpm.d;   cp php-fpm.conf.default php-fpm.d/www.conf;   {    echo '[global]';    echo 'include=etc/php-fpm.d/*.conf';   } | tee php-fpm.conf;  fi  && {   echo '[global]';   echo 'error_log = /proc/self/fd/2';   echo; echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'; echo 'log_limit = 8192';   echo;   echo '[www]';   echo '; if we send this to /proc/self/fd/1, it never appears';   echo 'access.log = /proc/self/fd/2';   echo;   echo 'clear_env = no';   echo;   echo '; Ensure worker stdout and stderr are sent to the main error log.';   echo 'catch_workers_output = yes';   echo 'decorate_workers_output = no';  } | tee php-fpm.d/docker.conf  && {   echo '[global]';   echo 'daemonize = no';   echo;   echo '[www]';   echo 'listen = 9000';  } | tee php-fpm.d/zz-docker.conf

ListNode(pos=(0, 1008), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 29), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 29), word='/usr/local/etc'),
  ]),
  OperatorNode(op='&&', pos=(31, 33)),
  CompoundNode(list=[
    IfNode(pos=(34, 348), parts=[
      ReservedwordNode(pos=(34, 36), word='if'),
      ListNode(pos=(37, 54), parts=[
          CommandNode(pos=(37, 53), parts=[
            WordNode(pos=(37, 38), word='['),
            WordNode(pos=(39, 41), word='-d'),
            WordNode(pos=(42, 51), word='php-fpm.d'),
            WordNode(pos=(52, 53), word=']'),
          ]),
          OperatorNode(op=';', pos=(53, 54)),
        ]),
      ReservedwordNode(pos=(55, 59), word='then'),
      ListNode(pos=(62, 185), parts=[
          PipelineNode(pos=(62, 132), parts=[
            CommandNode(pos=(62, 101), parts=[
              WordNode(pos=(62, 65), word='sed'),
              WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
              WordNode(pos=(81, 101), word='php-fpm.conf.default'),
            ]),
            PipeNode(pipe='|', pos=(102, 103)),
            CommandNode(pos=(104, 132), parts=[
              WordNode(pos=(104, 107), word='tee'),
              WordNode(pos=(108, 120), word='php-fpm.conf'),
              RedirectNode(output=
                WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(132, 133)),
          CommandNode(pos=(136, 184), parts=[
            WordNode(pos=(136, 138), word='cp'),
            WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
            WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(184, 185)),
        ]),
      ReservedwordNode(pos=(187, 191), word='else'),
      ListNode(pos=(194, 344), parts=[
          CommandNode(pos=(194, 209), parts=[
            WordNode(pos=(194, 199), word='mkdir'),
            WordNode(pos=(200, 209), word='php-fpm.d'),
          ]),
          OperatorNode(op=';', pos=(209, 210)),
          CommandNode(pos=(213, 255), parts=[
            WordNode(pos=(213, 215), word='cp'),
            WordNode(pos=(216, 236), word='php-fpm.conf.default'),
            WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(255, 256)),
          PipelineNode(pos=(259, 343), parts=[
            CompoundNode(list=[
              ReservedwordNode(pos=(259, 260), word='{'),
              ListNode(pos=(264, 320), parts=[
                  CommandNode(pos=(264, 279), parts=[
                    WordNode(pos=(264, 268), word='echo'),
                    WordNode(pos=(269, 279), word='[global]'),
                  ]),
                  OperatorNode(op=';', pos=(279, 280)),
                  CommandNode(pos=(284, 319), parts=[
                    WordNode(pos=(284, 288), word='echo'),
                    WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
                  ]),
                  OperatorNode(op=';', pos=(319, 320)),
                ]),
              ReservedwordNode(pos=(323, 324), word='}'),
            ], pos=(259, 324)),
            PipeNode(pipe='|', pos=(325, 326)),
            CommandNode(pos=(327, 343), parts=[
              WordNode(pos=(327, 330), word='tee'),
              WordNode(pos=(331, 343), word='php-fpm.conf'),
            ]),
          ]),
          OperatorNode(op=';', pos=(343, 344)),
        ]),
      ReservedwordNode(pos=(346, 348), word='fi'),
    ]),
  ], pos=(34, 348)),
  OperatorNode(op='&&', pos=(350, 352)),
  PipelineNode(pos=(353, 876), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(353, 354), word='{'),
      ListNode(pos=(357, 845), parts=[
          CommandNode(pos=(357, 372), parts=[
            WordNode(pos=(357, 361), word='echo'),
            WordNode(pos=(362, 372), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(372, 373)),
          CommandNode(pos=(376, 410), parts=[
            WordNode(pos=(376, 380), word='echo'),
            WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(410, 411)),
          CommandNode(pos=(414, 418), parts=[
            WordNode(pos=(414, 418), word='echo'),
          ]),
          OperatorNode(op=';', pos=(418, 419)),
          CommandNode(pos=(420, 498), parts=[
            WordNode(pos=(420, 424), word='echo'),
            WordNode(pos=(425, 498), word='; https://github.com/docker-library/php/pull/725#issuecomment-443540114'),
          ]),
          OperatorNode(op=';', pos=(498, 499)),
          CommandNode(pos=(500, 523), parts=[
            WordNode(pos=(500, 504), word='echo'),
            WordNode(pos=(505, 523), word='log_limit = 8192'),
          ]),
          OperatorNode(op=';', pos=(523, 524)),
          CommandNode(pos=(527, 531), parts=[
            WordNode(pos=(527, 531), word='echo'),
          ]),
          OperatorNode(op=';', pos=(531, 532)),
          CommandNode(pos=(535, 547), parts=[
            WordNode(pos=(535, 539), word='echo'),
            WordNode(pos=(540, 547), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(547, 548)),
          CommandNode(pos=(551, 612), parts=[
            WordNode(pos=(551, 555), word='echo'),
            WordNode(pos=(556, 612), word='; if we send this to /proc/self/fd/1, it never appears'),
          ]),
          OperatorNode(op=';', pos=(612, 613)),
          CommandNode(pos=(616, 651), parts=[
            WordNode(pos=(616, 620), word='echo'),
            WordNode(pos=(621, 651), word='access.log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(651, 652)),
          CommandNode(pos=(655, 659), parts=[
            WordNode(pos=(655, 659), word='echo'),
          ]),
          OperatorNode(op=';', pos=(659, 660)),
          CommandNode(pos=(663, 684), parts=[
            WordNode(pos=(663, 667), word='echo'),
            WordNode(pos=(668, 684), word='clear_env = no'),
          ]),
          OperatorNode(op=';', pos=(684, 685)),
          CommandNode(pos=(688, 692), parts=[
            WordNode(pos=(688, 692), word='echo'),
          ]),
          OperatorNode(op=';', pos=(692, 693)),
          CommandNode(pos=(696, 768), parts=[
            WordNode(pos=(696, 700), word='echo'),
            WordNode(pos=(701, 768), word='; Ensure worker stdout and stderr are sent to the main error log.'),
          ]),
          OperatorNode(op=';', pos=(768, 769)),
          CommandNode(pos=(772, 805), parts=[
            WordNode(pos=(772, 776), word='echo'),
            WordNode(pos=(777, 805), word='catch_workers_output = yes'),
          ]),
          OperatorNode(op=';', pos=(805, 806)),
          CommandNode(pos=(809, 844), parts=[
            WordNode(pos=(809, 813), word='echo'),
            WordNode(pos=(814, 844), word='decorate_workers_output = no'),
          ]),
          OperatorNode(op=';', pos=(844, 845)),
        ]),
      ReservedwordNode(pos=(847, 848), word='}'),
    ], pos=(353, 848)),
    PipeNode(pipe='|', pos=(849, 850)),
    CommandNode(pos=(851, 876), parts=[
      WordNode(pos=(851, 854), word='tee'),
      WordNode(pos=(855, 876), word='php-fpm.d/docker.conf'),
    ]),
  ]),
  OperatorNode(op='&&', pos=(878, 880)),
  PipelineNode(pos=(881, 1008), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(881, 882), word='{'),
      ListNode(pos=(885, 974), parts=[
          CommandNode(pos=(885, 900), parts=[
            WordNode(pos=(885, 889), word='echo'),
            WordNode(pos=(890, 900), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(900, 901)),
          CommandNode(pos=(904, 925), parts=[
            WordNode(pos=(904, 908), word='echo'),
            WordNode(pos=(909, 925), word='daemonize = no'),
          ]),
          OperatorNode(op=';', pos=(925, 926)),
          CommandNode(pos=(929, 933), parts=[
            WordNode(pos=(929, 933), word='echo'),
          ]),
          OperatorNode(op=';', pos=(933, 934)),
          CommandNode(pos=(937, 949), parts=[
            WordNode(pos=(937, 941), word='echo'),
            WordNode(pos=(942, 949), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(949, 950)),
          CommandNode(pos=(953, 973), parts=[
            WordNode(pos=(953, 957), word='echo'),
            WordNode(pos=(958, 973), word='listen = 9000'),
          ]),
          OperatorNode(op=';', pos=(973, 974)),
        ]),
      ReservedwordNode(pos=(976, 977), word='}'),
    ], pos=(881, 977)),
    PipeNode(pipe='|', pos=(978, 979)),
    CommandNode(pos=(980, 1008), parts=[
      WordNode(pos=(980, 983), word='tee'),
      WordNode(pos=(984, 1008), word='php-fpm.d/zz-docker.conf'),
    ]),
  ]),
])


200) set -ex;   if command -v a2enmod; then   a2enmod rewrite;  fi;   savedAptMark="$(apt-mark showmanual)";   apt-get update;  apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev  ;   docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr;  docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip  ;   apt-mark auto '.*' > /dev/null;  apt-mark manual $savedAptMark;  ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so   | awk '/=>/ { print $3 }'   | sort -u   | xargs -r dpkg-query -S   | cut -d: -f1   | sort -u   | xargs -rt apt-mark manual;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 734), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(11, 61), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 33), parts=[
          CommandNode(pos=(14, 32), parts=[
            WordNode(pos=(14, 21), word='command'),
            WordNode(pos=(22, 24), word='-v'),
            WordNode(pos=(25, 32), word='a2enmod'),
          ]),
          OperatorNode(op=';', pos=(32, 33)),
        ]),
      ReservedwordNode(pos=(34, 38), word='then'),
      ListNode(pos=(41, 57), parts=[
          CommandNode(pos=(41, 56), parts=[
            WordNode(pos=(41, 48), word='a2enmod'),
            WordNode(pos=(49, 56), word='rewrite'),
          ]),
          OperatorNode(op=';', pos=(56, 57)),
        ]),
      ReservedwordNode(pos=(59, 61), word='fi'),
    ]),
  ], pos=(11, 61)),
  OperatorNode(op=';', pos=(61, 62)),
  CommandNode(pos=(65, 102), parts=[
    AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(81, 100), parts=[
          WordNode(pos=(81, 89), word='apt-mark'),
          WordNode(pos=(90, 100), word='showmanual'),
        ]), pos=(79, 101)),
    ]),
  ]),
  OperatorNode(op=';', pos=(102, 103)),
  CommandNode(pos=(106, 120), parts=[
    WordNode(pos=(106, 113), word='apt-get'),
    WordNode(pos=(114, 120), word='update'),
  ]),
  OperatorNode(op=';', pos=(120, 121)),
  CommandNode(pos=(123, 217), parts=[
    WordNode(pos=(123, 130), word='apt-get'),
    WordNode(pos=(131, 138), word='install'),
    WordNode(pos=(139, 141), word='-y'),
    WordNode(pos=(142, 165), word='--no-install-recommends'),
    WordNode(pos=(168, 179), word='libjpeg-dev'),
    WordNode(pos=(182, 192), word='libpng-dev'),
    WordNode(pos=(195, 204), word='libpq-dev'),
    WordNode(pos=(207, 217), word='libzip-dev'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(223, 291), parts=[
    WordNode(pos=(223, 247), word='docker-php-ext-configure'),
    WordNode(pos=(248, 250), word='gd'),
    WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
    WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
  ]),
  OperatorNode(op=';', pos=(291, 292)),
  CommandNode(pos=(294, 375), parts=[
    WordNode(pos=(294, 316), word='docker-php-ext-install'),
    WordNode(pos=(317, 319), word='-j'),
    WordNode(pos=(320, 330), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(323, 328), parts=[
          WordNode(pos=(323, 328), word='nproc'),
        ]), pos=(321, 329)),
    ]),
    WordNode(pos=(333, 335), word='gd'),
    WordNode(pos=(338, 345), word='opcache'),
    WordNode(pos=(348, 357), word='pdo_mysql'),
    WordNode(pos=(360, 369), word='pdo_pgsql'),
    WordNode(pos=(372, 375), word='zip'),
  ]),
  OperatorNode(op=';', pos=(377, 378)),
  CommandNode(pos=(381, 411), parts=[
    WordNode(pos=(381, 389), word='apt-mark'),
    WordNode(pos=(390, 394), word='auto'),
    WordNode(pos=(395, 399), word='.*'),
    RedirectNode(output=
      WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
  ]),
  OperatorNode(op=';', pos=(411, 412)),
  CommandNode(pos=(414, 443), parts=[
    WordNode(pos=(414, 422), word='apt-mark'),
    WordNode(pos=(423, 429), word='manual'),
    WordNode(pos=(430, 443), word='$savedAptMark', parts=[
      ParameterNode(pos=(430, 443), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(443, 444)),
  PipelineNode(pos=(446, 624), parts=[
    CommandNode(pos=(446, 499), parts=[
      WordNode(pos=(446, 449), word='ldd'),
      WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(453, 492), parts=[
            WordNode(pos=(453, 456), word='php'),
            WordNode(pos=(457, 459), word='-r'),
            WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
          ]), pos=(451, 493)),
      ]),
    ]),
    PipeNode(pipe='|', pos=(502, 503)),
    CommandNode(pos=(504, 527), parts=[
      WordNode(pos=(504, 507), word='awk'),
      WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
    ]),
    PipeNode(pipe='|', pos=(530, 531)),
    CommandNode(pos=(532, 539), parts=[
      WordNode(pos=(532, 536), word='sort'),
      WordNode(pos=(537, 539), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(542, 543)),
    CommandNode(pos=(544, 566), parts=[
      WordNode(pos=(544, 549), word='xargs'),
      WordNode(pos=(550, 552), word='-r'),
      WordNode(pos=(553, 563), word='dpkg-query'),
      WordNode(pos=(564, 566), word='-S'),
    ]),
    PipeNode(pipe='|', pos=(569, 570)),
    CommandNode(pos=(571, 582), parts=[
      WordNode(pos=(571, 574), word='cut'),
      WordNode(pos=(575, 578), word='-d:'),
      WordNode(pos=(579, 582), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(585, 586)),
    CommandNode(pos=(587, 594), parts=[
      WordNode(pos=(587, 591), word='sort'),
      WordNode(pos=(592, 594), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(597, 598)),
    CommandNode(pos=(599, 624), parts=[
      WordNode(pos=(599, 604), word='xargs'),
      WordNode(pos=(605, 608), word='-rt'),
      WordNode(pos=(609, 617), word='apt-mark'),
      WordNode(pos=(618, 624), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(624, 625)),
  CommandNode(pos=(628, 704), parts=[
    WordNode(pos=(628, 635), word='apt-get'),
    WordNode(pos=(636, 641), word='purge'),
    WordNode(pos=(642, 644), word='-y'),
    WordNode(pos=(645, 658), word='--auto-remove'),
    WordNode(pos=(659, 661), word='-o'),
    WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(707, 734), parts=[
    WordNode(pos=(707, 709), word='rm'),
    WordNode(pos=(710, 713), word='-rf'),
    WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
  ]),
])


201) set -eux;  apt-get update;  apt-get install -y --no-install-recommends   ca-certificates   jq   numactl  ;  if ! command -v ps > /dev/null; then   apt-get install -y --no-install-recommends procps;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 231), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 103), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 88), word='ca-certificates'),
    WordNode(pos=(91, 93), word='jq'),
    WordNode(pos=(96, 103), word='numactl'),
  ]),
  OperatorNode(op=';', pos=(105, 106)),
  CompoundNode(list=[
    IfNode(pos=(108, 201), parts=[
      ReservedwordNode(pos=(108, 110), word='if'),
      ListNode(pos=(111, 139), parts=[
          PipelineNode(pos=(111, 138), parts=[
            ReservedwordNode(pos=(111, 112), word='!'),
            CommandNode(pos=(113, 138), parts=[
              WordNode(pos=(113, 120), word='command'),
              WordNode(pos=(121, 123), word='-v'),
              WordNode(pos=(124, 126), word='ps'),
              RedirectNode(output=
                WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(138, 139)),
        ]),
      ReservedwordNode(pos=(140, 144), word='then'),
      ListNode(pos=(147, 197), parts=[
          CommandNode(pos=(147, 196), parts=[
            WordNode(pos=(147, 154), word='apt-get'),
            WordNode(pos=(155, 162), word='install'),
            WordNode(pos=(163, 165), word='-y'),
            WordNode(pos=(166, 189), word='--no-install-recommends'),
            WordNode(pos=(190, 196), word='procps'),
          ]),
          OperatorNode(op=';', pos=(196, 197)),
        ]),
      ReservedwordNode(pos=(199, 201), word='fi'),
    ]),
  ], pos=(108, 201)),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(204, 231), parts=[
    WordNode(pos=(204, 206), word='rm'),
    WordNode(pos=(207, 210), word='-rf'),
    WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
  ]),
])


202) set -ex;   apt-get update;  apt-get install -y --no-install-recommends   wget  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends gnupg dirmngr;  fi;  rm -rf /var/lib/apt/lists/*;   dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')";  wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch";  wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc";  export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc;  chmod +x /usr/local/bin/gosu;  gosu --version;  gosu nobody true;   wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js";   apt-get purge -y --auto-remove wget

ListNode(pos=(0, 1013), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 77), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 77), word='wget'),
  ]),
  OperatorNode(op=';', pos=(79, 80)),
  CompoundNode(list=[
    IfNode(pos=(82, 183), parts=[
      ReservedwordNode(pos=(82, 84), word='if'),
      ListNode(pos=(85, 114), parts=[
          PipelineNode(pos=(85, 113), parts=[
            ReservedwordNode(pos=(85, 86), word='!'),
            CommandNode(pos=(87, 113), parts=[
              WordNode(pos=(87, 94), word='command'),
              WordNode(pos=(95, 97), word='-v'),
              WordNode(pos=(98, 101), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(113, 114)),
        ]),
      ReservedwordNode(pos=(115, 119), word='then'),
      ListNode(pos=(122, 179), parts=[
          CommandNode(pos=(122, 178), parts=[
            WordNode(pos=(122, 129), word='apt-get'),
            WordNode(pos=(130, 137), word='install'),
            WordNode(pos=(138, 140), word='-y'),
            WordNode(pos=(141, 164), word='--no-install-recommends'),
            WordNode(pos=(165, 170), word='gnupg'),
            WordNode(pos=(171, 178), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(178, 179)),
        ]),
      ReservedwordNode(pos=(181, 183), word='fi'),
    ]),
  ], pos=(82, 183)),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(186, 213), parts=[
    WordNode(pos=(186, 188), word='rm'),
    WordNode(pos=(189, 192), word='-rf'),
    WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(213, 214)),
  CommandNode(pos=(217, 282), parts=[
    AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(229, 280), parts=[
          CommandNode(pos=(229, 254), parts=[
            WordNode(pos=(229, 233), word='dpkg'),
            WordNode(pos=(234, 254), word='--print-architecture'),
          ]),
          PipeNode(pipe='|', pos=(255, 256)),
          CommandNode(pos=(257, 280), parts=[
            WordNode(pos=(257, 260), word='awk'),
            WordNode(pos=(261, 264), word='-F-'),
            WordNode(pos=(265, 280), word='{ print $NF }'),
          ]),
        ]), pos=(227, 281)),
    ]),
  ]),
  OperatorNode(op=';', pos=(282, 283)),
  CommandNode(pos=(285, 392), parts=[
    WordNode(pos=(285, 289), word='wget'),
    WordNode(pos=(290, 292), word='-O'),
    WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
    WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
      ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
      ParameterNode(pos=(382, 391), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(392, 393)),
  CommandNode(pos=(395, 510), parts=[
    WordNode(pos=(395, 399), word='wget'),
    WordNode(pos=(400, 402), word='-O'),
    WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
      ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
      ParameterNode(pos=(496, 505), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 544), parts=[
    WordNode(pos=(513, 519), word='export'),
    WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(533, 542), parts=[
          WordNode(pos=(533, 539), word='mktemp'),
          WordNode(pos=(540, 542), word='-d'),
        ]), pos=(531, 543)),
    ]),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(547, 650), parts=[
    WordNode(pos=(547, 550), word='gpg'),
    WordNode(pos=(551, 558), word='--batch'),
    WordNode(pos=(559, 570), word='--keyserver'),
    WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
    WordNode(pos=(598, 609), word='--recv-keys'),
    WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
  ]),
  OperatorNode(op=';', pos=(650, 651)),
  CommandNode(pos=(653, 717), parts=[
    WordNode(pos=(653, 656), word='gpg'),
    WordNode(pos=(657, 664), word='--batch'),
    WordNode(pos=(665, 673), word='--verify'),
    WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(717, 718)),
  CommandNode(pos=(720, 738), parts=[
    WordNode(pos=(720, 727), word='command'),
    WordNode(pos=(728, 730), word='-v'),
    WordNode(pos=(731, 738), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(739, 741)),
  CommandNode(pos=(742, 760), parts=[
    WordNode(pos=(742, 749), word='gpgconf'),
    WordNode(pos=(750, 756), word='--kill'),
    WordNode(pos=(757, 760), word='all'),
  ]),
  OperatorNode(op='||', pos=(761, 763)),
  CommandNode(pos=(764, 765), parts=[
    WordNode(pos=(764, 765), word=':'),
  ]),
  OperatorNode(op=';', pos=(765, 766)),
  CommandNode(pos=(768, 810), parts=[
    WordNode(pos=(768, 770), word='rm'),
    WordNode(pos=(771, 773), word='-r'),
    WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(775, 785), value='GNUPGHOME'),
    ]),
    WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 841), parts=[
    WordNode(pos=(813, 818), word='chmod'),
    WordNode(pos=(819, 821), word='+x'),
    WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(841, 842)),
  CommandNode(pos=(844, 858), parts=[
    WordNode(pos=(844, 848), word='gosu'),
    WordNode(pos=(849, 858), word='--version'),
  ]),
  OperatorNode(op=';', pos=(858, 859)),
  CommandNode(pos=(861, 877), parts=[
    WordNode(pos=(861, 865), word='gosu'),
    WordNode(pos=(866, 872), word='nobody'),
    WordNode(pos=(873, 877), word='true'),
  ]),
  OperatorNode(op=';', pos=(877, 878)),
  CommandNode(pos=(881, 974), parts=[
    WordNode(pos=(881, 885), word='wget'),
    WordNode(pos=(886, 888), word='-O'),
    WordNode(pos=(889, 900), word='/js-yaml.js'),
    WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
      ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(978, 1013), parts=[
    WordNode(pos=(978, 985), word='apt-get'),
    WordNode(pos=(986, 991), word='purge'),
    WordNode(pos=(992, 994), word='-y'),
    WordNode(pos=(995, 1008), word='--auto-remove'),
    WordNode(pos=(1009, 1013), word='wget'),
  ]),
])


203) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


204) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


205) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


206) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


207) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


208) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


209) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


210) set -eux;  apt-get update;  apt-get install -y --no-install-recommends   ca-certificates   jq   numactl  ;  if ! command -v ps > /dev/null; then   apt-get install -y --no-install-recommends procps;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 231), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 103), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 88), word='ca-certificates'),
    WordNode(pos=(91, 93), word='jq'),
    WordNode(pos=(96, 103), word='numactl'),
  ]),
  OperatorNode(op=';', pos=(105, 106)),
  CompoundNode(list=[
    IfNode(pos=(108, 201), parts=[
      ReservedwordNode(pos=(108, 110), word='if'),
      ListNode(pos=(111, 139), parts=[
          PipelineNode(pos=(111, 138), parts=[
            ReservedwordNode(pos=(111, 112), word='!'),
            CommandNode(pos=(113, 138), parts=[
              WordNode(pos=(113, 120), word='command'),
              WordNode(pos=(121, 123), word='-v'),
              WordNode(pos=(124, 126), word='ps'),
              RedirectNode(output=
                WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(138, 139)),
        ]),
      ReservedwordNode(pos=(140, 144), word='then'),
      ListNode(pos=(147, 197), parts=[
          CommandNode(pos=(147, 196), parts=[
            WordNode(pos=(147, 154), word='apt-get'),
            WordNode(pos=(155, 162), word='install'),
            WordNode(pos=(163, 165), word='-y'),
            WordNode(pos=(166, 189), word='--no-install-recommends'),
            WordNode(pos=(190, 196), word='procps'),
          ]),
          OperatorNode(op=';', pos=(196, 197)),
        ]),
      ReservedwordNode(pos=(199, 201), word='fi'),
    ]),
  ], pos=(108, 201)),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(204, 231), parts=[
    WordNode(pos=(204, 206), word='rm'),
    WordNode(pos=(207, 210), word='-rf'),
    WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
  ]),
])


211) set -ex;   apt-get update;  apt-get install -y --no-install-recommends   wget  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends gnupg dirmngr;  fi;  rm -rf /var/lib/apt/lists/*;   dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')";  wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch";  wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc";  export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc;  chmod +x /usr/local/bin/gosu;  gosu --version;  gosu nobody true;   wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js";   apt-get purge -y --auto-remove wget

ListNode(pos=(0, 1013), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 77), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 77), word='wget'),
  ]),
  OperatorNode(op=';', pos=(79, 80)),
  CompoundNode(list=[
    IfNode(pos=(82, 183), parts=[
      ReservedwordNode(pos=(82, 84), word='if'),
      ListNode(pos=(85, 114), parts=[
          PipelineNode(pos=(85, 113), parts=[
            ReservedwordNode(pos=(85, 86), word='!'),
            CommandNode(pos=(87, 113), parts=[
              WordNode(pos=(87, 94), word='command'),
              WordNode(pos=(95, 97), word='-v'),
              WordNode(pos=(98, 101), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(113, 114)),
        ]),
      ReservedwordNode(pos=(115, 119), word='then'),
      ListNode(pos=(122, 179), parts=[
          CommandNode(pos=(122, 178), parts=[
            WordNode(pos=(122, 129), word='apt-get'),
            WordNode(pos=(130, 137), word='install'),
            WordNode(pos=(138, 140), word='-y'),
            WordNode(pos=(141, 164), word='--no-install-recommends'),
            WordNode(pos=(165, 170), word='gnupg'),
            WordNode(pos=(171, 178), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(178, 179)),
        ]),
      ReservedwordNode(pos=(181, 183), word='fi'),
    ]),
  ], pos=(82, 183)),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(186, 213), parts=[
    WordNode(pos=(186, 188), word='rm'),
    WordNode(pos=(189, 192), word='-rf'),
    WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(213, 214)),
  CommandNode(pos=(217, 282), parts=[
    AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(229, 280), parts=[
          CommandNode(pos=(229, 254), parts=[
            WordNode(pos=(229, 233), word='dpkg'),
            WordNode(pos=(234, 254), word='--print-architecture'),
          ]),
          PipeNode(pipe='|', pos=(255, 256)),
          CommandNode(pos=(257, 280), parts=[
            WordNode(pos=(257, 260), word='awk'),
            WordNode(pos=(261, 264), word='-F-'),
            WordNode(pos=(265, 280), word='{ print $NF }'),
          ]),
        ]), pos=(227, 281)),
    ]),
  ]),
  OperatorNode(op=';', pos=(282, 283)),
  CommandNode(pos=(285, 392), parts=[
    WordNode(pos=(285, 289), word='wget'),
    WordNode(pos=(290, 292), word='-O'),
    WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
    WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
      ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
      ParameterNode(pos=(382, 391), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(392, 393)),
  CommandNode(pos=(395, 510), parts=[
    WordNode(pos=(395, 399), word='wget'),
    WordNode(pos=(400, 402), word='-O'),
    WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
      ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
      ParameterNode(pos=(496, 505), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 544), parts=[
    WordNode(pos=(513, 519), word='export'),
    WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(533, 542), parts=[
          WordNode(pos=(533, 539), word='mktemp'),
          WordNode(pos=(540, 542), word='-d'),
        ]), pos=(531, 543)),
    ]),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(547, 650), parts=[
    WordNode(pos=(547, 550), word='gpg'),
    WordNode(pos=(551, 558), word='--batch'),
    WordNode(pos=(559, 570), word='--keyserver'),
    WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
    WordNode(pos=(598, 609), word='--recv-keys'),
    WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
  ]),
  OperatorNode(op=';', pos=(650, 651)),
  CommandNode(pos=(653, 717), parts=[
    WordNode(pos=(653, 656), word='gpg'),
    WordNode(pos=(657, 664), word='--batch'),
    WordNode(pos=(665, 673), word='--verify'),
    WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(717, 718)),
  CommandNode(pos=(720, 738), parts=[
    WordNode(pos=(720, 727), word='command'),
    WordNode(pos=(728, 730), word='-v'),
    WordNode(pos=(731, 738), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(739, 741)),
  CommandNode(pos=(742, 760), parts=[
    WordNode(pos=(742, 749), word='gpgconf'),
    WordNode(pos=(750, 756), word='--kill'),
    WordNode(pos=(757, 760), word='all'),
  ]),
  OperatorNode(op='||', pos=(761, 763)),
  CommandNode(pos=(764, 765), parts=[
    WordNode(pos=(764, 765), word=':'),
  ]),
  OperatorNode(op=';', pos=(765, 766)),
  CommandNode(pos=(768, 810), parts=[
    WordNode(pos=(768, 770), word='rm'),
    WordNode(pos=(771, 773), word='-r'),
    WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(775, 785), value='GNUPGHOME'),
    ]),
    WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 841), parts=[
    WordNode(pos=(813, 818), word='chmod'),
    WordNode(pos=(819, 821), word='+x'),
    WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(841, 842)),
  CommandNode(pos=(844, 858), parts=[
    WordNode(pos=(844, 848), word='gosu'),
    WordNode(pos=(849, 858), word='--version'),
  ]),
  OperatorNode(op=';', pos=(858, 859)),
  CommandNode(pos=(861, 877), parts=[
    WordNode(pos=(861, 865), word='gosu'),
    WordNode(pos=(866, 872), word='nobody'),
    WordNode(pos=(873, 877), word='true'),
  ]),
  OperatorNode(op=';', pos=(877, 878)),
  CommandNode(pos=(881, 974), parts=[
    WordNode(pos=(881, 885), word='wget'),
    WordNode(pos=(886, 888), word='-O'),
    WordNode(pos=(889, 900), word='/js-yaml.js'),
    WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
      ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(978, 1013), parts=[
    WordNode(pos=(978, 985), word='apt-get'),
    WordNode(pos=(986, 991), word='purge'),
    WordNode(pos=(992, 994), word='-y'),
    WordNode(pos=(995, 1008), word='--auto-remove'),
    WordNode(pos=(1009, 1013), word='wget'),
  ]),
])


212) set -ex;  apt-get update;  apt-get install -y --no-install-recommends   libjemalloc1   procps   iproute2  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends    dirmngr    gnupg   ;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 249), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CommandNode(pos=(27, 104), parts=[
    WordNode(pos=(27, 34), word='apt-get'),
    WordNode(pos=(35, 42), word='install'),
    WordNode(pos=(43, 45), word='-y'),
    WordNode(pos=(46, 69), word='--no-install-recommends'),
    WordNode(pos=(72, 84), word='libjemalloc1'),
    WordNode(pos=(87, 93), word='procps'),
    WordNode(pos=(96, 104), word='iproute2'),
  ]),
  OperatorNode(op=';', pos=(106, 107)),
  CompoundNode(list=[
    IfNode(pos=(109, 219), parts=[
      ReservedwordNode(pos=(109, 111), word='if'),
      ListNode(pos=(112, 141), parts=[
          PipelineNode(pos=(112, 140), parts=[
            ReservedwordNode(pos=(112, 113), word='!'),
            CommandNode(pos=(114, 140), parts=[
              WordNode(pos=(114, 121), word='command'),
              WordNode(pos=(122, 124), word='-v'),
              WordNode(pos=(125, 128), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(131, 140), word='/dev/null'), pos=(129, 140), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(142, 146), word='then'),
      ListNode(pos=(149, 215), parts=[
          CommandNode(pos=(149, 211), parts=[
            WordNode(pos=(149, 156), word='apt-get'),
            WordNode(pos=(157, 164), word='install'),
            WordNode(pos=(165, 167), word='-y'),
            WordNode(pos=(168, 191), word='--no-install-recommends'),
            WordNode(pos=(195, 202), word='dirmngr'),
            WordNode(pos=(206, 211), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(214, 215)),
        ]),
      ReservedwordNode(pos=(217, 219), word='fi'),
    ]),
  ], pos=(109, 219)),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 249), parts=[
    WordNode(pos=(222, 224), word='rm'),
    WordNode(pos=(225, 228), word='-rf'),
    WordNode(pos=(229, 249), word='/var/lib/apt/lists/*'),
  ]),
])


213) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


214) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


215) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


216) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


217) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


218) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


219) set -ex;   if command -v a2enmod; then   a2enmod rewrite;  fi;   savedAptMark="$(apt-mark showmanual)";   apt-get update;  apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev  ;   docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr;  docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip  ;   apt-mark auto '.*' > /dev/null;  apt-mark manual $savedAptMark;  ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so   | awk '/=>/ { print $3 }'   | sort -u   | xargs -r dpkg-query -S   | cut -d: -f1   | sort -u   | xargs -rt apt-mark manual;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 734), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(11, 61), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 33), parts=[
          CommandNode(pos=(14, 32), parts=[
            WordNode(pos=(14, 21), word='command'),
            WordNode(pos=(22, 24), word='-v'),
            WordNode(pos=(25, 32), word='a2enmod'),
          ]),
          OperatorNode(op=';', pos=(32, 33)),
        ]),
      ReservedwordNode(pos=(34, 38), word='then'),
      ListNode(pos=(41, 57), parts=[
          CommandNode(pos=(41, 56), parts=[
            WordNode(pos=(41, 48), word='a2enmod'),
            WordNode(pos=(49, 56), word='rewrite'),
          ]),
          OperatorNode(op=';', pos=(56, 57)),
        ]),
      ReservedwordNode(pos=(59, 61), word='fi'),
    ]),
  ], pos=(11, 61)),
  OperatorNode(op=';', pos=(61, 62)),
  CommandNode(pos=(65, 102), parts=[
    AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(81, 100), parts=[
          WordNode(pos=(81, 89), word='apt-mark'),
          WordNode(pos=(90, 100), word='showmanual'),
        ]), pos=(79, 101)),
    ]),
  ]),
  OperatorNode(op=';', pos=(102, 103)),
  CommandNode(pos=(106, 120), parts=[
    WordNode(pos=(106, 113), word='apt-get'),
    WordNode(pos=(114, 120), word='update'),
  ]),
  OperatorNode(op=';', pos=(120, 121)),
  CommandNode(pos=(123, 217), parts=[
    WordNode(pos=(123, 130), word='apt-get'),
    WordNode(pos=(131, 138), word='install'),
    WordNode(pos=(139, 141), word='-y'),
    WordNode(pos=(142, 165), word='--no-install-recommends'),
    WordNode(pos=(168, 179), word='libjpeg-dev'),
    WordNode(pos=(182, 192), word='libpng-dev'),
    WordNode(pos=(195, 204), word='libpq-dev'),
    WordNode(pos=(207, 217), word='libzip-dev'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(223, 291), parts=[
    WordNode(pos=(223, 247), word='docker-php-ext-configure'),
    WordNode(pos=(248, 250), word='gd'),
    WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
    WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
  ]),
  OperatorNode(op=';', pos=(291, 292)),
  CommandNode(pos=(294, 375), parts=[
    WordNode(pos=(294, 316), word='docker-php-ext-install'),
    WordNode(pos=(317, 319), word='-j'),
    WordNode(pos=(320, 330), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(323, 328), parts=[
          WordNode(pos=(323, 328), word='nproc'),
        ]), pos=(321, 329)),
    ]),
    WordNode(pos=(333, 335), word='gd'),
    WordNode(pos=(338, 345), word='opcache'),
    WordNode(pos=(348, 357), word='pdo_mysql'),
    WordNode(pos=(360, 369), word='pdo_pgsql'),
    WordNode(pos=(372, 375), word='zip'),
  ]),
  OperatorNode(op=';', pos=(377, 378)),
  CommandNode(pos=(381, 411), parts=[
    WordNode(pos=(381, 389), word='apt-mark'),
    WordNode(pos=(390, 394), word='auto'),
    WordNode(pos=(395, 399), word='.*'),
    RedirectNode(output=
      WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
  ]),
  OperatorNode(op=';', pos=(411, 412)),
  CommandNode(pos=(414, 443), parts=[
    WordNode(pos=(414, 422), word='apt-mark'),
    WordNode(pos=(423, 429), word='manual'),
    WordNode(pos=(430, 443), word='$savedAptMark', parts=[
      ParameterNode(pos=(430, 443), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(443, 444)),
  PipelineNode(pos=(446, 624), parts=[
    CommandNode(pos=(446, 499), parts=[
      WordNode(pos=(446, 449), word='ldd'),
      WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(453, 492), parts=[
            WordNode(pos=(453, 456), word='php'),
            WordNode(pos=(457, 459), word='-r'),
            WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
          ]), pos=(451, 493)),
      ]),
    ]),
    PipeNode(pipe='|', pos=(502, 503)),
    CommandNode(pos=(504, 527), parts=[
      WordNode(pos=(504, 507), word='awk'),
      WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
    ]),
    PipeNode(pipe='|', pos=(530, 531)),
    CommandNode(pos=(532, 539), parts=[
      WordNode(pos=(532, 536), word='sort'),
      WordNode(pos=(537, 539), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(542, 543)),
    CommandNode(pos=(544, 566), parts=[
      WordNode(pos=(544, 549), word='xargs'),
      WordNode(pos=(550, 552), word='-r'),
      WordNode(pos=(553, 563), word='dpkg-query'),
      WordNode(pos=(564, 566), word='-S'),
    ]),
    PipeNode(pipe='|', pos=(569, 570)),
    CommandNode(pos=(571, 582), parts=[
      WordNode(pos=(571, 574), word='cut'),
      WordNode(pos=(575, 578), word='-d:'),
      WordNode(pos=(579, 582), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(585, 586)),
    CommandNode(pos=(587, 594), parts=[
      WordNode(pos=(587, 591), word='sort'),
      WordNode(pos=(592, 594), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(597, 598)),
    CommandNode(pos=(599, 624), parts=[
      WordNode(pos=(599, 604), word='xargs'),
      WordNode(pos=(605, 608), word='-rt'),
      WordNode(pos=(609, 617), word='apt-mark'),
      WordNode(pos=(618, 624), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(624, 625)),
  CommandNode(pos=(628, 704), parts=[
    WordNode(pos=(628, 635), word='apt-get'),
    WordNode(pos=(636, 641), word='purge'),
    WordNode(pos=(642, 644), word='-y'),
    WordNode(pos=(645, 658), word='--auto-remove'),
    WordNode(pos=(659, 661), word='-o'),
    WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(707, 734), parts=[
    WordNode(pos=(707, 709), word='rm'),
    WordNode(pos=(710, 713), word='-rf'),
    WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
  ]),
])


220) set -ex;  apt-get update;  apt-get install -y --no-install-recommends   libjemalloc1   procps   iproute2  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends    dirmngr    gnupg   ;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 249), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CommandNode(pos=(27, 104), parts=[
    WordNode(pos=(27, 34), word='apt-get'),
    WordNode(pos=(35, 42), word='install'),
    WordNode(pos=(43, 45), word='-y'),
    WordNode(pos=(46, 69), word='--no-install-recommends'),
    WordNode(pos=(72, 84), word='libjemalloc1'),
    WordNode(pos=(87, 93), word='procps'),
    WordNode(pos=(96, 104), word='iproute2'),
  ]),
  OperatorNode(op=';', pos=(106, 107)),
  CompoundNode(list=[
    IfNode(pos=(109, 219), parts=[
      ReservedwordNode(pos=(109, 111), word='if'),
      ListNode(pos=(112, 141), parts=[
          PipelineNode(pos=(112, 140), parts=[
            ReservedwordNode(pos=(112, 113), word='!'),
            CommandNode(pos=(114, 140), parts=[
              WordNode(pos=(114, 121), word='command'),
              WordNode(pos=(122, 124), word='-v'),
              WordNode(pos=(125, 128), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(131, 140), word='/dev/null'), pos=(129, 140), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(142, 146), word='then'),
      ListNode(pos=(149, 215), parts=[
          CommandNode(pos=(149, 211), parts=[
            WordNode(pos=(149, 156), word='apt-get'),
            WordNode(pos=(157, 164), word='install'),
            WordNode(pos=(165, 167), word='-y'),
            WordNode(pos=(168, 191), word='--no-install-recommends'),
            WordNode(pos=(195, 202), word='dirmngr'),
            WordNode(pos=(206, 211), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(214, 215)),
        ]),
      ReservedwordNode(pos=(217, 219), word='fi'),
    ]),
  ], pos=(109, 219)),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 249), parts=[
    WordNode(pos=(222, 224), word='rm'),
    WordNode(pos=(225, 228), word='-rf'),
    WordNode(pos=(229, 249), word='/var/lib/apt/lists/*'),
  ]),
])


221) set -eux;  apk add --no-cache   btrfs-progs   e2fsprogs   e2fsprogs-extra   iptables   xfsprogs   xz   pigz  ;  if zfs="$(apk info --no-cache --quiet zfs)" && [ -n "$zfs" ]; then   apk add --no-cache zfs;  fi

ListNode(pos=(0, 208), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 107), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(32, 43), word='btrfs-progs'),
    WordNode(pos=(46, 55), word='e2fsprogs'),
    WordNode(pos=(58, 73), word='e2fsprogs-extra'),
    WordNode(pos=(76, 84), word='iptables'),
    WordNode(pos=(87, 95), word='xfsprogs'),
    WordNode(pos=(98, 100), word='xz'),
    WordNode(pos=(103, 107), word='pigz'),
  ]),
  OperatorNode(op=';', pos=(109, 110)),
  CompoundNode(list=[
    IfNode(pos=(112, 208), parts=[
      ReservedwordNode(pos=(112, 114), word='if'),
      ListNode(pos=(115, 173), parts=[
          CommandNode(pos=(115, 155), parts=[
            AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(122, 153), parts=[
                  WordNode(pos=(122, 125), word='apk'),
                  WordNode(pos=(126, 130), word='info'),
                  WordNode(pos=(131, 141), word='--no-cache'),
                  WordNode(pos=(142, 149), word='--quiet'),
                  WordNode(pos=(150, 153), word='zfs'),
                ]), pos=(120, 154)),
            ]),
          ]),
          OperatorNode(op='&&', pos=(156, 158)),
          CommandNode(pos=(159, 172), parts=[
            WordNode(pos=(159, 160), word='['),
            WordNode(pos=(161, 163), word='-n'),
            WordNode(pos=(164, 170), word='$zfs', parts=[
              ParameterNode(pos=(165, 169), value='zfs'),
            ]),
            WordNode(pos=(171, 172), word=']'),
          ]),
          OperatorNode(op=';', pos=(172, 173)),
        ]),
      ReservedwordNode(pos=(174, 178), word='then'),
      ListNode(pos=(181, 204), parts=[
          CommandNode(pos=(181, 203), parts=[
            WordNode(pos=(181, 184), word='apk'),
            WordNode(pos=(185, 188), word='add'),
            WordNode(pos=(189, 199), word='--no-cache'),
            WordNode(pos=(200, 203), word='zfs'),
          ]),
          OperatorNode(op=';', pos=(203, 204)),
        ]),
      ReservedwordNode(pos=(206, 208), word='fi'),
    ]),
  ], pos=(112, 208)),
])


222) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


223) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


224) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


225) set -eux;   %%ARCH-CASE%%;   url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz";  wget -O go.tgz "$url";  echo "${goRelSha256} *go.tgz" | sha256sum -c -;  tar -C /usr/local -xzf go.tgz;  rm go.tgz;   if [ "$goRelArch" = 'src' ]; then   echo >&2;   echo >&2 'error: UNIMPLEMENTED';   echo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)';   echo >&2;   exit 1;  fi;   export PATH="/usr/local/go/bin:$PATH";  go version

ListNode(pos=(0, 486), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 25), parts=[
    WordNode(pos=(12, 25), word='%%ARCH-CASE%%'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(29, 96), parts=[
    AssignmentNode(pos=(29, 96), word='url=https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz', parts=[
      ParameterNode(pos=(58, 75), value='GOLANG_VERSION'),
      ParameterNode(pos=(76, 88), value='goRelArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(96, 97)),
  CommandNode(pos=(99, 120), parts=[
    WordNode(pos=(99, 103), word='wget'),
    WordNode(pos=(104, 106), word='-O'),
    WordNode(pos=(107, 113), word='go.tgz'),
    WordNode(pos=(114, 120), word='$url', parts=[
      ParameterNode(pos=(115, 119), value='url'),
    ]),
  ]),
  OperatorNode(op=';', pos=(120, 121)),
  PipelineNode(pos=(123, 169), parts=[
    CommandNode(pos=(123, 152), parts=[
      WordNode(pos=(123, 127), word='echo'),
      WordNode(pos=(128, 152), word='${goRelSha256} *go.tgz', parts=[
        ParameterNode(pos=(129, 143), value='goRelSha256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(153, 154)),
    CommandNode(pos=(155, 169), parts=[
      WordNode(pos=(155, 164), word='sha256sum'),
      WordNode(pos=(165, 167), word='-c'),
      WordNode(pos=(168, 169), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(169, 170)),
  CommandNode(pos=(172, 201), parts=[
    WordNode(pos=(172, 175), word='tar'),
    WordNode(pos=(176, 178), word='-C'),
    WordNode(pos=(179, 189), word='/usr/local'),
    WordNode(pos=(190, 194), word='-xzf'),
    WordNode(pos=(195, 201), word='go.tgz'),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(204, 213), parts=[
    WordNode(pos=(204, 206), word='rm'),
    WordNode(pos=(207, 213), word='go.tgz'),
  ]),
  OperatorNode(op=';', pos=(213, 214)),
  CompoundNode(list=[
    IfNode(pos=(217, 432), parts=[
      ReservedwordNode(pos=(217, 219), word='if'),
      ListNode(pos=(220, 245), parts=[
          CommandNode(pos=(220, 244), parts=[
            WordNode(pos=(220, 221), word='['),
            WordNode(pos=(222, 234), word='$goRelArch', parts=[
              ParameterNode(pos=(223, 233), value='goRelArch'),
            ]),
            WordNode(pos=(235, 236), word='='),
            WordNode(pos=(237, 242), word='src'),
            WordNode(pos=(243, 244), word=']'),
          ]),
          OperatorNode(op=';', pos=(244, 245)),
        ]),
      ReservedwordNode(pos=(246, 250), word='then'),
      ListNode(pos=(253, 428), parts=[
          CommandNode(pos=(253, 261), parts=[
            WordNode(pos=(253, 257), word='echo'),
            RedirectNode(output=2, pos=(258, 261), type='>&'),
          ]),
          OperatorNode(op=';', pos=(261, 262)),
          CommandNode(pos=(265, 296), parts=[
            WordNode(pos=(265, 269), word='echo'),
            RedirectNode(output=2, pos=(270, 273), type='>&'),
            WordNode(pos=(274, 296), word='error: UNIMPLEMENTED'),
          ]),
          OperatorNode(op=';', pos=(296, 297)),
          CommandNode(pos=(300, 405), parts=[
            WordNode(pos=(300, 304), word='echo'),
            RedirectNode(output=2, pos=(305, 308), type='>&'),
            WordNode(pos=(309, 405), word='TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'),
          ]),
          OperatorNode(op=';', pos=(405, 406)),
          CommandNode(pos=(409, 417), parts=[
            WordNode(pos=(409, 413), word='echo'),
            RedirectNode(output=2, pos=(414, 417), type='>&'),
          ]),
          OperatorNode(op=';', pos=(417, 418)),
          CommandNode(pos=(421, 427), parts=[
            WordNode(pos=(421, 425), word='exit'),
            WordNode(pos=(426, 427), word='1'),
          ]),
          OperatorNode(op=';', pos=(427, 428)),
        ]),
      ReservedwordNode(pos=(430, 432), word='fi'),
    ]),
  ], pos=(217, 432)),
  OperatorNode(op=';', pos=(432, 433)),
  CommandNode(pos=(436, 473), parts=[
    WordNode(pos=(436, 442), word='export'),
    WordNode(pos=(443, 473), word='PATH=/usr/local/go/bin:$PATH', parts=[
      ParameterNode(pos=(467, 472), value='PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(473, 474)),
  CommandNode(pos=(476, 486), parts=[
    WordNode(pos=(476, 478), word='go'),
    WordNode(pos=(479, 486), word='version'),
  ]),
])


226) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


227) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


228) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


229) set -ex;   %%ARCH-CASE%%;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   bzip2   wget   libncurses5  ;   wget -O pypy.tar.bz2 "https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2" --progress=dot:giga;  echo "$sha256 *pypy.tar.bz2" | sha256sum -c;  tar -xjC /usr/local --strip-components=1 -f pypy.tar.bz2;  find /usr/local/lib-python -depth -type d -a \( -name test -o -name tests \) -exec rm -rf '{}' +;  rm pypy.tar.bz2;   %%CMD%% --version;   if [ -f /usr/local/lib_pypy/_ssl_build.py ]; then   apt-get install -y --no-install-recommends gcc libc6-dev libssl-dev;   cd /usr/local/lib_pypy;   %%CMD%% _ssl_build.py;  fi;   wget -O get-pip.py 'https://bootstrap.pypa.io/get-pip.py';   %%CMD%% get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"  ;  pip --version;   rm -f get-pip.py;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;  %%CMD%% --version;  pip --version

ListNode(pos=(0, 1353), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 24), parts=[
    WordNode(pos=(11, 24), word='%%ARCH-CASE%%'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CommandNode(pos=(28, 65), parts=[
    AssignmentNode(pos=(28, 65), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(44, 63), parts=[
          WordNode(pos=(44, 52), word='apt-mark'),
          WordNode(pos=(53, 63), word='showmanual'),
        ]), pos=(42, 64)),
    ]),
  ]),
  OperatorNode(op=';', pos=(65, 66)),
  CommandNode(pos=(68, 82), parts=[
    WordNode(pos=(68, 75), word='apt-get'),
    WordNode(pos=(76, 82), word='update'),
  ]),
  OperatorNode(op=';', pos=(82, 83)),
  CommandNode(pos=(85, 156), parts=[
    WordNode(pos=(85, 92), word='apt-get'),
    WordNode(pos=(93, 100), word='install'),
    WordNode(pos=(101, 103), word='-y'),
    WordNode(pos=(104, 127), word='--no-install-recommends'),
    WordNode(pos=(130, 135), word='bzip2'),
    WordNode(pos=(138, 142), word='wget'),
    WordNode(pos=(145, 156), word='libncurses5'),
  ]),
  OperatorNode(op=';', pos=(158, 159)),
  CommandNode(pos=(162, 291), parts=[
    WordNode(pos=(162, 166), word='wget'),
    WordNode(pos=(167, 169), word='-O'),
    WordNode(pos=(170, 182), word='pypy.tar.bz2'),
    WordNode(pos=(183, 271), word='https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2', parts=[
      ParameterNode(pos=(235, 250), value='PYPY_VERSION'),
      ParameterNode(pos=(251, 262), value='pypyArch'),
    ]),
    WordNode(pos=(272, 291), word='--progress=dot:giga'),
  ]),
  OperatorNode(op=';', pos=(291, 292)),
  PipelineNode(pos=(294, 337), parts=[
    CommandNode(pos=(294, 322), parts=[
      WordNode(pos=(294, 298), word='echo'),
      WordNode(pos=(299, 322), word='$sha256 *pypy.tar.bz2', parts=[
        ParameterNode(pos=(300, 307), value='sha256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(323, 324)),
    CommandNode(pos=(325, 337), parts=[
      WordNode(pos=(325, 334), word='sha256sum'),
      WordNode(pos=(335, 337), word='-c'),
    ]),
  ]),
  OperatorNode(op=';', pos=(337, 338)),
  CommandNode(pos=(340, 396), parts=[
    WordNode(pos=(340, 343), word='tar'),
    WordNode(pos=(344, 348), word='-xjC'),
    WordNode(pos=(349, 359), word='/usr/local'),
    WordNode(pos=(360, 380), word='--strip-components=1'),
    WordNode(pos=(381, 383), word='-f'),
    WordNode(pos=(384, 396), word='pypy.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(396, 397)),
  CommandNode(pos=(399, 495), parts=[
    WordNode(pos=(399, 403), word='find'),
    WordNode(pos=(404, 425), word='/usr/local/lib-python'),
    WordNode(pos=(426, 432), word='-depth'),
    WordNode(pos=(433, 438), word='-type'),
    WordNode(pos=(439, 440), word='d'),
    WordNode(pos=(441, 443), word='-a'),
    WordNode(pos=(444, 446), word='('),
    WordNode(pos=(447, 452), word='-name'),
    WordNode(pos=(453, 457), word='test'),
    WordNode(pos=(458, 460), word='-o'),
    WordNode(pos=(461, 466), word='-name'),
    WordNode(pos=(467, 472), word='tests'),
    WordNode(pos=(473, 475), word=')'),
    WordNode(pos=(476, 481), word='-exec'),
    WordNode(pos=(482, 484), word='rm'),
    WordNode(pos=(485, 488), word='-rf'),
    WordNode(pos=(489, 493), word='{}'),
    WordNode(pos=(494, 495), word='+'),
  ]),
  OperatorNode(op=';', pos=(495, 496)),
  CommandNode(pos=(498, 513), parts=[
    WordNode(pos=(498, 500), word='rm'),
    WordNode(pos=(501, 513), word='pypy.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(513, 514)),
  CommandNode(pos=(517, 534), parts=[
    WordNode(pos=(517, 524), word='%%CMD%%'),
    WordNode(pos=(525, 534), word='--version'),
  ]),
  OperatorNode(op=';', pos=(534, 535)),
  CompoundNode(list=[
    IfNode(pos=(538, 713), parts=[
      ReservedwordNode(pos=(538, 540), word='if'),
      ListNode(pos=(541, 582), parts=[
          CommandNode(pos=(541, 581), parts=[
            WordNode(pos=(541, 542), word='['),
            WordNode(pos=(543, 545), word='-f'),
            WordNode(pos=(546, 579), word='/usr/local/lib_pypy/_ssl_build.py'),
            WordNode(pos=(580, 581), word=']'),
          ]),
          OperatorNode(op=';', pos=(581, 582)),
        ]),
      ReservedwordNode(pos=(583, 587), word='then'),
      ListNode(pos=(590, 709), parts=[
          CommandNode(pos=(590, 657), parts=[
            WordNode(pos=(590, 597), word='apt-get'),
            WordNode(pos=(598, 605), word='install'),
            WordNode(pos=(606, 608), word='-y'),
            WordNode(pos=(609, 632), word='--no-install-recommends'),
            WordNode(pos=(633, 636), word='gcc'),
            WordNode(pos=(637, 646), word='libc6-dev'),
            WordNode(pos=(647, 657), word='libssl-dev'),
          ]),
          OperatorNode(op=';', pos=(657, 658)),
          CommandNode(pos=(661, 683), parts=[
            WordNode(pos=(661, 663), word='cd'),
            WordNode(pos=(664, 683), word='/usr/local/lib_pypy'),
          ]),
          OperatorNode(op=';', pos=(683, 684)),
          CommandNode(pos=(687, 708), parts=[
            WordNode(pos=(687, 694), word='%%CMD%%'),
            WordNode(pos=(695, 708), word='_ssl_build.py'),
          ]),
          OperatorNode(op=';', pos=(708, 709)),
        ]),
      ReservedwordNode(pos=(711, 713), word='fi'),
    ]),
  ], pos=(538, 713)),
  OperatorNode(op=';', pos=(713, 714)),
  CommandNode(pos=(717, 774), parts=[
    WordNode(pos=(717, 721), word='wget'),
    WordNode(pos=(722, 724), word='-O'),
    WordNode(pos=(725, 735), word='get-pip.py'),
    WordNode(pos=(736, 774), word='https://bootstrap.pypa.io/get-pip.py'),
  ]),
  OperatorNode(op=';', pos=(774, 775)),
  CommandNode(pos=(778, 872), parts=[
    WordNode(pos=(778, 785), word='%%CMD%%'),
    WordNode(pos=(786, 796), word='get-pip.py'),
    WordNode(pos=(799, 826), word='--disable-pip-version-check'),
    WordNode(pos=(829, 843), word='--no-cache-dir'),
    WordNode(pos=(846, 872), word='pip==$PYTHON_PIP_VERSION', parts=[
      ParameterNode(pos=(852, 871), value='PYTHON_PIP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(874, 875)),
  CommandNode(pos=(877, 890), parts=[
    WordNode(pos=(877, 880), word='pip'),
    WordNode(pos=(881, 890), word='--version'),
  ]),
  OperatorNode(op=';', pos=(890, 891)),
  CommandNode(pos=(894, 910), parts=[
    WordNode(pos=(894, 896), word='rm'),
    WordNode(pos=(897, 899), word='-f'),
    WordNode(pos=(900, 910), word='get-pip.py'),
  ]),
  OperatorNode(op=';', pos=(910, 911)),
  CommandNode(pos=(914, 944), parts=[
    WordNode(pos=(914, 922), word='apt-mark'),
    WordNode(pos=(923, 927), word='auto'),
    WordNode(pos=(928, 932), word='.*'),
    RedirectNode(output=
      WordNode(pos=(935, 944), word='/dev/null'), pos=(933, 944), type='>'),
  ]),
  OperatorNode(op=';', pos=(944, 945)),
  CommandNode(pos=(947, 969), parts=[
    WordNode(pos=(947, 948), word='['),
    WordNode(pos=(949, 951), word='-z'),
    WordNode(pos=(952, 967), word='$savedAptMark', parts=[
      ParameterNode(pos=(953, 966), value='savedAptMark'),
    ]),
    WordNode(pos=(968, 969), word=']'),
  ]),
  OperatorNode(op='||', pos=(970, 972)),
  CommandNode(pos=(973, 1014), parts=[
    WordNode(pos=(973, 981), word='apt-mark'),
    WordNode(pos=(982, 988), word='manual'),
    WordNode(pos=(989, 1002), word='$savedAptMark', parts=[
      ParameterNode(pos=(989, 1002), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1005, 1014), word='/dev/null'), pos=(1003, 1014), type='>'),
  ]),
  OperatorNode(op=';', pos=(1014, 1015)),
  PipelineNode(pos=(1017, 1206), parts=[
    CommandNode(pos=(1017, 1071), parts=[
      WordNode(pos=(1017, 1021), word='find'),
      WordNode(pos=(1022, 1032), word='/usr/local'),
      WordNode(pos=(1033, 1038), word='-type'),
      WordNode(pos=(1039, 1040), word='f'),
      WordNode(pos=(1041, 1052), word='-executable'),
      WordNode(pos=(1053, 1058), word='-exec'),
      WordNode(pos=(1059, 1062), word='ldd'),
      WordNode(pos=(1063, 1067), word='{}'),
      WordNode(pos=(1068, 1071), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1074, 1075)),
    CommandNode(pos=(1076, 1104), parts=[
      WordNode(pos=(1076, 1079), word='awk'),
      WordNode(pos=(1080, 1104), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1107, 1108)),
    CommandNode(pos=(1109, 1116), parts=[
      WordNode(pos=(1109, 1113), word='sort'),
      WordNode(pos=(1114, 1116), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1119, 1120)),
    CommandNode(pos=(1121, 1149), parts=[
      WordNode(pos=(1121, 1126), word='xargs'),
      WordNode(pos=(1127, 1129), word='-r'),
      WordNode(pos=(1130, 1140), word='dpkg-query'),
      WordNode(pos=(1141, 1149), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1152, 1153)),
    CommandNode(pos=(1154, 1165), parts=[
      WordNode(pos=(1154, 1157), word='cut'),
      WordNode(pos=(1158, 1161), word='-d:'),
      WordNode(pos=(1162, 1165), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1168, 1169)),
    CommandNode(pos=(1170, 1177), parts=[
      WordNode(pos=(1170, 1174), word='sort'),
      WordNode(pos=(1175, 1177), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1180, 1181)),
    CommandNode(pos=(1182, 1206), parts=[
      WordNode(pos=(1182, 1187), word='xargs'),
      WordNode(pos=(1188, 1190), word='-r'),
      WordNode(pos=(1191, 1199), word='apt-mark'),
      WordNode(pos=(1200, 1206), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1208, 1209)),
  CommandNode(pos=(1211, 1287), parts=[
    WordNode(pos=(1211, 1218), word='apt-get'),
    WordNode(pos=(1219, 1224), word='purge'),
    WordNode(pos=(1225, 1227), word='-y'),
    WordNode(pos=(1228, 1241), word='--auto-remove'),
    WordNode(pos=(1242, 1244), word='-o'),
    WordNode(pos=(1245, 1287), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1287, 1288)),
  CommandNode(pos=(1290, 1317), parts=[
    WordNode(pos=(1290, 1292), word='rm'),
    WordNode(pos=(1293, 1296), word='-rf'),
    WordNode(pos=(1297, 1317), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1317, 1318)),
  CommandNode(pos=(1320, 1337), parts=[
    WordNode(pos=(1320, 1327), word='%%CMD%%'),
    WordNode(pos=(1328, 1337), word='--version'),
  ]),
  OperatorNode(op=';', pos=(1337, 1338)),
  CommandNode(pos=(1340, 1353), parts=[
    WordNode(pos=(1340, 1343), word='pip'),
    WordNode(pos=(1344, 1353), word='--version'),
  ]),
])


230) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


231) set -eux;  if [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then   grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;   sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker;   ! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;  fi;  apt-get update; apt-get install -y locales; rm -rf /var/lib/apt/lists/*;  localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

ListNode(pos=(0, 396), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CompoundNode(list=[
    IfNode(pos=(11, 243), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 49), parts=[
          CommandNode(pos=(14, 48), parts=[
            WordNode(pos=(14, 15), word='['),
            WordNode(pos=(16, 18), word='-f'),
            WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
            WordNode(pos=(47, 48), word=']'),
          ]),
          OperatorNode(op=';', pos=(48, 49)),
        ]),
      ReservedwordNode(pos=(50, 54), word='then'),
      ListNode(pos=(57, 239), parts=[
          CommandNode(pos=(57, 112), parts=[
            WordNode(pos=(57, 61), word='grep'),
            WordNode(pos=(62, 64), word='-q'),
            WordNode(pos=(65, 84), word='/usr/share/locale'),
            WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(112, 113)),
          CommandNode(pos=(116, 177), parts=[
            WordNode(pos=(116, 119), word='sed'),
            WordNode(pos=(120, 123), word='-ri'),
            WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
            WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(177, 178)),
          PipelineNode(pos=(181, 238), parts=[
            ReservedwordNode(pos=(181, 182), word='!'),
            CommandNode(pos=(183, 238), parts=[
              WordNode(pos=(183, 187), word='grep'),
              WordNode(pos=(188, 190), word='-q'),
              WordNode(pos=(191, 210), word='/usr/share/locale'),
              WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
            ]),
          ]),
          OperatorNode(op=';', pos=(238, 239)),
        ]),
      ReservedwordNode(pos=(241, 243), word='fi'),
    ]),
  ], pos=(11, 243)),
  OperatorNode(op=';', pos=(243, 244)),
  CommandNode(pos=(246, 260), parts=[
    WordNode(pos=(246, 253), word='apt-get'),
    WordNode(pos=(254, 260), word='update'),
  ]),
  OperatorNode(op=';', pos=(260, 261)),
  CommandNode(pos=(262, 288), parts=[
    WordNode(pos=(262, 269), word='apt-get'),
    WordNode(pos=(270, 277), word='install'),
    WordNode(pos=(278, 280), word='-y'),
    WordNode(pos=(281, 288), word='locales'),
  ]),
  OperatorNode(op=';', pos=(288, 289)),
  CommandNode(pos=(290, 317), parts=[
    WordNode(pos=(290, 292), word='rm'),
    WordNode(pos=(293, 296), word='-rf'),
    WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(317, 318)),
  CommandNode(pos=(320, 396), parts=[
    WordNode(pos=(320, 329), word='localedef'),
    WordNode(pos=(330, 332), word='-i'),
    WordNode(pos=(333, 338), word='en_US'),
    WordNode(pos=(339, 341), word='-c'),
    WordNode(pos=(342, 344), word='-f'),
    WordNode(pos=(345, 350), word='UTF-8'),
    WordNode(pos=(351, 353), word='-A'),
    WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
    WordNode(pos=(385, 396), word='en_US.UTF-8'),
  ]),
])


232) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


233) set -eux;  if [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then   grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;   sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker;   ! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;  fi;  apt-get update; apt-get install -y locales; rm -rf /var/lib/apt/lists/*;  localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

ListNode(pos=(0, 396), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CompoundNode(list=[
    IfNode(pos=(11, 243), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 49), parts=[
          CommandNode(pos=(14, 48), parts=[
            WordNode(pos=(14, 15), word='['),
            WordNode(pos=(16, 18), word='-f'),
            WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
            WordNode(pos=(47, 48), word=']'),
          ]),
          OperatorNode(op=';', pos=(48, 49)),
        ]),
      ReservedwordNode(pos=(50, 54), word='then'),
      ListNode(pos=(57, 239), parts=[
          CommandNode(pos=(57, 112), parts=[
            WordNode(pos=(57, 61), word='grep'),
            WordNode(pos=(62, 64), word='-q'),
            WordNode(pos=(65, 84), word='/usr/share/locale'),
            WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(112, 113)),
          CommandNode(pos=(116, 177), parts=[
            WordNode(pos=(116, 119), word='sed'),
            WordNode(pos=(120, 123), word='-ri'),
            WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
            WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(177, 178)),
          PipelineNode(pos=(181, 238), parts=[
            ReservedwordNode(pos=(181, 182), word='!'),
            CommandNode(pos=(183, 238), parts=[
              WordNode(pos=(183, 187), word='grep'),
              WordNode(pos=(188, 190), word='-q'),
              WordNode(pos=(191, 210), word='/usr/share/locale'),
              WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
            ]),
          ]),
          OperatorNode(op=';', pos=(238, 239)),
        ]),
      ReservedwordNode(pos=(241, 243), word='fi'),
    ]),
  ], pos=(11, 243)),
  OperatorNode(op=';', pos=(243, 244)),
  CommandNode(pos=(246, 260), parts=[
    WordNode(pos=(246, 253), word='apt-get'),
    WordNode(pos=(254, 260), word='update'),
  ]),
  OperatorNode(op=';', pos=(260, 261)),
  CommandNode(pos=(262, 288), parts=[
    WordNode(pos=(262, 269), word='apt-get'),
    WordNode(pos=(270, 277), word='install'),
    WordNode(pos=(278, 280), word='-y'),
    WordNode(pos=(281, 288), word='locales'),
  ]),
  OperatorNode(op=';', pos=(288, 289)),
  CommandNode(pos=(290, 317), parts=[
    WordNode(pos=(290, 292), word='rm'),
    WordNode(pos=(293, 296), word='-rf'),
    WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(317, 318)),
  CommandNode(pos=(320, 396), parts=[
    WordNode(pos=(320, 329), word='localedef'),
    WordNode(pos=(330, 332), word='-i'),
    WordNode(pos=(333, 338), word='en_US'),
    WordNode(pos=(339, 341), word='-c'),
    WordNode(pos=(342, 344), word='-f'),
    WordNode(pos=(345, 350), word='UTF-8'),
    WordNode(pos=(351, 353), word='-A'),
    WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
    WordNode(pos=(385, 396), word='en_US.UTF-8'),
  ]),
])


234) set -eux;  mkdir -p "$GHOST_INSTALL";  chown node:node "$GHOST_INSTALL";   gosu node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL";   cd "$GHOST_INSTALL";  gosu node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db";  gosu node ghost config paths.contentPath "$GHOST_CONTENT";   gosu node ln -s config.production.json "$GHOST_INSTALL/config.development.json";  readlink -f "$GHOST_INSTALL/config.development.json";   mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig";  mkdir -p "$GHOST_CONTENT";  chown node:node "$GHOST_CONTENT";   cd "$GHOST_INSTALL/current";  sqlite3Version="$(npm view . optionalDependencies.sqlite3)";  if ! gosu node yarn add "sqlite3@$sqlite3Version" --force; then   savedAptMark="$(apt-mark showmanual)";   apt-get update;   apt-get install -y --no-install-recommends python make gcc g++ libc-dev;   rm -rf /var/lib/apt/lists/*;     gosu node yarn add "sqlite3@$sqlite3Version" --force --build-from-source;     apt-mark showmanual | xargs apt-mark auto > /dev/null;   [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;   apt-get purge -y --auto-remove;  fi;   gosu node yarn cache clean;  gosu node npm cache clean --force;  npm cache clean --force;  rm -rv /tmp/yarn* /tmp/v8*

ListNode(pos=(0, 1344), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 36), parts=[
    WordNode(pos=(11, 16), word='mkdir'),
    WordNode(pos=(17, 19), word='-p'),
    WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(36, 37)),
  CommandNode(pos=(39, 71), parts=[
    WordNode(pos=(39, 44), word='chown'),
    WordNode(pos=(45, 54), word='node:node'),
    WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(71, 72)),
  CommandNode(pos=(75, 185), parts=[
    WordNode(pos=(75, 79), word='gosu'),
    WordNode(pos=(80, 84), word='node'),
    WordNode(pos=(85, 90), word='ghost'),
    WordNode(pos=(91, 98), word='install'),
    WordNode(pos=(99, 115), word='$GHOST_VERSION', parts=[
      ParameterNode(pos=(100, 114), value='GHOST_VERSION'),
    ]),
    WordNode(pos=(116, 120), word='--db'),
    WordNode(pos=(121, 128), word='sqlite3'),
    WordNode(pos=(129, 140), word='--no-prompt'),
    WordNode(pos=(141, 151), word='--no-stack'),
    WordNode(pos=(152, 162), word='--no-setup'),
    WordNode(pos=(163, 168), word='--dir'),
    WordNode(pos=(169, 185), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(170, 184), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(185, 186)),
  CommandNode(pos=(189, 208), parts=[
    WordNode(pos=(189, 191), word='cd'),
    WordNode(pos=(192, 208), word='$GHOST_INSTALL', parts=[
      ParameterNode(pos=(193, 207), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(208, 209)),
  CommandNode(pos=(211, 351), parts=[
    WordNode(pos=(211, 215), word='gosu'),
    WordNode(pos=(216, 220), word='node'),
    WordNode(pos=(221, 226), word='ghost'),
    WordNode(pos=(227, 233), word='config'),
    WordNode(pos=(234, 238), word='--ip'),
    WordNode(pos=(239, 246), word='0.0.0.0'),
    WordNode(pos=(247, 253), word='--port'),
    WordNode(pos=(254, 258), word='2368'),
    WordNode(pos=(259, 270), word='--no-prompt'),
    WordNode(pos=(271, 275), word='--db'),
    WordNode(pos=(276, 283), word='sqlite3'),
    WordNode(pos=(284, 289), word='--url'),
    WordNode(pos=(290, 311), word='http://localhost:2368'),
    WordNode(pos=(312, 320), word='--dbpath'),
    WordNode(pos=(321, 351), word='$GHOST_CONTENT/data/ghost.db', parts=[
      ParameterNode(pos=(322, 336), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(351, 352)),
  CommandNode(pos=(354, 411), parts=[
    WordNode(pos=(354, 358), word='gosu'),
    WordNode(pos=(359, 363), word='node'),
    WordNode(pos=(364, 369), word='ghost'),
    WordNode(pos=(370, 376), word='config'),
    WordNode(pos=(377, 394), word='paths.contentPath'),
    WordNode(pos=(395, 411), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(396, 410), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(411, 412)),
  CommandNode(pos=(415, 494), parts=[
    WordNode(pos=(415, 419), word='gosu'),
    WordNode(pos=(420, 424), word='node'),
    WordNode(pos=(425, 427), word='ln'),
    WordNode(pos=(428, 430), word='-s'),
    WordNode(pos=(431, 453), word='config.production.json'),
    WordNode(pos=(454, 494), word='$GHOST_INSTALL/config.development.json', parts=[
      ParameterNode(pos=(455, 469), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(494, 495)),
  CommandNode(pos=(497, 549), parts=[
    WordNode(pos=(497, 505), word='readlink'),
    WordNode(pos=(506, 508), word='-f'),
    WordNode(pos=(509, 549), word='$GHOST_INSTALL/config.development.json', parts=[
      ParameterNode(pos=(510, 524), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(549, 550)),
  CommandNode(pos=(553, 602), parts=[
    WordNode(pos=(553, 555), word='mv'),
    WordNode(pos=(556, 572), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(557, 571), value='GHOST_CONTENT'),
    ]),
    WordNode(pos=(573, 602), word='$GHOST_INSTALL/content.orig', parts=[
      ParameterNode(pos=(574, 588), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(602, 603)),
  CommandNode(pos=(605, 630), parts=[
    WordNode(pos=(605, 610), word='mkdir'),
    WordNode(pos=(611, 613), word='-p'),
    WordNode(pos=(614, 630), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(615, 629), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(630, 631)),
  CommandNode(pos=(633, 665), parts=[
    WordNode(pos=(633, 638), word='chown'),
    WordNode(pos=(639, 648), word='node:node'),
    WordNode(pos=(649, 665), word='$GHOST_CONTENT', parts=[
      ParameterNode(pos=(650, 664), value='GHOST_CONTENT'),
    ]),
  ]),
  OperatorNode(op=';', pos=(665, 666)),
  CommandNode(pos=(669, 696), parts=[
    WordNode(pos=(669, 671), word='cd'),
    WordNode(pos=(672, 696), word='$GHOST_INSTALL/current', parts=[
      ParameterNode(pos=(673, 687), value='GHOST_INSTALL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(696, 697)),
  CommandNode(pos=(699, 758), parts=[
    WordNode(pos=(699, 758), word='sqlite3Version=$(npm view . optionalDependencies.sqlite3)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(717, 756), parts=[
          WordNode(pos=(717, 720), word='npm'),
          WordNode(pos=(721, 725), word='view'),
          WordNode(pos=(726, 727), word='.'),
          WordNode(pos=(728, 756), word='optionalDependencies.sqlite3'),
        ]), pos=(715, 757)),
    ]),
  ]),
  OperatorNode(op=';', pos=(758, 759)),
  CompoundNode(list=[
    IfNode(pos=(761, 1223), parts=[
      ReservedwordNode(pos=(761, 763), word='if'),
      ListNode(pos=(764, 819), parts=[
          PipelineNode(pos=(764, 818), parts=[
            ReservedwordNode(pos=(764, 765), word='!'),
            CommandNode(pos=(766, 818), parts=[
              WordNode(pos=(766, 770), word='gosu'),
              WordNode(pos=(771, 775), word='node'),
              WordNode(pos=(776, 780), word='yarn'),
              WordNode(pos=(781, 784), word='add'),
              WordNode(pos=(785, 810), word='sqlite3@$sqlite3Version', parts=[
                ParameterNode(pos=(794, 809), value='sqlite3Version'),
              ]),
              WordNode(pos=(811, 818), word='--force'),
            ]),
          ]),
          OperatorNode(op=';', pos=(818, 819)),
        ]),
      ReservedwordNode(pos=(820, 824), word='then'),
      ListNode(pos=(827, 1219), parts=[
          CommandNode(pos=(827, 864), parts=[
            AssignmentNode(pos=(827, 864), word='savedAptMark=$(apt-mark showmanual)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(843, 862), parts=[
                  WordNode(pos=(843, 851), word='apt-mark'),
                  WordNode(pos=(852, 862), word='showmanual'),
                ]), pos=(841, 863)),
            ]),
          ]),
          OperatorNode(op=';', pos=(864, 865)),
          CommandNode(pos=(868, 882), parts=[
            WordNode(pos=(868, 875), word='apt-get'),
            WordNode(pos=(876, 882), word='update'),
          ]),
          OperatorNode(op=';', pos=(882, 883)),
          CommandNode(pos=(886, 957), parts=[
            WordNode(pos=(886, 893), word='apt-get'),
            WordNode(pos=(894, 901), word='install'),
            WordNode(pos=(902, 904), word='-y'),
            WordNode(pos=(905, 928), word='--no-install-recommends'),
            WordNode(pos=(929, 935), word='python'),
            WordNode(pos=(936, 940), word='make'),
            WordNode(pos=(941, 944), word='gcc'),
            WordNode(pos=(945, 948), word='g++'),
            WordNode(pos=(949, 957), word='libc-dev'),
          ]),
          OperatorNode(op=';', pos=(957, 958)),
          CommandNode(pos=(961, 988), parts=[
            WordNode(pos=(961, 963), word='rm'),
            WordNode(pos=(964, 967), word='-rf'),
            WordNode(pos=(968, 988), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(988, 989)),
          CommandNode(pos=(994, 1066), parts=[
            WordNode(pos=(994, 998), word='gosu'),
            WordNode(pos=(999, 1003), word='node'),
            WordNode(pos=(1004, 1008), word='yarn'),
            WordNode(pos=(1009, 1012), word='add'),
            WordNode(pos=(1013, 1038), word='sqlite3@$sqlite3Version', parts=[
              ParameterNode(pos=(1022, 1037), value='sqlite3Version'),
            ]),
            WordNode(pos=(1039, 1046), word='--force'),
            WordNode(pos=(1047, 1066), word='--build-from-source'),
          ]),
          OperatorNode(op=';', pos=(1066, 1067)),
          PipelineNode(pos=(1072, 1125), parts=[
            CommandNode(pos=(1072, 1091), parts=[
              WordNode(pos=(1072, 1080), word='apt-mark'),
              WordNode(pos=(1081, 1091), word='showmanual'),
            ]),
            PipeNode(pipe='|', pos=(1092, 1093)),
            CommandNode(pos=(1094, 1125), parts=[
              WordNode(pos=(1094, 1099), word='xargs'),
              WordNode(pos=(1100, 1108), word='apt-mark'),
              WordNode(pos=(1109, 1113), word='auto'),
              RedirectNode(output=
                WordNode(pos=(1116, 1125), word='/dev/null'), pos=(1114, 1125), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1125, 1126)),
          CommandNode(pos=(1129, 1151), parts=[
            WordNode(pos=(1129, 1130), word='['),
            WordNode(pos=(1131, 1133), word='-z'),
            WordNode(pos=(1134, 1149), word='$savedAptMark', parts=[
              ParameterNode(pos=(1135, 1148), value='savedAptMark'),
            ]),
            WordNode(pos=(1150, 1151), word=']'),
          ]),
          OperatorNode(op='||', pos=(1152, 1154)),
          CommandNode(pos=(1155, 1184), parts=[
            WordNode(pos=(1155, 1163), word='apt-mark'),
            WordNode(pos=(1164, 1170), word='manual'),
            WordNode(pos=(1171, 1184), word='$savedAptMark', parts=[
              ParameterNode(pos=(1171, 1184), value='savedAptMark'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1184, 1185)),
          CommandNode(pos=(1188, 1218), parts=[
            WordNode(pos=(1188, 1195), word='apt-get'),
            WordNode(pos=(1196, 1201), word='purge'),
            WordNode(pos=(1202, 1204), word='-y'),
            WordNode(pos=(1205, 1218), word='--auto-remove'),
          ]),
          OperatorNode(op=';', pos=(1218, 1219)),
        ]),
      ReservedwordNode(pos=(1221, 1223), word='fi'),
    ]),
  ], pos=(761, 1223)),
  OperatorNode(op=';', pos=(1223, 1224)),
  CommandNode(pos=(1227, 1253), parts=[
    WordNode(pos=(1227, 1231), word='gosu'),
    WordNode(pos=(1232, 1236), word='node'),
    WordNode(pos=(1237, 1241), word='yarn'),
    WordNode(pos=(1242, 1247), word='cache'),
    WordNode(pos=(1248, 1253), word='clean'),
  ]),
  OperatorNode(op=';', pos=(1253, 1254)),
  CommandNode(pos=(1256, 1289), parts=[
    WordNode(pos=(1256, 1260), word='gosu'),
    WordNode(pos=(1261, 1265), word='node'),
    WordNode(pos=(1266, 1269), word='npm'),
    WordNode(pos=(1270, 1275), word='cache'),
    WordNode(pos=(1276, 1281), word='clean'),
    WordNode(pos=(1282, 1289), word='--force'),
  ]),
  OperatorNode(op=';', pos=(1289, 1290)),
  CommandNode(pos=(1292, 1315), parts=[
    WordNode(pos=(1292, 1295), word='npm'),
    WordNode(pos=(1296, 1301), word='cache'),
    WordNode(pos=(1302, 1307), word='clean'),
    WordNode(pos=(1308, 1315), word='--force'),
  ]),
  OperatorNode(op=';', pos=(1315, 1316)),
  CommandNode(pos=(1318, 1344), parts=[
    WordNode(pos=(1318, 1320), word='rm'),
    WordNode(pos=(1321, 1324), word='-rv'),
    WordNode(pos=(1325, 1335), word='/tmp/yarn*'),
    WordNode(pos=(1336, 1344), word='/tmp/v8*'),
  ]),
])


235) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


236) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


237) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


238) set -eux;  apk add --no-cache   btrfs-progs   e2fsprogs   e2fsprogs-extra   iptables   xfsprogs   xz   pigz  ;  if zfs="$(apk info --no-cache --quiet zfs)" && [ -n "$zfs" ]; then   apk add --no-cache zfs;  fi

ListNode(pos=(0, 208), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 107), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(32, 43), word='btrfs-progs'),
    WordNode(pos=(46, 55), word='e2fsprogs'),
    WordNode(pos=(58, 73), word='e2fsprogs-extra'),
    WordNode(pos=(76, 84), word='iptables'),
    WordNode(pos=(87, 95), word='xfsprogs'),
    WordNode(pos=(98, 100), word='xz'),
    WordNode(pos=(103, 107), word='pigz'),
  ]),
  OperatorNode(op=';', pos=(109, 110)),
  CompoundNode(list=[
    IfNode(pos=(112, 208), parts=[
      ReservedwordNode(pos=(112, 114), word='if'),
      ListNode(pos=(115, 173), parts=[
          CommandNode(pos=(115, 155), parts=[
            AssignmentNode(pos=(115, 155), word='zfs=$(apk info --no-cache --quiet zfs)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(122, 153), parts=[
                  WordNode(pos=(122, 125), word='apk'),
                  WordNode(pos=(126, 130), word='info'),
                  WordNode(pos=(131, 141), word='--no-cache'),
                  WordNode(pos=(142, 149), word='--quiet'),
                  WordNode(pos=(150, 153), word='zfs'),
                ]), pos=(120, 154)),
            ]),
          ]),
          OperatorNode(op='&&', pos=(156, 158)),
          CommandNode(pos=(159, 172), parts=[
            WordNode(pos=(159, 160), word='['),
            WordNode(pos=(161, 163), word='-n'),
            WordNode(pos=(164, 170), word='$zfs', parts=[
              ParameterNode(pos=(165, 169), value='zfs'),
            ]),
            WordNode(pos=(171, 172), word=']'),
          ]),
          OperatorNode(op=';', pos=(172, 173)),
        ]),
      ReservedwordNode(pos=(174, 178), word='then'),
      ListNode(pos=(181, 204), parts=[
          CommandNode(pos=(181, 203), parts=[
            WordNode(pos=(181, 184), word='apk'),
            WordNode(pos=(185, 188), word='add'),
            WordNode(pos=(189, 199), word='--no-cache'),
            WordNode(pos=(200, 203), word='zfs'),
          ]),
          OperatorNode(op=';', pos=(203, 204)),
        ]),
      ReservedwordNode(pos=(206, 208), word='fi'),
    ]),
  ], pos=(112, 208)),
])


239) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


240) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


241) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


242) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


243) set -ex;  apt-get update;  if ! which gpg; then   apt-get install -y --no-install-recommends gnupg;  fi;  if ! gpg --version | grep -q '^gpg (GnuPG) 1\.'; then    apt-get install -y --no-install-recommends dirmngr;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 248), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 24), parts=[
    WordNode(pos=(10, 17), word='apt-get'),
    WordNode(pos=(18, 24), word='update'),
  ]),
  OperatorNode(op=';', pos=(24, 25)),
  CompoundNode(list=[
    IfNode(pos=(27, 103), parts=[
      ReservedwordNode(pos=(27, 29), word='if'),
      ListNode(pos=(30, 42), parts=[
          PipelineNode(pos=(30, 41), parts=[
            ReservedwordNode(pos=(30, 31), word='!'),
            CommandNode(pos=(32, 41), parts=[
              WordNode(pos=(32, 37), word='which'),
              WordNode(pos=(38, 41), word='gpg'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 99), parts=[
          CommandNode(pos=(50, 98), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 65), word='install'),
            WordNode(pos=(66, 68), word='-y'),
            WordNode(pos=(69, 92), word='--no-install-recommends'),
            WordNode(pos=(93, 98), word='gnupg'),
          ]),
          OperatorNode(op=';', pos=(98, 99)),
        ]),
      ReservedwordNode(pos=(101, 103), word='fi'),
    ]),
  ], pos=(27, 103)),
  OperatorNode(op=';', pos=(103, 104)),
  CompoundNode(list=[
    IfNode(pos=(106, 218), parts=[
      ReservedwordNode(pos=(106, 108), word='if'),
      ListNode(pos=(109, 154), parts=[
          PipelineNode(pos=(109, 153), parts=[
            ReservedwordNode(pos=(109, 110), word='!'),
            CommandNode(pos=(111, 124), parts=[
              WordNode(pos=(111, 114), word='gpg'),
              WordNode(pos=(115, 124), word='--version'),
            ]),
            PipeNode(pipe='|', pos=(125, 126)),
            CommandNode(pos=(127, 153), parts=[
              WordNode(pos=(127, 131), word='grep'),
              WordNode(pos=(132, 134), word='-q'),
              WordNode(pos=(135, 153), word='^gpg (GnuPG) 1\\.'),
            ]),
          ]),
          OperatorNode(op=';', pos=(153, 154)),
        ]),
      ReservedwordNode(pos=(155, 159), word='then'),
      ListNode(pos=(163, 214), parts=[
          CommandNode(pos=(163, 213), parts=[
            WordNode(pos=(163, 170), word='apt-get'),
            WordNode(pos=(171, 178), word='install'),
            WordNode(pos=(179, 181), word='-y'),
            WordNode(pos=(182, 205), word='--no-install-recommends'),
            WordNode(pos=(206, 213), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(213, 214)),
        ]),
      ReservedwordNode(pos=(216, 218), word='fi'),
    ]),
  ], pos=(106, 218)),
  OperatorNode(op=';', pos=(218, 219)),
  CommandNode(pos=(221, 248), parts=[
    WordNode(pos=(221, 223), word='rm'),
    WordNode(pos=(224, 227), word='-rf'),
    WordNode(pos=(228, 248), word='/var/lib/apt/lists/*'),
  ]),
])


244) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


245) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


246) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


247) set -ex;  if ! command -v gpg > /dev/null; then   apt-get update;   apt-get install -y --no-install-recommends    gnupg    dirmngr   ;   rm -rf /var/lib/apt/lists/*;  fi

ListNode(pos=(0, 169), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(10, 169), parts=[
      ReservedwordNode(pos=(10, 12), word='if'),
      ListNode(pos=(13, 42), parts=[
          PipelineNode(pos=(13, 41), parts=[
            ReservedwordNode(pos=(13, 14), word='!'),
            CommandNode(pos=(15, 41), parts=[
              WordNode(pos=(15, 22), word='command'),
              WordNode(pos=(23, 25), word='-v'),
              WordNode(pos=(26, 29), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(32, 41), word='/dev/null'), pos=(30, 41), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(41, 42)),
        ]),
      ReservedwordNode(pos=(43, 47), word='then'),
      ListNode(pos=(50, 165), parts=[
          CommandNode(pos=(50, 64), parts=[
            WordNode(pos=(50, 57), word='apt-get'),
            WordNode(pos=(58, 64), word='update'),
          ]),
          OperatorNode(op=';', pos=(64, 65)),
          CommandNode(pos=(68, 130), parts=[
            WordNode(pos=(68, 75), word='apt-get'),
            WordNode(pos=(76, 83), word='install'),
            WordNode(pos=(84, 86), word='-y'),
            WordNode(pos=(87, 110), word='--no-install-recommends'),
            WordNode(pos=(114, 119), word='gnupg'),
            WordNode(pos=(123, 130), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(133, 134)),
          CommandNode(pos=(137, 164), parts=[
            WordNode(pos=(137, 139), word='rm'),
            WordNode(pos=(140, 143), word='-rf'),
            WordNode(pos=(144, 164), word='/var/lib/apt/lists/*'),
          ]),
          OperatorNode(op=';', pos=(164, 165)),
        ]),
      ReservedwordNode(pos=(167, 169), word='fi'),
    ]),
  ], pos=(10, 169)),
])


248) set -eux;  if [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then   grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;   sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker;   ! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker;  fi;  apt-get update; apt-get install -y locales; rm -rf /var/lib/apt/lists/*;  localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8

ListNode(pos=(0, 396), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CompoundNode(list=[
    IfNode(pos=(11, 243), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 49), parts=[
          CommandNode(pos=(14, 48), parts=[
            WordNode(pos=(14, 15), word='['),
            WordNode(pos=(16, 18), word='-f'),
            WordNode(pos=(19, 46), word='/etc/dpkg/dpkg.cfg.d/docker'),
            WordNode(pos=(47, 48), word=']'),
          ]),
          OperatorNode(op=';', pos=(48, 49)),
        ]),
      ReservedwordNode(pos=(50, 54), word='then'),
      ListNode(pos=(57, 239), parts=[
          CommandNode(pos=(57, 112), parts=[
            WordNode(pos=(57, 61), word='grep'),
            WordNode(pos=(62, 64), word='-q'),
            WordNode(pos=(65, 84), word='/usr/share/locale'),
            WordNode(pos=(85, 112), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(112, 113)),
          CommandNode(pos=(116, 177), parts=[
            WordNode(pos=(116, 119), word='sed'),
            WordNode(pos=(120, 123), word='-ri'),
            WordNode(pos=(124, 149), word='/\\/usr\\/share\\/locale/d'),
            WordNode(pos=(150, 177), word='/etc/dpkg/dpkg.cfg.d/docker'),
          ]),
          OperatorNode(op=';', pos=(177, 178)),
          PipelineNode(pos=(181, 238), parts=[
            ReservedwordNode(pos=(181, 182), word='!'),
            CommandNode(pos=(183, 238), parts=[
              WordNode(pos=(183, 187), word='grep'),
              WordNode(pos=(188, 190), word='-q'),
              WordNode(pos=(191, 210), word='/usr/share/locale'),
              WordNode(pos=(211, 238), word='/etc/dpkg/dpkg.cfg.d/docker'),
            ]),
          ]),
          OperatorNode(op=';', pos=(238, 239)),
        ]),
      ReservedwordNode(pos=(241, 243), word='fi'),
    ]),
  ], pos=(11, 243)),
  OperatorNode(op=';', pos=(243, 244)),
  CommandNode(pos=(246, 260), parts=[
    WordNode(pos=(246, 253), word='apt-get'),
    WordNode(pos=(254, 260), word='update'),
  ]),
  OperatorNode(op=';', pos=(260, 261)),
  CommandNode(pos=(262, 288), parts=[
    WordNode(pos=(262, 269), word='apt-get'),
    WordNode(pos=(270, 277), word='install'),
    WordNode(pos=(278, 280), word='-y'),
    WordNode(pos=(281, 288), word='locales'),
  ]),
  OperatorNode(op=';', pos=(288, 289)),
  CommandNode(pos=(290, 317), parts=[
    WordNode(pos=(290, 292), word='rm'),
    WordNode(pos=(293, 296), word='-rf'),
    WordNode(pos=(297, 317), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(317, 318)),
  CommandNode(pos=(320, 396), parts=[
    WordNode(pos=(320, 329), word='localedef'),
    WordNode(pos=(330, 332), word='-i'),
    WordNode(pos=(333, 338), word='en_US'),
    WordNode(pos=(339, 341), word='-c'),
    WordNode(pos=(342, 344), word='-f'),
    WordNode(pos=(345, 350), word='UTF-8'),
    WordNode(pos=(351, 353), word='-A'),
    WordNode(pos=(354, 384), word='/usr/share/locale/locale.alias'),
    WordNode(pos=(385, 396), word='en_US.UTF-8'),
  ]),
])


249) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


250) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


251) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


252) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


253) set -eux;  apt-get update;  apt-get install -y --no-install-recommends   ca-certificates   jq   numactl  ;  if ! command -v ps > /dev/null; then   apt-get install -y --no-install-recommends procps;  fi;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 231), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 103), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 88), word='ca-certificates'),
    WordNode(pos=(91, 93), word='jq'),
    WordNode(pos=(96, 103), word='numactl'),
  ]),
  OperatorNode(op=';', pos=(105, 106)),
  CompoundNode(list=[
    IfNode(pos=(108, 201), parts=[
      ReservedwordNode(pos=(108, 110), word='if'),
      ListNode(pos=(111, 139), parts=[
          PipelineNode(pos=(111, 138), parts=[
            ReservedwordNode(pos=(111, 112), word='!'),
            CommandNode(pos=(113, 138), parts=[
              WordNode(pos=(113, 120), word='command'),
              WordNode(pos=(121, 123), word='-v'),
              WordNode(pos=(124, 126), word='ps'),
              RedirectNode(output=
                WordNode(pos=(129, 138), word='/dev/null'), pos=(127, 138), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(138, 139)),
        ]),
      ReservedwordNode(pos=(140, 144), word='then'),
      ListNode(pos=(147, 197), parts=[
          CommandNode(pos=(147, 196), parts=[
            WordNode(pos=(147, 154), word='apt-get'),
            WordNode(pos=(155, 162), word='install'),
            WordNode(pos=(163, 165), word='-y'),
            WordNode(pos=(166, 189), word='--no-install-recommends'),
            WordNode(pos=(190, 196), word='procps'),
          ]),
          OperatorNode(op=';', pos=(196, 197)),
        ]),
      ReservedwordNode(pos=(199, 201), word='fi'),
    ]),
  ], pos=(108, 201)),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(204, 231), parts=[
    WordNode(pos=(204, 206), word='rm'),
    WordNode(pos=(207, 210), word='-rf'),
    WordNode(pos=(211, 231), word='/var/lib/apt/lists/*'),
  ]),
])


254) set -ex;   apt-get update;  apt-get install -y --no-install-recommends   wget  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends gnupg dirmngr;  fi;  rm -rf /var/lib/apt/lists/*;   dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')";  wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch";  wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc";  export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc;  chmod +x /usr/local/bin/gosu;  gosu --version;  gosu nobody true;   wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js";   apt-get purge -y --auto-remove wget

ListNode(pos=(0, 1013), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 77), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(73, 77), word='wget'),
  ]),
  OperatorNode(op=';', pos=(79, 80)),
  CompoundNode(list=[
    IfNode(pos=(82, 183), parts=[
      ReservedwordNode(pos=(82, 84), word='if'),
      ListNode(pos=(85, 114), parts=[
          PipelineNode(pos=(85, 113), parts=[
            ReservedwordNode(pos=(85, 86), word='!'),
            CommandNode(pos=(87, 113), parts=[
              WordNode(pos=(87, 94), word='command'),
              WordNode(pos=(95, 97), word='-v'),
              WordNode(pos=(98, 101), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(104, 113), word='/dev/null'), pos=(102, 113), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(113, 114)),
        ]),
      ReservedwordNode(pos=(115, 119), word='then'),
      ListNode(pos=(122, 179), parts=[
          CommandNode(pos=(122, 178), parts=[
            WordNode(pos=(122, 129), word='apt-get'),
            WordNode(pos=(130, 137), word='install'),
            WordNode(pos=(138, 140), word='-y'),
            WordNode(pos=(141, 164), word='--no-install-recommends'),
            WordNode(pos=(165, 170), word='gnupg'),
            WordNode(pos=(171, 178), word='dirmngr'),
          ]),
          OperatorNode(op=';', pos=(178, 179)),
        ]),
      ReservedwordNode(pos=(181, 183), word='fi'),
    ]),
  ], pos=(82, 183)),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(186, 213), parts=[
    WordNode(pos=(186, 188), word='rm'),
    WordNode(pos=(189, 192), word='-rf'),
    WordNode(pos=(193, 213), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(213, 214)),
  CommandNode(pos=(217, 282), parts=[
    AssignmentNode(pos=(217, 282), word="dpkgArch=$(dpkg --print-architecture | awk -F- '{ print $NF }')", parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(229, 280), parts=[
          CommandNode(pos=(229, 254), parts=[
            WordNode(pos=(229, 233), word='dpkg'),
            WordNode(pos=(234, 254), word='--print-architecture'),
          ]),
          PipeNode(pipe='|', pos=(255, 256)),
          CommandNode(pos=(257, 280), parts=[
            WordNode(pos=(257, 260), word='awk'),
            WordNode(pos=(261, 264), word='-F-'),
            WordNode(pos=(265, 280), word='{ print $NF }'),
          ]),
        ]), pos=(227, 281)),
    ]),
  ]),
  OperatorNode(op=';', pos=(282, 283)),
  CommandNode(pos=(285, 392), parts=[
    WordNode(pos=(285, 289), word='wget'),
    WordNode(pos=(290, 292), word='-O'),
    WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
    WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
      ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
      ParameterNode(pos=(382, 391), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(392, 393)),
  CommandNode(pos=(395, 510), parts=[
    WordNode(pos=(395, 399), word='wget'),
    WordNode(pos=(400, 402), word='-O'),
    WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
      ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
      ParameterNode(pos=(496, 505), value='dpkgArch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 544), parts=[
    WordNode(pos=(513, 519), word='export'),
    WordNode(pos=(520, 544), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(533, 542), parts=[
          WordNode(pos=(533, 539), word='mktemp'),
          WordNode(pos=(540, 542), word='-d'),
        ]), pos=(531, 543)),
    ]),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(547, 650), parts=[
    WordNode(pos=(547, 550), word='gpg'),
    WordNode(pos=(551, 558), word='--batch'),
    WordNode(pos=(559, 570), word='--keyserver'),
    WordNode(pos=(571, 597), word='ha.pool.sks-keyservers.net'),
    WordNode(pos=(598, 609), word='--recv-keys'),
    WordNode(pos=(610, 650), word='B42F6819007F00F88E364FD4036A9C25BF357DD4'),
  ]),
  OperatorNode(op=';', pos=(650, 651)),
  CommandNode(pos=(653, 717), parts=[
    WordNode(pos=(653, 656), word='gpg'),
    WordNode(pos=(657, 664), word='--batch'),
    WordNode(pos=(665, 673), word='--verify'),
    WordNode(pos=(674, 697), word='/usr/local/bin/gosu.asc'),
    WordNode(pos=(698, 717), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(717, 718)),
  CommandNode(pos=(720, 738), parts=[
    WordNode(pos=(720, 727), word='command'),
    WordNode(pos=(728, 730), word='-v'),
    WordNode(pos=(731, 738), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(739, 741)),
  CommandNode(pos=(742, 760), parts=[
    WordNode(pos=(742, 749), word='gpgconf'),
    WordNode(pos=(750, 756), word='--kill'),
    WordNode(pos=(757, 760), word='all'),
  ]),
  OperatorNode(op='||', pos=(761, 763)),
  CommandNode(pos=(764, 765), parts=[
    WordNode(pos=(764, 765), word=':'),
  ]),
  OperatorNode(op=';', pos=(765, 766)),
  CommandNode(pos=(768, 810), parts=[
    WordNode(pos=(768, 770), word='rm'),
    WordNode(pos=(771, 773), word='-r'),
    WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(775, 785), value='GNUPGHOME'),
    ]),
    WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 841), parts=[
    WordNode(pos=(813, 818), word='chmod'),
    WordNode(pos=(819, 821), word='+x'),
    WordNode(pos=(822, 841), word='/usr/local/bin/gosu'),
  ]),
  OperatorNode(op=';', pos=(841, 842)),
  CommandNode(pos=(844, 858), parts=[
    WordNode(pos=(844, 848), word='gosu'),
    WordNode(pos=(849, 858), word='--version'),
  ]),
  OperatorNode(op=';', pos=(858, 859)),
  CommandNode(pos=(861, 877), parts=[
    WordNode(pos=(861, 865), word='gosu'),
    WordNode(pos=(866, 872), word='nobody'),
    WordNode(pos=(873, 877), word='true'),
  ]),
  OperatorNode(op=';', pos=(877, 878)),
  CommandNode(pos=(881, 974), parts=[
    WordNode(pos=(881, 885), word='wget'),
    WordNode(pos=(886, 888), word='-O'),
    WordNode(pos=(889, 900), word='/js-yaml.js'),
    WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
      ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(978, 1013), parts=[
    WordNode(pos=(978, 985), word='apt-get'),
    WordNode(pos=(986, 991), word='purge'),
    WordNode(pos=(992, 994), word='-y'),
    WordNode(pos=(995, 1008), word='--auto-remove'),
    WordNode(pos=(1009, 1013), word='wget'),
  ]),
])


255) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


256) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


257) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


258) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


259) set -ex  && cd /usr/local/etc  && if [ -d php-fpm.d ]; then   sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null;   cp php-fpm.d/www.conf.default php-fpm.d/www.conf;  else   mkdir php-fpm.d;   cp php-fpm.conf.default php-fpm.d/www.conf;   {    echo '[global]';    echo 'include=etc/php-fpm.d/*.conf';   } | tee php-fpm.conf;  fi  && {   echo '[global]';   echo 'error_log = /proc/self/fd/2';   echo;   echo '[www]';   echo '; if we send this to /proc/self/fd/1, it never appears';   echo 'access.log = /proc/self/fd/2';   echo;   echo 'clear_env = no';   echo;   echo '; Ensure worker stdout and stderr are sent to the main error log.';   echo 'catch_workers_output = yes';  } | tee php-fpm.d/docker.conf  && {   echo '[global]';   echo 'daemonize = no';   echo;   echo '[www]';   echo 'listen = 9000';  } | tee php-fpm.d/zz-docker.conf

ListNode(pos=(0, 856), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op='&&', pos=(9, 11)),
  CommandNode(pos=(12, 29), parts=[
    WordNode(pos=(12, 14), word='cd'),
    WordNode(pos=(15, 29), word='/usr/local/etc'),
  ]),
  OperatorNode(op='&&', pos=(31, 33)),
  CompoundNode(list=[
    IfNode(pos=(34, 348), parts=[
      ReservedwordNode(pos=(34, 36), word='if'),
      ListNode(pos=(37, 54), parts=[
          CommandNode(pos=(37, 53), parts=[
            WordNode(pos=(37, 38), word='['),
            WordNode(pos=(39, 41), word='-d'),
            WordNode(pos=(42, 51), word='php-fpm.d'),
            WordNode(pos=(52, 53), word=']'),
          ]),
          OperatorNode(op=';', pos=(53, 54)),
        ]),
      ReservedwordNode(pos=(55, 59), word='then'),
      ListNode(pos=(62, 185), parts=[
          PipelineNode(pos=(62, 132), parts=[
            CommandNode(pos=(62, 101), parts=[
              WordNode(pos=(62, 65), word='sed'),
              WordNode(pos=(66, 80), word='s!=NONE/!=!g'),
              WordNode(pos=(81, 101), word='php-fpm.conf.default'),
            ]),
            PipeNode(pipe='|', pos=(102, 103)),
            CommandNode(pos=(104, 132), parts=[
              WordNode(pos=(104, 107), word='tee'),
              WordNode(pos=(108, 120), word='php-fpm.conf'),
              RedirectNode(output=
                WordNode(pos=(123, 132), word='/dev/null'), pos=(121, 132), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(132, 133)),
          CommandNode(pos=(136, 184), parts=[
            WordNode(pos=(136, 138), word='cp'),
            WordNode(pos=(139, 165), word='php-fpm.d/www.conf.default'),
            WordNode(pos=(166, 184), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(184, 185)),
        ]),
      ReservedwordNode(pos=(187, 191), word='else'),
      ListNode(pos=(194, 344), parts=[
          CommandNode(pos=(194, 209), parts=[
            WordNode(pos=(194, 199), word='mkdir'),
            WordNode(pos=(200, 209), word='php-fpm.d'),
          ]),
          OperatorNode(op=';', pos=(209, 210)),
          CommandNode(pos=(213, 255), parts=[
            WordNode(pos=(213, 215), word='cp'),
            WordNode(pos=(216, 236), word='php-fpm.conf.default'),
            WordNode(pos=(237, 255), word='php-fpm.d/www.conf'),
          ]),
          OperatorNode(op=';', pos=(255, 256)),
          PipelineNode(pos=(259, 343), parts=[
            CompoundNode(list=[
              ReservedwordNode(pos=(259, 260), word='{'),
              ListNode(pos=(264, 320), parts=[
                  CommandNode(pos=(264, 279), parts=[
                    WordNode(pos=(264, 268), word='echo'),
                    WordNode(pos=(269, 279), word='[global]'),
                  ]),
                  OperatorNode(op=';', pos=(279, 280)),
                  CommandNode(pos=(284, 319), parts=[
                    WordNode(pos=(284, 288), word='echo'),
                    WordNode(pos=(289, 319), word='include=etc/php-fpm.d/*.conf'),
                  ]),
                  OperatorNode(op=';', pos=(319, 320)),
                ]),
              ReservedwordNode(pos=(323, 324), word='}'),
            ], pos=(259, 324)),
            PipeNode(pipe='|', pos=(325, 326)),
            CommandNode(pos=(327, 343), parts=[
              WordNode(pos=(327, 330), word='tee'),
              WordNode(pos=(331, 343), word='php-fpm.conf'),
            ]),
          ]),
          OperatorNode(op=';', pos=(343, 344)),
        ]),
      ReservedwordNode(pos=(346, 348), word='fi'),
    ]),
  ], pos=(34, 348)),
  OperatorNode(op='&&', pos=(350, 352)),
  PipelineNode(pos=(353, 724), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(353, 354), word='{'),
      ListNode(pos=(357, 693), parts=[
          CommandNode(pos=(357, 372), parts=[
            WordNode(pos=(357, 361), word='echo'),
            WordNode(pos=(362, 372), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(372, 373)),
          CommandNode(pos=(376, 410), parts=[
            WordNode(pos=(376, 380), word='echo'),
            WordNode(pos=(381, 410), word='error_log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(410, 411)),
          CommandNode(pos=(414, 418), parts=[
            WordNode(pos=(414, 418), word='echo'),
          ]),
          OperatorNode(op=';', pos=(418, 419)),
          CommandNode(pos=(422, 434), parts=[
            WordNode(pos=(422, 426), word='echo'),
            WordNode(pos=(427, 434), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(434, 435)),
          CommandNode(pos=(438, 499), parts=[
            WordNode(pos=(438, 442), word='echo'),
            WordNode(pos=(443, 499), word='; if we send this to /proc/self/fd/1, it never appears'),
          ]),
          OperatorNode(op=';', pos=(499, 500)),
          CommandNode(pos=(503, 538), parts=[
            WordNode(pos=(503, 507), word='echo'),
            WordNode(pos=(508, 538), word='access.log = /proc/self/fd/2'),
          ]),
          OperatorNode(op=';', pos=(538, 539)),
          CommandNode(pos=(542, 546), parts=[
            WordNode(pos=(542, 546), word='echo'),
          ]),
          OperatorNode(op=';', pos=(546, 547)),
          CommandNode(pos=(550, 571), parts=[
            WordNode(pos=(550, 554), word='echo'),
            WordNode(pos=(555, 571), word='clear_env = no'),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CommandNode(pos=(575, 579), parts=[
            WordNode(pos=(575, 579), word='echo'),
          ]),
          OperatorNode(op=';', pos=(579, 580)),
          CommandNode(pos=(583, 655), parts=[
            WordNode(pos=(583, 587), word='echo'),
            WordNode(pos=(588, 655), word='; Ensure worker stdout and stderr are sent to the main error log.'),
          ]),
          OperatorNode(op=';', pos=(655, 656)),
          CommandNode(pos=(659, 692), parts=[
            WordNode(pos=(659, 663), word='echo'),
            WordNode(pos=(664, 692), word='catch_workers_output = yes'),
          ]),
          OperatorNode(op=';', pos=(692, 693)),
        ]),
      ReservedwordNode(pos=(695, 696), word='}'),
    ], pos=(353, 696)),
    PipeNode(pipe='|', pos=(697, 698)),
    CommandNode(pos=(699, 724), parts=[
      WordNode(pos=(699, 702), word='tee'),
      WordNode(pos=(703, 724), word='php-fpm.d/docker.conf'),
    ]),
  ]),
  OperatorNode(op='&&', pos=(726, 728)),
  PipelineNode(pos=(729, 856), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(729, 730), word='{'),
      ListNode(pos=(733, 822), parts=[
          CommandNode(pos=(733, 748), parts=[
            WordNode(pos=(733, 737), word='echo'),
            WordNode(pos=(738, 748), word='[global]'),
          ]),
          OperatorNode(op=';', pos=(748, 749)),
          CommandNode(pos=(752, 773), parts=[
            WordNode(pos=(752, 756), word='echo'),
            WordNode(pos=(757, 773), word='daemonize = no'),
          ]),
          OperatorNode(op=';', pos=(773, 774)),
          CommandNode(pos=(777, 781), parts=[
            WordNode(pos=(777, 781), word='echo'),
          ]),
          OperatorNode(op=';', pos=(781, 782)),
          CommandNode(pos=(785, 797), parts=[
            WordNode(pos=(785, 789), word='echo'),
            WordNode(pos=(790, 797), word='[www]'),
          ]),
          OperatorNode(op=';', pos=(797, 798)),
          CommandNode(pos=(801, 821), parts=[
            WordNode(pos=(801, 805), word='echo'),
            WordNode(pos=(806, 821), word='listen = 9000'),
          ]),
          OperatorNode(op=';', pos=(821, 822)),
        ]),
      ReservedwordNode(pos=(824, 825), word='}'),
    ], pos=(729, 825)),
    PipeNode(pipe='|', pos=(826, 827)),
    CommandNode(pos=(828, 856), parts=[
      WordNode(pos=(828, 831), word='tee'),
      WordNode(pos=(832, 856), word='php-fpm.d/zz-docker.conf'),
    ]),
  ]),
])


260) set -ex;   if command -v a2enmod; then   a2enmod rewrite;  fi;   savedAptMark="$(apt-mark showmanual)";   apt-get update;  apt-get install -y --no-install-recommends   libjpeg-dev   libpng-dev   libpq-dev   libzip-dev  ;   docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr;  docker-php-ext-install -j "$(nproc)"   gd   opcache   pdo_mysql   pdo_pgsql   zip  ;   apt-mark auto '.*' > /dev/null;  apt-mark manual $savedAptMark;  ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so   | awk '/=>/ { print $3 }'   | sort -u   | xargs -r dpkg-query -S   | cut -d: -f1   | sort -u   | xargs -rt apt-mark manual;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*

ListNode(pos=(0, 734), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    IfNode(pos=(11, 61), parts=[
      ReservedwordNode(pos=(11, 13), word='if'),
      ListNode(pos=(14, 33), parts=[
          CommandNode(pos=(14, 32), parts=[
            WordNode(pos=(14, 21), word='command'),
            WordNode(pos=(22, 24), word='-v'),
            WordNode(pos=(25, 32), word='a2enmod'),
          ]),
          OperatorNode(op=';', pos=(32, 33)),
        ]),
      ReservedwordNode(pos=(34, 38), word='then'),
      ListNode(pos=(41, 57), parts=[
          CommandNode(pos=(41, 56), parts=[
            WordNode(pos=(41, 48), word='a2enmod'),
            WordNode(pos=(49, 56), word='rewrite'),
          ]),
          OperatorNode(op=';', pos=(56, 57)),
        ]),
      ReservedwordNode(pos=(59, 61), word='fi'),
    ]),
  ], pos=(11, 61)),
  OperatorNode(op=';', pos=(61, 62)),
  CommandNode(pos=(65, 102), parts=[
    AssignmentNode(pos=(65, 102), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(81, 100), parts=[
          WordNode(pos=(81, 89), word='apt-mark'),
          WordNode(pos=(90, 100), word='showmanual'),
        ]), pos=(79, 101)),
    ]),
  ]),
  OperatorNode(op=';', pos=(102, 103)),
  CommandNode(pos=(106, 120), parts=[
    WordNode(pos=(106, 113), word='apt-get'),
    WordNode(pos=(114, 120), word='update'),
  ]),
  OperatorNode(op=';', pos=(120, 121)),
  CommandNode(pos=(123, 217), parts=[
    WordNode(pos=(123, 130), word='apt-get'),
    WordNode(pos=(131, 138), word='install'),
    WordNode(pos=(139, 141), word='-y'),
    WordNode(pos=(142, 165), word='--no-install-recommends'),
    WordNode(pos=(168, 179), word='libjpeg-dev'),
    WordNode(pos=(182, 192), word='libpng-dev'),
    WordNode(pos=(195, 204), word='libpq-dev'),
    WordNode(pos=(207, 217), word='libzip-dev'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(223, 291), parts=[
    WordNode(pos=(223, 247), word='docker-php-ext-configure'),
    WordNode(pos=(248, 250), word='gd'),
    WordNode(pos=(251, 270), word='--with-png-dir=/usr'),
    WordNode(pos=(271, 291), word='--with-jpeg-dir=/usr'),
  ]),
  OperatorNode(op=';', pos=(291, 292)),
  CommandNode(pos=(294, 375), parts=[
    WordNode(pos=(294, 316), word='docker-php-ext-install'),
    WordNode(pos=(317, 319), word='-j'),
    WordNode(pos=(320, 330), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(323, 328), parts=[
          WordNode(pos=(323, 328), word='nproc'),
        ]), pos=(321, 329)),
    ]),
    WordNode(pos=(333, 335), word='gd'),
    WordNode(pos=(338, 345), word='opcache'),
    WordNode(pos=(348, 357), word='pdo_mysql'),
    WordNode(pos=(360, 369), word='pdo_pgsql'),
    WordNode(pos=(372, 375), word='zip'),
  ]),
  OperatorNode(op=';', pos=(377, 378)),
  CommandNode(pos=(381, 411), parts=[
    WordNode(pos=(381, 389), word='apt-mark'),
    WordNode(pos=(390, 394), word='auto'),
    WordNode(pos=(395, 399), word='.*'),
    RedirectNode(output=
      WordNode(pos=(402, 411), word='/dev/null'), pos=(400, 411), type='>'),
  ]),
  OperatorNode(op=';', pos=(411, 412)),
  CommandNode(pos=(414, 443), parts=[
    WordNode(pos=(414, 422), word='apt-mark'),
    WordNode(pos=(423, 429), word='manual'),
    WordNode(pos=(430, 443), word='$savedAptMark', parts=[
      ParameterNode(pos=(430, 443), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(443, 444)),
  PipelineNode(pos=(446, 624), parts=[
    CommandNode(pos=(446, 499), parts=[
      WordNode(pos=(446, 449), word='ldd'),
      WordNode(pos=(450, 499), word='$(php -r \'echo ini_get("extension_dir");\')/*.so', parts=[
        CommandsubstitutionNode(command=
          CommandNode(pos=(453, 492), parts=[
            WordNode(pos=(453, 456), word='php'),
            WordNode(pos=(457, 459), word='-r'),
            WordNode(pos=(460, 492), word='echo ini_get("extension_dir");'),
          ]), pos=(451, 493)),
      ]),
    ]),
    PipeNode(pipe='|', pos=(502, 503)),
    CommandNode(pos=(504, 527), parts=[
      WordNode(pos=(504, 507), word='awk'),
      WordNode(pos=(508, 527), word='/=>/ { print $3 }'),
    ]),
    PipeNode(pipe='|', pos=(530, 531)),
    CommandNode(pos=(532, 539), parts=[
      WordNode(pos=(532, 536), word='sort'),
      WordNode(pos=(537, 539), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(542, 543)),
    CommandNode(pos=(544, 566), parts=[
      WordNode(pos=(544, 549), word='xargs'),
      WordNode(pos=(550, 552), word='-r'),
      WordNode(pos=(553, 563), word='dpkg-query'),
      WordNode(pos=(564, 566), word='-S'),
    ]),
    PipeNode(pipe='|', pos=(569, 570)),
    CommandNode(pos=(571, 582), parts=[
      WordNode(pos=(571, 574), word='cut'),
      WordNode(pos=(575, 578), word='-d:'),
      WordNode(pos=(579, 582), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(585, 586)),
    CommandNode(pos=(587, 594), parts=[
      WordNode(pos=(587, 591), word='sort'),
      WordNode(pos=(592, 594), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(597, 598)),
    CommandNode(pos=(599, 624), parts=[
      WordNode(pos=(599, 604), word='xargs'),
      WordNode(pos=(605, 608), word='-rt'),
      WordNode(pos=(609, 617), word='apt-mark'),
      WordNode(pos=(618, 624), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(624, 625)),
  CommandNode(pos=(628, 704), parts=[
    WordNode(pos=(628, 635), word='apt-get'),
    WordNode(pos=(636, 641), word='purge'),
    WordNode(pos=(642, 644), word='-y'),
    WordNode(pos=(645, 658), word='--auto-remove'),
    WordNode(pos=(659, 661), word='-o'),
    WordNode(pos=(662, 704), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(707, 734), parts=[
    WordNode(pos=(707, 709), word='rm'),
    WordNode(pos=(710, 713), word='-rf'),
    WordNode(pos=(714, 734), word='/var/lib/apt/lists/*'),
  ]),
])


261) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


262) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


263) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


264) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


265) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


266) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


267) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


268) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


269) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


270) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


271) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


272) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


273) set -e  && nativeLines="$(catalina.sh configtest 2>&1)"  && nativeLines="$(echo "$nativeLines" | grep 'Apache Tomcat Native')"  && nativeLines="$(echo "$nativeLines" | sort -u)"  && if ! echo "$nativeLines" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then   echo >&2 "$nativeLines";   exit 1;  fi

ListNode(pos=(0, 318), parts=[
  CommandNode(pos=(0, 6), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 6), word='-e'),
  ]),
  OperatorNode(op='&&', pos=(8, 10)),
  CommandNode(pos=(11, 55), parts=[
    AssignmentNode(pos=(11, 55), word='nativeLines=$(catalina.sh configtest 2>&1)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(26, 53), parts=[
          WordNode(pos=(26, 37), word='catalina.sh'),
          WordNode(pos=(38, 48), word='configtest'),
          RedirectNode(input=2, output=1, pos=(49, 53), type='>&'),
        ]), pos=(24, 54)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(57, 59)),
  CommandNode(pos=(60, 126), parts=[
    AssignmentNode(pos=(60, 126), word='nativeLines=$(echo "$nativeLines" | grep \'Apache Tomcat Native\')', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(75, 124), parts=[
          CommandNode(pos=(75, 94), parts=[
            WordNode(pos=(75, 79), word='echo'),
            WordNode(pos=(80, 94), word='$nativeLines', parts=[
              ParameterNode(pos=(81, 93), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(95, 96)),
          CommandNode(pos=(97, 124), parts=[
            WordNode(pos=(97, 101), word='grep'),
            WordNode(pos=(102, 124), word='Apache Tomcat Native'),
          ]),
        ]), pos=(73, 125)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(128, 130)),
  CommandNode(pos=(131, 177), parts=[
    AssignmentNode(pos=(131, 177), word='nativeLines=$(echo "$nativeLines" | sort -u)', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(146, 175), parts=[
          CommandNode(pos=(146, 165), parts=[
            WordNode(pos=(146, 150), word='echo'),
            WordNode(pos=(151, 165), word='$nativeLines', parts=[
              ParameterNode(pos=(152, 164), value='nativeLines'),
            ]),
          ]),
          PipeNode(pipe='|', pos=(166, 167)),
          CommandNode(pos=(168, 175), parts=[
            WordNode(pos=(168, 172), word='sort'),
            WordNode(pos=(173, 175), word='-u'),
          ]),
        ]), pos=(144, 176)),
    ]),
  ]),
  OperatorNode(op='&&', pos=(179, 181)),
  CompoundNode(list=[
    IfNode(pos=(182, 318), parts=[
      ReservedwordNode(pos=(182, 184), word='if'),
      ListNode(pos=(185, 272), parts=[
          PipelineNode(pos=(185, 271), parts=[
            ReservedwordNode(pos=(185, 186), word='!'),
            CommandNode(pos=(187, 206), parts=[
              WordNode(pos=(187, 191), word='echo'),
              WordNode(pos=(192, 206), word='$nativeLines', parts=[
                ParameterNode(pos=(193, 205), value='nativeLines'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(207, 208)),
            CommandNode(pos=(209, 271), parts=[
              WordNode(pos=(209, 213), word='grep'),
              WordNode(pos=(214, 267), word='INFO: Loaded APR based Apache Tomcat Native library'),
              RedirectNode(output=2, pos=(268, 271), type='>&'),
            ]),
          ]),
          OperatorNode(op=';', pos=(271, 272)),
        ]),
      ReservedwordNode(pos=(273, 277), word='then'),
      ListNode(pos=(280, 314), parts=[
          CommandNode(pos=(280, 303), parts=[
            WordNode(pos=(280, 284), word='echo'),
            RedirectNode(output=2, pos=(285, 288), type='>&'),
            WordNode(pos=(289, 303), word='$nativeLines', parts=[
              ParameterNode(pos=(290, 302), value='nativeLines'),
            ]),
          ]),
          OperatorNode(op=';', pos=(303, 304)),
          CommandNode(pos=(307, 313), parts=[
            WordNode(pos=(307, 311), word='exit'),
            WordNode(pos=(312, 313), word='1'),
          ]),
          OperatorNode(op=';', pos=(313, 314)),
        ]),
      ReservedwordNode(pos=(316, 318), word='fi'),
    ]),
  ], pos=(182, 318)),
])


274) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


275) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


276) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


277) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


