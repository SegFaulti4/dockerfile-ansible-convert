1) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


2) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


3) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


4) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


5) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


6) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


7) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


8) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


9) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


10) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
])


11) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


12) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


13) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


14) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


15) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


16) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


17) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


18) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


19) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


20) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


21) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


22) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


23) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


24) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4

CommandNode(pos=(740, 814), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 790), word='--enable-shared'),
  WordNode(pos=(793, 814), word='--enable-unicode=ucs4'),
])


25) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


26) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(262, 369), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 289), word='/usr/local/bin/gosu'),
  WordNode(pos=(290, 369), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(340, 353), value='GOSU_VERSION'),
    ParameterNode(pos=(359, 368), value='dpkgArch'),
  ]),
])


27) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(262, 369), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 289), word='/usr/local/bin/gosu'),
  WordNode(pos=(290, 369), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(340, 353), value='GOSU_VERSION'),
    ParameterNode(pos=(359, 368), value='dpkgArch'),
  ]),
])


28) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(372, 487), parts=[
  WordNode(pos=(372, 376), word='wget'),
  WordNode(pos=(377, 379), word='-O'),
  WordNode(pos=(380, 403), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(404, 487), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(454, 467), value='GOSU_VERSION'),
    ParameterNode(pos=(473, 482), value='dpkgArch'),
  ]),
])


29) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(372, 487), parts=[
  WordNode(pos=(372, 376), word='wget'),
  WordNode(pos=(377, 379), word='-O'),
  WordNode(pos=(380, 403), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(404, 487), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(454, 467), value='GOSU_VERSION'),
    ParameterNode(pos=(473, 482), value='dpkgArch'),
  ]),
])


30) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(718, 760), parts=[
  WordNode(pos=(718, 720), word='rm'),
  WordNode(pos=(721, 723), word='-r'),
  WordNode(pos=(724, 736), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(725, 735), value='GNUPGHOME'),
  ]),
  WordNode(pos=(737, 760), word='/usr/local/bin/gosu.asc'),
])


31) wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch"

CommandNode(pos=(845, 954), parts=[
  WordNode(pos=(845, 849), word='wget'),
  WordNode(pos=(850, 852), word='-O'),
  WordNode(pos=(853, 872), word='/usr/local/bin/tini'),
  WordNode(pos=(873, 954), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch', parts=[
    ParameterNode(pos=(925, 938), value='TINI_VERSION'),
    ParameterNode(pos=(944, 953), value='dpkgArch'),
  ]),
])


32) wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch"

CommandNode(pos=(845, 954), parts=[
  WordNode(pos=(845, 849), word='wget'),
  WordNode(pos=(850, 852), word='-O'),
  WordNode(pos=(853, 872), word='/usr/local/bin/tini'),
  WordNode(pos=(873, 954), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch', parts=[
    ParameterNode(pos=(925, 938), value='TINI_VERSION'),
    ParameterNode(pos=(944, 953), value='dpkgArch'),
  ]),
])


33) wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc"

CommandNode(pos=(957, 1074), parts=[
  WordNode(pos=(957, 961), word='wget'),
  WordNode(pos=(962, 964), word='-O'),
  WordNode(pos=(965, 988), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(989, 1074), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc', parts=[
    ParameterNode(pos=(1041, 1054), value='TINI_VERSION'),
    ParameterNode(pos=(1060, 1069), value='dpkgArch'),
  ]),
])


34) wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc"

CommandNode(pos=(957, 1074), parts=[
  WordNode(pos=(957, 961), word='wget'),
  WordNode(pos=(962, 964), word='-O'),
  WordNode(pos=(965, 988), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(989, 1074), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc', parts=[
    ParameterNode(pos=(1041, 1054), value='TINI_VERSION'),
    ParameterNode(pos=(1060, 1069), value='dpkgArch'),
  ]),
])


35) rm -r "$GNUPGHOME" /usr/local/bin/tini.asc

CommandNode(pos=(1305, 1347), parts=[
  WordNode(pos=(1305, 1307), word='rm'),
  WordNode(pos=(1308, 1310), word='-r'),
  WordNode(pos=(1311, 1323), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(1312, 1322), value='GNUPGHOME'),
  ]),
  WordNode(pos=(1324, 1347), word='/usr/local/bin/tini.asc'),
])


36) [ -z "$savedAptMark" ]

CommandNode(pos=(1425, 1447), parts=[
  WordNode(pos=(1425, 1426), word='['),
  WordNode(pos=(1427, 1429), word='-z'),
  WordNode(pos=(1430, 1445), word='$savedAptMark', parts=[
    ParameterNode(pos=(1431, 1444), value='savedAptMark'),
  ]),
  WordNode(pos=(1446, 1447), word=']'),
])


37) apt-mark manual $savedAptMark

CommandNode(pos=(1451, 1480), parts=[
  WordNode(pos=(1451, 1459), word='apt-mark'),
  WordNode(pos=(1460, 1466), word='manual'),
  WordNode(pos=(1467, 1480), word='$savedAptMark', parts=[
    ParameterNode(pos=(1467, 1480), value='savedAptMark'),
  ]),
])


38) [ ! -d "$HOME" ]

CommandNode(pos=(11, 27), parts=[
  WordNode(pos=(11, 12), word='['),
  WordNode(pos=(13, 14), word='!'),
  WordNode(pos=(15, 17), word='-d'),
  WordNode(pos=(18, 25), word='$HOME', parts=[
    ParameterNode(pos=(19, 24), value='HOME'),
  ]),
  WordNode(pos=(26, 27), word=']'),
])


39) mkdir -p "$HOME"

CommandNode(pos=(30, 46), parts=[
  WordNode(pos=(30, 35), word='mkdir'),
  WordNode(pos=(36, 38), word='-p'),
  WordNode(pos=(39, 46), word='$HOME', parts=[
    ParameterNode(pos=(40, 45), value='HOME'),
  ]),
])


40) chown redmine:redmine "$HOME"

CommandNode(pos=(49, 78), parts=[
  WordNode(pos=(49, 54), word='chown'),
  WordNode(pos=(55, 70), word='redmine:redmine'),
  WordNode(pos=(71, 78), word='$HOME', parts=[
    ParameterNode(pos=(72, 77), value='HOME'),
  ]),
])


41) chmod 1777 "$HOME"

CommandNode(pos=(81, 99), parts=[
  WordNode(pos=(81, 86), word='chmod'),
  WordNode(pos=(87, 91), word='1777'),
  WordNode(pos=(92, 99), word='$HOME', parts=[
    ParameterNode(pos=(93, 98), value='HOME'),
  ]),
])


42) wget -O redmine.tar.gz "https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz"

CommandNode(pos=(0, 91), parts=[
  WordNode(pos=(0, 4), word='wget'),
  WordNode(pos=(5, 7), word='-O'),
  WordNode(pos=(8, 22), word='redmine.tar.gz'),
  WordNode(pos=(23, 91), word='https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(65, 83), value='REDMINE_VERSION'),
  ]),
])


43) echo "$REDMINE_DOWNLOAD_MD5 redmine.tar.gz"

CommandNode(pos=(96, 139), parts=[
  WordNode(pos=(96, 100), word='echo'),
  WordNode(pos=(101, 139), word='$REDMINE_DOWNLOAD_MD5 redmine.tar.gz', parts=[
    ParameterNode(pos=(102, 123), value='REDMINE_DOWNLOAD_MD5'),
  ]),
])


44) ./configure --build="$gnuArch" --enable-silent-rules

CommandNode(pos=(622, 674), parts=[
  WordNode(pos=(622, 633), word='./configure'),
  WordNode(pos=(634, 652), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(643, 651), value='gnuArch'),
  ]),
  WordNode(pos=(653, 674), word='--enable-silent-rules'),
])


45) echo "$RAILS_ENV:" > ./config/database.yml

CommandNode(pos=(951, 993), parts=[
  WordNode(pos=(951, 955), word='echo'),
  WordNode(pos=(956, 969), word='$RAILS_ENV:', parts=[
    ParameterNode(pos=(957, 967), value='RAILS_ENV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(972, 993), word='./config/database.yml'), pos=(970, 993), type='>'),
])


46) echo "  adapter: $adapter" >> ./config/database.yml

CommandNode(pos=(997, 1048), parts=[
  WordNode(pos=(997, 1001), word='echo'),
  WordNode(pos=(1002, 1023), word='  adapter: $adapter', parts=[
    ParameterNode(pos=(1014, 1022), value='adapter'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1027, 1048), word='./config/database.yml'), pos=(1024, 1048), type='>>'),
])


47) cp Gemfile.lock "Gemfile.lock.${adapter}"

CommandNode(pos=(1110, 1151), parts=[
  WordNode(pos=(1110, 1112), word='cp'),
  WordNode(pos=(1113, 1125), word='Gemfile.lock'),
  WordNode(pos=(1126, 1151), word='Gemfile.lock.${adapter}', parts=[
    ParameterNode(pos=(1140, 1150), value='adapter'),
  ]),
])


48) chmod -R ugo=rwX Gemfile.lock "$GEM_HOME"

CommandNode(pos=(1188, 1229), parts=[
  WordNode(pos=(1188, 1193), word='chmod'),
  WordNode(pos=(1194, 1196), word='-R'),
  WordNode(pos=(1197, 1204), word='ugo=rwX'),
  WordNode(pos=(1205, 1217), word='Gemfile.lock'),
  WordNode(pos=(1218, 1229), word='$GEM_HOME', parts=[
    ParameterNode(pos=(1219, 1228), value='GEM_HOME'),
  ]),
])


49) [ -z "$savedAptMark" ]

CommandNode(pos=(1292, 1314), parts=[
  WordNode(pos=(1292, 1293), word='['),
  WordNode(pos=(1294, 1296), word='-z'),
  WordNode(pos=(1297, 1312), word='$savedAptMark', parts=[
    ParameterNode(pos=(1298, 1311), value='savedAptMark'),
  ]),
  WordNode(pos=(1313, 1314), word=']'),
])


50) apt-mark manual $savedAptMark

CommandNode(pos=(1318, 1347), parts=[
  WordNode(pos=(1318, 1326), word='apt-mark'),
  WordNode(pos=(1327, 1333), word='manual'),
  WordNode(pos=(1334, 1347), word='$savedAptMark', parts=[
    ParameterNode(pos=(1334, 1347), value='savedAptMark'),
  ]),
])


51) docker-php-ext-configure ldap --with-libdir="lib/$debMultiarch"

CommandNode(pos=(147, 210), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 176), word='ldap'),
  WordNode(pos=(177, 210), word='--with-libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(196, 209), value='debMultiarch'),
  ]),
])


52) curl -fL -o owncloud.tar.bz2 "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2"

CommandNode(pos=(11, 118), parts=[
  WordNode(pos=(11, 15), word='curl'),
  WordNode(pos=(16, 19), word='-fL'),
  WordNode(pos=(20, 22), word='-o'),
  WordNode(pos=(23, 39), word='owncloud.tar.bz2'),
  WordNode(pos=(40, 118), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(90, 109), value='OWNCLOUD_VERSION'),
  ]),
])


53) curl -fL -o owncloud.tar.bz2.asc "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc"

CommandNode(pos=(121, 236), parts=[
  WordNode(pos=(121, 125), word='curl'),
  WordNode(pos=(126, 129), word='-fL'),
  WordNode(pos=(130, 132), word='-o'),
  WordNode(pos=(133, 153), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(154, 236), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc', parts=[
    ParameterNode(pos=(204, 223), value='OWNCLOUD_VERSION'),
  ]),
])


54) echo "$OWNCLOUD_SHA256 *owncloud.tar.bz2"

CommandNode(pos=(239, 280), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 280), word='$OWNCLOUD_SHA256 *owncloud.tar.bz2', parts=[
    ParameterNode(pos=(245, 261), value='OWNCLOUD_SHA256'),
  ]),
])


55) rm -r "$GNUPGHOME" owncloud.tar.bz2.asc

CommandNode(pos=(549, 588), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 588), word='owncloud.tar.bz2.asc'),
])


56) apt-mark manual $savedAptMark

CommandNode(pos=(403, 432), parts=[
  WordNode(pos=(403, 411), word='apt-mark'),
  WordNode(pos=(412, 418), word='manual'),
  WordNode(pos=(419, 432), word='$savedAptMark', parts=[
    ParameterNode(pos=(419, 432), value='savedAptMark'),
  ]),
])


57) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


58) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


59) docker-php-ext-configure ldap --with-libdir="lib/$debMultiarch"

CommandNode(pos=(147, 210), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 176), word='ldap'),
  WordNode(pos=(177, 210), word='--with-libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(196, 209), value='debMultiarch'),
  ]),
])


60) curl -fL -o owncloud.tar.bz2 "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2"

CommandNode(pos=(11, 118), parts=[
  WordNode(pos=(11, 15), word='curl'),
  WordNode(pos=(16, 19), word='-fL'),
  WordNode(pos=(20, 22), word='-o'),
  WordNode(pos=(23, 39), word='owncloud.tar.bz2'),
  WordNode(pos=(40, 118), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(90, 109), value='OWNCLOUD_VERSION'),
  ]),
])


61) curl -fL -o owncloud.tar.bz2.asc "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc"

CommandNode(pos=(121, 236), parts=[
  WordNode(pos=(121, 125), word='curl'),
  WordNode(pos=(126, 129), word='-fL'),
  WordNode(pos=(130, 132), word='-o'),
  WordNode(pos=(133, 153), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(154, 236), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc', parts=[
    ParameterNode(pos=(204, 223), value='OWNCLOUD_VERSION'),
  ]),
])


62) echo "$OWNCLOUD_SHA256 *owncloud.tar.bz2"

CommandNode(pos=(239, 280), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 280), word='$OWNCLOUD_SHA256 *owncloud.tar.bz2', parts=[
    ParameterNode(pos=(245, 261), value='OWNCLOUD_SHA256'),
  ]),
])


63) rm -r "$GNUPGHOME" owncloud.tar.bz2.asc

CommandNode(pos=(549, 588), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 588), word='owncloud.tar.bz2.asc'),
])


64) gem install passenger --version "$PASSENGER_VERSION"

CommandNode(pos=(160, 212), parts=[
  WordNode(pos=(160, 163), word='gem'),
  WordNode(pos=(164, 171), word='install'),
  WordNode(pos=(172, 181), word='passenger'),
  WordNode(pos=(182, 191), word='--version'),
  WordNode(pos=(192, 212), word='$PASSENGER_VERSION', parts=[
    ParameterNode(pos=(193, 211), value='PASSENGER_VERSION'),
  ]),
])


65) [ -z "$savedAptMark" ]

CommandNode(pos=(406, 428), parts=[
  WordNode(pos=(406, 407), word='['),
  WordNode(pos=(408, 410), word='-z'),
  WordNode(pos=(411, 426), word='$savedAptMark', parts=[
    ParameterNode(pos=(412, 425), value='savedAptMark'),
  ]),
  WordNode(pos=(427, 428), word=']'),
])


66) apt-mark manual $savedAptMark

CommandNode(pos=(432, 461), parts=[
  WordNode(pos=(432, 440), word='apt-mark'),
  WordNode(pos=(441, 447), word='manual'),
  WordNode(pos=(448, 461), word='$savedAptMark', parts=[
    ParameterNode(pos=(448, 461), value='savedAptMark'),
  ]),
])


67) gem install passenger --version "$PASSENGER_VERSION"

CommandNode(pos=(160, 212), parts=[
  WordNode(pos=(160, 163), word='gem'),
  WordNode(pos=(164, 171), word='install'),
  WordNode(pos=(172, 181), word='passenger'),
  WordNode(pos=(182, 191), word='--version'),
  WordNode(pos=(192, 212), word='$PASSENGER_VERSION', parts=[
    ParameterNode(pos=(193, 211), value='PASSENGER_VERSION'),
  ]),
])


68) [ -z "$savedAptMark" ]

CommandNode(pos=(406, 428), parts=[
  WordNode(pos=(406, 407), word='['),
  WordNode(pos=(408, 410), word='-z'),
  WordNode(pos=(411, 426), word='$savedAptMark', parts=[
    ParameterNode(pos=(412, 425), value='savedAptMark'),
  ]),
  WordNode(pos=(427, 428), word=']'),
])


69) apt-mark manual $savedAptMark

CommandNode(pos=(432, 461), parts=[
  WordNode(pos=(432, 440), word='apt-mark'),
  WordNode(pos=(441, 447), word='manual'),
  WordNode(pos=(448, 461), word='$savedAptMark', parts=[
    ParameterNode(pos=(448, 461), value='savedAptMark'),
  ]),
])


70) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(88, 141), parts=[
  WordNode(pos=(88, 95), word='apt-get'),
  WordNode(pos=(96, 103), word='install'),
  WordNode(pos=(104, 106), word='-y'),
  WordNode(pos=(107, 130), word='--no-install-recommends'),
  WordNode(pos=(131, 141), word='$fetchDeps', parts=[
    ParameterNode(pos=(131, 141), value='fetchDeps'),
  ]),
])


71) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


72) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


73) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


74) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


75) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(699, 741), parts=[
  WordNode(pos=(699, 701), word='rm'),
  WordNode(pos=(702, 704), word='-r'),
  WordNode(pos=(705, 717), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(706, 716), value='GNUPGHOME'),
  ]),
  WordNode(pos=(718, 741), word='/usr/local/bin/gosu.asc'),
])


76) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(795, 836), parts=[
  WordNode(pos=(795, 802), word='apt-get'),
  WordNode(pos=(803, 808), word='purge'),
  WordNode(pos=(809, 811), word='-y'),
  WordNode(pos=(812, 825), word='--auto-remove'),
  WordNode(pos=(826, 836), word='$fetchDeps', parts=[
    ParameterNode(pos=(826, 836), value='fetchDeps'),
  ]),
])


77) apt-get install -y $buildDeps --no-install-recommends

CommandNode(pos=(99, 152), parts=[
  WordNode(pos=(99, 106), word='apt-get'),
  WordNode(pos=(107, 114), word='install'),
  WordNode(pos=(115, 117), word='-y'),
  WordNode(pos=(118, 128), word='$buildDeps', parts=[
    ParameterNode(pos=(118, 128), value='buildDeps'),
  ]),
  WordNode(pos=(129, 152), word='--no-install-recommends'),
])


78) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(186, 228), parts=[
  WordNode(pos=(186, 190), word='wget'),
  WordNode(pos=(191, 193), word='-O'),
  WordNode(pos=(194, 206), word='redis.tar.gz'),
  WordNode(pos=(207, 228), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(208, 227), value='REDIS_DOWNLOAD_URL'),
  ]),
])


79) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(231, 271), parts=[
  WordNode(pos=(231, 235), word='echo'),
  WordNode(pos=(236, 271), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(237, 256), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


80) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(759, 800), parts=[
  WordNode(pos=(759, 766), word='apt-get'),
  WordNode(pos=(767, 772), word='purge'),
  WordNode(pos=(773, 775), word='-y'),
  WordNode(pos=(776, 789), word='--auto-remove'),
  WordNode(pos=(790, 800), word='$buildDeps', parts=[
    ParameterNode(pos=(790, 800), value='buildDeps'),
  ]),
])


81) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


82) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


83) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


84) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


85) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


86) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


87) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


88) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


89) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


90) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


91) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


92) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


93) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


94) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


95) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


96) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


97) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


98) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


99) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


100) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


101) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


102) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


103) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


104) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


105) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


106) set -ex;  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done

ListNode(pos=(0, 113), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    ForNode(pos=(10, 113), parts=[
      ReservedwordNode(pos=(10, 13), word='for'),
      WordNode(pos=(14, 17), word='key'),
      ReservedwordNode(pos=(18, 20), word='in'),
      WordNode(pos=(21, 30), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(21, 30), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(30, 31), word=';'),
      ReservedwordNode(pos=(32, 34), word='do'),
      ListNode(pos=(37, 107), parts=[
          CommandNode(pos=(37, 106), parts=[
            WordNode(pos=(37, 40), word='gpg'),
            WordNode(pos=(41, 48), word='--batch'),
            WordNode(pos=(49, 60), word='--keyserver'),
            WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(88, 99), word='--recv-keys'),
            WordNode(pos=(100, 106), word='$key', parts=[
              ParameterNode(pos=(101, 105), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
        ]),
      ReservedwordNode(pos=(109, 113), word='done'),
    ]),
  ], pos=(10, 113)),
])


107) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(37, 106), parts=[
  WordNode(pos=(37, 40), word='gpg'),
  WordNode(pos=(41, 48), word='--batch'),
  WordNode(pos=(49, 60), word='--keyserver'),
  WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(88, 99), word='--recv-keys'),
  WordNode(pos=(100, 106), word='$key', parts=[
    ParameterNode(pos=(101, 105), value='key'),
  ]),
])


108) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


109) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


110) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


111) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


112) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


113) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


114) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


115) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


116) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


117) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


118) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


119) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


120) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


121) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


122) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


123) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


124) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


125) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


126) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


127) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


128) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


129) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


130) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


131) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


132) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


133) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev   libzip-dev

CommandNode(pos=(11, 130), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
  WordNode(pos=(120, 130), word='libzip-dev'),
])


134) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(561, 614), parts=[
  WordNode(pos=(561, 564), word='apk'),
  WordNode(pos=(565, 568), word='add'),
  WordNode(pos=(569, 578), word='--virtual'),
  WordNode(pos=(579, 605), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(606, 614), word='$runDeps', parts=[
    ParameterNode(pos=(606, 614), value='runDeps'),
  ]),
])


135) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


136) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


137) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$WORDPRESS_CLI_GPG_KEY"

CommandNode(pos=(257, 344), parts=[
  WordNode(pos=(257, 260), word='gpg'),
  WordNode(pos=(261, 268), word='--batch'),
  WordNode(pos=(269, 280), word='--keyserver'),
  WordNode(pos=(281, 307), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(308, 319), word='--recv-keys'),
  WordNode(pos=(320, 344), word='$WORDPRESS_CLI_GPG_KEY', parts=[
    ParameterNode(pos=(321, 343), value='WORDPRESS_CLI_GPG_KEY'),
  ]),
])


138) rm -rf "$GNUPGHOME" /usr/local/bin/wp.gpg

CommandNode(pos=(468, 509), parts=[
  WordNode(pos=(468, 470), word='rm'),
  WordNode(pos=(471, 474), word='-rf'),
  WordNode(pos=(475, 487), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(476, 486), value='GNUPGHOME'),
  ]),
  WordNode(pos=(488, 509), word='/usr/local/bin/wp.gpg'),
])


139) echo "$WORDPRESS_CLI_SHA512 */usr/local/bin/wp"

CommandNode(pos=(513, 560), parts=[
  WordNode(pos=(513, 517), word='echo'),
  WordNode(pos=(518, 560), word='$WORDPRESS_CLI_SHA512 */usr/local/bin/wp', parts=[
    ParameterNode(pos=(519, 540), value='WORDPRESS_CLI_SHA512'),
  ]),
])


140) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


141) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


142) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


143) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


144) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


145) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


146) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


147) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


148) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


149) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


150) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


151) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


152) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


153) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


154) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


155) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


156) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


157) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


158) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


159) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


160) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


161) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


162) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


163) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


164) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


165) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


166) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


167) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


168) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


169) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


170) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


171) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(439, 472), parts=[
  WordNode(pos=(439, 442), word='npm'),
  WordNode(pos=(443, 450), word='install'),
  WordNode(pos=(451, 453), word='-g'),
  WordNode(pos=(454, 472), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(459, 471), value='NPM_VERSION'),
  ]),
])


172) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


173) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


174) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


175) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


176) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


177) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1442, 1481), parts=[
  WordNode(pos=(1442, 1445), word='gem'),
  WordNode(pos=(1446, 1452), word='update'),
  WordNode(pos=(1453, 1461), word='--system'),
  WordNode(pos=(1462, 1481), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1463, 1480), value='RUBYGEMS_VERSION'),
  ]),
])


178) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


179) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


180) [ -n "$zfs" ]

CommandNode(pos=(159, 172), parts=[
  WordNode(pos=(159, 160), word='['),
  WordNode(pos=(161, 163), word='-n'),
  WordNode(pos=(164, 170), word='$zfs', parts=[
    ParameterNode(pos=(165, 169), value='zfs'),
  ]),
  WordNode(pos=(171, 172), word=']'),
])


181) wget -O /usr/local/bin/dind "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"

CommandNode(pos=(11, 113), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/dind'),
  WordNode(pos=(39, 113), word='https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind', parts=[
    ParameterNode(pos=(88, 102), value='DIND_COMMIT'),
  ]),
])


182) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev   libzip-dev

CommandNode(pos=(11, 130), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
  WordNode(pos=(120, 130), word='libzip-dev'),
])


183) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(561, 614), parts=[
  WordNode(pos=(561, 564), word='apk'),
  WordNode(pos=(565, 568), word='add'),
  WordNode(pos=(569, 578), word='--virtual'),
  WordNode(pos=(579, 605), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(606, 614), word='$runDeps', parts=[
    ParameterNode(pos=(606, 614), value='runDeps'),
  ]),
])


184) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


185) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


186) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$WORDPRESS_CLI_GPG_KEY"

CommandNode(pos=(257, 344), parts=[
  WordNode(pos=(257, 260), word='gpg'),
  WordNode(pos=(261, 268), word='--batch'),
  WordNode(pos=(269, 280), word='--keyserver'),
  WordNode(pos=(281, 307), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(308, 319), word='--recv-keys'),
  WordNode(pos=(320, 344), word='$WORDPRESS_CLI_GPG_KEY', parts=[
    ParameterNode(pos=(321, 343), value='WORDPRESS_CLI_GPG_KEY'),
  ]),
])


187) rm -rf "$GNUPGHOME" /usr/local/bin/wp.gpg

CommandNode(pos=(468, 509), parts=[
  WordNode(pos=(468, 470), word='rm'),
  WordNode(pos=(471, 474), word='-rf'),
  WordNode(pos=(475, 487), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(476, 486), value='GNUPGHOME'),
  ]),
  WordNode(pos=(488, 509), word='/usr/local/bin/wp.gpg'),
])


188) echo "$WORDPRESS_CLI_SHA512 */usr/local/bin/wp"

CommandNode(pos=(513, 560), parts=[
  WordNode(pos=(513, 517), word='echo'),
  WordNode(pos=(518, 560), word='$WORDPRESS_CLI_SHA512 */usr/local/bin/wp', parts=[
    ParameterNode(pos=(519, 540), value='WORDPRESS_CLI_SHA512'),
  ]),
])


189) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


190) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


191) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


192) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(676, 722), parts=[
  WordNode(pos=(676, 680), word='make'),
  WordNode(pos=(681, 683), word='-C'),
  WordNode(pos=(684, 700), word='/usr/src/haproxy'),
  WordNode(pos=(701, 712), word='install-bin'),
  WordNode(pos=(713, 722), word='$makeOpts', parts=[
    ParameterNode(pos=(713, 722), value='makeOpts'),
  ]),
])


193) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1072, 1115), parts=[
  WordNode(pos=(1072, 1075), word='apk'),
  WordNode(pos=(1076, 1079), word='add'),
  WordNode(pos=(1080, 1089), word='--virtual'),
  WordNode(pos=(1090, 1106), word='.haproxy-rundeps'),
  WordNode(pos=(1107, 1115), word='$runDeps', parts=[
    ParameterNode(pos=(1107, 1115), value='runDeps'),
  ]),
])


194) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


195) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


196) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


197) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(676, 722), parts=[
  WordNode(pos=(676, 680), word='make'),
  WordNode(pos=(681, 683), word='-C'),
  WordNode(pos=(684, 700), word='/usr/src/haproxy'),
  WordNode(pos=(701, 712), word='install-bin'),
  WordNode(pos=(713, 722), word='$makeOpts', parts=[
    ParameterNode(pos=(713, 722), value='makeOpts'),
  ]),
])


198) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1072, 1115), parts=[
  WordNode(pos=(1072, 1075), word='apk'),
  WordNode(pos=(1076, 1079), word='add'),
  WordNode(pos=(1080, 1089), word='--virtual'),
  WordNode(pos=(1090, 1106), word='.haproxy-rundeps'),
  WordNode(pos=(1107, 1115), word='$runDeps', parts=[
    ParameterNode(pos=(1107, 1115), value='runDeps'),
  ]),
])


199) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


200) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


201) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


202) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


203) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


204) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


205) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


206) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


207) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


208) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


209) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


210) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


211) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


212) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


213) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


214) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


215) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


216) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


217) echo "deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


218) echo "deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


219) echo "deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


220) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(101, 162), parts=[
  WordNode(pos=(101, 104), word='tee'),
  WordNode(pos=(105, 162), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(130, 156), value='MONGO_PACKAGE%-unstable'),
  ]),
])


221) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


222) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


223) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


224) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


225) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


226) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


227) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


228) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


229) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


230) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


231) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


232) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


233) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


234) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


235) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


236) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


237) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(968, 1007), parts=[
  WordNode(pos=(968, 971), word='gem'),
  WordNode(pos=(972, 978), word='update'),
  WordNode(pos=(979, 987), word='--system'),
  WordNode(pos=(988, 1007), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(989, 1006), value='RUBYGEMS_VERSION'),
  ]),
])


238) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


239) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


240) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


241) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


242) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(666, 709), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 672), word='-rf'),
  WordNode(pos=(673, 685), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(674, 684), value='GNUPGHOME'),
  ]),
  WordNode(pos=(686, 709), word='/usr/local/bin/gosu.asc'),
])


243) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 304), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 219), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 240), parts=[
    WordNode(pos=(222, 229), word='command'),
    WordNode(pos=(230, 232), word='-v'),
    WordNode(pos=(233, 240), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(241, 243)),
  CommandNode(pos=(244, 262), parts=[
    WordNode(pos=(244, 251), word='gpgconf'),
    WordNode(pos=(252, 258), word='--kill'),
    WordNode(pos=(259, 262), word='all'),
  ]),
  OperatorNode(op='||', pos=(263, 265)),
  CommandNode(pos=(266, 267), parts=[
    WordNode(pos=(266, 267), word=':'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 289), parts=[
    WordNode(pos=(270, 272), word='rm'),
    WordNode(pos=(273, 276), word='-rf'),
    WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(278, 288), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(289, 290)),
  CommandNode(pos=(292, 304), parts=[
    WordNode(pos=(292, 299), word='apt-key'),
    WordNode(pos=(300, 304), word='list'),
  ]),
])


244) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


245) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg

CommandNode(pos=(150, 219), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
])


246) rm -rf "$GNUPGHOME"

CommandNode(pos=(270, 289), parts=[
  WordNode(pos=(270, 272), word='rm'),
  WordNode(pos=(273, 276), word='-rf'),
  WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(278, 288), value='GNUPGHOME'),
  ]),
])


247) mkdir -p /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 27), word='/var/lib/cassandra'),
  WordNode(pos=(28, 47), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(29, 46), value='CASSANDRA_CONFIG'),
  ]),
])


248) chown -R cassandra:cassandra /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(52, 119), parts=[
  WordNode(pos=(52, 57), word='chown'),
  WordNode(pos=(58, 60), word='-R'),
  WordNode(pos=(61, 80), word='cassandra:cassandra'),
  WordNode(pos=(81, 99), word='/var/lib/cassandra'),
  WordNode(pos=(100, 119), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(101, 118), value='CASSANDRA_CONFIG'),
  ]),
])


249) chmod 777 /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(124, 172), parts=[
  WordNode(pos=(124, 129), word='chmod'),
  WordNode(pos=(130, 133), word='777'),
  WordNode(pos=(134, 152), word='/var/lib/cassandra'),
  WordNode(pos=(153, 172), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(154, 171), value='CASSANDRA_CONFIG'),
  ]),
])


250) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


251) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


252) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


253) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


254) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


255) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


256) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(968, 1007), parts=[
  WordNode(pos=(968, 971), word='gem'),
  WordNode(pos=(972, 978), word='update'),
  WordNode(pos=(979, 987), word='--system'),
  WordNode(pos=(988, 1007), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(989, 1006), value='RUBYGEMS_VERSION'),
  ]),
])


257) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


258) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


259) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


260) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


261) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


262) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


263) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


264) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


265) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt

CommandNode(pos=(1385, 1754), parts=[
  WordNode(pos=(1385, 1396), word='./configure'),
  WordNode(pos=(1399, 1417), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1408, 1416), value='gnuArch'),
  ]),
  WordNode(pos=(1420, 1446), word='--enable-integer-datetimes'),
  WordNode(pos=(1449, 1471), word='--enable-thread-safety'),
  WordNode(pos=(1474, 1492), word='--enable-tap-tests'),
  WordNode(pos=(1495, 1510), word='--disable-rpath'),
  WordNode(pos=(1513, 1529), word='--with-uuid=e2fs'),
  WordNode(pos=(1532, 1545), word='--with-gnu-ld'),
  WordNode(pos=(1548, 1566), word='--with-pgport=5432'),
  WordNode(pos=(1569, 1609), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1612, 1631), word='--prefix=/usr/local'),
  WordNode(pos=(1634, 1668), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1671, 1702), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1707, 1721), word='--with-openssl'),
  WordNode(pos=(1724, 1737), word='--with-libxml'),
  WordNode(pos=(1740, 1754), word='--with-libxslt'),
])


266) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2042, 2127), parts=[
  WordNode(pos=(2042, 2045), word='apk'),
  WordNode(pos=(2046, 2049), word='add'),
  WordNode(pos=(2050, 2060), word='--no-cache'),
  WordNode(pos=(2061, 2070), word='--virtual'),
  WordNode(pos=(2071, 2090), word='.postgresql-rundeps'),
  WordNode(pos=(2093, 2101), word='$runDeps', parts=[
    ParameterNode(pos=(2093, 2101), value='runDeps'),
  ]),
  WordNode(pos=(2104, 2108), word='bash'),
  WordNode(pos=(2111, 2118), word='su-exec'),
  WordNode(pos=(2121, 2127), word='tzdata'),
])


267) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


268) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


269) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


270) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(259, 296), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 281), word='haproxy.tar.gz'),
  WordNode(pos=(282, 296), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(283, 295), value='HAPROXY_URL'),
  ]),
])


271) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(301, 339), parts=[
  WordNode(pos=(301, 305), word='echo'),
  WordNode(pos=(306, 339), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(307, 322), value='HAPROXY_SHA256'),
  ]),
])


272) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(637, 689), parts=[
  WordNode(pos=(637, 641), word='make'),
  WordNode(pos=(642, 644), word='-C'),
  WordNode(pos=(645, 661), word='/usr/src/haproxy'),
  WordNode(pos=(662, 664), word='-j'),
  WordNode(pos=(665, 675), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(668, 673), parts=[
        WordNode(pos=(668, 673), word='nproc'),
      ]), pos=(666, 674)),
  ]),
  WordNode(pos=(676, 679), word='all'),
  WordNode(pos=(680, 689), word='$makeOpts', parts=[
    ParameterNode(pos=(680, 689), value='makeOpts'),
  ]),
])


273) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(694, 740), parts=[
  WordNode(pos=(694, 698), word='make'),
  WordNode(pos=(699, 701), word='-C'),
  WordNode(pos=(702, 718), word='/usr/src/haproxy'),
  WordNode(pos=(719, 730), word='install-bin'),
  WordNode(pos=(731, 740), word='$makeOpts', parts=[
    ParameterNode(pos=(731, 740), value='makeOpts'),
  ]),
])


274) [ -z "$savedAptMark" ]

CommandNode(pos=(925, 947), parts=[
  WordNode(pos=(925, 926), word='['),
  WordNode(pos=(927, 929), word='-z'),
  WordNode(pos=(930, 945), word='$savedAptMark', parts=[
    ParameterNode(pos=(931, 944), value='savedAptMark'),
  ]),
  WordNode(pos=(946, 947), word=']'),
])


275) apt-mark manual $savedAptMark

CommandNode(pos=(951, 980), parts=[
  WordNode(pos=(951, 959), word='apt-mark'),
  WordNode(pos=(960, 966), word='manual'),
  WordNode(pos=(967, 980), word='$savedAptMark', parts=[
    ParameterNode(pos=(967, 980), value='savedAptMark'),
  ]),
])


276) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


277) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


278) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


279) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


280) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


281) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


282) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


283) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


284) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


285) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt   --with-icu

CommandNode(pos=(1395, 1777), parts=[
  WordNode(pos=(1395, 1406), word='./configure'),
  WordNode(pos=(1409, 1427), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1418, 1426), value='gnuArch'),
  ]),
  WordNode(pos=(1430, 1456), word='--enable-integer-datetimes'),
  WordNode(pos=(1459, 1481), word='--enable-thread-safety'),
  WordNode(pos=(1484, 1502), word='--enable-tap-tests'),
  WordNode(pos=(1505, 1520), word='--disable-rpath'),
  WordNode(pos=(1523, 1539), word='--with-uuid=e2fs'),
  WordNode(pos=(1542, 1555), word='--with-gnu-ld'),
  WordNode(pos=(1558, 1576), word='--with-pgport=5432'),
  WordNode(pos=(1579, 1619), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1622, 1641), word='--prefix=/usr/local'),
  WordNode(pos=(1644, 1678), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1681, 1712), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1717, 1731), word='--with-openssl'),
  WordNode(pos=(1734, 1747), word='--with-libxml'),
  WordNode(pos=(1750, 1764), word='--with-libxslt'),
  WordNode(pos=(1767, 1777), word='--with-icu'),
])


286) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2065, 2150), parts=[
  WordNode(pos=(2065, 2068), word='apk'),
  WordNode(pos=(2069, 2072), word='add'),
  WordNode(pos=(2073, 2083), word='--no-cache'),
  WordNode(pos=(2084, 2093), word='--virtual'),
  WordNode(pos=(2094, 2113), word='.postgresql-rundeps'),
  WordNode(pos=(2116, 2124), word='$runDeps', parts=[
    ParameterNode(pos=(2116, 2124), value='runDeps'),
  ]),
  WordNode(pos=(2127, 2131), word='bash'),
  WordNode(pos=(2134, 2141), word='su-exec'),
  WordNode(pos=(2144, 2150), word='tzdata'),
])


287) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


288) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


289) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


290) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


291) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


292) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


293) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


294) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


295) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


296) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


297) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


298) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


299) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


300) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


301) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


302) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


303) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


304) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


305) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


306) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


307) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


308) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


309) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(634, 677), parts=[
  WordNode(pos=(634, 636), word='rm'),
  WordNode(pos=(637, 640), word='-rf'),
  WordNode(pos=(641, 653), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(642, 652), value='GNUPGHOME'),
  ]),
  WordNode(pos=(654, 677), word='/usr/local/bin/gosu.asc'),
])


310) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


311) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/mysql.gpg

CommandNode(pos=(165, 227), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 227), word='/etc/apt/trusted.gpg.d/mysql.gpg'), pos=(193, 227), type='>'),
])


312) rm -rf "$GNUPGHOME"

CommandNode(pos=(251, 270), parts=[
  WordNode(pos=(251, 253), word='rm'),
  WordNode(pos=(254, 257), word='-rf'),
  WordNode(pos=(258, 270), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(259, 269), value='GNUPGHOME'),
  ]),
])


313) echo "deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}" > /etc/apt/sources.list.d/mysql.list

CommandNode(pos=(0, 110), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 73), word='deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}', parts=[
    ParameterNode(pos=(58, 72), value='MYSQL_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(76, 110), word='/etc/apt/sources.list.d/mysql.list'), pos=(74, 110), type='>'),
])


314) apt-get install -y mysql-server="${MYSQL_VERSION}"

CommandNode(pos=(362, 412), parts=[
  WordNode(pos=(362, 369), word='apt-get'),
  WordNode(pos=(370, 377), word='install'),
  WordNode(pos=(378, 380), word='-y'),
  WordNode(pos=(381, 412), word='mysql-server=${MYSQL_VERSION}', parts=[
    ParameterNode(pos=(395, 411), value='MYSQL_VERSION'),
  ]),
])


315) gem install rails --version "$RAILS_VERSION"

CommandNode(pos=(0, 44), parts=[
  WordNode(pos=(0, 3), word='gem'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 17), word='rails'),
  WordNode(pos=(18, 27), word='--version'),
  WordNode(pos=(28, 44), word='$RAILS_VERSION', parts=[
    ParameterNode(pos=(29, 43), value='RAILS_VERSION'),
  ]),
])


316) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


317) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


318) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


319) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


320) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


321) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


322) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


323) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


324) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


325) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


326) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


327) apt-mark manual $savedAptMark

CommandNode(pos=(403, 432), parts=[
  WordNode(pos=(403, 411), word='apt-mark'),
  WordNode(pos=(412, 418), word='manual'),
  WordNode(pos=(419, 432), word='$savedAptMark', parts=[
    ParameterNode(pos=(419, 432), value='savedAptMark'),
  ]),
])


328) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


329) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


330) curl -fL -o julia.tar.gz.asc "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc"

CommandNode(pos=(284, 431), parts=[
  WordNode(pos=(284, 288), word='curl'),
  WordNode(pos=(289, 292), word='-fL'),
  WordNode(pos=(293, 295), word='-o'),
  WordNode(pos=(296, 312), word='julia.tar.gz.asc'),
  WordNode(pos=(313, 431), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc', parts=[
    ParameterNode(pos=(359, 369), value='dirArch'),
    ParameterNode(pos=(370, 379), value='folder'),
    ParameterNode(pos=(386, 402), value='JULIA_VERSION'),
    ParameterNode(pos=(409, 419), value='tarArch'),
  ]),
])


331) curl -fL -o julia.tar.gz.asc "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc"

CommandNode(pos=(284, 431), parts=[
  WordNode(pos=(284, 288), word='curl'),
  WordNode(pos=(289, 292), word='-fL'),
  WordNode(pos=(293, 295), word='-o'),
  WordNode(pos=(296, 312), word='julia.tar.gz.asc'),
  WordNode(pos=(313, 431), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc', parts=[
    ParameterNode(pos=(359, 369), value='dirArch'),
    ParameterNode(pos=(370, 379), value='folder'),
    ParameterNode(pos=(386, 402), value='JULIA_VERSION'),
    ParameterNode(pos=(409, 419), value='tarArch'),
  ]),
])


332) curl -fL -o julia.tar.gz.asc "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc"

CommandNode(pos=(284, 431), parts=[
  WordNode(pos=(284, 288), word='curl'),
  WordNode(pos=(289, 292), word='-fL'),
  WordNode(pos=(293, 295), word='-o'),
  WordNode(pos=(296, 312), word='julia.tar.gz.asc'),
  WordNode(pos=(313, 431), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc', parts=[
    ParameterNode(pos=(359, 369), value='dirArch'),
    ParameterNode(pos=(370, 379), value='folder'),
    ParameterNode(pos=(386, 402), value='JULIA_VERSION'),
    ParameterNode(pos=(409, 419), value='tarArch'),
  ]),
])


333) curl -fL -o julia.tar.gz.asc "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc"

CommandNode(pos=(284, 431), parts=[
  WordNode(pos=(284, 288), word='curl'),
  WordNode(pos=(289, 292), word='-fL'),
  WordNode(pos=(293, 295), word='-o'),
  WordNode(pos=(296, 312), word='julia.tar.gz.asc'),
  WordNode(pos=(313, 431), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz.asc', parts=[
    ParameterNode(pos=(359, 369), value='dirArch'),
    ParameterNode(pos=(370, 379), value='folder'),
    ParameterNode(pos=(386, 402), value='JULIA_VERSION'),
    ParameterNode(pos=(409, 419), value='tarArch'),
  ]),
])


334) curl -fL -o julia.tar.gz     "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz"

CommandNode(pos=(434, 577), parts=[
  WordNode(pos=(434, 438), word='curl'),
  WordNode(pos=(439, 442), word='-fL'),
  WordNode(pos=(443, 445), word='-o'),
  WordNode(pos=(446, 458), word='julia.tar.gz'),
  WordNode(pos=(463, 577), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz', parts=[
    ParameterNode(pos=(509, 519), value='dirArch'),
    ParameterNode(pos=(520, 529), value='folder'),
    ParameterNode(pos=(536, 552), value='JULIA_VERSION'),
    ParameterNode(pos=(559, 569), value='tarArch'),
  ]),
])


335) curl -fL -o julia.tar.gz     "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz"

CommandNode(pos=(434, 577), parts=[
  WordNode(pos=(434, 438), word='curl'),
  WordNode(pos=(439, 442), word='-fL'),
  WordNode(pos=(443, 445), word='-o'),
  WordNode(pos=(446, 458), word='julia.tar.gz'),
  WordNode(pos=(463, 577), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz', parts=[
    ParameterNode(pos=(509, 519), value='dirArch'),
    ParameterNode(pos=(520, 529), value='folder'),
    ParameterNode(pos=(536, 552), value='JULIA_VERSION'),
    ParameterNode(pos=(559, 569), value='tarArch'),
  ]),
])


336) curl -fL -o julia.tar.gz     "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz"

CommandNode(pos=(434, 577), parts=[
  WordNode(pos=(434, 438), word='curl'),
  WordNode(pos=(439, 442), word='-fL'),
  WordNode(pos=(443, 445), word='-o'),
  WordNode(pos=(446, 458), word='julia.tar.gz'),
  WordNode(pos=(463, 577), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz', parts=[
    ParameterNode(pos=(509, 519), value='dirArch'),
    ParameterNode(pos=(520, 529), value='folder'),
    ParameterNode(pos=(536, 552), value='JULIA_VERSION'),
    ParameterNode(pos=(559, 569), value='tarArch'),
  ]),
])


337) curl -fL -o julia.tar.gz     "https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz"

CommandNode(pos=(434, 577), parts=[
  WordNode(pos=(434, 438), word='curl'),
  WordNode(pos=(439, 442), word='-fL'),
  WordNode(pos=(443, 445), word='-o'),
  WordNode(pos=(446, 458), word='julia.tar.gz'),
  WordNode(pos=(463, 577), word='https://julialang-s3.julialang.org/bin/linux/${dirArch}/${folder}/julia-${JULIA_VERSION}-linux-${tarArch}.tar.gz', parts=[
    ParameterNode(pos=(509, 519), value='dirArch'),
    ParameterNode(pos=(520, 529), value='folder'),
    ParameterNode(pos=(536, 552), value='JULIA_VERSION'),
    ParameterNode(pos=(559, 569), value='tarArch'),
  ]),
])


338) echo "${sha256} *julia.tar.gz"

CommandNode(pos=(581, 611), parts=[
  WordNode(pos=(581, 585), word='echo'),
  WordNode(pos=(586, 611), word='${sha256} *julia.tar.gz', parts=[
    ParameterNode(pos=(587, 596), value='sha256'),
  ]),
])


339) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$JULIA_GPG"

CommandNode(pos=(666, 741), parts=[
  WordNode(pos=(666, 669), word='gpg'),
  WordNode(pos=(670, 677), word='--batch'),
  WordNode(pos=(678, 689), word='--keyserver'),
  WordNode(pos=(690, 716), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(717, 728), word='--recv-keys'),
  WordNode(pos=(729, 741), word='$JULIA_GPG', parts=[
    ParameterNode(pos=(730, 740), value='JULIA_GPG'),
  ]),
])


340) rm -rf "$GNUPGHOME" julia.tar.gz.asc

CommandNode(pos=(852, 888), parts=[
  WordNode(pos=(852, 854), word='rm'),
  WordNode(pos=(855, 858), word='-rf'),
  WordNode(pos=(859, 871), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(860, 870), value='GNUPGHOME'),
  ]),
  WordNode(pos=(872, 888), word='julia.tar.gz.asc'),
])


341) mkdir "$JULIA_PATH"

CommandNode(pos=(892, 911), parts=[
  WordNode(pos=(892, 897), word='mkdir'),
  WordNode(pos=(898, 911), word='$JULIA_PATH', parts=[
    ParameterNode(pos=(899, 910), value='JULIA_PATH'),
  ]),
])


342) tar -xzf julia.tar.gz -C "$JULIA_PATH" --strip-components 1

CommandNode(pos=(914, 973), parts=[
  WordNode(pos=(914, 917), word='tar'),
  WordNode(pos=(918, 922), word='-xzf'),
  WordNode(pos=(923, 935), word='julia.tar.gz'),
  WordNode(pos=(936, 938), word='-C'),
  WordNode(pos=(939, 952), word='$JULIA_PATH', parts=[
    ParameterNode(pos=(940, 951), value='JULIA_PATH'),
  ]),
  WordNode(pos=(953, 971), word='--strip-components'),
  WordNode(pos=(972, 973), word='1'),
])


343) [ -z "$savedAptMark" ]

CommandNode(pos=(1028, 1050), parts=[
  WordNode(pos=(1028, 1029), word='['),
  WordNode(pos=(1030, 1032), word='-z'),
  WordNode(pos=(1033, 1048), word='$savedAptMark', parts=[
    ParameterNode(pos=(1034, 1047), value='savedAptMark'),
  ]),
  WordNode(pos=(1049, 1050), word=']'),
])


344) apt-mark manual $savedAptMark

CommandNode(pos=(1054, 1083), parts=[
  WordNode(pos=(1054, 1062), word='apt-mark'),
  WordNode(pos=(1063, 1069), word='manual'),
  WordNode(pos=(1070, 1083), word='$savedAptMark', parts=[
    ParameterNode(pos=(1070, 1083), value='savedAptMark'),
  ]),
])


345) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


346) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


347) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


348) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


349) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


350) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


351) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1161, 1313), parts=[
  WordNode(pos=(1161, 1172), word='./configure'),
  WordNode(pos=(1175, 1193), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1184, 1192), value='gnuArch'),
  ]),
  WordNode(pos=(1196, 1231), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1234, 1249), word='--enable-shared'),
  WordNode(pos=(1252, 1271), word='--with-system-expat'),
  WordNode(pos=(1274, 1291), word='--with-system-ffi'),
  WordNode(pos=(1294, 1313), word='--without-ensurepip'),
])


352) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


353) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(109, 151), parts=[
  WordNode(pos=(109, 113), word='wget'),
  WordNode(pos=(114, 116), word='-O'),
  WordNode(pos=(117, 129), word='redis.tar.gz'),
  WordNode(pos=(130, 151), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(131, 150), value='REDIS_DOWNLOAD_URL'),
  ]),
])


354) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(154, 194), parts=[
  WordNode(pos=(154, 158), word='echo'),
  WordNode(pos=(159, 194), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(160, 179), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


355) apk add --virtual .redis-rundeps $runDeps

CommandNode(pos=(876, 917), parts=[
  WordNode(pos=(876, 879), word='apk'),
  WordNode(pos=(880, 883), word='add'),
  WordNode(pos=(884, 893), word='--virtual'),
  WordNode(pos=(894, 908), word='.redis-rundeps'),
  WordNode(pos=(909, 917), word='$runDeps', parts=[
    ParameterNode(pos=(909, 917), value='runDeps'),
  ]),
])


356) docker-php-ext-configure ldap --with-libdir="lib/$debMultiarch"

CommandNode(pos=(147, 210), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 176), word='ldap'),
  WordNode(pos=(177, 210), word='--with-libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(196, 209), value='debMultiarch'),
  ]),
])


357) curl -fL -o owncloud.tar.bz2 "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2"

CommandNode(pos=(11, 118), parts=[
  WordNode(pos=(11, 15), word='curl'),
  WordNode(pos=(16, 19), word='-fL'),
  WordNode(pos=(20, 22), word='-o'),
  WordNode(pos=(23, 39), word='owncloud.tar.bz2'),
  WordNode(pos=(40, 118), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(90, 109), value='OWNCLOUD_VERSION'),
  ]),
])


358) curl -fL -o owncloud.tar.bz2.asc "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc"

CommandNode(pos=(121, 236), parts=[
  WordNode(pos=(121, 125), word='curl'),
  WordNode(pos=(126, 129), word='-fL'),
  WordNode(pos=(130, 132), word='-o'),
  WordNode(pos=(133, 153), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(154, 236), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc', parts=[
    ParameterNode(pos=(204, 223), value='OWNCLOUD_VERSION'),
  ]),
])


359) echo "$OWNCLOUD_SHA256 *owncloud.tar.bz2"

CommandNode(pos=(239, 280), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 280), word='$OWNCLOUD_SHA256 *owncloud.tar.bz2', parts=[
    ParameterNode(pos=(245, 261), value='OWNCLOUD_SHA256'),
  ]),
])


360) rm -r "$GNUPGHOME" owncloud.tar.bz2.asc

CommandNode(pos=(549, 588), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 588), word='owncloud.tar.bz2.asc'),
])


361) [ -n "$zfs" ]

CommandNode(pos=(159, 172), parts=[
  WordNode(pos=(159, 160), word='['),
  WordNode(pos=(161, 163), word='-n'),
  WordNode(pos=(164, 170), word='$zfs', parts=[
    ParameterNode(pos=(165, 169), value='zfs'),
  ]),
  WordNode(pos=(171, 172), word=']'),
])


362) wget -O /usr/local/bin/dind "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"

CommandNode(pos=(11, 113), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/dind'),
  WordNode(pos=(39, 113), word='https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind', parts=[
    ParameterNode(pos=(88, 102), value='DIND_COMMIT'),
  ]),
])


363) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


364) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


365) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


366) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


367) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


368) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


369) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(439, 472), parts=[
  WordNode(pos=(439, 442), word='npm'),
  WordNode(pos=(443, 450), word='install'),
  WordNode(pos=(451, 453), word='-g'),
  WordNode(pos=(454, 472), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(459, 471), value='NPM_VERSION'),
  ]),
])


370) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(246, 283), parts=[
  WordNode(pos=(246, 250), word='wget'),
  WordNode(pos=(251, 253), word='-O'),
  WordNode(pos=(254, 268), word='haproxy.tar.gz'),
  WordNode(pos=(269, 283), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(270, 282), value='HAPROXY_URL'),
  ]),
])


371) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(288, 326), parts=[
  WordNode(pos=(288, 292), word='echo'),
  WordNode(pos=(293, 326), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(294, 309), value='HAPROXY_SHA256'),
  ]),
])


372) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(584, 636), parts=[
  WordNode(pos=(584, 588), word='make'),
  WordNode(pos=(589, 591), word='-C'),
  WordNode(pos=(592, 608), word='/usr/src/haproxy'),
  WordNode(pos=(609, 611), word='-j'),
  WordNode(pos=(612, 622), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(615, 620), parts=[
        WordNode(pos=(615, 620), word='nproc'),
      ]), pos=(613, 621)),
  ]),
  WordNode(pos=(623, 626), word='all'),
  WordNode(pos=(627, 636), word='$makeOpts', parts=[
    ParameterNode(pos=(627, 636), value='makeOpts'),
  ]),
])


373) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(641, 687), parts=[
  WordNode(pos=(641, 645), word='make'),
  WordNode(pos=(646, 648), word='-C'),
  WordNode(pos=(649, 665), word='/usr/src/haproxy'),
  WordNode(pos=(666, 677), word='install-bin'),
  WordNode(pos=(678, 687), word='$makeOpts', parts=[
    ParameterNode(pos=(678, 687), value='makeOpts'),
  ]),
])


374) [ -z "$savedAptMark" ]

CommandNode(pos=(872, 894), parts=[
  WordNode(pos=(872, 873), word='['),
  WordNode(pos=(874, 876), word='-z'),
  WordNode(pos=(877, 892), word='$savedAptMark', parts=[
    ParameterNode(pos=(878, 891), value='savedAptMark'),
  ]),
  WordNode(pos=(893, 894), word=']'),
])


375) apt-mark manual $savedAptMark

CommandNode(pos=(898, 927), parts=[
  WordNode(pos=(898, 906), word='apt-mark'),
  WordNode(pos=(907, 913), word='manual'),
  WordNode(pos=(914, 927), word='$savedAptMark', parts=[
    ParameterNode(pos=(914, 927), value='savedAptMark'),
  ]),
])


376) pip install celery=="$CELERY_VERSION"

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 37), word='celery==$CELERY_VERSION', parts=[
    ParameterNode(pos=(21, 36), value='CELERY_VERSION'),
  ]),
])


377) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


378) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


379) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


380) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


381) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


382) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


383) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


384) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


385) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


386) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


387) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


388) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


389) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


390) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


391) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


392) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


393) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


394) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


395) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


396) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


397) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


398) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1160, 1312), parts=[
  WordNode(pos=(1160, 1171), word='./configure'),
  WordNode(pos=(1174, 1192), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1183, 1191), value='gnuArch'),
  ]),
  WordNode(pos=(1195, 1230), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1233, 1248), word='--enable-shared'),
  WordNode(pos=(1251, 1270), word='--with-system-expat'),
  WordNode(pos=(1273, 1290), word='--with-system-ffi'),
  WordNode(pos=(1293, 1312), word='--without-ensurepip'),
])


399) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


400) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


401) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


402) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


403) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


404) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


405) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


406) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


407) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


408) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


409) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


410) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


411) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


412) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


413) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


414) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(676, 722), parts=[
  WordNode(pos=(676, 680), word='make'),
  WordNode(pos=(681, 683), word='-C'),
  WordNode(pos=(684, 700), word='/usr/src/haproxy'),
  WordNode(pos=(701, 712), word='install-bin'),
  WordNode(pos=(713, 722), word='$makeOpts', parts=[
    ParameterNode(pos=(713, 722), value='makeOpts'),
  ]),
])


415) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1072, 1115), parts=[
  WordNode(pos=(1072, 1075), word='apk'),
  WordNode(pos=(1076, 1079), word='add'),
  WordNode(pos=(1080, 1089), word='--virtual'),
  WordNode(pos=(1090, 1106), word='.haproxy-rundeps'),
  WordNode(pos=(1107, 1115), word='$runDeps', parts=[
    ParameterNode(pos=(1107, 1115), value='runDeps'),
  ]),
])


416) pip install mysqlclient psycopg2 django=="$DJANGO_VERSION"

CommandNode(pos=(0, 58), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 23), word='mysqlclient'),
  WordNode(pos=(24, 32), word='psycopg2'),
  WordNode(pos=(33, 58), word='django==$DJANGO_VERSION', parts=[
    ParameterNode(pos=(42, 57), value='DJANGO_VERSION'),
  ]),
])


417) pip install mysqlclient psycopg2 django=="$DJANGO_VERSION"

CommandNode(pos=(0, 58), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 23), word='mysqlclient'),
  WordNode(pos=(24, 32), word='psycopg2'),
  WordNode(pos=(33, 58), word='django==$DJANGO_VERSION', parts=[
    ParameterNode(pos=(42, 57), value='DJANGO_VERSION'),
  ]),
])


418) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


419) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


420) sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS"

CommandNode(pos=(112, 187), parts=[
  WordNode(pos=(112, 115), word='sed'),
  WordNode(pos=(116, 119), word='-ri'),
  WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
  WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
  ]),
])


421) . "$APACHE_ENVVARS"

CommandNode(pos=(191, 210), parts=[
  WordNode(pos=(191, 192), word='.'),
  WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
  ]),
])


422) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


423) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


424) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


425) rm -rvf "$dir"

CommandNode(pos=(293, 307), parts=[
  WordNode(pos=(293, 295), word='rm'),
  WordNode(pos=(296, 300), word='-rvf'),
  WordNode(pos=(301, 307), word='$dir', parts=[
    ParameterNode(pos=(302, 306), value='dir'),
  ]),
])


426) mkdir -p "$dir"

CommandNode(pos=(311, 326), parts=[
  WordNode(pos=(311, 316), word='mkdir'),
  WordNode(pos=(317, 319), word='-p'),
  WordNode(pos=(320, 326), word='$dir', parts=[
    ParameterNode(pos=(321, 325), value='dir'),
  ]),
])


427) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


428) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


429) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


430) chmod 777 "$dir"

CommandNode(pos=(383, 399), parts=[
  WordNode(pos=(383, 388), word='chmod'),
  WordNode(pos=(389, 392), word='777'),
  WordNode(pos=(393, 399), word='$dir', parts=[
    ParameterNode(pos=(394, 398), value='dir'),
  ]),
])


431) ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log"

CommandNode(pos=(437, 484), parts=[
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 444), word='-sfT'),
  WordNode(pos=(445, 456), word='/dev/stderr'),
  WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
    ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
  ]),
])


432) ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log"

CommandNode(pos=(487, 535), parts=[
  WordNode(pos=(487, 489), word='ln'),
  WordNode(pos=(490, 494), word='-sfT'),
  WordNode(pos=(495, 506), word='/dev/stdout'),
  WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
    ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
  ]),
])


433) ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

CommandNode(pos=(538, 599), parts=[
  WordNode(pos=(538, 540), word='ln'),
  WordNode(pos=(541, 545), word='-sfT'),
  WordNode(pos=(546, 557), word='/dev/stdout'),
  WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
    ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
  ]),
])


434) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


435) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


436) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


437) tee "$APACHE_CONFDIR/conf-available/docker-php.conf"

CommandNode(pos=(318, 370), parts=[
  WordNode(pos=(318, 321), word='tee'),
  WordNode(pos=(322, 370), word='$APACHE_CONFDIR/conf-available/docker-php.conf', parts=[
    ParameterNode(pos=(323, 338), value='APACHE_CONFDIR'),
  ]),
])


438) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


439) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


440) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


441) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


442) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


443) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


444) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


445) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


446) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


447) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


448) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


449) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


450) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


451) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


452) set -ex;  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done

ListNode(pos=(0, 113), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    ForNode(pos=(10, 113), parts=[
      ReservedwordNode(pos=(10, 13), word='for'),
      WordNode(pos=(14, 17), word='key'),
      ReservedwordNode(pos=(18, 20), word='in'),
      WordNode(pos=(21, 30), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(21, 30), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(30, 31), word=';'),
      ReservedwordNode(pos=(32, 34), word='do'),
      ListNode(pos=(37, 107), parts=[
          CommandNode(pos=(37, 106), parts=[
            WordNode(pos=(37, 40), word='gpg'),
            WordNode(pos=(41, 48), word='--batch'),
            WordNode(pos=(49, 60), word='--keyserver'),
            WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(88, 99), word='--recv-keys'),
            WordNode(pos=(100, 106), word='$key', parts=[
              ParameterNode(pos=(101, 105), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
        ]),
      ReservedwordNode(pos=(109, 113), word='done'),
    ]),
  ], pos=(10, 113)),
])


453) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(37, 106), parts=[
  WordNode(pos=(37, 40), word='gpg'),
  WordNode(pos=(41, 48), word='--batch'),
  WordNode(pos=(49, 60), word='--keyserver'),
  WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(88, 99), word='--recv-keys'),
  WordNode(pos=(100, 106), word='$key', parts=[
    ParameterNode(pos=(101, 105), value='key'),
  ]),
])


454) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


455) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


456) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


457) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


458) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


459) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


460) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


461) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1160, 1312), parts=[
  WordNode(pos=(1160, 1171), word='./configure'),
  WordNode(pos=(1174, 1192), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1183, 1191), value='gnuArch'),
  ]),
  WordNode(pos=(1195, 1230), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1233, 1248), word='--enable-shared'),
  WordNode(pos=(1251, 1270), word='--with-system-expat'),
  WordNode(pos=(1273, 1290), word='--with-system-ffi'),
  WordNode(pos=(1293, 1312), word='--without-ensurepip'),
])


462) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


463) pypy get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 163), parts=[
  WordNode(pos=(72, 76), word='pypy'),
  WordNode(pos=(77, 87), word='get-pip.py'),
  WordNode(pos=(90, 117), word='--disable-pip-version-check'),
  WordNode(pos=(120, 134), word='--no-cache-dir'),
  WordNode(pos=(137, 163), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(143, 162), value='PYTHON_PIP_VERSION'),
  ]),
])


464) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


465) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


466) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


467) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


468) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


469) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


470) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


471) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


472) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


473) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


474) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


475) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


476) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


477) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


478) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


479) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


480) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


481) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


482) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


483) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


484) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


485) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


486) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


487) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


488) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


489) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


490) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


491) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


492) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


493) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


494) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


495) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


496) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


497) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


498) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


499) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


500) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


501) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


502) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


503) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


504) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


505) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


506) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


507) apk add --virtual .drupal-phpexts-rundeps $runDeps

CommandNode(pos=(566, 616), parts=[
  WordNode(pos=(566, 569), word='apk'),
  WordNode(pos=(570, 573), word='add'),
  WordNode(pos=(574, 583), word='--virtual'),
  WordNode(pos=(584, 607), word='.drupal-phpexts-rundeps'),
  WordNode(pos=(608, 616), word='$runDeps', parts=[
    ParameterNode(pos=(608, 616), value='runDeps'),
  ]),
])


508) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


509) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


510) apk add --virtual .drupal-phpexts-rundeps $runDeps

CommandNode(pos=(566, 616), parts=[
  WordNode(pos=(566, 569), word='apk'),
  WordNode(pos=(570, 573), word='add'),
  WordNode(pos=(574, 583), word='--virtual'),
  WordNode(pos=(584, 607), word='.drupal-phpexts-rundeps'),
  WordNode(pos=(608, 616), word='$runDeps', parts=[
    ParameterNode(pos=(608, 616), value='runDeps'),
  ]),
])


511) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


512) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


513) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


514) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


515) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


516) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


517) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


518) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


519) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


520) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


521) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


522) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


523) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


524) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


525) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


526) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


527) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


528) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


529) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


530) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


531) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


532) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


533) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


534) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


535) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


536) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


537) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


538) wget -O /openjdk.tgz "$JAVA_URL"

CommandNode(pos=(12, 44), parts=[
  WordNode(pos=(12, 16), word='wget'),
  WordNode(pos=(17, 19), word='-O'),
  WordNode(pos=(20, 32), word='/openjdk.tgz'),
  WordNode(pos=(33, 44), word='$JAVA_URL', parts=[
    ParameterNode(pos=(34, 43), value='JAVA_URL'),
  ]),
])


539) echo "$JAVA_SHA256 */openjdk.tgz"

CommandNode(pos=(47, 80), parts=[
  WordNode(pos=(47, 51), word='echo'),
  WordNode(pos=(52, 80), word='$JAVA_SHA256 */openjdk.tgz', parts=[
    ParameterNode(pos=(53, 65), value='JAVA_SHA256'),
  ]),
])


540) mkdir -p "$JAVA_HOME"

CommandNode(pos=(100, 121), parts=[
  WordNode(pos=(100, 105), word='mkdir'),
  WordNode(pos=(106, 108), word='-p'),
  WordNode(pos=(109, 121), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(110, 120), value='JAVA_HOME'),
  ]),
])


541) tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1

CommandNode(pos=(124, 203), parts=[
  WordNode(pos=(124, 127), word='tar'),
  WordNode(pos=(128, 137), word='--extract'),
  WordNode(pos=(138, 144), word='--file'),
  WordNode(pos=(145, 157), word='/openjdk.tgz'),
  WordNode(pos=(158, 169), word='--directory'),
  WordNode(pos=(170, 182), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(171, 181), value='JAVA_HOME'),
  ]),
  WordNode(pos=(183, 201), word='--strip-components'),
  WordNode(pos=(202, 203), word='1'),
])


542) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


543) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


544) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


545) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


546) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


547) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


548) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


549) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


550) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


551) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


552) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


553) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


554) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


555) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


556) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


557) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


558) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


559) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


560) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


561) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


562) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


563) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


564) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


565) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


566) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


567) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


568) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


569) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


570) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


571) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


572) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


573) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


574) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4

CommandNode(pos=(740, 814), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 790), word='--enable-shared'),
  WordNode(pos=(793, 814), word='--enable-unicode=ucs4'),
])


575) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


576) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev   libzip-dev

CommandNode(pos=(11, 130), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
  WordNode(pos=(120, 130), word='libzip-dev'),
])


577) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(561, 614), parts=[
  WordNode(pos=(561, 564), word='apk'),
  WordNode(pos=(565, 568), word='add'),
  WordNode(pos=(569, 578), word='--virtual'),
  WordNode(pos=(579, 605), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(606, 614), word='$runDeps', parts=[
    ParameterNode(pos=(606, 614), value='runDeps'),
  ]),
])


578) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


579) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


580) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


581) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


582) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


583) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


584) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


585) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


586) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


587) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1143, 1295), parts=[
  WordNode(pos=(1143, 1154), word='./configure'),
  WordNode(pos=(1157, 1175), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1166, 1174), value='gnuArch'),
  ]),
  WordNode(pos=(1178, 1213), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1216, 1231), word='--enable-shared'),
  WordNode(pos=(1234, 1253), word='--with-system-expat'),
  WordNode(pos=(1256, 1273), word='--with-system-ffi'),
  WordNode(pos=(1276, 1295), word='--without-ensurepip'),
])


588) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


589) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


590) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


591) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


592) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


593) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


594) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


595) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


596) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


597) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


598) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


599) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


600) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


601) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


602) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


603) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


604) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


605) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


606) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


607) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


608) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


609) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


610) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


611) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


612) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


613) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


614) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


615) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


616) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


617) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


618) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


619) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


620) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


621) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


622) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


623) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
])


624) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


625) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


626) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


627) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


628) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


629) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


630) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


631) pip install celery=="$CELERY_VERSION"

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 37), word='celery==$CELERY_VERSION', parts=[
    ParameterNode(pos=(21, 36), value='CELERY_VERSION'),
  ]),
])


632) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


633) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


634) sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS"

CommandNode(pos=(112, 187), parts=[
  WordNode(pos=(112, 115), word='sed'),
  WordNode(pos=(116, 119), word='-ri'),
  WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
  WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
  ]),
])


635) . "$APACHE_ENVVARS"

CommandNode(pos=(191, 210), parts=[
  WordNode(pos=(191, 192), word='.'),
  WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
  ]),
])


636) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


637) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


638) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


639) rm -rvf "$dir"

CommandNode(pos=(293, 307), parts=[
  WordNode(pos=(293, 295), word='rm'),
  WordNode(pos=(296, 300), word='-rvf'),
  WordNode(pos=(301, 307), word='$dir', parts=[
    ParameterNode(pos=(302, 306), value='dir'),
  ]),
])


640) mkdir -p "$dir"

CommandNode(pos=(311, 326), parts=[
  WordNode(pos=(311, 316), word='mkdir'),
  WordNode(pos=(317, 319), word='-p'),
  WordNode(pos=(320, 326), word='$dir', parts=[
    ParameterNode(pos=(321, 325), value='dir'),
  ]),
])


641) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


642) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


643) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


644) chmod 777 "$dir"

CommandNode(pos=(383, 399), parts=[
  WordNode(pos=(383, 388), word='chmod'),
  WordNode(pos=(389, 392), word='777'),
  WordNode(pos=(393, 399), word='$dir', parts=[
    ParameterNode(pos=(394, 398), value='dir'),
  ]),
])


645) ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log"

CommandNode(pos=(437, 484), parts=[
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 444), word='-sfT'),
  WordNode(pos=(445, 456), word='/dev/stderr'),
  WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
    ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
  ]),
])


646) ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log"

CommandNode(pos=(487, 535), parts=[
  WordNode(pos=(487, 489), word='ln'),
  WordNode(pos=(490, 494), word='-sfT'),
  WordNode(pos=(495, 506), word='/dev/stdout'),
  WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
    ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
  ]),
])


647) ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

CommandNode(pos=(538, 599), parts=[
  WordNode(pos=(538, 540), word='ln'),
  WordNode(pos=(541, 545), word='-sfT'),
  WordNode(pos=(546, 557), word='/dev/stdout'),
  WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
    ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
  ]),
])


648) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


649) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


650) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


651) tee "$APACHE_CONFDIR/conf-available/docker-php.conf"

CommandNode(pos=(318, 370), parts=[
  WordNode(pos=(318, 321), word='tee'),
  WordNode(pos=(322, 370), word='$APACHE_CONFDIR/conf-available/docker-php.conf', parts=[
    ParameterNode(pos=(323, 338), value='APACHE_CONFDIR'),
  ]),
])


652) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


653) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


654) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


655) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


656) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


657) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


658) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


659) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


660) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


661) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


662) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


663) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


664) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


665) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


666) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


667) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(601, 673), parts=[
  WordNode(pos=(601, 605), word='make'),
  WordNode(pos=(606, 608), word='-C'),
  WordNode(pos=(609, 625), word='/usr/src/haproxy'),
  WordNode(pos=(626, 628), word='-j'),
  WordNode(pos=(629, 659), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(632, 657), parts=[
        WordNode(pos=(632, 639), word='getconf'),
        WordNode(pos=(640, 657), word='_NPROCESSORS_ONLN'),
      ]), pos=(630, 658)),
  ]),
  WordNode(pos=(660, 663), word='all'),
  WordNode(pos=(664, 673), word='$makeOpts', parts=[
    ParameterNode(pos=(664, 673), value='makeOpts'),
  ]),
])


668) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(678, 724), parts=[
  WordNode(pos=(678, 682), word='make'),
  WordNode(pos=(683, 685), word='-C'),
  WordNode(pos=(686, 702), word='/usr/src/haproxy'),
  WordNode(pos=(703, 714), word='install-bin'),
  WordNode(pos=(715, 724), word='$makeOpts', parts=[
    ParameterNode(pos=(715, 724), value='makeOpts'),
  ]),
])


669) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1074, 1117), parts=[
  WordNode(pos=(1074, 1077), word='apk'),
  WordNode(pos=(1078, 1081), word='add'),
  WordNode(pos=(1082, 1091), word='--virtual'),
  WordNode(pos=(1092, 1108), word='.haproxy-rundeps'),
  WordNode(pos=(1109, 1117), word='$runDeps', parts=[
    ParameterNode(pos=(1109, 1117), value='runDeps'),
  ]),
])


670) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


671) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


672) sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS"

CommandNode(pos=(112, 187), parts=[
  WordNode(pos=(112, 115), word='sed'),
  WordNode(pos=(116, 119), word='-ri'),
  WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
  WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
  ]),
])


673) . "$APACHE_ENVVARS"

CommandNode(pos=(191, 210), parts=[
  WordNode(pos=(191, 192), word='.'),
  WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
  ]),
])


674) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


675) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


676) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


677) rm -rvf "$dir"

CommandNode(pos=(293, 307), parts=[
  WordNode(pos=(293, 295), word='rm'),
  WordNode(pos=(296, 300), word='-rvf'),
  WordNode(pos=(301, 307), word='$dir', parts=[
    ParameterNode(pos=(302, 306), value='dir'),
  ]),
])


678) mkdir -p "$dir"

CommandNode(pos=(311, 326), parts=[
  WordNode(pos=(311, 316), word='mkdir'),
  WordNode(pos=(317, 319), word='-p'),
  WordNode(pos=(320, 326), word='$dir', parts=[
    ParameterNode(pos=(321, 325), value='dir'),
  ]),
])


679) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


680) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


681) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


682) chmod 777 "$dir"

CommandNode(pos=(383, 399), parts=[
  WordNode(pos=(383, 388), word='chmod'),
  WordNode(pos=(389, 392), word='777'),
  WordNode(pos=(393, 399), word='$dir', parts=[
    ParameterNode(pos=(394, 398), value='dir'),
  ]),
])


683) ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log"

CommandNode(pos=(437, 484), parts=[
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 444), word='-sfT'),
  WordNode(pos=(445, 456), word='/dev/stderr'),
  WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
    ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
  ]),
])


684) ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log"

CommandNode(pos=(487, 535), parts=[
  WordNode(pos=(487, 489), word='ln'),
  WordNode(pos=(490, 494), word='-sfT'),
  WordNode(pos=(495, 506), word='/dev/stdout'),
  WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
    ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
  ]),
])


685) ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

CommandNode(pos=(538, 599), parts=[
  WordNode(pos=(538, 540), word='ln'),
  WordNode(pos=(541, 545), word='-sfT'),
  WordNode(pos=(546, 557), word='/dev/stdout'),
  WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
    ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
  ]),
])


686) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


687) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


688) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


689) tee "$APACHE_CONFDIR/conf-available/docker-php.conf"

CommandNode(pos=(318, 370), parts=[
  WordNode(pos=(318, 321), word='tee'),
  WordNode(pos=(322, 370), word='$APACHE_CONFDIR/conf-available/docker-php.conf', parts=[
    ParameterNode(pos=(323, 338), value='APACHE_CONFDIR'),
  ]),
])


690) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


691) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


692) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


693) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


694) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


695) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


696) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


697) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


698) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


699) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


700) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


701) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


702) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


703) tarball="buildroot-${BUILDROOT_VERSION}.tar.bz2"

CommandNode(pos=(10, 58), parts=[
  AssignmentNode(pos=(10, 58), word='tarball=buildroot-${BUILDROOT_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(29, 49), value='BUILDROOT_VERSION'),
  ]),
])


704) curl -fL -o buildroot.tar.bz2 "https://buildroot.org/downloads/$tarball"

CommandNode(pos=(61, 133), parts=[
  WordNode(pos=(61, 65), word='curl'),
  WordNode(pos=(66, 69), word='-fL'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 90), word='buildroot.tar.bz2'),
  WordNode(pos=(91, 133), word='https://buildroot.org/downloads/$tarball', parts=[
    ParameterNode(pos=(124, 132), value='tarball'),
  ]),
])


705) curl -fL -o buildroot.tar.bz2.sign "https://buildroot.org/downloads/$tarball.sign"

CommandNode(pos=(136, 218), parts=[
  WordNode(pos=(136, 140), word='curl'),
  WordNode(pos=(141, 144), word='-fL'),
  WordNode(pos=(145, 147), word='-o'),
  WordNode(pos=(148, 170), word='buildroot.tar.bz2.sign'),
  WordNode(pos=(171, 218), word='https://buildroot.org/downloads/$tarball.sign', parts=[
    ParameterNode(pos=(204, 212), value='tarball'),
  ]),
])


706) make -C /usr/src/buildroot HOST_GMP_CONF_OPTS="--build='"$gnuArch"'" -j "$(nproc)" toolchain

CommandNode(pos=(70, 162), parts=[
  WordNode(pos=(70, 74), word='make'),
  WordNode(pos=(75, 77), word='-C'),
  WordNode(pos=(78, 96), word='/usr/src/buildroot'),
  WordNode(pos=(97, 138), word='HOST_GMP_CONF_OPTS=--build=$gnuArch', parts=[
    ParameterNode(pos=(127, 135), value='gnuArch'),
  ]),
  WordNode(pos=(139, 141), word='-j'),
  WordNode(pos=(142, 152), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(145, 150), parts=[
        WordNode(pos=(145, 150), word='nproc'),
      ]), pos=(143, 151)),
  ]),
  WordNode(pos=(153, 162), word='toolchain'),
])


707) tarball="busybox-${BUSYBOX_VERSION}.tar.bz2"

CommandNode(pos=(10, 54), parts=[
  AssignmentNode(pos=(10, 54), word='tarball=busybox-${BUSYBOX_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(27, 45), value='BUSYBOX_VERSION'),
  ]),
])


708) curl -fL -o busybox.tar.bz2 "https://busybox.net/downloads/$tarball"

CommandNode(pos=(57, 125), parts=[
  WordNode(pos=(57, 61), word='curl'),
  WordNode(pos=(62, 65), word='-fL'),
  WordNode(pos=(66, 68), word='-o'),
  WordNode(pos=(69, 84), word='busybox.tar.bz2'),
  WordNode(pos=(85, 125), word='https://busybox.net/downloads/$tarball', parts=[
    ParameterNode(pos=(116, 124), value='tarball'),
  ]),
])


709) curl -fL -o busybox.tar.bz2.sig "https://busybox.net/downloads/$tarball.sig"

CommandNode(pos=(128, 204), parts=[
  WordNode(pos=(128, 132), word='curl'),
  WordNode(pos=(133, 136), word='-fL'),
  WordNode(pos=(137, 139), word='-o'),
  WordNode(pos=(140, 159), word='busybox.tar.bz2.sig'),
  WordNode(pos=(160, 204), word='https://busybox.net/downloads/$tarball.sig', parts=[
    ParameterNode(pos=(191, 199), value='tarball'),
  ]),
])


710) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 697), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 201), parts=[
    AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(205, 219), parts=[
    WordNode(pos=(205, 209), word='make'),
    WordNode(pos=(210, 219), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CompoundNode(list=[
    ForNode(pos=(223, 319), parts=[
      ReservedwordNode(pos=(223, 226), word='for'),
      WordNode(pos=(227, 231), word='conf'),
      ReservedwordNode(pos=(232, 234), word='in'),
      WordNode(pos=(235, 246), word='$unsetConfs', parts=[
        ParameterNode(pos=(235, 246), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(246, 247), word=';'),
      ReservedwordNode(pos=(248, 250), word='do'),
      ListNode(pos=(253, 313), parts=[
          CommandNode(pos=(253, 312), parts=[
            WordNode(pos=(253, 256), word='sed'),
            WordNode(pos=(257, 259), word='-i'),
            WordNode(pos=(263, 265), word='-e'),
            WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(270, 275), value='conf'),
              ParameterNode(pos=(283, 288), value='conf'),
            ]),
            WordNode(pos=(305, 312), word='.config'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(315, 319), word='done'),
    ]),
  ], pos=(223, 319)),
  OperatorNode(op=';', pos=(319, 320)),
  CompoundNode(list=[
    ForNode(pos=(323, 544), parts=[
      ReservedwordNode(pos=(323, 326), word='for'),
      WordNode(pos=(327, 332), word='confV'),
      ReservedwordNode(pos=(333, 335), word='in'),
      WordNode(pos=(336, 345), word='$setConfs', parts=[
        ParameterNode(pos=(336, 345), value='setConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 538), parts=[
          CommandNode(pos=(352, 370), parts=[
            AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(358, 369), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(370, 371)),
          CommandNode(pos=(374, 461), parts=[
            WordNode(pos=(374, 377), word='sed'),
            WordNode(pos=(378, 380), word='-i'),
            WordNode(pos=(384, 386), word='-e'),
            WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(391, 396), value='conf'),
              ParameterNode(pos=(402, 408), value='confV'),
            ]),
            WordNode(pos=(414, 416), word='-e'),
            WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(423, 428), value='conf'),
              ParameterNode(pos=(442, 448), value='confV'),
            ]),
            WordNode(pos=(454, 461), word='.config'),
          ]),
          OperatorNode(op=';', pos=(461, 462)),
          CompoundNode(list=[
            IfNode(pos=(465, 537), parts=[
              ReservedwordNode(pos=(465, 467), word='if'),
              ListNode(pos=(468, 498), parts=[
                  PipelineNode(pos=(468, 497), parts=[
                    ReservedwordNode(pos=(468, 469), word='!'),
                    CommandNode(pos=(470, 497), parts=[
                      WordNode(pos=(470, 474), word='grep'),
                      WordNode(pos=(475, 477), word='-q'),
                      WordNode(pos=(478, 489), word='^$confV$', parts=[
                        ParameterNode(pos=(480, 486), value='confV'),
                      ]),
                      WordNode(pos=(490, 497), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(497, 498)),
                ]),
              ReservedwordNode(pos=(499, 503), word='then'),
              ListNode(pos=(507, 532), parts=[
                  CommandNode(pos=(507, 531), parts=[
                    WordNode(pos=(507, 511), word='echo'),
                    WordNode(pos=(512, 520), word='$confV', parts=[
                      ParameterNode(pos=(513, 519), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(531, 532)),
                ]),
              ReservedwordNode(pos=(535, 537), word='fi'),
            ]),
          ], pos=(465, 537)),
          OperatorNode(op=';', pos=(537, 538)),
        ]),
      ReservedwordNode(pos=(540, 544), word='done'),
    ]),
  ], pos=(323, 544)),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(548, 562), parts=[
    WordNode(pos=(548, 552), word='make'),
    WordNode(pos=(553, 562), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(562, 563)),
  CompoundNode(list=[
    ForNode(pos=(566, 630), parts=[
      ReservedwordNode(pos=(566, 569), word='for'),
      WordNode(pos=(570, 574), word='conf'),
      ReservedwordNode(pos=(575, 577), word='in'),
      WordNode(pos=(578, 589), word='$unsetConfs', parts=[
        ParameterNode(pos=(578, 589), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 624), parts=[
          PipelineNode(pos=(596, 623), parts=[
            ReservedwordNode(pos=(596, 597), word='!'),
            CommandNode(pos=(598, 623), parts=[
              WordNode(pos=(598, 602), word='grep'),
              WordNode(pos=(603, 605), word='-q'),
              WordNode(pos=(606, 615), word='^$conf=', parts=[
                ParameterNode(pos=(608, 613), value='conf'),
              ]),
              WordNode(pos=(616, 623), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(623, 624)),
        ]),
      ReservedwordNode(pos=(626, 630), word='done'),
    ]),
  ], pos=(566, 630)),
  OperatorNode(op=';', pos=(630, 631)),
  CompoundNode(list=[
    ForNode(pos=(633, 696), parts=[
      ReservedwordNode(pos=(633, 636), word='for'),
      WordNode(pos=(637, 642), word='confV'),
      ReservedwordNode(pos=(643, 645), word='in'),
      WordNode(pos=(646, 655), word='$setConfs', parts=[
        ParameterNode(pos=(646, 655), value='setConfs'),
      ]),
      ReservedwordNode(pos=(655, 656), word=';'),
      ReservedwordNode(pos=(657, 659), word='do'),
      ListNode(pos=(662, 690), parts=[
          CommandNode(pos=(662, 689), parts=[
            WordNode(pos=(662, 666), word='grep'),
            WordNode(pos=(667, 669), word='-q'),
            WordNode(pos=(670, 681), word='^$confV$', parts=[
              ParameterNode(pos=(672, 678), value='confV'),
            ]),
            WordNode(pos=(682, 689), word='.config'),
          ]),
          OperatorNode(op=';', pos=(689, 690)),
        ]),
      ReservedwordNode(pos=(692, 696), word='done'),
    ]),
  ], pos=(633, 696)),
  OperatorNode(op=';', pos=(696, 697)),
])


711) sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config

CommandNode(pos=(253, 312), parts=[
  WordNode(pos=(253, 256), word='sed'),
  WordNode(pos=(257, 259), word='-i'),
  WordNode(pos=(263, 265), word='-e'),
  WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
    ParameterNode(pos=(270, 275), value='conf'),
    ParameterNode(pos=(283, 288), value='conf'),
  ]),
  WordNode(pos=(305, 312), word='.config'),
])


712) sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config

CommandNode(pos=(253, 312), parts=[
  WordNode(pos=(253, 256), word='sed'),
  WordNode(pos=(257, 259), word='-i'),
  WordNode(pos=(263, 265), word='-e'),
  WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
    ParameterNode(pos=(270, 275), value='conf'),
    ParameterNode(pos=(283, 288), value='conf'),
  ]),
  WordNode(pos=(305, 312), word='.config'),
])


713) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 697), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 201), parts=[
    AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(205, 219), parts=[
    WordNode(pos=(205, 209), word='make'),
    WordNode(pos=(210, 219), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CompoundNode(list=[
    ForNode(pos=(223, 319), parts=[
      ReservedwordNode(pos=(223, 226), word='for'),
      WordNode(pos=(227, 231), word='conf'),
      ReservedwordNode(pos=(232, 234), word='in'),
      WordNode(pos=(235, 246), word='$unsetConfs', parts=[
        ParameterNode(pos=(235, 246), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(246, 247), word=';'),
      ReservedwordNode(pos=(248, 250), word='do'),
      ListNode(pos=(253, 313), parts=[
          CommandNode(pos=(253, 312), parts=[
            WordNode(pos=(253, 256), word='sed'),
            WordNode(pos=(257, 259), word='-i'),
            WordNode(pos=(263, 265), word='-e'),
            WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(270, 275), value='conf'),
              ParameterNode(pos=(283, 288), value='conf'),
            ]),
            WordNode(pos=(305, 312), word='.config'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(315, 319), word='done'),
    ]),
  ], pos=(223, 319)),
  OperatorNode(op=';', pos=(319, 320)),
  CompoundNode(list=[
    ForNode(pos=(323, 544), parts=[
      ReservedwordNode(pos=(323, 326), word='for'),
      WordNode(pos=(327, 332), word='confV'),
      ReservedwordNode(pos=(333, 335), word='in'),
      WordNode(pos=(336, 345), word='$setConfs', parts=[
        ParameterNode(pos=(336, 345), value='setConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 538), parts=[
          CommandNode(pos=(352, 370), parts=[
            AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(358, 369), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(370, 371)),
          CommandNode(pos=(374, 461), parts=[
            WordNode(pos=(374, 377), word='sed'),
            WordNode(pos=(378, 380), word='-i'),
            WordNode(pos=(384, 386), word='-e'),
            WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(391, 396), value='conf'),
              ParameterNode(pos=(402, 408), value='confV'),
            ]),
            WordNode(pos=(414, 416), word='-e'),
            WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(423, 428), value='conf'),
              ParameterNode(pos=(442, 448), value='confV'),
            ]),
            WordNode(pos=(454, 461), word='.config'),
          ]),
          OperatorNode(op=';', pos=(461, 462)),
          CompoundNode(list=[
            IfNode(pos=(465, 537), parts=[
              ReservedwordNode(pos=(465, 467), word='if'),
              ListNode(pos=(468, 498), parts=[
                  PipelineNode(pos=(468, 497), parts=[
                    ReservedwordNode(pos=(468, 469), word='!'),
                    CommandNode(pos=(470, 497), parts=[
                      WordNode(pos=(470, 474), word='grep'),
                      WordNode(pos=(475, 477), word='-q'),
                      WordNode(pos=(478, 489), word='^$confV$', parts=[
                        ParameterNode(pos=(480, 486), value='confV'),
                      ]),
                      WordNode(pos=(490, 497), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(497, 498)),
                ]),
              ReservedwordNode(pos=(499, 503), word='then'),
              ListNode(pos=(507, 532), parts=[
                  CommandNode(pos=(507, 531), parts=[
                    WordNode(pos=(507, 511), word='echo'),
                    WordNode(pos=(512, 520), word='$confV', parts=[
                      ParameterNode(pos=(513, 519), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(531, 532)),
                ]),
              ReservedwordNode(pos=(535, 537), word='fi'),
            ]),
          ], pos=(465, 537)),
          OperatorNode(op=';', pos=(537, 538)),
        ]),
      ReservedwordNode(pos=(540, 544), word='done'),
    ]),
  ], pos=(323, 544)),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(548, 562), parts=[
    WordNode(pos=(548, 552), word='make'),
    WordNode(pos=(553, 562), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(562, 563)),
  CompoundNode(list=[
    ForNode(pos=(566, 630), parts=[
      ReservedwordNode(pos=(566, 569), word='for'),
      WordNode(pos=(570, 574), word='conf'),
      ReservedwordNode(pos=(575, 577), word='in'),
      WordNode(pos=(578, 589), word='$unsetConfs', parts=[
        ParameterNode(pos=(578, 589), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 624), parts=[
          PipelineNode(pos=(596, 623), parts=[
            ReservedwordNode(pos=(596, 597), word='!'),
            CommandNode(pos=(598, 623), parts=[
              WordNode(pos=(598, 602), word='grep'),
              WordNode(pos=(603, 605), word='-q'),
              WordNode(pos=(606, 615), word='^$conf=', parts=[
                ParameterNode(pos=(608, 613), value='conf'),
              ]),
              WordNode(pos=(616, 623), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(623, 624)),
        ]),
      ReservedwordNode(pos=(626, 630), word='done'),
    ]),
  ], pos=(566, 630)),
  OperatorNode(op=';', pos=(630, 631)),
  CompoundNode(list=[
    ForNode(pos=(633, 696), parts=[
      ReservedwordNode(pos=(633, 636), word='for'),
      WordNode(pos=(637, 642), word='confV'),
      ReservedwordNode(pos=(643, 645), word='in'),
      WordNode(pos=(646, 655), word='$setConfs', parts=[
        ParameterNode(pos=(646, 655), value='setConfs'),
      ]),
      ReservedwordNode(pos=(655, 656), word=';'),
      ReservedwordNode(pos=(657, 659), word='do'),
      ListNode(pos=(662, 690), parts=[
          CommandNode(pos=(662, 689), parts=[
            WordNode(pos=(662, 666), word='grep'),
            WordNode(pos=(667, 669), word='-q'),
            WordNode(pos=(670, 681), word='^$confV$', parts=[
              ParameterNode(pos=(672, 678), value='confV'),
            ]),
            WordNode(pos=(682, 689), word='.config'),
          ]),
          OperatorNode(op=';', pos=(689, 690)),
        ]),
      ReservedwordNode(pos=(692, 696), word='done'),
    ]),
  ], pos=(633, 696)),
  OperatorNode(op=';', pos=(696, 697)),
])


714) conf="${confV%=*}"

CommandNode(pos=(352, 370), parts=[
  AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
    ParameterNode(pos=(358, 369), value='confV%=*'),
  ]),
])


715) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(374, 461), parts=[
  WordNode(pos=(374, 377), word='sed'),
  WordNode(pos=(378, 380), word='-i'),
  WordNode(pos=(384, 386), word='-e'),
  WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(391, 396), value='conf'),
    ParameterNode(pos=(402, 408), value='confV'),
  ]),
  WordNode(pos=(414, 416), word='-e'),
  WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(423, 428), value='conf'),
    ParameterNode(pos=(442, 448), value='confV'),
  ]),
  WordNode(pos=(454, 461), word='.config'),
])


716) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(374, 461), parts=[
  WordNode(pos=(374, 377), word='sed'),
  WordNode(pos=(378, 380), word='-i'),
  WordNode(pos=(384, 386), word='-e'),
  WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(391, 396), value='conf'),
    ParameterNode(pos=(402, 408), value='confV'),
  ]),
  WordNode(pos=(414, 416), word='-e'),
  WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(423, 428), value='conf'),
    ParameterNode(pos=(442, 448), value='confV'),
  ]),
  WordNode(pos=(454, 461), word='.config'),
])


717) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(374, 461), parts=[
  WordNode(pos=(374, 377), word='sed'),
  WordNode(pos=(378, 380), word='-i'),
  WordNode(pos=(384, 386), word='-e'),
  WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(391, 396), value='conf'),
    ParameterNode(pos=(402, 408), value='confV'),
  ]),
  WordNode(pos=(414, 416), word='-e'),
  WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(423, 428), value='conf'),
    ParameterNode(pos=(442, 448), value='confV'),
  ]),
  WordNode(pos=(454, 461), word='.config'),
])


718) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(374, 461), parts=[
  WordNode(pos=(374, 377), word='sed'),
  WordNode(pos=(378, 380), word='-i'),
  WordNode(pos=(384, 386), word='-e'),
  WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(391, 396), value='conf'),
    ParameterNode(pos=(402, 408), value='confV'),
  ]),
  WordNode(pos=(414, 416), word='-e'),
  WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(423, 428), value='conf'),
    ParameterNode(pos=(442, 448), value='confV'),
  ]),
  WordNode(pos=(454, 461), word='.config'),
])


719) grep -q "^$confV\$" .config

CommandNode(pos=(470, 497), parts=[
  WordNode(pos=(470, 474), word='grep'),
  WordNode(pos=(475, 477), word='-q'),
  WordNode(pos=(478, 489), word='^$confV$', parts=[
    ParameterNode(pos=(480, 486), value='confV'),
  ]),
  WordNode(pos=(490, 497), word='.config'),
])


720) echo "$confV" >> .config

CommandNode(pos=(507, 531), parts=[
  WordNode(pos=(507, 511), word='echo'),
  WordNode(pos=(512, 520), word='$confV', parts=[
    ParameterNode(pos=(513, 519), value='confV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
])


721) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 697), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 201), parts=[
    AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(205, 219), parts=[
    WordNode(pos=(205, 209), word='make'),
    WordNode(pos=(210, 219), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CompoundNode(list=[
    ForNode(pos=(223, 319), parts=[
      ReservedwordNode(pos=(223, 226), word='for'),
      WordNode(pos=(227, 231), word='conf'),
      ReservedwordNode(pos=(232, 234), word='in'),
      WordNode(pos=(235, 246), word='$unsetConfs', parts=[
        ParameterNode(pos=(235, 246), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(246, 247), word=';'),
      ReservedwordNode(pos=(248, 250), word='do'),
      ListNode(pos=(253, 313), parts=[
          CommandNode(pos=(253, 312), parts=[
            WordNode(pos=(253, 256), word='sed'),
            WordNode(pos=(257, 259), word='-i'),
            WordNode(pos=(263, 265), word='-e'),
            WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(270, 275), value='conf'),
              ParameterNode(pos=(283, 288), value='conf'),
            ]),
            WordNode(pos=(305, 312), word='.config'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(315, 319), word='done'),
    ]),
  ], pos=(223, 319)),
  OperatorNode(op=';', pos=(319, 320)),
  CompoundNode(list=[
    ForNode(pos=(323, 544), parts=[
      ReservedwordNode(pos=(323, 326), word='for'),
      WordNode(pos=(327, 332), word='confV'),
      ReservedwordNode(pos=(333, 335), word='in'),
      WordNode(pos=(336, 345), word='$setConfs', parts=[
        ParameterNode(pos=(336, 345), value='setConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 538), parts=[
          CommandNode(pos=(352, 370), parts=[
            AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(358, 369), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(370, 371)),
          CommandNode(pos=(374, 461), parts=[
            WordNode(pos=(374, 377), word='sed'),
            WordNode(pos=(378, 380), word='-i'),
            WordNode(pos=(384, 386), word='-e'),
            WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(391, 396), value='conf'),
              ParameterNode(pos=(402, 408), value='confV'),
            ]),
            WordNode(pos=(414, 416), word='-e'),
            WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(423, 428), value='conf'),
              ParameterNode(pos=(442, 448), value='confV'),
            ]),
            WordNode(pos=(454, 461), word='.config'),
          ]),
          OperatorNode(op=';', pos=(461, 462)),
          CompoundNode(list=[
            IfNode(pos=(465, 537), parts=[
              ReservedwordNode(pos=(465, 467), word='if'),
              ListNode(pos=(468, 498), parts=[
                  PipelineNode(pos=(468, 497), parts=[
                    ReservedwordNode(pos=(468, 469), word='!'),
                    CommandNode(pos=(470, 497), parts=[
                      WordNode(pos=(470, 474), word='grep'),
                      WordNode(pos=(475, 477), word='-q'),
                      WordNode(pos=(478, 489), word='^$confV$', parts=[
                        ParameterNode(pos=(480, 486), value='confV'),
                      ]),
                      WordNode(pos=(490, 497), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(497, 498)),
                ]),
              ReservedwordNode(pos=(499, 503), word='then'),
              ListNode(pos=(507, 532), parts=[
                  CommandNode(pos=(507, 531), parts=[
                    WordNode(pos=(507, 511), word='echo'),
                    WordNode(pos=(512, 520), word='$confV', parts=[
                      ParameterNode(pos=(513, 519), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(531, 532)),
                ]),
              ReservedwordNode(pos=(535, 537), word='fi'),
            ]),
          ], pos=(465, 537)),
          OperatorNode(op=';', pos=(537, 538)),
        ]),
      ReservedwordNode(pos=(540, 544), word='done'),
    ]),
  ], pos=(323, 544)),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(548, 562), parts=[
    WordNode(pos=(548, 552), word='make'),
    WordNode(pos=(553, 562), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(562, 563)),
  CompoundNode(list=[
    ForNode(pos=(566, 630), parts=[
      ReservedwordNode(pos=(566, 569), word='for'),
      WordNode(pos=(570, 574), word='conf'),
      ReservedwordNode(pos=(575, 577), word='in'),
      WordNode(pos=(578, 589), word='$unsetConfs', parts=[
        ParameterNode(pos=(578, 589), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 624), parts=[
          PipelineNode(pos=(596, 623), parts=[
            ReservedwordNode(pos=(596, 597), word='!'),
            CommandNode(pos=(598, 623), parts=[
              WordNode(pos=(598, 602), word='grep'),
              WordNode(pos=(603, 605), word='-q'),
              WordNode(pos=(606, 615), word='^$conf=', parts=[
                ParameterNode(pos=(608, 613), value='conf'),
              ]),
              WordNode(pos=(616, 623), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(623, 624)),
        ]),
      ReservedwordNode(pos=(626, 630), word='done'),
    ]),
  ], pos=(566, 630)),
  OperatorNode(op=';', pos=(630, 631)),
  CompoundNode(list=[
    ForNode(pos=(633, 696), parts=[
      ReservedwordNode(pos=(633, 636), word='for'),
      WordNode(pos=(637, 642), word='confV'),
      ReservedwordNode(pos=(643, 645), word='in'),
      WordNode(pos=(646, 655), word='$setConfs', parts=[
        ParameterNode(pos=(646, 655), value='setConfs'),
      ]),
      ReservedwordNode(pos=(655, 656), word=';'),
      ReservedwordNode(pos=(657, 659), word='do'),
      ListNode(pos=(662, 690), parts=[
          CommandNode(pos=(662, 689), parts=[
            WordNode(pos=(662, 666), word='grep'),
            WordNode(pos=(667, 669), word='-q'),
            WordNode(pos=(670, 681), word='^$confV$', parts=[
              ParameterNode(pos=(672, 678), value='confV'),
            ]),
            WordNode(pos=(682, 689), word='.config'),
          ]),
          OperatorNode(op=';', pos=(689, 690)),
        ]),
      ReservedwordNode(pos=(692, 696), word='done'),
    ]),
  ], pos=(633, 696)),
  OperatorNode(op=';', pos=(696, 697)),
])


722) grep -q "^$conf=" .config

CommandNode(pos=(598, 623), parts=[
  WordNode(pos=(598, 602), word='grep'),
  WordNode(pos=(603, 605), word='-q'),
  WordNode(pos=(606, 615), word='^$conf=', parts=[
    ParameterNode(pos=(608, 613), value='conf'),
  ]),
  WordNode(pos=(616, 623), word='.config'),
])


723) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 697), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 201), parts=[
    AssignmentNode(pos=(158, 201), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CommandNode(pos=(205, 219), parts=[
    WordNode(pos=(205, 209), word='make'),
    WordNode(pos=(210, 219), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CompoundNode(list=[
    ForNode(pos=(223, 319), parts=[
      ReservedwordNode(pos=(223, 226), word='for'),
      WordNode(pos=(227, 231), word='conf'),
      ReservedwordNode(pos=(232, 234), word='in'),
      WordNode(pos=(235, 246), word='$unsetConfs', parts=[
        ParameterNode(pos=(235, 246), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(246, 247), word=';'),
      ReservedwordNode(pos=(248, 250), word='do'),
      ListNode(pos=(253, 313), parts=[
          CommandNode(pos=(253, 312), parts=[
            WordNode(pos=(253, 256), word='sed'),
            WordNode(pos=(257, 259), word='-i'),
            WordNode(pos=(263, 265), word='-e'),
            WordNode(pos=(266, 301), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(270, 275), value='conf'),
              ParameterNode(pos=(283, 288), value='conf'),
            ]),
            WordNode(pos=(305, 312), word='.config'),
          ]),
          OperatorNode(op=';', pos=(312, 313)),
        ]),
      ReservedwordNode(pos=(315, 319), word='done'),
    ]),
  ], pos=(223, 319)),
  OperatorNode(op=';', pos=(319, 320)),
  CompoundNode(list=[
    ForNode(pos=(323, 544), parts=[
      ReservedwordNode(pos=(323, 326), word='for'),
      WordNode(pos=(327, 332), word='confV'),
      ReservedwordNode(pos=(333, 335), word='in'),
      WordNode(pos=(336, 345), word='$setConfs', parts=[
        ParameterNode(pos=(336, 345), value='setConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 538), parts=[
          CommandNode(pos=(352, 370), parts=[
            AssignmentNode(pos=(352, 370), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(358, 369), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(370, 371)),
          CommandNode(pos=(374, 461), parts=[
            WordNode(pos=(374, 377), word='sed'),
            WordNode(pos=(378, 380), word='-i'),
            WordNode(pos=(384, 386), word='-e'),
            WordNode(pos=(387, 410), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(391, 396), value='conf'),
              ParameterNode(pos=(402, 408), value='confV'),
            ]),
            WordNode(pos=(414, 416), word='-e'),
            WordNode(pos=(417, 450), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(423, 428), value='conf'),
              ParameterNode(pos=(442, 448), value='confV'),
            ]),
            WordNode(pos=(454, 461), word='.config'),
          ]),
          OperatorNode(op=';', pos=(461, 462)),
          CompoundNode(list=[
            IfNode(pos=(465, 537), parts=[
              ReservedwordNode(pos=(465, 467), word='if'),
              ListNode(pos=(468, 498), parts=[
                  PipelineNode(pos=(468, 497), parts=[
                    ReservedwordNode(pos=(468, 469), word='!'),
                    CommandNode(pos=(470, 497), parts=[
                      WordNode(pos=(470, 474), word='grep'),
                      WordNode(pos=(475, 477), word='-q'),
                      WordNode(pos=(478, 489), word='^$confV$', parts=[
                        ParameterNode(pos=(480, 486), value='confV'),
                      ]),
                      WordNode(pos=(490, 497), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(497, 498)),
                ]),
              ReservedwordNode(pos=(499, 503), word='then'),
              ListNode(pos=(507, 532), parts=[
                  CommandNode(pos=(507, 531), parts=[
                    WordNode(pos=(507, 511), word='echo'),
                    WordNode(pos=(512, 520), word='$confV', parts=[
                      ParameterNode(pos=(513, 519), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(524, 531), word='.config'), pos=(521, 531), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(531, 532)),
                ]),
              ReservedwordNode(pos=(535, 537), word='fi'),
            ]),
          ], pos=(465, 537)),
          OperatorNode(op=';', pos=(537, 538)),
        ]),
      ReservedwordNode(pos=(540, 544), word='done'),
    ]),
  ], pos=(323, 544)),
  OperatorNode(op=';', pos=(544, 545)),
  CommandNode(pos=(548, 562), parts=[
    WordNode(pos=(548, 552), word='make'),
    WordNode(pos=(553, 562), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(562, 563)),
  CompoundNode(list=[
    ForNode(pos=(566, 630), parts=[
      ReservedwordNode(pos=(566, 569), word='for'),
      WordNode(pos=(570, 574), word='conf'),
      ReservedwordNode(pos=(575, 577), word='in'),
      WordNode(pos=(578, 589), word='$unsetConfs', parts=[
        ParameterNode(pos=(578, 589), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 624), parts=[
          PipelineNode(pos=(596, 623), parts=[
            ReservedwordNode(pos=(596, 597), word='!'),
            CommandNode(pos=(598, 623), parts=[
              WordNode(pos=(598, 602), word='grep'),
              WordNode(pos=(603, 605), word='-q'),
              WordNode(pos=(606, 615), word='^$conf=', parts=[
                ParameterNode(pos=(608, 613), value='conf'),
              ]),
              WordNode(pos=(616, 623), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(623, 624)),
        ]),
      ReservedwordNode(pos=(626, 630), word='done'),
    ]),
  ], pos=(566, 630)),
  OperatorNode(op=';', pos=(630, 631)),
  CompoundNode(list=[
    ForNode(pos=(633, 696), parts=[
      ReservedwordNode(pos=(633, 636), word='for'),
      WordNode(pos=(637, 642), word='confV'),
      ReservedwordNode(pos=(643, 645), word='in'),
      WordNode(pos=(646, 655), word='$setConfs', parts=[
        ParameterNode(pos=(646, 655), value='setConfs'),
      ]),
      ReservedwordNode(pos=(655, 656), word=';'),
      ReservedwordNode(pos=(657, 659), word='do'),
      ListNode(pos=(662, 690), parts=[
          CommandNode(pos=(662, 689), parts=[
            WordNode(pos=(662, 666), word='grep'),
            WordNode(pos=(667, 669), word='-q'),
            WordNode(pos=(670, 681), word='^$confV$', parts=[
              ParameterNode(pos=(672, 678), value='confV'),
            ]),
            WordNode(pos=(682, 689), word='.config'),
          ]),
          OperatorNode(op=';', pos=(689, 690)),
        ]),
      ReservedwordNode(pos=(692, 696), word='done'),
    ]),
  ], pos=(633, 696)),
  OperatorNode(op=';', pos=(696, 697)),
])


724) grep -q "^$confV\$" .config

CommandNode(pos=(662, 689), parts=[
  WordNode(pos=(662, 666), word='grep'),
  WordNode(pos=(667, 669), word='-q'),
  WordNode(pos=(670, 681), word='^$confV$', parts=[
    ParameterNode(pos=(672, 678), value='confV'),
  ]),
  WordNode(pos=(682, 689), word='.config'),
])


725) ln -vL    "../buildroot/system/skeleton/etc/$f"    "rootfs/etc/$f"

CommandNode(pos=(67, 133), parts=[
  WordNode(pos=(67, 69), word='ln'),
  WordNode(pos=(70, 73), word='-vL'),
  WordNode(pos=(77, 114), word='../buildroot/system/skeleton/etc/$f', parts=[
    ParameterNode(pos=(111, 113), value='f'),
  ]),
  WordNode(pos=(118, 133), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(130, 132), value='f'),
  ]),
])


726) ln -vL    "../buildroot/system/skeleton/etc/$f"    "rootfs/etc/$f"

CommandNode(pos=(67, 133), parts=[
  WordNode(pos=(67, 69), word='ln'),
  WordNode(pos=(70, 73), word='-vL'),
  WordNode(pos=(77, 114), word='../buildroot/system/skeleton/etc/$f', parts=[
    ParameterNode(pos=(111, 113), value='f'),
  ]),
  WordNode(pos=(118, 133), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(130, 132), value='f'),
  ]),
])


727) user="${userHome%%=*}"

CommandNode(pos=(102, 124), parts=[
  AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
    ParameterNode(pos=(108, 123), value='userHome%%=*'),
  ]),
])


728) home="${userHome#*=}"

CommandNode(pos=(128, 149), parts=[
  AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
    ParameterNode(pos=(134, 148), value='userHome#*='),
  ]),
])


729) home="./${home#/}"

CommandNode(pos=(153, 171), parts=[
  AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
    ParameterNode(pos=(161, 170), value='home#/'),
  ]),
])


730) [ ! -d "$home" ]

CommandNode(pos=(178, 194), parts=[
  WordNode(pos=(178, 179), word='['),
  WordNode(pos=(180, 181), word='!'),
  WordNode(pos=(182, 184), word='-d'),
  WordNode(pos=(185, 192), word='$home', parts=[
    ParameterNode(pos=(186, 191), value='home'),
  ]),
  WordNode(pos=(193, 194), word=']'),
])


731) mkdir -p "$home"

CommandNode(pos=(204, 220), parts=[
  WordNode(pos=(204, 209), word='mkdir'),
  WordNode(pos=(210, 212), word='-p'),
  WordNode(pos=(213, 220), word='$home', parts=[
    ParameterNode(pos=(214, 219), value='home'),
  ]),
])


732) chown "$user" "$home"

CommandNode(pos=(225, 246), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 238), word='$user', parts=[
    ParameterNode(pos=(232, 237), value='user'),
  ]),
  WordNode(pos=(239, 246), word='$home', parts=[
    ParameterNode(pos=(240, 245), value='home'),
  ]),
])


733) chown "$user" "$home"

CommandNode(pos=(225, 246), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 238), word='$user', parts=[
    ParameterNode(pos=(232, 237), value='user'),
  ]),
  WordNode(pos=(239, 246), word='$home', parts=[
    ParameterNode(pos=(240, 245), value='home'),
  ]),
])


734) chmod 755 "$home"

CommandNode(pos=(251, 268), parts=[
  WordNode(pos=(251, 256), word='chmod'),
  WordNode(pos=(257, 260), word='755'),
  WordNode(pos=(261, 268), word='$home', parts=[
    ParameterNode(pos=(262, 267), value='home'),
  ]),
])


735) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


736) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


737) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


738) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


739) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


740) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


741) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


742) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


743) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


744) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


745) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


746) mkdir -p "$HTTPD_PREFIX"

CommandNode(pos=(0, 24), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 24), word='$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(10, 23), value='HTTPD_PREFIX'),
  ]),
])


747) chown www-data:www-data "$HTTPD_PREFIX"

CommandNode(pos=(29, 68), parts=[
  WordNode(pos=(29, 34), word='chown'),
  WordNode(pos=(35, 52), word='www-data:www-data'),
  WordNode(pos=(53, 68), word='$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(54, 67), value='HTTPD_PREFIX'),
  ]),
])


748) apk add --no-cache --virtual .build-deps   $runDeps   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gnupg   libc-dev   curl-dev   jansson-dev   libxml2-dev   lua-dev   make   nghttp2-dev   openssl   openssl-dev   pcre-dev   tar   zlib-dev

CommandNode(pos=(75, 319), parts=[
  WordNode(pos=(75, 78), word='apk'),
  WordNode(pos=(79, 82), word='add'),
  WordNode(pos=(83, 93), word='--no-cache'),
  WordNode(pos=(94, 103), word='--virtual'),
  WordNode(pos=(104, 115), word='.build-deps'),
  WordNode(pos=(118, 126), word='$runDeps', parts=[
    ParameterNode(pos=(118, 126), value='runDeps'),
  ]),
  WordNode(pos=(129, 144), word='ca-certificates'),
  WordNode(pos=(147, 156), word='coreutils'),
  WordNode(pos=(159, 167), word='dpkg-dev'),
  WordNode(pos=(168, 172), word='dpkg'),
  WordNode(pos=(175, 178), word='gcc'),
  WordNode(pos=(181, 186), word='gnupg'),
  WordNode(pos=(189, 197), word='libc-dev'),
  WordNode(pos=(200, 208), word='curl-dev'),
  WordNode(pos=(211, 222), word='jansson-dev'),
  WordNode(pos=(225, 236), word='libxml2-dev'),
  WordNode(pos=(239, 246), word='lua-dev'),
  WordNode(pos=(249, 253), word='make'),
  WordNode(pos=(256, 267), word='nghttp2-dev'),
  WordNode(pos=(270, 277), word='openssl'),
  WordNode(pos=(280, 291), word='openssl-dev'),
  WordNode(pos=(294, 302), word='pcre-dev'),
  WordNode(pos=(305, 308), word='tar'),
  WordNode(pos=(311, 319), word='zlib-dev'),
])


749) local f="$1"

CommandNode(pos=(337, 349), parts=[
  WordNode(pos=(337, 342), word='local'),
  WordNode(pos=(343, 349), word='f=$1', parts=[
    ParameterNode(pos=(346, 348), value='1'),
  ]),
])


750) local distFile="$1"

CommandNode(pos=(360, 379), parts=[
  WordNode(pos=(360, 365), word='local'),
  WordNode(pos=(366, 379), word='distFile=$1', parts=[
    ParameterNode(pos=(376, 378), value='1'),
  ]),
])


751) set -eux;   runDeps='   apr-dev   apr-util-dev   apr-util-ldap   perl  ';  apk add --no-cache --virtual .build-deps   $runDeps   ca-certificates   coreutils   dpkg-dev dpkg   gcc   gnupg   libc-dev   curl-dev   jansson-dev   libxml2-dev   lua-dev   make   nghttp2-dev   openssl   openssl-dev   pcre-dev   tar   zlib-dev  ;   ddist() {   local f="$1"; shift;   local distFile="$1"; shift;   local success=;   local distUrl=;   for distUrl in $APACHE_DIST_URLS; do    if wget -O "$f" "$distUrl$distFile" && [ -s "$f" ]; then     success=1;     break;    fi;   done;   [ -n "$success" ];  };   ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2";  echo "$HTTPD_SHA256 *httpd.tar.bz2" | sha256sum -c -;   ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc";  export GNUPGHOME="$(mktemp -d)";  for key in   A93D62ECC3C8EA12DB220EC934EA76E6791485A8   B9E8213AEFB861AF35A41F2C995E35221AD84DFF  ; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME" httpd.tar.bz2.asc;   mkdir -p src;  tar -xf httpd.tar.bz2 -C src --strip-components=1;  rm httpd.tar.bz2;  cd src;   patches() {   while [ "$#" -gt 0 ]; do    local patchFile="$1"; shift;    local patchSha256="$1"; shift;    ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile";    echo "$patchSha256 *$patchFile" | sha256sum -c -;    patch -p0 < "$patchFile";    rm -f "$patchFile";   done;  };  patches $HTTPD_PATCHES;   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all  ;  make -j "$(nproc)";  make install;   cd ..;  rm -r src man manual;   sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"  ;   runDeps="$runDeps $(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --virtual .httpd-rundeps $runDeps;  apk del .build-deps;   httpd -v

ListNode(pos=(0, 2343), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 72), parts=[
    AssignmentNode(pos=(12, 72), word='runDeps=   apr-dev   apr-util-dev   apr-util-ldap   perl  '),
  ]),
  OperatorNode(op=';', pos=(72, 73)),
  CommandNode(pos=(75, 319), parts=[
    WordNode(pos=(75, 78), word='apk'),
    WordNode(pos=(79, 82), word='add'),
    WordNode(pos=(83, 93), word='--no-cache'),
    WordNode(pos=(94, 103), word='--virtual'),
    WordNode(pos=(104, 115), word='.build-deps'),
    WordNode(pos=(118, 126), word='$runDeps', parts=[
      ParameterNode(pos=(118, 126), value='runDeps'),
    ]),
    WordNode(pos=(129, 144), word='ca-certificates'),
    WordNode(pos=(147, 156), word='coreutils'),
    WordNode(pos=(159, 167), word='dpkg-dev'),
    WordNode(pos=(168, 172), word='dpkg'),
    WordNode(pos=(175, 178), word='gcc'),
    WordNode(pos=(181, 186), word='gnupg'),
    WordNode(pos=(189, 197), word='libc-dev'),
    WordNode(pos=(200, 208), word='curl-dev'),
    WordNode(pos=(211, 222), word='jansson-dev'),
    WordNode(pos=(225, 236), word='libxml2-dev'),
    WordNode(pos=(239, 246), word='lua-dev'),
    WordNode(pos=(249, 253), word='make'),
    WordNode(pos=(256, 267), word='nghttp2-dev'),
    WordNode(pos=(270, 277), word='openssl'),
    WordNode(pos=(280, 291), word='openssl-dev'),
    WordNode(pos=(294, 302), word='pcre-dev'),
    WordNode(pos=(305, 308), word='tar'),
    WordNode(pos=(311, 319), word='zlib-dev'),
  ]),
  OperatorNode(op=';', pos=(321, 322)),
  FunctionNode(pos=(325, 587), parts=[
    WordNode(pos=(325, 330), word='ddist'),
    ReservedwordNode(pos=(330, 331), word='('),
    ReservedwordNode(pos=(331, 332), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(333, 334), word='{'),
      ListNode(pos=(337, 584), parts=[
          CommandNode(pos=(337, 349), parts=[
            WordNode(pos=(337, 342), word='local'),
            WordNode(pos=(343, 349), word='f=$1', parts=[
              ParameterNode(pos=(346, 348), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(349, 350)),
          CommandNode(pos=(351, 356), parts=[
            WordNode(pos=(351, 356), word='shift'),
          ]),
          OperatorNode(op=';', pos=(356, 357)),
          CommandNode(pos=(360, 379), parts=[
            WordNode(pos=(360, 365), word='local'),
            WordNode(pos=(366, 379), word='distFile=$1', parts=[
              ParameterNode(pos=(376, 378), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(381, 386), parts=[
            WordNode(pos=(381, 386), word='shift'),
          ]),
          OperatorNode(op=';', pos=(386, 387)),
          CommandNode(pos=(390, 404), parts=[
            WordNode(pos=(390, 395), word='local'),
            WordNode(pos=(396, 404), word='success='),
          ]),
          OperatorNode(op=';', pos=(404, 405)),
          CommandNode(pos=(408, 422), parts=[
            WordNode(pos=(408, 413), word='local'),
            WordNode(pos=(414, 422), word='distUrl='),
          ]),
          OperatorNode(op=';', pos=(422, 423)),
          CompoundNode(list=[
            ForNode(pos=(426, 562), parts=[
              ReservedwordNode(pos=(426, 429), word='for'),
              WordNode(pos=(430, 437), word='distUrl'),
              ReservedwordNode(pos=(438, 440), word='in'),
              WordNode(pos=(441, 458), word='$APACHE_DIST_URLS', parts=[
                ParameterNode(pos=(441, 458), value='APACHE_DIST_URLS'),
              ]),
              ReservedwordNode(pos=(458, 459), word=';'),
              ReservedwordNode(pos=(460, 462), word='do'),
              ListNode(pos=(466, 555), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(466, 554), parts=[
                      ReservedwordNode(pos=(466, 468), word='if'),
                      ListNode(pos=(469, 517), parts=[
                          CommandNode(pos=(469, 501), parts=[
                            WordNode(pos=(469, 473), word='wget'),
                            WordNode(pos=(474, 476), word='-O'),
                            WordNode(pos=(477, 481), word='$f', parts=[
                              ParameterNode(pos=(478, 480), value='f'),
                            ]),
                            WordNode(pos=(482, 501), word='$distUrl$distFile', parts=[
                              ParameterNode(pos=(483, 491), value='distUrl'),
                              ParameterNode(pos=(491, 500), value='distFile'),
                            ]),
                          ]),
                          OperatorNode(op='&&', pos=(502, 504)),
                          CommandNode(pos=(505, 516), parts=[
                            WordNode(pos=(505, 506), word='['),
                            WordNode(pos=(507, 509), word='-s'),
                            WordNode(pos=(510, 514), word='$f', parts=[
                              ParameterNode(pos=(511, 513), value='f'),
                            ]),
                            WordNode(pos=(515, 516), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(516, 517)),
                        ]),
                      ReservedwordNode(pos=(518, 522), word='then'),
                      ListNode(pos=(527, 548), parts=[
                          CommandNode(pos=(527, 536), parts=[
                            AssignmentNode(pos=(527, 536), word='success=1'),
                          ]),
                          OperatorNode(op=';', pos=(536, 537)),
                          CommandNode(pos=(542, 547), parts=[
                            WordNode(pos=(542, 547), word='break'),
                          ]),
                          OperatorNode(op=';', pos=(547, 548)),
                        ]),
                      ReservedwordNode(pos=(552, 554), word='fi'),
                    ]),
                  ], pos=(466, 554)),
                  OperatorNode(op=';', pos=(554, 555)),
                ]),
              ReservedwordNode(pos=(558, 562), word='done'),
            ]),
          ], pos=(426, 562)),
          OperatorNode(op=';', pos=(562, 563)),
          CommandNode(pos=(566, 583), parts=[
            WordNode(pos=(566, 567), word='['),
            WordNode(pos=(568, 570), word='-n'),
            WordNode(pos=(571, 581), word='$success', parts=[
              ParameterNode(pos=(572, 580), value='success'),
            ]),
            WordNode(pos=(582, 583), word=']'),
          ]),
          OperatorNode(op=';', pos=(583, 584)),
        ]),
      ReservedwordNode(pos=(586, 587), word='}'),
    ], pos=(333, 587)),
  ]),
  OperatorNode(op=';', pos=(587, 588)),
  CommandNode(pos=(591, 649), parts=[
    WordNode(pos=(591, 596), word='ddist'),
    WordNode(pos=(597, 612), word='httpd.tar.bz2'),
    WordNode(pos=(613, 649), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
      ParameterNode(pos=(626, 640), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 704), parts=[
    CommandNode(pos=(652, 687), parts=[
      WordNode(pos=(652, 656), word='echo'),
      WordNode(pos=(657, 687), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
        ParameterNode(pos=(658, 671), value='HTTPD_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(688, 689)),
    CommandNode(pos=(690, 704), parts=[
      WordNode(pos=(690, 699), word='sha256sum'),
      WordNode(pos=(700, 702), word='-c'),
      WordNode(pos=(703, 704), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(704, 705)),
  CommandNode(pos=(708, 774), parts=[
    WordNode(pos=(708, 713), word='ddist'),
    WordNode(pos=(714, 733), word='httpd.tar.bz2.asc'),
    WordNode(pos=(734, 774), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
      ParameterNode(pos=(747, 761), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(774, 775)),
  CommandNode(pos=(777, 808), parts=[
    WordNode(pos=(777, 783), word='export'),
    WordNode(pos=(784, 808), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(797, 806), parts=[
          WordNode(pos=(797, 803), word='mktemp'),
          WordNode(pos=(804, 806), word='-d'),
        ]), pos=(795, 807)),
    ]),
  ]),
  OperatorNode(op=';', pos=(808, 809)),
  CompoundNode(list=[
    ForNode(pos=(811, 992), parts=[
      ReservedwordNode(pos=(811, 814), word='for'),
      WordNode(pos=(815, 818), word='key'),
      ReservedwordNode(pos=(819, 821), word='in'),
      WordNode(pos=(824, 864), word='A93D62ECC3C8EA12DB220EC934EA76E6791485A8'),
      WordNode(pos=(867, 907), word='B9E8213AEFB861AF35A41F2C995E35221AD84DFF'),
      ReservedwordNode(pos=(909, 910), word=';'),
      ReservedwordNode(pos=(911, 913), word='do'),
      ListNode(pos=(916, 986), parts=[
          CommandNode(pos=(916, 985), parts=[
            WordNode(pos=(916, 919), word='gpg'),
            WordNode(pos=(920, 927), word='--batch'),
            WordNode(pos=(928, 939), word='--keyserver'),
            WordNode(pos=(940, 966), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(967, 978), word='--recv-keys'),
            WordNode(pos=(979, 985), word='$key', parts=[
              ParameterNode(pos=(980, 984), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(985, 986)),
        ]),
      ReservedwordNode(pos=(988, 992), word='done'),
    ]),
  ], pos=(811, 992)),
  OperatorNode(op=';', pos=(992, 993)),
  CommandNode(pos=(995, 1047), parts=[
    WordNode(pos=(995, 998), word='gpg'),
    WordNode(pos=(999, 1006), word='--batch'),
    WordNode(pos=(1007, 1015), word='--verify'),
    WordNode(pos=(1016, 1033), word='httpd.tar.bz2.asc'),
    WordNode(pos=(1034, 1047), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1047, 1048)),
  CommandNode(pos=(1050, 1068), parts=[
    WordNode(pos=(1050, 1057), word='command'),
    WordNode(pos=(1058, 1060), word='-v'),
    WordNode(pos=(1061, 1068), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(1069, 1071)),
  CommandNode(pos=(1072, 1090), parts=[
    WordNode(pos=(1072, 1079), word='gpgconf'),
    WordNode(pos=(1080, 1086), word='--kill'),
    WordNode(pos=(1087, 1090), word='all'),
  ]),
  OperatorNode(op='||', pos=(1091, 1093)),
  CommandNode(pos=(1094, 1095), parts=[
    WordNode(pos=(1094, 1095), word=':'),
  ]),
  OperatorNode(op=';', pos=(1095, 1096)),
  CommandNode(pos=(1098, 1135), parts=[
    WordNode(pos=(1098, 1100), word='rm'),
    WordNode(pos=(1101, 1104), word='-rf'),
    WordNode(pos=(1105, 1117), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(1106, 1116), value='GNUPGHOME'),
    ]),
    WordNode(pos=(1118, 1135), word='httpd.tar.bz2.asc'),
  ]),
  OperatorNode(op=';', pos=(1135, 1136)),
  CommandNode(pos=(1139, 1151), parts=[
    WordNode(pos=(1139, 1144), word='mkdir'),
    WordNode(pos=(1145, 1147), word='-p'),
    WordNode(pos=(1148, 1151), word='src'),
  ]),
  OperatorNode(op=';', pos=(1151, 1152)),
  CommandNode(pos=(1154, 1203), parts=[
    WordNode(pos=(1154, 1157), word='tar'),
    WordNode(pos=(1158, 1161), word='-xf'),
    WordNode(pos=(1162, 1175), word='httpd.tar.bz2'),
    WordNode(pos=(1176, 1178), word='-C'),
    WordNode(pos=(1179, 1182), word='src'),
    WordNode(pos=(1183, 1203), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1203, 1204)),
  CommandNode(pos=(1206, 1222), parts=[
    WordNode(pos=(1206, 1208), word='rm'),
    WordNode(pos=(1209, 1222), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1222, 1223)),
  CommandNode(pos=(1225, 1231), parts=[
    WordNode(pos=(1225, 1227), word='cd'),
    WordNode(pos=(1228, 1231), word='src'),
  ]),
  OperatorNode(op=';', pos=(1231, 1232)),
  FunctionNode(pos=(1235, 1529), parts=[
    WordNode(pos=(1235, 1242), word='patches'),
    ReservedwordNode(pos=(1242, 1243), word='('),
    ReservedwordNode(pos=(1243, 1244), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(1245, 1246), word='{'),
      ListNode(pos=(1249, 1526), parts=[
          CompoundNode(list=[
            WhileNode(pos=(1249, 1525), parts=[
              ReservedwordNode(pos=(1249, 1254), word='while'),
              ListNode(pos=(1255, 1270), parts=[
                  CommandNode(pos=(1255, 1269), parts=[
                    WordNode(pos=(1255, 1256), word='['),
                    WordNode(pos=(1257, 1261), word='$#', parts=[
                      ParameterNode(pos=(1258, 1260), value='#'),
                    ]),
                    WordNode(pos=(1262, 1265), word='-gt'),
                    WordNode(pos=(1266, 1267), word='0'),
                    WordNode(pos=(1268, 1269), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(1269, 1270)),
                ]),
              ReservedwordNode(pos=(1271, 1273), word='do'),
              ListNode(pos=(1277, 1518), parts=[
                  CommandNode(pos=(1277, 1297), parts=[
                    WordNode(pos=(1277, 1282), word='local'),
                    WordNode(pos=(1283, 1297), word='patchFile=$1', parts=[
                      ParameterNode(pos=(1294, 1296), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1297, 1298)),
                  CommandNode(pos=(1299, 1304), parts=[
                    WordNode(pos=(1299, 1304), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1304, 1305)),
                  CommandNode(pos=(1309, 1331), parts=[
                    WordNode(pos=(1309, 1314), word='local'),
                    WordNode(pos=(1315, 1331), word='patchSha256=$1', parts=[
                      ParameterNode(pos=(1328, 1330), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1331, 1332)),
                  CommandNode(pos=(1333, 1338), parts=[
                    WordNode(pos=(1333, 1338), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1338, 1339)),
                  CommandNode(pos=(1343, 1412), parts=[
                    WordNode(pos=(1343, 1348), word='ddist'),
                    WordNode(pos=(1349, 1361), word='$patchFile', parts=[
                      ParameterNode(pos=(1350, 1360), value='patchFile'),
                    ]),
                    WordNode(pos=(1362, 1412), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
                      ParameterNode(pos=(1386, 1400), value='HTTPD_VERSION'),
                      ParameterNode(pos=(1401, 1411), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1412, 1413)),
                  PipelineNode(pos=(1417, 1465), parts=[
                    CommandNode(pos=(1417, 1448), parts=[
                      WordNode(pos=(1417, 1421), word='echo'),
                      WordNode(pos=(1422, 1448), word='$patchSha256 *$patchFile', parts=[
                        ParameterNode(pos=(1423, 1435), value='patchSha256'),
                        ParameterNode(pos=(1437, 1447), value='patchFile'),
                      ]),
                    ]),
                    PipeNode(pipe='|', pos=(1449, 1450)),
                    CommandNode(pos=(1451, 1465), parts=[
                      WordNode(pos=(1451, 1460), word='sha256sum'),
                      WordNode(pos=(1461, 1463), word='-c'),
                      WordNode(pos=(1464, 1465), word='-'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1465, 1466)),
                  CommandNode(pos=(1470, 1494), parts=[
                    WordNode(pos=(1470, 1475), word='patch'),
                    WordNode(pos=(1476, 1479), word='-p0'),
                    RedirectNode(output=
                      WordNode(pos=(1482, 1494), word='$patchFile', parts=[
                        ParameterNode(pos=(1483, 1493), value='patchFile'),
                      ]), pos=(1480, 1494), type='<'),
                  ]),
                  OperatorNode(op=';', pos=(1494, 1495)),
                  CommandNode(pos=(1499, 1517), parts=[
                    WordNode(pos=(1499, 1501), word='rm'),
                    WordNode(pos=(1502, 1504), word='-f'),
                    WordNode(pos=(1505, 1517), word='$patchFile', parts=[
                      ParameterNode(pos=(1506, 1516), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1517, 1518)),
                ]),
              ReservedwordNode(pos=(1521, 1525), word='done'),
            ]),
          ], pos=(1249, 1525)),
          OperatorNode(op=';', pos=(1525, 1526)),
        ]),
      ReservedwordNode(pos=(1528, 1529), word='}'),
    ], pos=(1245, 1529)),
  ]),
  OperatorNode(op=';', pos=(1529, 1530)),
  CommandNode(pos=(1532, 1554), parts=[
    WordNode(pos=(1532, 1539), word='patches'),
    WordNode(pos=(1540, 1554), word='$HTTPD_PATCHES', parts=[
      ParameterNode(pos=(1540, 1554), value='HTTPD_PATCHES'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1554, 1555)),
  CommandNode(pos=(1558, 1615), parts=[
    AssignmentNode(pos=(1558, 1615), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1569, 1613), parts=[
          WordNode(pos=(1569, 1586), word='dpkg-architecture'),
          WordNode(pos=(1587, 1594), word='--query'),
          WordNode(pos=(1595, 1613), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1567, 1614)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1615, 1616)),
  CommandNode(pos=(1618, 1737), parts=[
    WordNode(pos=(1618, 1629), word='./configure'),
    WordNode(pos=(1632, 1650), word='--build=$gnuArch', parts=[
      ParameterNode(pos=(1641, 1649), value='gnuArch'),
    ]),
    WordNode(pos=(1653, 1677), word='--prefix=$HTTPD_PREFIX', parts=[
      ParameterNode(pos=(1663, 1676), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(1680, 1710), word='--enable-mods-shared=reallyall'),
    WordNode(pos=(1713, 1737), word='--enable-mpms-shared=all'),
  ]),
  OperatorNode(op=';', pos=(1739, 1740)),
  CommandNode(pos=(1742, 1760), parts=[
    WordNode(pos=(1742, 1746), word='make'),
    WordNode(pos=(1747, 1749), word='-j'),
    WordNode(pos=(1750, 1760), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1753, 1758), parts=[
          WordNode(pos=(1753, 1758), word='nproc'),
        ]), pos=(1751, 1759)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1760, 1761)),
  CommandNode(pos=(1763, 1775), parts=[
    WordNode(pos=(1763, 1767), word='make'),
    WordNode(pos=(1768, 1775), word='install'),
  ]),
  OperatorNode(op=';', pos=(1775, 1776)),
  CommandNode(pos=(1779, 1784), parts=[
    WordNode(pos=(1779, 1781), word='cd'),
    WordNode(pos=(1782, 1784), word='..'),
  ]),
  OperatorNode(op=';', pos=(1784, 1785)),
  CommandNode(pos=(1787, 1807), parts=[
    WordNode(pos=(1787, 1789), word='rm'),
    WordNode(pos=(1790, 1792), word='-r'),
    WordNode(pos=(1793, 1796), word='src'),
    WordNode(pos=(1797, 1800), word='man'),
    WordNode(pos=(1801, 1807), word='manual'),
  ]),
  OperatorNode(op=';', pos=(1807, 1808)),
  CommandNode(pos=(1811, 2053), parts=[
    WordNode(pos=(1811, 1814), word='sed'),
    WordNode(pos=(1815, 1818), word='-ri'),
    WordNode(pos=(1821, 1823), word='-e'),
    WordNode(pos=(1824, 1870), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(1873, 1875), word='-e'),
    WordNode(pos=(1876, 1921), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
    WordNode(pos=(1924, 1926), word='-e'),
    WordNode(pos=(1927, 1975), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(1978, 2009), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
      ParameterNode(pos=(1979, 1992), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(2012, 2053), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
      ParameterNode(pos=(2013, 2026), value='HTTPD_PREFIX'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2055, 2056)),
  CommandNode(pos=(2059, 2265), parts=[
    AssignmentNode(pos=(2059, 2265), word='runDeps=$runDeps $(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      ParameterNode(pos=(2068, 2076), value='runDeps'),
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2082, 2261), parts=[
          CommandNode(pos=(2082, 2148), parts=[
            WordNode(pos=(2082, 2089), word='scanelf'),
            WordNode(pos=(2090, 2098), word='--needed'),
            WordNode(pos=(2099, 2109), word='--nobanner'),
            WordNode(pos=(2110, 2118), word='--format'),
            WordNode(pos=(2119, 2125), word='%n#p'),
            WordNode(pos=(2126, 2137), word='--recursive'),
            WordNode(pos=(2138, 2148), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(2152, 2153)),
          CommandNode(pos=(2154, 2165), parts=[
            WordNode(pos=(2154, 2156), word='tr'),
            WordNode(pos=(2157, 2160), word=','),
            WordNode(pos=(2161, 2165), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(2169, 2170)),
          CommandNode(pos=(2171, 2178), parts=[
            WordNode(pos=(2171, 2175), word='sort'),
            WordNode(pos=(2176, 2178), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(2182, 2183)),
          CommandNode(pos=(2184, 2261), parts=[
            WordNode(pos=(2184, 2187), word='awk'),
            WordNode(pos=(2188, 2261), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2077, 2262)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2265, 2266)),
  CommandNode(pos=(2268, 2309), parts=[
    WordNode(pos=(2268, 2271), word='apk'),
    WordNode(pos=(2272, 2275), word='add'),
    WordNode(pos=(2276, 2285), word='--virtual'),
    WordNode(pos=(2286, 2300), word='.httpd-rundeps'),
    WordNode(pos=(2301, 2309), word='$runDeps', parts=[
      ParameterNode(pos=(2301, 2309), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2309, 2310)),
  CommandNode(pos=(2312, 2331), parts=[
    WordNode(pos=(2312, 2315), word='apk'),
    WordNode(pos=(2316, 2319), word='del'),
    WordNode(pos=(2320, 2331), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(2331, 2332)),
  CommandNode(pos=(2335, 2343), parts=[
    WordNode(pos=(2335, 2340), word='httpd'),
    WordNode(pos=(2341, 2343), word='-v'),
  ]),
])


752) wget -O "$f" "$distUrl$distFile"

CommandNode(pos=(469, 501), parts=[
  WordNode(pos=(469, 473), word='wget'),
  WordNode(pos=(474, 476), word='-O'),
  WordNode(pos=(477, 481), word='$f', parts=[
    ParameterNode(pos=(478, 480), value='f'),
  ]),
  WordNode(pos=(482, 501), word='$distUrl$distFile', parts=[
    ParameterNode(pos=(483, 491), value='distUrl'),
    ParameterNode(pos=(491, 500), value='distFile'),
  ]),
])


753) wget -O "$f" "$distUrl$distFile"

CommandNode(pos=(469, 501), parts=[
  WordNode(pos=(469, 473), word='wget'),
  WordNode(pos=(474, 476), word='-O'),
  WordNode(pos=(477, 481), word='$f', parts=[
    ParameterNode(pos=(478, 480), value='f'),
  ]),
  WordNode(pos=(482, 501), word='$distUrl$distFile', parts=[
    ParameterNode(pos=(483, 491), value='distUrl'),
    ParameterNode(pos=(491, 500), value='distFile'),
  ]),
])


754) wget -O "$f" "$distUrl$distFile"

CommandNode(pos=(469, 501), parts=[
  WordNode(pos=(469, 473), word='wget'),
  WordNode(pos=(474, 476), word='-O'),
  WordNode(pos=(477, 481), word='$f', parts=[
    ParameterNode(pos=(478, 480), value='f'),
  ]),
  WordNode(pos=(482, 501), word='$distUrl$distFile', parts=[
    ParameterNode(pos=(483, 491), value='distUrl'),
    ParameterNode(pos=(491, 500), value='distFile'),
  ]),
])


755) [ -s "$f" ]

CommandNode(pos=(505, 516), parts=[
  WordNode(pos=(505, 506), word='['),
  WordNode(pos=(507, 509), word='-s'),
  WordNode(pos=(510, 514), word='$f', parts=[
    ParameterNode(pos=(511, 513), value='f'),
  ]),
  WordNode(pos=(515, 516), word=']'),
])


756) [ -n "$success" ]

CommandNode(pos=(566, 583), parts=[
  WordNode(pos=(566, 567), word='['),
  WordNode(pos=(568, 570), word='-n'),
  WordNode(pos=(571, 581), word='$success', parts=[
    ParameterNode(pos=(572, 580), value='success'),
  ]),
  WordNode(pos=(582, 583), word=']'),
])


757) ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2"

CommandNode(pos=(591, 649), parts=[
  WordNode(pos=(591, 596), word='ddist'),
  WordNode(pos=(597, 612), word='httpd.tar.bz2'),
  WordNode(pos=(613, 649), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(626, 640), value='HTTPD_VERSION'),
  ]),
])


758) echo "$HTTPD_SHA256 *httpd.tar.bz2"

CommandNode(pos=(652, 687), parts=[
  WordNode(pos=(652, 656), word='echo'),
  WordNode(pos=(657, 687), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
    ParameterNode(pos=(658, 671), value='HTTPD_SHA256'),
  ]),
])


759) ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc"

CommandNode(pos=(708, 774), parts=[
  WordNode(pos=(708, 713), word='ddist'),
  WordNode(pos=(714, 733), word='httpd.tar.bz2.asc'),
  WordNode(pos=(734, 774), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
    ParameterNode(pos=(747, 761), value='HTTPD_VERSION'),
  ]),
])


760) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(916, 985), parts=[
  WordNode(pos=(916, 919), word='gpg'),
  WordNode(pos=(920, 927), word='--batch'),
  WordNode(pos=(928, 939), word='--keyserver'),
  WordNode(pos=(940, 966), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(967, 978), word='--recv-keys'),
  WordNode(pos=(979, 985), word='$key', parts=[
    ParameterNode(pos=(980, 984), value='key'),
  ]),
])


761) rm -rf "$GNUPGHOME" httpd.tar.bz2.asc

CommandNode(pos=(1098, 1135), parts=[
  WordNode(pos=(1098, 1100), word='rm'),
  WordNode(pos=(1101, 1104), word='-rf'),
  WordNode(pos=(1105, 1117), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(1106, 1116), value='GNUPGHOME'),
  ]),
  WordNode(pos=(1118, 1135), word='httpd.tar.bz2.asc'),
])


762) [ "$#" -gt 0 ]

CommandNode(pos=(1255, 1269), parts=[
  WordNode(pos=(1255, 1256), word='['),
  WordNode(pos=(1257, 1261), word='$#', parts=[
    ParameterNode(pos=(1258, 1260), value='#'),
  ]),
  WordNode(pos=(1262, 1265), word='-gt'),
  WordNode(pos=(1266, 1267), word='0'),
  WordNode(pos=(1268, 1269), word=']'),
])


763) local patchFile="$1"

CommandNode(pos=(1277, 1297), parts=[
  WordNode(pos=(1277, 1282), word='local'),
  WordNode(pos=(1283, 1297), word='patchFile=$1', parts=[
    ParameterNode(pos=(1294, 1296), value='1'),
  ]),
])


764) local patchSha256="$1"

CommandNode(pos=(1309, 1331), parts=[
  WordNode(pos=(1309, 1314), word='local'),
  WordNode(pos=(1315, 1331), word='patchSha256=$1', parts=[
    ParameterNode(pos=(1328, 1330), value='1'),
  ]),
])


765) ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile"

CommandNode(pos=(1343, 1412), parts=[
  WordNode(pos=(1343, 1348), word='ddist'),
  WordNode(pos=(1349, 1361), word='$patchFile', parts=[
    ParameterNode(pos=(1350, 1360), value='patchFile'),
  ]),
  WordNode(pos=(1362, 1412), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
    ParameterNode(pos=(1386, 1400), value='HTTPD_VERSION'),
    ParameterNode(pos=(1401, 1411), value='patchFile'),
  ]),
])


766) ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile"

CommandNode(pos=(1343, 1412), parts=[
  WordNode(pos=(1343, 1348), word='ddist'),
  WordNode(pos=(1349, 1361), word='$patchFile', parts=[
    ParameterNode(pos=(1350, 1360), value='patchFile'),
  ]),
  WordNode(pos=(1362, 1412), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
    ParameterNode(pos=(1386, 1400), value='HTTPD_VERSION'),
    ParameterNode(pos=(1401, 1411), value='patchFile'),
  ]),
])


767) ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile"

CommandNode(pos=(1343, 1412), parts=[
  WordNode(pos=(1343, 1348), word='ddist'),
  WordNode(pos=(1349, 1361), word='$patchFile', parts=[
    ParameterNode(pos=(1350, 1360), value='patchFile'),
  ]),
  WordNode(pos=(1362, 1412), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
    ParameterNode(pos=(1386, 1400), value='HTTPD_VERSION'),
    ParameterNode(pos=(1401, 1411), value='patchFile'),
  ]),
])


768) echo "$patchSha256 *$patchFile"

CommandNode(pos=(1417, 1448), parts=[
  WordNode(pos=(1417, 1421), word='echo'),
  WordNode(pos=(1422, 1448), word='$patchSha256 *$patchFile', parts=[
    ParameterNode(pos=(1423, 1435), value='patchSha256'),
    ParameterNode(pos=(1437, 1447), value='patchFile'),
  ]),
])


769) echo "$patchSha256 *$patchFile"

CommandNode(pos=(1417, 1448), parts=[
  WordNode(pos=(1417, 1421), word='echo'),
  WordNode(pos=(1422, 1448), word='$patchSha256 *$patchFile', parts=[
    ParameterNode(pos=(1423, 1435), value='patchSha256'),
    ParameterNode(pos=(1437, 1447), value='patchFile'),
  ]),
])


770) rm -f "$patchFile"

CommandNode(pos=(1499, 1517), parts=[
  WordNode(pos=(1499, 1501), word='rm'),
  WordNode(pos=(1502, 1504), word='-f'),
  WordNode(pos=(1505, 1517), word='$patchFile', parts=[
    ParameterNode(pos=(1506, 1516), value='patchFile'),
  ]),
])


771) patches $HTTPD_PATCHES

CommandNode(pos=(1532, 1554), parts=[
  WordNode(pos=(1532, 1539), word='patches'),
  WordNode(pos=(1540, 1554), word='$HTTPD_PATCHES', parts=[
    ParameterNode(pos=(1540, 1554), value='HTTPD_PATCHES'),
  ]),
])


772) ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all

CommandNode(pos=(1618, 1737), parts=[
  WordNode(pos=(1618, 1629), word='./configure'),
  WordNode(pos=(1632, 1650), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1641, 1649), value='gnuArch'),
  ]),
  WordNode(pos=(1653, 1677), word='--prefix=$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(1663, 1676), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(1680, 1710), word='--enable-mods-shared=reallyall'),
  WordNode(pos=(1713, 1737), word='--enable-mpms-shared=all'),
])


773) ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all

CommandNode(pos=(1618, 1737), parts=[
  WordNode(pos=(1618, 1629), word='./configure'),
  WordNode(pos=(1632, 1650), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1641, 1649), value='gnuArch'),
  ]),
  WordNode(pos=(1653, 1677), word='--prefix=$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(1663, 1676), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(1680, 1710), word='--enable-mods-shared=reallyall'),
  WordNode(pos=(1713, 1737), word='--enable-mpms-shared=all'),
])


774) sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"

CommandNode(pos=(1811, 2053), parts=[
  WordNode(pos=(1811, 1814), word='sed'),
  WordNode(pos=(1815, 1818), word='-ri'),
  WordNode(pos=(1821, 1823), word='-e'),
  WordNode(pos=(1824, 1870), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(1873, 1875), word='-e'),
  WordNode(pos=(1876, 1921), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
  WordNode(pos=(1924, 1926), word='-e'),
  WordNode(pos=(1927, 1975), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(1978, 2009), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
    ParameterNode(pos=(1979, 1992), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(2012, 2053), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
    ParameterNode(pos=(2013, 2026), value='HTTPD_PREFIX'),
  ]),
])


775) sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"

CommandNode(pos=(1811, 2053), parts=[
  WordNode(pos=(1811, 1814), word='sed'),
  WordNode(pos=(1815, 1818), word='-ri'),
  WordNode(pos=(1821, 1823), word='-e'),
  WordNode(pos=(1824, 1870), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(1873, 1875), word='-e'),
  WordNode(pos=(1876, 1921), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
  WordNode(pos=(1924, 1926), word='-e'),
  WordNode(pos=(1927, 1975), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(1978, 2009), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
    ParameterNode(pos=(1979, 1992), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(2012, 2053), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
    ParameterNode(pos=(2013, 2026), value='HTTPD_PREFIX'),
  ]),
])


776) runDeps="$runDeps $(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )"

CommandNode(pos=(2059, 2265), parts=[
  AssignmentNode(pos=(2059, 2265), word='runDeps=$runDeps $(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
    ParameterNode(pos=(2068, 2076), value='runDeps'),
    CommandsubstitutionNode(command=
      PipelineNode(pos=(2082, 2261), parts=[
        CommandNode(pos=(2082, 2148), parts=[
          WordNode(pos=(2082, 2089), word='scanelf'),
          WordNode(pos=(2090, 2098), word='--needed'),
          WordNode(pos=(2099, 2109), word='--nobanner'),
          WordNode(pos=(2110, 2118), word='--format'),
          WordNode(pos=(2119, 2125), word='%n#p'),
          WordNode(pos=(2126, 2137), word='--recursive'),
          WordNode(pos=(2138, 2148), word='/usr/local'),
        ]),
        PipeNode(pipe='|', pos=(2152, 2153)),
        CommandNode(pos=(2154, 2165), parts=[
          WordNode(pos=(2154, 2156), word='tr'),
          WordNode(pos=(2157, 2160), word=','),
          WordNode(pos=(2161, 2165), word='\\n'),
        ]),
        PipeNode(pipe='|', pos=(2169, 2170)),
        CommandNode(pos=(2171, 2178), parts=[
          WordNode(pos=(2171, 2175), word='sort'),
          WordNode(pos=(2176, 2178), word='-u'),
        ]),
        PipeNode(pipe='|', pos=(2182, 2183)),
        CommandNode(pos=(2184, 2261), parts=[
          WordNode(pos=(2184, 2187), word='awk'),
          WordNode(pos=(2188, 2261), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
        ]),
      ]), pos=(2077, 2262)),
  ]),
])


777) apk add --virtual .httpd-rundeps $runDeps

CommandNode(pos=(2268, 2309), parts=[
  WordNode(pos=(2268, 2271), word='apk'),
  WordNode(pos=(2272, 2275), word='add'),
  WordNode(pos=(2276, 2285), word='--virtual'),
  WordNode(pos=(2286, 2300), word='.httpd-rundeps'),
  WordNode(pos=(2301, 2309), word='$runDeps', parts=[
    ParameterNode(pos=(2301, 2309), value='runDeps'),
  ]),
])


778) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


779) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


780) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


781) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


782) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


783) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


784) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(469, 502), parts=[
  WordNode(pos=(469, 472), word='npm'),
  WordNode(pos=(473, 480), word='install'),
  WordNode(pos=(481, 483), word='-g'),
  WordNode(pos=(484, 502), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(489, 501), value='NPM_VERSION'),
  ]),
])


785) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


786) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


787) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


788) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


789) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


790) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


791) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget  ;  rm -rf /var/lib/apt/lists/*;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum --check --strict -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf;  ldconfig;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum --check --strict -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3761), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 200), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 90), word='--yes'),
    WordNode(pos=(91, 114), word='--no-install-recommends'),
    WordNode(pos=(117, 125), word='autoconf'),
    WordNode(pos=(128, 143), word='ca-certificates'),
    WordNode(pos=(146, 154), word='dpkg-dev'),
    WordNode(pos=(157, 160), word='gcc'),
    WordNode(pos=(163, 168), word='gnupg'),
    WordNode(pos=(171, 186), word='libncurses5-dev'),
    WordNode(pos=(189, 193), word='make'),
    WordNode(pos=(196, 200), word='wget'),
  ]),
  OperatorNode(op=';', pos=(202, 203)),
  CommandNode(pos=(205, 232), parts=[
    WordNode(pos=(205, 207), word='rm'),
    WordNode(pos=(208, 211), word='-rf'),
    WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(232, 233)),
  CommandNode(pos=(236, 319), parts=[
    AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(319, 320)),
  CommandNode(pos=(322, 376), parts=[
    AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(376, 377)),
  CommandNode(pos=(379, 416), parts=[
    AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(416, 417)),
  CommandNode(pos=(420, 515), parts=[
    WordNode(pos=(420, 424), word='wget'),
    WordNode(pos=(425, 435), word='--progress'),
    WordNode(pos=(436, 444), word='dot:giga'),
    WordNode(pos=(445, 462), word='--output-document'),
    WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(515, 516)),
  CommandNode(pos=(518, 605), parts=[
    WordNode(pos=(518, 522), word='wget'),
    WordNode(pos=(523, 533), word='--progress'),
    WordNode(pos=(534, 542), word='dot:giga'),
    WordNode(pos=(543, 560), word='--output-document'),
    WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(605, 606)),
  CommandNode(pos=(608, 639), parts=[
    WordNode(pos=(608, 614), word='export'),
    WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(628, 637), parts=[
          WordNode(pos=(628, 634), word='mktemp'),
          WordNode(pos=(635, 637), word='-d'),
        ]), pos=(626, 638)),
    ]),
  ]),
  OperatorNode(op=';', pos=(639, 640)),
  CompoundNode(list=[
    ForNode(pos=(642, 746), parts=[
      ReservedwordNode(pos=(642, 645), word='for'),
      WordNode(pos=(646, 649), word='key'),
      ReservedwordNode(pos=(650, 652), word='in'),
      WordNode(pos=(653, 673), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(653, 673), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(673, 674), word=';'),
      ReservedwordNode(pos=(675, 677), word='do'),
      ListNode(pos=(680, 740), parts=[
          CommandNode(pos=(680, 739), parts=[
            WordNode(pos=(680, 683), word='gpg'),
            WordNode(pos=(684, 691), word='--batch'),
            WordNode(pos=(692, 703), word='--keyserver'),
            WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(721, 732), word='--recv-keys'),
            WordNode(pos=(733, 739), word='$key', parts=[
              ParameterNode(pos=(734, 738), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(739, 740)),
        ]),
      ReservedwordNode(pos=(742, 746), word='done'),
    ]),
  ], pos=(642, 746)),
  OperatorNode(op=';', pos=(746, 747)),
  CommandNode(pos=(749, 819), parts=[
    WordNode(pos=(749, 752), word='gpg'),
    WordNode(pos=(753, 760), word='--batch'),
    WordNode(pos=(761, 769), word='--verify'),
    WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(819, 820)),
  CommandNode(pos=(822, 840), parts=[
    WordNode(pos=(822, 829), word='gpgconf'),
    WordNode(pos=(830, 836), word='--kill'),
    WordNode(pos=(837, 840), word='all'),
  ]),
  OperatorNode(op=';', pos=(840, 841)),
  CommandNode(pos=(843, 862), parts=[
    WordNode(pos=(843, 845), word='rm'),
    WordNode(pos=(846, 849), word='-rf'),
    WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(851, 861), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(862, 863)),
  PipelineNode(pos=(865, 947), parts=[
    CommandNode(pos=(865, 916), parts=[
      WordNode(pos=(865, 869), word='echo'),
      WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(917, 918)),
    CommandNode(pos=(919, 947), parts=[
      WordNode(pos=(919, 928), word='sha256sum'),
      WordNode(pos=(929, 936), word='--check'),
      WordNode(pos=(937, 945), word='--strict'),
      WordNode(pos=(946, 947), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(947, 948)),
  CommandNode(pos=(950, 974), parts=[
    WordNode(pos=(950, 955), word='mkdir'),
    WordNode(pos=(956, 958), word='-p'),
    WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(977, 1069), parts=[
    WordNode(pos=(977, 980), word='tar'),
    WordNode(pos=(981, 990), word='--extract'),
    WordNode(pos=(991, 997), word='--file'),
    WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1021, 1032), word='--directory'),
    WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1049, 1067), word='--strip-components'),
    WordNode(pos=(1068, 1069), word='1'),
  ]),
  OperatorNode(op=';', pos=(1069, 1070)),
  CommandNode(pos=(1073, 1091), parts=[
    WordNode(pos=(1073, 1075), word='cd'),
    WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1091, 1092)),
  CommandNode(pos=(1094, 1156), parts=[
    AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1110, 1154), parts=[
          WordNode(pos=(1110, 1127), word='dpkg-architecture'),
          WordNode(pos=(1128, 1135), word='--query'),
          WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
        ]), pos=(1108, 1155)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1156, 1157)),
  CommandNode(pos=(1159, 1337), parts=[
    AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1170, 1213), parts=[
          WordNode(pos=(1170, 1187), word='dpkg-architecture'),
          WordNode(pos=(1188, 1195), word='--query'),
          WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1168, 1214)),
    ]),
    AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
    WordNode(pos=(1265, 1273), word='./config'),
    WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
      ParameterNode(pos=(1323, 1336), value='debMultiarch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1337, 1338)),
  CommandNode(pos=(1340, 1378), parts=[
    WordNode(pos=(1340, 1344), word='make'),
    WordNode(pos=(1345, 1347), word='-j'),
    WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1351, 1376), parts=[
          WordNode(pos=(1351, 1358), word='getconf'),
          WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
        ]), pos=(1349, 1377)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1378, 1379)),
  CommandNode(pos=(1381, 1412), parts=[
    WordNode(pos=(1381, 1385), word='make'),
    WordNode(pos=(1386, 1396), word='install_sw'),
    WordNode(pos=(1397, 1412), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1412, 1413)),
  CommandNode(pos=(1415, 1420), parts=[
    WordNode(pos=(1415, 1417), word='cd'),
    WordNode(pos=(1418, 1420), word='..'),
  ]),
  OperatorNode(op=';', pos=(1420, 1421)),
  CommandNode(pos=(1423, 1446), parts=[
    WordNode(pos=(1423, 1425), word='rm'),
    WordNode(pos=(1426, 1429), word='-rf'),
    WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1446, 1447)),
  CommandNode(pos=(1449, 1512), parts=[
    WordNode(pos=(1449, 1453), word='echo'),
    WordNode(pos=(1454, 1470), word='/usr/local/lib'),
    RedirectNode(output=
      WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
  ]),
  OperatorNode(op=';', pos=(1512, 1513)),
  CommandNode(pos=(1515, 1523), parts=[
    WordNode(pos=(1515, 1523), word='ldconfig'),
  ]),
  OperatorNode(op=';', pos=(1523, 1524)),
  CommandNode(pos=(1526, 1589), parts=[
    WordNode(pos=(1526, 1531), word='rmdir'),
    WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1589, 1590)),
  CommandNode(pos=(1592, 1652), parts=[
    WordNode(pos=(1592, 1594), word='ln'),
    WordNode(pos=(1595, 1598), word='-sf'),
    WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
    WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
    WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1652, 1653)),
  CommandNode(pos=(1655, 1670), parts=[
    WordNode(pos=(1655, 1662), word='openssl'),
    WordNode(pos=(1663, 1670), word='version'),
  ]),
  OperatorNode(op=';', pos=(1670, 1671)),
  CommandNode(pos=(1674, 1752), parts=[
    AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1752, 1753)),
  CommandNode(pos=(1755, 1797), parts=[
    AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1797, 1798)),
  CommandNode(pos=(1801, 1821), parts=[
    WordNode(pos=(1801, 1806), word='mkdir'),
    WordNode(pos=(1807, 1809), word='-p'),
    WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1821, 1822)),
  CommandNode(pos=(1824, 1903), parts=[
    WordNode(pos=(1824, 1828), word='wget'),
    WordNode(pos=(1829, 1839), word='--progress'),
    WordNode(pos=(1840, 1848), word='dot:giga'),
    WordNode(pos=(1849, 1866), word='--output-document'),
    WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
    ]),
    WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1903, 1904)),
  PipelineNode(pos=(1906, 1980), parts=[
    CommandNode(pos=(1906, 1949), parts=[
      WordNode(pos=(1906, 1910), word='echo'),
      WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1950, 1951)),
    CommandNode(pos=(1952, 1980), parts=[
      WordNode(pos=(1952, 1961), word='sha256sum'),
      WordNode(pos=(1962, 1969), word='--check'),
      WordNode(pos=(1970, 1978), word='--strict'),
      WordNode(pos=(1979, 1980), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1980, 1981)),
  CommandNode(pos=(1983, 2067), parts=[
    WordNode(pos=(1983, 1986), word='tar'),
    WordNode(pos=(1987, 1996), word='--extract'),
    WordNode(pos=(1997, 2003), word='--file'),
    WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
    ]),
    WordNode(pos=(2023, 2034), word='--directory'),
    WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
    ]),
    WordNode(pos=(2047, 2065), word='--strip-components'),
    WordNode(pos=(2066, 2067), word='1'),
  ]),
  OperatorNode(op=';', pos=(2067, 2068)),
  CommandNode(pos=(2071, 2085), parts=[
    WordNode(pos=(2071, 2073), word='cd'),
    WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2085, 2086)),
  CommandNode(pos=(2088, 2114), parts=[
    WordNode(pos=(2088, 2094), word='export'),
    WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2114, 2115)),
  CommandNode(pos=(2117, 2137), parts=[
    WordNode(pos=(2117, 2128), word='./otp_build'),
    WordNode(pos=(2129, 2137), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(2137, 2138)),
  CommandNode(pos=(2140, 2180), parts=[
    AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2150, 2178), parts=[
          WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
          WordNode(pos=(2166, 2171), word='--get'),
          WordNode(pos=(2172, 2178), word='CFLAGS'),
        ]), pos=(2148, 2179)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2180, 2181)),
  CommandNode(pos=(2182, 2195), parts=[
    WordNode(pos=(2182, 2188), word='export'),
    WordNode(pos=(2189, 2195), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(2195, 2196)),
  CommandNode(pos=(2198, 2255), parts=[
    AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2210, 2253), parts=[
          WordNode(pos=(2210, 2227), word='dpkg-architecture'),
          WordNode(pos=(2228, 2235), word='--query'),
          WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(2208, 2254)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2255, 2256)),
  CommandNode(pos=(2258, 2317), parts=[
    AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2271, 2315), parts=[
          WordNode(pos=(2271, 2288), word='dpkg-architecture'),
          WordNode(pos=(2289, 2296), word='--query'),
          WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(2269, 2316)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2317, 2318)),
  CommandNode(pos=(2320, 2359), parts=[
    AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2332, 2357), parts=[
          WordNode(pos=(2332, 2336), word='dpkg'),
          WordNode(pos=(2337, 2357), word='--print-architecture'),
        ]), pos=(2330, 2358)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2359, 2360)),
  CommandNode(pos=(2361, 2387), parts=[
    AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2387, 2388)),
  CommandNode(pos=(2390, 3072), parts=[
    WordNode(pos=(2390, 2401), word='./configure'),
    WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2412, 2421), value='hostArch'),
    ]),
    WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2434, 2444), value='buildArch'),
    ]),
    WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2476, 2490), word='--disable-hipe'),
    WordNode(pos=(2493, 2507), word='--disable-sctp'),
    WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
    WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
    WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
    WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
    WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
    WordNode(pos=(2629, 2649), word='--enable-smp-support'),
    WordNode(pos=(2652, 2668), word='--enable-threads'),
    WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2708, 2729), word='--without-common_test'),
    WordNode(pos=(2732, 2750), word='--without-debugger'),
    WordNode(pos=(2753, 2771), word='--without-dialyzer'),
    WordNode(pos=(2774, 2792), word='--without-diameter'),
    WordNode(pos=(2795, 2809), word='--without-edoc'),
    WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
    WordNode(pos=(2835, 2858), word='--without-erl_interface'),
    WordNode(pos=(2861, 2873), word='--without-et'),
    WordNode(pos=(2876, 2891), word='--without-eunit'),
    WordNode(pos=(2894, 2907), word='--without-ftp'),
    WordNode(pos=(2910, 2924), word='--without-hipe'),
    WordNode(pos=(2927, 2947), word='--without-jinterface'),
    WordNode(pos=(2950, 2966), word='--without-megaco'),
    WordNode(pos=(2969, 2987), word='--without-observer'),
    WordNode(pos=(2990, 3004), word='--without-odbc'),
    WordNode(pos=(3007, 3024), word='--without-reltool'),
    WordNode(pos=(3027, 3040), word='--without-ssh'),
    WordNode(pos=(3043, 3057), word='--without-tftp'),
    WordNode(pos=(3060, 3072), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(3074, 3075)),
  CommandNode(pos=(3077, 3155), parts=[
    WordNode(pos=(3077, 3081), word='make'),
    WordNode(pos=(3082, 3084), word='-j'),
    WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(3088, 3113), parts=[
          WordNode(pos=(3088, 3095), word='getconf'),
          WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
        ]), pos=(3086, 3114)),
    ]),
    WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(3155, 3156)),
  CommandNode(pos=(3158, 3170), parts=[
    WordNode(pos=(3158, 3162), word='make'),
    WordNode(pos=(3163, 3170), word='install'),
  ]),
  OperatorNode(op=';', pos=(3170, 3171)),
  CommandNode(pos=(3173, 3178), parts=[
    WordNode(pos=(3173, 3175), word='cd'),
    WordNode(pos=(3176, 3178), word='..'),
  ]),
  OperatorNode(op=';', pos=(3178, 3179)),
  CommandNode(pos=(3181, 3275), parts=[
    WordNode(pos=(3181, 3183), word='rm'),
    WordNode(pos=(3184, 3187), word='-rf'),
    WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
    ]),
    WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(3277, 3278)),
  CommandNode(pos=(3281, 3311), parts=[
    WordNode(pos=(3281, 3289), word='apt-mark'),
    WordNode(pos=(3290, 3294), word='auto'),
    WordNode(pos=(3295, 3299), word='.*'),
    RedirectNode(output=
      WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
  ]),
  OperatorNode(op=';', pos=(3311, 3312)),
  CommandNode(pos=(3314, 3336), parts=[
    WordNode(pos=(3314, 3315), word='['),
    WordNode(pos=(3316, 3318), word='-z'),
    WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
      ParameterNode(pos=(3320, 3333), value='savedAptMark'),
    ]),
    WordNode(pos=(3335, 3336), word=']'),
  ]),
  OperatorNode(op='||', pos=(3337, 3339)),
  CommandNode(pos=(3340, 3369), parts=[
    WordNode(pos=(3340, 3348), word='apt-mark'),
    WordNode(pos=(3349, 3355), word='manual'),
    WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
      ParameterNode(pos=(3356, 3369), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3369, 3370)),
  PipelineNode(pos=(3372, 3561), parts=[
    CommandNode(pos=(3372, 3426), parts=[
      WordNode(pos=(3372, 3376), word='find'),
      WordNode(pos=(3377, 3387), word='/usr/local'),
      WordNode(pos=(3388, 3393), word='-type'),
      WordNode(pos=(3394, 3395), word='f'),
      WordNode(pos=(3396, 3407), word='-executable'),
      WordNode(pos=(3408, 3413), word='-exec'),
      WordNode(pos=(3414, 3417), word='ldd'),
      WordNode(pos=(3418, 3422), word='{}'),
      WordNode(pos=(3423, 3426), word=';'),
    ]),
    PipeNode(pipe='|', pos=(3429, 3430)),
    CommandNode(pos=(3431, 3459), parts=[
      WordNode(pos=(3431, 3434), word='awk'),
      WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(3462, 3463)),
    CommandNode(pos=(3464, 3471), parts=[
      WordNode(pos=(3464, 3468), word='sort'),
      WordNode(pos=(3469, 3471), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3474, 3475)),
    CommandNode(pos=(3476, 3504), parts=[
      WordNode(pos=(3476, 3481), word='xargs'),
      WordNode(pos=(3482, 3484), word='-r'),
      WordNode(pos=(3485, 3495), word='dpkg-query'),
      WordNode(pos=(3496, 3504), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(3507, 3508)),
    CommandNode(pos=(3509, 3520), parts=[
      WordNode(pos=(3509, 3512), word='cut'),
      WordNode(pos=(3513, 3516), word='-d:'),
      WordNode(pos=(3517, 3520), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(3523, 3524)),
    CommandNode(pos=(3525, 3532), parts=[
      WordNode(pos=(3525, 3529), word='sort'),
      WordNode(pos=(3530, 3532), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3535, 3536)),
    CommandNode(pos=(3537, 3561), parts=[
      WordNode(pos=(3537, 3542), word='xargs'),
      WordNode(pos=(3543, 3545), word='-r'),
      WordNode(pos=(3546, 3554), word='apt-mark'),
      WordNode(pos=(3555, 3561), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3563, 3564)),
  CommandNode(pos=(3566, 3642), parts=[
    WordNode(pos=(3566, 3573), word='apt-get'),
    WordNode(pos=(3574, 3579), word='purge'),
    WordNode(pos=(3580, 3582), word='-y'),
    WordNode(pos=(3583, 3596), word='--auto-remove'),
    WordNode(pos=(3597, 3599), word='-o'),
    WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(3642, 3643)),
  CommandNode(pos=(3646, 3661), parts=[
    WordNode(pos=(3646, 3653), word='openssl'),
    WordNode(pos=(3654, 3661), word='version'),
  ]),
  OperatorNode(op=';', pos=(3661, 3662)),
  CommandNode(pos=(3664, 3761), parts=[
    WordNode(pos=(3664, 3667), word='erl'),
    WordNode(pos=(3668, 3676), word='-noshell'),
    WordNode(pos=(3677, 3682), word='-eval'),
    WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


792) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


793) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


794) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


795) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


796) rm -rf "$GNUPGHOME"

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 849), word='-rf'),
  WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(851, 861), value='GNUPGHOME'),
  ]),
])


797) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


798) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


799) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(950, 974), parts=[
  WordNode(pos=(950, 955), word='mkdir'),
  WordNode(pos=(956, 958), word='-p'),
  WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
  ]),
])


800) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


801) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


802) cd "$OPENSSL_PATH"

CommandNode(pos=(1073, 1091), parts=[
  WordNode(pos=(1073, 1075), word='cd'),
  WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
  ]),
])


803) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


804) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


805) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1423, 1446), parts=[
  WordNode(pos=(1423, 1425), word='rm'),
  WordNode(pos=(1426, 1429), word='-rf'),
  WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
  ]),
])


806) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


807) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


808) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1592, 1652), parts=[
  WordNode(pos=(1592, 1594), word='ln'),
  WordNode(pos=(1595, 1598), word='-sf'),
  WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
  WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
  WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
  ]),
])


809) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


810) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


811) mkdir -p "$OTP_PATH"

CommandNode(pos=(1801, 1821), parts=[
  WordNode(pos=(1801, 1806), word='mkdir'),
  WordNode(pos=(1807, 1809), word='-p'),
  WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
  ]),
])


812) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


813) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


814) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


815) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


816) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


817) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


818) cd "$OTP_PATH"

CommandNode(pos=(2071, 2085), parts=[
  WordNode(pos=(2071, 2073), word='cd'),
  WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
  ]),
])


819) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(2088, 2114), parts=[
  WordNode(pos=(2088, 2094), word='export'),
  WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
  ]),
])


820) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


821) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


822) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


823) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(3181, 3275), parts=[
  WordNode(pos=(3181, 3183), word='rm'),
  WordNode(pos=(3184, 3187), word='-rf'),
  WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
  ]),
  WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
])


824) [ -z "$savedAptMark" ]

CommandNode(pos=(3314, 3336), parts=[
  WordNode(pos=(3314, 3315), word='['),
  WordNode(pos=(3316, 3318), word='-z'),
  WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
    ParameterNode(pos=(3320, 3333), value='savedAptMark'),
  ]),
  WordNode(pos=(3335, 3336), word=']'),
])


825) apt-mark manual $savedAptMark

CommandNode(pos=(3340, 3369), parts=[
  WordNode(pos=(3340, 3348), word='apt-mark'),
  WordNode(pos=(3349, 3355), word='manual'),
  WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
    ParameterNode(pos=(3356, 3369), value='savedAptMark'),
  ]),
])


826) useradd --uid 999 --system --home-dir "$RABBITMQ_DATA_DIR" --gid rabbitmq rabbitmq

CommandNode(pos=(50, 132), parts=[
  WordNode(pos=(50, 57), word='useradd'),
  WordNode(pos=(58, 63), word='--uid'),
  WordNode(pos=(64, 67), word='999'),
  WordNode(pos=(68, 76), word='--system'),
  WordNode(pos=(77, 87), word='--home-dir'),
  WordNode(pos=(88, 108), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(89, 107), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(109, 114), word='--gid'),
  WordNode(pos=(115, 123), word='rabbitmq'),
  WordNode(pos=(124, 132), word='rabbitmq'),
])


827) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(135, 214), parts=[
  WordNode(pos=(135, 140), word='mkdir'),
  WordNode(pos=(141, 143), word='-p'),
  WordNode(pos=(144, 164), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(145, 163), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(165, 178), word='/etc/rabbitmq'),
  WordNode(pos=(179, 196), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(197, 214), word='/var/log/rabbitmq'),
])


828) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(217, 315), parts=[
  WordNode(pos=(217, 222), word='chown'),
  WordNode(pos=(223, 226), word='-fR'),
  WordNode(pos=(227, 244), word='rabbitmq:rabbitmq'),
  WordNode(pos=(245, 265), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(246, 264), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(266, 279), word='/etc/rabbitmq'),
  WordNode(pos=(280, 297), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(298, 315), word='/var/log/rabbitmq'),
])


829) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(318, 398), parts=[
  WordNode(pos=(318, 323), word='chmod'),
  WordNode(pos=(324, 327), word='777'),
  WordNode(pos=(328, 348), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(329, 347), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(349, 362), word='/etc/rabbitmq'),
  WordNode(pos=(363, 380), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(381, 398), word='/var/log/rabbitmq'),
])


830) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(401, 464), parts=[
  WordNode(pos=(401, 403), word='ln'),
  WordNode(pos=(404, 407), word='-sf'),
  WordNode(pos=(408, 443), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(409, 427), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(444, 464), word='/root/.erlang.cookie'),
])


831) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


832) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


833) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


834) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


835) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


836) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


837) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


838) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


839) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


840) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


841) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


842) rm -rf "$GNUPGHOME"

CommandNode(pos=(815, 834), parts=[
  WordNode(pos=(815, 817), word='rm'),
  WordNode(pos=(818, 821), word='-rf'),
  WordNode(pos=(822, 834), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(823, 833), value='GNUPGHOME'),
  ]),
])


843) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(838, 863), parts=[
  WordNode(pos=(838, 843), word='mkdir'),
  WordNode(pos=(844, 846), word='-p'),
  WordNode(pos=(847, 863), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(848, 862), value='RABBITMQ_HOME'),
  ]),
])


844) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


845) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


846) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(963, 987), parts=[
  WordNode(pos=(963, 965), word='rm'),
  WordNode(pos=(966, 969), word='-rf'),
  WordNode(pos=(970, 987), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(971, 985), value='RABBITMQ_PATH'),
  ]),
])


847) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(990, 1073), parts=[
  WordNode(pos=(990, 994), word='grep'),
  WordNode(pos=(995, 998), word='-qE'),
  WordNode(pos=(999, 1033), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(1034, 1073), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1035, 1049), value='RABBITMQ_HOME'),
  ]),
])


848) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1076, 1155), parts=[
  WordNode(pos=(1076, 1079), word='sed'),
  WordNode(pos=(1080, 1082), word='-i'),
  WordNode(pos=(1083, 1115), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(1116, 1155), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1117, 1131), value='RABBITMQ_HOME'),
  ]),
])


849) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1158, 1222), parts=[
  WordNode(pos=(1158, 1162), word='grep'),
  WordNode(pos=(1163, 1166), word='-qE'),
  WordNode(pos=(1167, 1182), word='^SYS_PREFIX=$'),
  WordNode(pos=(1183, 1222), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1184, 1198), value='RABBITMQ_HOME'),
  ]),
])


850) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1225, 1268), parts=[
  WordNode(pos=(1225, 1230), word='chown'),
  WordNode(pos=(1231, 1233), word='-R'),
  WordNode(pos=(1234, 1251), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1252, 1268), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1253, 1267), value='RABBITMQ_HOME'),
  ]),
])


851) apt-mark manual $savedAptMark

CommandNode(pos=(1305, 1334), parts=[
  WordNode(pos=(1305, 1313), word='apt-mark'),
  WordNode(pos=(1314, 1320), word='manual'),
  WordNode(pos=(1321, 1334), word='$savedAptMark', parts=[
    ParameterNode(pos=(1321, 1334), value='savedAptMark'),
  ]),
])


852) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1417, 1461), parts=[
  WordNode(pos=(1417, 1418), word='['),
  WordNode(pos=(1419, 1420), word='!'),
  WordNode(pos=(1421, 1423), word='-e'),
  WordNode(pos=(1424, 1459), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1425, 1443), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1460, 1461), word=']'),
])


853) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1576, 1614), parts=[
  WordNode(pos=(1576, 1578), word='rm'),
  WordNode(pos=(1579, 1614), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1580, 1598), value='RABBITMQ_DATA_DIR'),
  ]),
])


854) wget -O /openjdk.tgz "$JAVA_URL"

CommandNode(pos=(12, 44), parts=[
  WordNode(pos=(12, 16), word='wget'),
  WordNode(pos=(17, 19), word='-O'),
  WordNode(pos=(20, 32), word='/openjdk.tgz'),
  WordNode(pos=(33, 44), word='$JAVA_URL', parts=[
    ParameterNode(pos=(34, 43), value='JAVA_URL'),
  ]),
])


855) echo "$JAVA_SHA256 */openjdk.tgz"

CommandNode(pos=(47, 80), parts=[
  WordNode(pos=(47, 51), word='echo'),
  WordNode(pos=(52, 80), word='$JAVA_SHA256 */openjdk.tgz', parts=[
    ParameterNode(pos=(53, 65), value='JAVA_SHA256'),
  ]),
])


856) mkdir -p "$JAVA_HOME"

CommandNode(pos=(100, 121), parts=[
  WordNode(pos=(100, 105), word='mkdir'),
  WordNode(pos=(106, 108), word='-p'),
  WordNode(pos=(109, 121), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(110, 120), value='JAVA_HOME'),
  ]),
])


857) tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1

CommandNode(pos=(124, 203), parts=[
  WordNode(pos=(124, 127), word='tar'),
  WordNode(pos=(128, 137), word='--extract'),
  WordNode(pos=(138, 144), word='--file'),
  WordNode(pos=(145, 157), word='/openjdk.tgz'),
  WordNode(pos=(158, 169), word='--directory'),
  WordNode(pos=(170, 182), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(171, 181), value='JAVA_HOME'),
  ]),
  WordNode(pos=(183, 201), word='--strip-components'),
  WordNode(pos=(202, 203), word='1'),
])


858) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


859) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


860) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


861) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


862) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


863) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


864) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


865) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


866) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


867) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


868) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


869) apkStaticUrl="http://dl-cdn.alpinelinux.org/alpine/$apkStaticDist/main/$apkStaticArch/apk-tools-static-$apkStaticVersion.apk"

CommandNode(pos=(90, 215), parts=[
  AssignmentNode(pos=(90, 215), word='apkStaticUrl=http://dl-cdn.alpinelinux.org/alpine/$apkStaticDist/main/$apkStaticArch/apk-tools-static-$apkStaticVersion.apk', parts=[
    ParameterNode(pos=(141, 155), value='apkStaticDist'),
    ParameterNode(pos=(161, 175), value='apkStaticArch'),
    ParameterNode(pos=(193, 210), value='apkStaticVersion'),
  ]),
])


870) apkStaticUrl="http://dl-cdn.alpinelinux.org/alpine/$apkStaticDist/main/$apkStaticArch/apk-tools-static-$apkStaticVersion.apk"

CommandNode(pos=(90, 215), parts=[
  AssignmentNode(pos=(90, 215), word='apkStaticUrl=http://dl-cdn.alpinelinux.org/alpine/$apkStaticDist/main/$apkStaticArch/apk-tools-static-$apkStaticVersion.apk', parts=[
    ParameterNode(pos=(141, 155), value='apkStaticDist'),
    ParameterNode(pos=(161, 175), value='apkStaticArch'),
    ParameterNode(pos=(193, 210), value='apkStaticVersion'),
  ]),
])


871) apkStaticUrl="http://dl-cdn.alpinelinux.org/alpine/$apkStaticDist/main/$apkStaticArch/apk-tools-static-$apkStaticVersion.apk"

CommandNode(pos=(90, 215), parts=[
  AssignmentNode(pos=(90, 215), word='apkStaticUrl=http://dl-cdn.alpinelinux.org/alpine/$apkStaticDist/main/$apkStaticArch/apk-tools-static-$apkStaticVersion.apk', parts=[
    ParameterNode(pos=(141, 155), value='apkStaticDist'),
    ParameterNode(pos=(161, 175), value='apkStaticArch'),
    ParameterNode(pos=(193, 210), value='apkStaticVersion'),
  ]),
])


872) wget -O /tmp/apk-tools-static.apk "$apkStaticUrl"

CommandNode(pos=(218, 267), parts=[
  WordNode(pos=(218, 222), word='wget'),
  WordNode(pos=(223, 225), word='-O'),
  WordNode(pos=(226, 251), word='/tmp/apk-tools-static.apk'),
  WordNode(pos=(252, 267), word='$apkStaticUrl', parts=[
    ParameterNode(pos=(253, 266), value='apkStaticUrl'),
  ]),
])


873) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


874) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


875) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


876) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


877) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


878) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


879) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


880) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


881) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


882) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
])


883) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


884) echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main" > /etc/apt/sources.list.d/mariadb.list

CommandNode(pos=(8, 130), parts=[
  WordNode(pos=(8, 12), word='echo'),
  WordNode(pos=(13, 91), word='deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main', parts=[
    ParameterNode(pos=(57, 71), value='MARIADB_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(94, 130), word='/etc/apt/sources.list.d/mariadb.list'), pos=(92, 130), type='>'),
])


885) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'

CommandNode(pos=(14, 95), parts=[
  WordNode(pos=(14, 18), word='echo'),
  WordNode(pos=(19, 50), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(35, 49), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(51, 77), word='mysql-server/root_password'),
  WordNode(pos=(78, 86), word='password'),
  WordNode(pos=(87, 95), word='unused'),
])


886) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'

CommandNode(pos=(99, 186), parts=[
  WordNode(pos=(99, 103), word='echo'),
  WordNode(pos=(104, 135), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(120, 134), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(136, 168), word='mysql-server/root_password_again'),
  WordNode(pos=(169, 177), word='password'),
  WordNode(pos=(178, 186), word='unused'),
])


887) apt-get install -y   "mariadb-server=$MARIADB_VERSION"   mariadb-backup   socat

CommandNode(pos=(235, 314), parts=[
  WordNode(pos=(235, 242), word='apt-get'),
  WordNode(pos=(243, 250), word='install'),
  WordNode(pos=(251, 253), word='-y'),
  WordNode(pos=(256, 289), word='mariadb-server=$MARIADB_VERSION', parts=[
    ParameterNode(pos=(272, 288), value='MARIADB_VERSION'),
  ]),
  WordNode(pos=(292, 306), word='mariadb-backup'),
  WordNode(pos=(309, 314), word='socat'),
])


888) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


889) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


890) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


891) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


892) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


893) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


894) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


895) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


896) tarball="busybox-${BUSYBOX_VERSION}.tar.bz2"

CommandNode(pos=(10, 54), parts=[
  AssignmentNode(pos=(10, 54), word='tarball=busybox-${BUSYBOX_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(27, 45), value='BUSYBOX_VERSION'),
  ]),
])


897) curl -fL -o busybox.tar.bz2 "https://busybox.net/downloads/$tarball"

CommandNode(pos=(57, 125), parts=[
  WordNode(pos=(57, 61), word='curl'),
  WordNode(pos=(62, 65), word='-fL'),
  WordNode(pos=(66, 68), word='-o'),
  WordNode(pos=(69, 84), word='busybox.tar.bz2'),
  WordNode(pos=(85, 125), word='https://busybox.net/downloads/$tarball', parts=[
    ParameterNode(pos=(116, 124), value='tarball'),
  ]),
])


898) curl -fL -o busybox.tar.bz2.sig "https://busybox.net/downloads/$tarball.sig"

CommandNode(pos=(128, 204), parts=[
  WordNode(pos=(128, 132), word='curl'),
  WordNode(pos=(133, 136), word='-fL'),
  WordNode(pos=(137, 139), word='-o'),
  WordNode(pos=(140, 159), word='busybox.tar.bz2.sig'),
  WordNode(pos=(160, 204), word='https://busybox.net/downloads/$tarball.sig', parts=[
    ParameterNode(pos=(191, 199), value='tarball'),
  ]),
])


899) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 796), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 300), parts=[
    AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
  ]),
  OperatorNode(op=';', pos=(300, 301)),
  CommandNode(pos=(304, 318), parts=[
    WordNode(pos=(304, 308), word='make'),
    WordNode(pos=(309, 318), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(318, 319)),
  CompoundNode(list=[
    ForNode(pos=(322, 418), parts=[
      ReservedwordNode(pos=(322, 325), word='for'),
      WordNode(pos=(326, 330), word='conf'),
      ReservedwordNode(pos=(331, 333), word='in'),
      WordNode(pos=(334, 345), word='$unsetConfs', parts=[
        ParameterNode(pos=(334, 345), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 412), parts=[
          CommandNode(pos=(352, 411), parts=[
            WordNode(pos=(352, 355), word='sed'),
            WordNode(pos=(356, 358), word='-i'),
            WordNode(pos=(362, 364), word='-e'),
            WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(369, 374), value='conf'),
              ParameterNode(pos=(382, 387), value='conf'),
            ]),
            WordNode(pos=(404, 411), word='.config'),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
        ]),
      ReservedwordNode(pos=(414, 418), word='done'),
    ]),
  ], pos=(322, 418)),
  OperatorNode(op=';', pos=(418, 419)),
  CompoundNode(list=[
    ForNode(pos=(422, 643), parts=[
      ReservedwordNode(pos=(422, 425), word='for'),
      WordNode(pos=(426, 431), word='confV'),
      ReservedwordNode(pos=(432, 434), word='in'),
      WordNode(pos=(435, 444), word='$setConfs', parts=[
        ParameterNode(pos=(435, 444), value='setConfs'),
      ]),
      ReservedwordNode(pos=(444, 445), word=';'),
      ReservedwordNode(pos=(446, 448), word='do'),
      ListNode(pos=(451, 637), parts=[
          CommandNode(pos=(451, 469), parts=[
            AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(457, 468), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(469, 470)),
          CommandNode(pos=(473, 560), parts=[
            WordNode(pos=(473, 476), word='sed'),
            WordNode(pos=(477, 479), word='-i'),
            WordNode(pos=(483, 485), word='-e'),
            WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(490, 495), value='conf'),
              ParameterNode(pos=(501, 507), value='confV'),
            ]),
            WordNode(pos=(513, 515), word='-e'),
            WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(522, 527), value='conf'),
              ParameterNode(pos=(541, 547), value='confV'),
            ]),
            WordNode(pos=(553, 560), word='.config'),
          ]),
          OperatorNode(op=';', pos=(560, 561)),
          CompoundNode(list=[
            IfNode(pos=(564, 636), parts=[
              ReservedwordNode(pos=(564, 566), word='if'),
              ListNode(pos=(567, 597), parts=[
                  PipelineNode(pos=(567, 596), parts=[
                    ReservedwordNode(pos=(567, 568), word='!'),
                    CommandNode(pos=(569, 596), parts=[
                      WordNode(pos=(569, 573), word='grep'),
                      WordNode(pos=(574, 576), word='-q'),
                      WordNode(pos=(577, 588), word='^$confV$', parts=[
                        ParameterNode(pos=(579, 585), value='confV'),
                      ]),
                      WordNode(pos=(589, 596), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(596, 597)),
                ]),
              ReservedwordNode(pos=(598, 602), word='then'),
              ListNode(pos=(606, 631), parts=[
                  CommandNode(pos=(606, 630), parts=[
                    WordNode(pos=(606, 610), word='echo'),
                    WordNode(pos=(611, 619), word='$confV', parts=[
                      ParameterNode(pos=(612, 618), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(630, 631)),
                ]),
              ReservedwordNode(pos=(634, 636), word='fi'),
            ]),
          ], pos=(564, 636)),
          OperatorNode(op=';', pos=(636, 637)),
        ]),
      ReservedwordNode(pos=(639, 643), word='done'),
    ]),
  ], pos=(422, 643)),
  OperatorNode(op=';', pos=(643, 644)),
  CommandNode(pos=(647, 661), parts=[
    WordNode(pos=(647, 651), word='make'),
    WordNode(pos=(652, 661), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(661, 662)),
  CompoundNode(list=[
    ForNode(pos=(665, 729), parts=[
      ReservedwordNode(pos=(665, 668), word='for'),
      WordNode(pos=(669, 673), word='conf'),
      ReservedwordNode(pos=(674, 676), word='in'),
      WordNode(pos=(677, 688), word='$unsetConfs', parts=[
        ParameterNode(pos=(677, 688), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(688, 689), word=';'),
      ReservedwordNode(pos=(690, 692), word='do'),
      ListNode(pos=(695, 723), parts=[
          PipelineNode(pos=(695, 722), parts=[
            ReservedwordNode(pos=(695, 696), word='!'),
            CommandNode(pos=(697, 722), parts=[
              WordNode(pos=(697, 701), word='grep'),
              WordNode(pos=(702, 704), word='-q'),
              WordNode(pos=(705, 714), word='^$conf=', parts=[
                ParameterNode(pos=(707, 712), value='conf'),
              ]),
              WordNode(pos=(715, 722), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(722, 723)),
        ]),
      ReservedwordNode(pos=(725, 729), word='done'),
    ]),
  ], pos=(665, 729)),
  OperatorNode(op=';', pos=(729, 730)),
  CompoundNode(list=[
    ForNode(pos=(732, 795), parts=[
      ReservedwordNode(pos=(732, 735), word='for'),
      WordNode(pos=(736, 741), word='confV'),
      ReservedwordNode(pos=(742, 744), word='in'),
      WordNode(pos=(745, 754), word='$setConfs', parts=[
        ParameterNode(pos=(745, 754), value='setConfs'),
      ]),
      ReservedwordNode(pos=(754, 755), word=';'),
      ReservedwordNode(pos=(756, 758), word='do'),
      ListNode(pos=(761, 789), parts=[
          CommandNode(pos=(761, 788), parts=[
            WordNode(pos=(761, 765), word='grep'),
            WordNode(pos=(766, 768), word='-q'),
            WordNode(pos=(769, 780), word='^$confV$', parts=[
              ParameterNode(pos=(771, 777), value='confV'),
            ]),
            WordNode(pos=(781, 788), word='.config'),
          ]),
          OperatorNode(op=';', pos=(788, 789)),
        ]),
      ReservedwordNode(pos=(791, 795), word='done'),
    ]),
  ], pos=(732, 795)),
  OperatorNode(op=';', pos=(795, 796)),
])


900) sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config

CommandNode(pos=(352, 411), parts=[
  WordNode(pos=(352, 355), word='sed'),
  WordNode(pos=(356, 358), word='-i'),
  WordNode(pos=(362, 364), word='-e'),
  WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
    ParameterNode(pos=(369, 374), value='conf'),
    ParameterNode(pos=(382, 387), value='conf'),
  ]),
  WordNode(pos=(404, 411), word='.config'),
])


901) sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config

CommandNode(pos=(352, 411), parts=[
  WordNode(pos=(352, 355), word='sed'),
  WordNode(pos=(356, 358), word='-i'),
  WordNode(pos=(362, 364), word='-e'),
  WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
    ParameterNode(pos=(369, 374), value='conf'),
    ParameterNode(pos=(382, 387), value='conf'),
  ]),
  WordNode(pos=(404, 411), word='.config'),
])


902) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 796), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 300), parts=[
    AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
  ]),
  OperatorNode(op=';', pos=(300, 301)),
  CommandNode(pos=(304, 318), parts=[
    WordNode(pos=(304, 308), word='make'),
    WordNode(pos=(309, 318), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(318, 319)),
  CompoundNode(list=[
    ForNode(pos=(322, 418), parts=[
      ReservedwordNode(pos=(322, 325), word='for'),
      WordNode(pos=(326, 330), word='conf'),
      ReservedwordNode(pos=(331, 333), word='in'),
      WordNode(pos=(334, 345), word='$unsetConfs', parts=[
        ParameterNode(pos=(334, 345), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 412), parts=[
          CommandNode(pos=(352, 411), parts=[
            WordNode(pos=(352, 355), word='sed'),
            WordNode(pos=(356, 358), word='-i'),
            WordNode(pos=(362, 364), word='-e'),
            WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(369, 374), value='conf'),
              ParameterNode(pos=(382, 387), value='conf'),
            ]),
            WordNode(pos=(404, 411), word='.config'),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
        ]),
      ReservedwordNode(pos=(414, 418), word='done'),
    ]),
  ], pos=(322, 418)),
  OperatorNode(op=';', pos=(418, 419)),
  CompoundNode(list=[
    ForNode(pos=(422, 643), parts=[
      ReservedwordNode(pos=(422, 425), word='for'),
      WordNode(pos=(426, 431), word='confV'),
      ReservedwordNode(pos=(432, 434), word='in'),
      WordNode(pos=(435, 444), word='$setConfs', parts=[
        ParameterNode(pos=(435, 444), value='setConfs'),
      ]),
      ReservedwordNode(pos=(444, 445), word=';'),
      ReservedwordNode(pos=(446, 448), word='do'),
      ListNode(pos=(451, 637), parts=[
          CommandNode(pos=(451, 469), parts=[
            AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(457, 468), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(469, 470)),
          CommandNode(pos=(473, 560), parts=[
            WordNode(pos=(473, 476), word='sed'),
            WordNode(pos=(477, 479), word='-i'),
            WordNode(pos=(483, 485), word='-e'),
            WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(490, 495), value='conf'),
              ParameterNode(pos=(501, 507), value='confV'),
            ]),
            WordNode(pos=(513, 515), word='-e'),
            WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(522, 527), value='conf'),
              ParameterNode(pos=(541, 547), value='confV'),
            ]),
            WordNode(pos=(553, 560), word='.config'),
          ]),
          OperatorNode(op=';', pos=(560, 561)),
          CompoundNode(list=[
            IfNode(pos=(564, 636), parts=[
              ReservedwordNode(pos=(564, 566), word='if'),
              ListNode(pos=(567, 597), parts=[
                  PipelineNode(pos=(567, 596), parts=[
                    ReservedwordNode(pos=(567, 568), word='!'),
                    CommandNode(pos=(569, 596), parts=[
                      WordNode(pos=(569, 573), word='grep'),
                      WordNode(pos=(574, 576), word='-q'),
                      WordNode(pos=(577, 588), word='^$confV$', parts=[
                        ParameterNode(pos=(579, 585), value='confV'),
                      ]),
                      WordNode(pos=(589, 596), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(596, 597)),
                ]),
              ReservedwordNode(pos=(598, 602), word='then'),
              ListNode(pos=(606, 631), parts=[
                  CommandNode(pos=(606, 630), parts=[
                    WordNode(pos=(606, 610), word='echo'),
                    WordNode(pos=(611, 619), word='$confV', parts=[
                      ParameterNode(pos=(612, 618), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(630, 631)),
                ]),
              ReservedwordNode(pos=(634, 636), word='fi'),
            ]),
          ], pos=(564, 636)),
          OperatorNode(op=';', pos=(636, 637)),
        ]),
      ReservedwordNode(pos=(639, 643), word='done'),
    ]),
  ], pos=(422, 643)),
  OperatorNode(op=';', pos=(643, 644)),
  CommandNode(pos=(647, 661), parts=[
    WordNode(pos=(647, 651), word='make'),
    WordNode(pos=(652, 661), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(661, 662)),
  CompoundNode(list=[
    ForNode(pos=(665, 729), parts=[
      ReservedwordNode(pos=(665, 668), word='for'),
      WordNode(pos=(669, 673), word='conf'),
      ReservedwordNode(pos=(674, 676), word='in'),
      WordNode(pos=(677, 688), word='$unsetConfs', parts=[
        ParameterNode(pos=(677, 688), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(688, 689), word=';'),
      ReservedwordNode(pos=(690, 692), word='do'),
      ListNode(pos=(695, 723), parts=[
          PipelineNode(pos=(695, 722), parts=[
            ReservedwordNode(pos=(695, 696), word='!'),
            CommandNode(pos=(697, 722), parts=[
              WordNode(pos=(697, 701), word='grep'),
              WordNode(pos=(702, 704), word='-q'),
              WordNode(pos=(705, 714), word='^$conf=', parts=[
                ParameterNode(pos=(707, 712), value='conf'),
              ]),
              WordNode(pos=(715, 722), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(722, 723)),
        ]),
      ReservedwordNode(pos=(725, 729), word='done'),
    ]),
  ], pos=(665, 729)),
  OperatorNode(op=';', pos=(729, 730)),
  CompoundNode(list=[
    ForNode(pos=(732, 795), parts=[
      ReservedwordNode(pos=(732, 735), word='for'),
      WordNode(pos=(736, 741), word='confV'),
      ReservedwordNode(pos=(742, 744), word='in'),
      WordNode(pos=(745, 754), word='$setConfs', parts=[
        ParameterNode(pos=(745, 754), value='setConfs'),
      ]),
      ReservedwordNode(pos=(754, 755), word=';'),
      ReservedwordNode(pos=(756, 758), word='do'),
      ListNode(pos=(761, 789), parts=[
          CommandNode(pos=(761, 788), parts=[
            WordNode(pos=(761, 765), word='grep'),
            WordNode(pos=(766, 768), word='-q'),
            WordNode(pos=(769, 780), word='^$confV$', parts=[
              ParameterNode(pos=(771, 777), value='confV'),
            ]),
            WordNode(pos=(781, 788), word='.config'),
          ]),
          OperatorNode(op=';', pos=(788, 789)),
        ]),
      ReservedwordNode(pos=(791, 795), word='done'),
    ]),
  ], pos=(732, 795)),
  OperatorNode(op=';', pos=(795, 796)),
])


903) conf="${confV%=*}"

CommandNode(pos=(451, 469), parts=[
  AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
    ParameterNode(pos=(457, 468), value='confV%=*'),
  ]),
])


904) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(473, 560), parts=[
  WordNode(pos=(473, 476), word='sed'),
  WordNode(pos=(477, 479), word='-i'),
  WordNode(pos=(483, 485), word='-e'),
  WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(490, 495), value='conf'),
    ParameterNode(pos=(501, 507), value='confV'),
  ]),
  WordNode(pos=(513, 515), word='-e'),
  WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(522, 527), value='conf'),
    ParameterNode(pos=(541, 547), value='confV'),
  ]),
  WordNode(pos=(553, 560), word='.config'),
])


905) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(473, 560), parts=[
  WordNode(pos=(473, 476), word='sed'),
  WordNode(pos=(477, 479), word='-i'),
  WordNode(pos=(483, 485), word='-e'),
  WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(490, 495), value='conf'),
    ParameterNode(pos=(501, 507), value='confV'),
  ]),
  WordNode(pos=(513, 515), word='-e'),
  WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(522, 527), value='conf'),
    ParameterNode(pos=(541, 547), value='confV'),
  ]),
  WordNode(pos=(553, 560), word='.config'),
])


906) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(473, 560), parts=[
  WordNode(pos=(473, 476), word='sed'),
  WordNode(pos=(477, 479), word='-i'),
  WordNode(pos=(483, 485), word='-e'),
  WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(490, 495), value='conf'),
    ParameterNode(pos=(501, 507), value='confV'),
  ]),
  WordNode(pos=(513, 515), word='-e'),
  WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(522, 527), value='conf'),
    ParameterNode(pos=(541, 547), value='confV'),
  ]),
  WordNode(pos=(553, 560), word='.config'),
])


907) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(473, 560), parts=[
  WordNode(pos=(473, 476), word='sed'),
  WordNode(pos=(477, 479), word='-i'),
  WordNode(pos=(483, 485), word='-e'),
  WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(490, 495), value='conf'),
    ParameterNode(pos=(501, 507), value='confV'),
  ]),
  WordNode(pos=(513, 515), word='-e'),
  WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(522, 527), value='conf'),
    ParameterNode(pos=(541, 547), value='confV'),
  ]),
  WordNode(pos=(553, 560), word='.config'),
])


908) grep -q "^$confV\$" .config

CommandNode(pos=(569, 596), parts=[
  WordNode(pos=(569, 573), word='grep'),
  WordNode(pos=(574, 576), word='-q'),
  WordNode(pos=(577, 588), word='^$confV$', parts=[
    ParameterNode(pos=(579, 585), value='confV'),
  ]),
  WordNode(pos=(589, 596), word='.config'),
])


909) echo "$confV" >> .config

CommandNode(pos=(606, 630), parts=[
  WordNode(pos=(606, 610), word='echo'),
  WordNode(pos=(611, 619), word='$confV', parts=[
    ParameterNode(pos=(612, 618), value='confV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
])


910) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 796), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 300), parts=[
    AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
  ]),
  OperatorNode(op=';', pos=(300, 301)),
  CommandNode(pos=(304, 318), parts=[
    WordNode(pos=(304, 308), word='make'),
    WordNode(pos=(309, 318), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(318, 319)),
  CompoundNode(list=[
    ForNode(pos=(322, 418), parts=[
      ReservedwordNode(pos=(322, 325), word='for'),
      WordNode(pos=(326, 330), word='conf'),
      ReservedwordNode(pos=(331, 333), word='in'),
      WordNode(pos=(334, 345), word='$unsetConfs', parts=[
        ParameterNode(pos=(334, 345), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 412), parts=[
          CommandNode(pos=(352, 411), parts=[
            WordNode(pos=(352, 355), word='sed'),
            WordNode(pos=(356, 358), word='-i'),
            WordNode(pos=(362, 364), word='-e'),
            WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(369, 374), value='conf'),
              ParameterNode(pos=(382, 387), value='conf'),
            ]),
            WordNode(pos=(404, 411), word='.config'),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
        ]),
      ReservedwordNode(pos=(414, 418), word='done'),
    ]),
  ], pos=(322, 418)),
  OperatorNode(op=';', pos=(418, 419)),
  CompoundNode(list=[
    ForNode(pos=(422, 643), parts=[
      ReservedwordNode(pos=(422, 425), word='for'),
      WordNode(pos=(426, 431), word='confV'),
      ReservedwordNode(pos=(432, 434), word='in'),
      WordNode(pos=(435, 444), word='$setConfs', parts=[
        ParameterNode(pos=(435, 444), value='setConfs'),
      ]),
      ReservedwordNode(pos=(444, 445), word=';'),
      ReservedwordNode(pos=(446, 448), word='do'),
      ListNode(pos=(451, 637), parts=[
          CommandNode(pos=(451, 469), parts=[
            AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(457, 468), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(469, 470)),
          CommandNode(pos=(473, 560), parts=[
            WordNode(pos=(473, 476), word='sed'),
            WordNode(pos=(477, 479), word='-i'),
            WordNode(pos=(483, 485), word='-e'),
            WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(490, 495), value='conf'),
              ParameterNode(pos=(501, 507), value='confV'),
            ]),
            WordNode(pos=(513, 515), word='-e'),
            WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(522, 527), value='conf'),
              ParameterNode(pos=(541, 547), value='confV'),
            ]),
            WordNode(pos=(553, 560), word='.config'),
          ]),
          OperatorNode(op=';', pos=(560, 561)),
          CompoundNode(list=[
            IfNode(pos=(564, 636), parts=[
              ReservedwordNode(pos=(564, 566), word='if'),
              ListNode(pos=(567, 597), parts=[
                  PipelineNode(pos=(567, 596), parts=[
                    ReservedwordNode(pos=(567, 568), word='!'),
                    CommandNode(pos=(569, 596), parts=[
                      WordNode(pos=(569, 573), word='grep'),
                      WordNode(pos=(574, 576), word='-q'),
                      WordNode(pos=(577, 588), word='^$confV$', parts=[
                        ParameterNode(pos=(579, 585), value='confV'),
                      ]),
                      WordNode(pos=(589, 596), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(596, 597)),
                ]),
              ReservedwordNode(pos=(598, 602), word='then'),
              ListNode(pos=(606, 631), parts=[
                  CommandNode(pos=(606, 630), parts=[
                    WordNode(pos=(606, 610), word='echo'),
                    WordNode(pos=(611, 619), word='$confV', parts=[
                      ParameterNode(pos=(612, 618), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(630, 631)),
                ]),
              ReservedwordNode(pos=(634, 636), word='fi'),
            ]),
          ], pos=(564, 636)),
          OperatorNode(op=';', pos=(636, 637)),
        ]),
      ReservedwordNode(pos=(639, 643), word='done'),
    ]),
  ], pos=(422, 643)),
  OperatorNode(op=';', pos=(643, 644)),
  CommandNode(pos=(647, 661), parts=[
    WordNode(pos=(647, 651), word='make'),
    WordNode(pos=(652, 661), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(661, 662)),
  CompoundNode(list=[
    ForNode(pos=(665, 729), parts=[
      ReservedwordNode(pos=(665, 668), word='for'),
      WordNode(pos=(669, 673), word='conf'),
      ReservedwordNode(pos=(674, 676), word='in'),
      WordNode(pos=(677, 688), word='$unsetConfs', parts=[
        ParameterNode(pos=(677, 688), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(688, 689), word=';'),
      ReservedwordNode(pos=(690, 692), word='do'),
      ListNode(pos=(695, 723), parts=[
          PipelineNode(pos=(695, 722), parts=[
            ReservedwordNode(pos=(695, 696), word='!'),
            CommandNode(pos=(697, 722), parts=[
              WordNode(pos=(697, 701), word='grep'),
              WordNode(pos=(702, 704), word='-q'),
              WordNode(pos=(705, 714), word='^$conf=', parts=[
                ParameterNode(pos=(707, 712), value='conf'),
              ]),
              WordNode(pos=(715, 722), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(722, 723)),
        ]),
      ReservedwordNode(pos=(725, 729), word='done'),
    ]),
  ], pos=(665, 729)),
  OperatorNode(op=';', pos=(729, 730)),
  CompoundNode(list=[
    ForNode(pos=(732, 795), parts=[
      ReservedwordNode(pos=(732, 735), word='for'),
      WordNode(pos=(736, 741), word='confV'),
      ReservedwordNode(pos=(742, 744), word='in'),
      WordNode(pos=(745, 754), word='$setConfs', parts=[
        ParameterNode(pos=(745, 754), value='setConfs'),
      ]),
      ReservedwordNode(pos=(754, 755), word=';'),
      ReservedwordNode(pos=(756, 758), word='do'),
      ListNode(pos=(761, 789), parts=[
          CommandNode(pos=(761, 788), parts=[
            WordNode(pos=(761, 765), word='grep'),
            WordNode(pos=(766, 768), word='-q'),
            WordNode(pos=(769, 780), word='^$confV$', parts=[
              ParameterNode(pos=(771, 777), value='confV'),
            ]),
            WordNode(pos=(781, 788), word='.config'),
          ]),
          OperatorNode(op=';', pos=(788, 789)),
        ]),
      ReservedwordNode(pos=(791, 795), word='done'),
    ]),
  ], pos=(732, 795)),
  OperatorNode(op=';', pos=(795, 796)),
])


911) grep -q "^$conf=" .config

CommandNode(pos=(697, 722), parts=[
  WordNode(pos=(697, 701), word='grep'),
  WordNode(pos=(702, 704), word='-q'),
  WordNode(pos=(705, 714), word='^$conf=', parts=[
    ParameterNode(pos=(707, 712), value='conf'),
  ]),
  WordNode(pos=(715, 722), word='.config'),
])


912) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 796), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 154), parts=[
    AssignmentNode(pos=(11, 154), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0   CONFIG_STATIC=y  '),
  ]),
  OperatorNode(op=';', pos=(154, 155)),
  CommandNode(pos=(158, 300), parts=[
    AssignmentNode(pos=(158, 300), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY     CONFIG_FEATURE_HAVE_RPC   CONFIG_FEATURE_INETD_RPC   CONFIG_FEATURE_UTMP   CONFIG_FEATURE_WTMP  '),
  ]),
  OperatorNode(op=';', pos=(300, 301)),
  CommandNode(pos=(304, 318), parts=[
    WordNode(pos=(304, 308), word='make'),
    WordNode(pos=(309, 318), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(318, 319)),
  CompoundNode(list=[
    ForNode(pos=(322, 418), parts=[
      ReservedwordNode(pos=(322, 325), word='for'),
      WordNode(pos=(326, 330), word='conf'),
      ReservedwordNode(pos=(331, 333), word='in'),
      WordNode(pos=(334, 345), word='$unsetConfs', parts=[
        ParameterNode(pos=(334, 345), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(345, 346), word=';'),
      ReservedwordNode(pos=(347, 349), word='do'),
      ListNode(pos=(352, 412), parts=[
          CommandNode(pos=(352, 411), parts=[
            WordNode(pos=(352, 355), word='sed'),
            WordNode(pos=(356, 358), word='-i'),
            WordNode(pos=(362, 364), word='-e'),
            WordNode(pos=(365, 400), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(369, 374), value='conf'),
              ParameterNode(pos=(382, 387), value='conf'),
            ]),
            WordNode(pos=(404, 411), word='.config'),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
        ]),
      ReservedwordNode(pos=(414, 418), word='done'),
    ]),
  ], pos=(322, 418)),
  OperatorNode(op=';', pos=(418, 419)),
  CompoundNode(list=[
    ForNode(pos=(422, 643), parts=[
      ReservedwordNode(pos=(422, 425), word='for'),
      WordNode(pos=(426, 431), word='confV'),
      ReservedwordNode(pos=(432, 434), word='in'),
      WordNode(pos=(435, 444), word='$setConfs', parts=[
        ParameterNode(pos=(435, 444), value='setConfs'),
      ]),
      ReservedwordNode(pos=(444, 445), word=';'),
      ReservedwordNode(pos=(446, 448), word='do'),
      ListNode(pos=(451, 637), parts=[
          CommandNode(pos=(451, 469), parts=[
            AssignmentNode(pos=(451, 469), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(457, 468), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(469, 470)),
          CommandNode(pos=(473, 560), parts=[
            WordNode(pos=(473, 476), word='sed'),
            WordNode(pos=(477, 479), word='-i'),
            WordNode(pos=(483, 485), word='-e'),
            WordNode(pos=(486, 509), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(490, 495), value='conf'),
              ParameterNode(pos=(501, 507), value='confV'),
            ]),
            WordNode(pos=(513, 515), word='-e'),
            WordNode(pos=(516, 549), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(522, 527), value='conf'),
              ParameterNode(pos=(541, 547), value='confV'),
            ]),
            WordNode(pos=(553, 560), word='.config'),
          ]),
          OperatorNode(op=';', pos=(560, 561)),
          CompoundNode(list=[
            IfNode(pos=(564, 636), parts=[
              ReservedwordNode(pos=(564, 566), word='if'),
              ListNode(pos=(567, 597), parts=[
                  PipelineNode(pos=(567, 596), parts=[
                    ReservedwordNode(pos=(567, 568), word='!'),
                    CommandNode(pos=(569, 596), parts=[
                      WordNode(pos=(569, 573), word='grep'),
                      WordNode(pos=(574, 576), word='-q'),
                      WordNode(pos=(577, 588), word='^$confV$', parts=[
                        ParameterNode(pos=(579, 585), value='confV'),
                      ]),
                      WordNode(pos=(589, 596), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(596, 597)),
                ]),
              ReservedwordNode(pos=(598, 602), word='then'),
              ListNode(pos=(606, 631), parts=[
                  CommandNode(pos=(606, 630), parts=[
                    WordNode(pos=(606, 610), word='echo'),
                    WordNode(pos=(611, 619), word='$confV', parts=[
                      ParameterNode(pos=(612, 618), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(623, 630), word='.config'), pos=(620, 630), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(630, 631)),
                ]),
              ReservedwordNode(pos=(634, 636), word='fi'),
            ]),
          ], pos=(564, 636)),
          OperatorNode(op=';', pos=(636, 637)),
        ]),
      ReservedwordNode(pos=(639, 643), word='done'),
    ]),
  ], pos=(422, 643)),
  OperatorNode(op=';', pos=(643, 644)),
  CommandNode(pos=(647, 661), parts=[
    WordNode(pos=(647, 651), word='make'),
    WordNode(pos=(652, 661), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(661, 662)),
  CompoundNode(list=[
    ForNode(pos=(665, 729), parts=[
      ReservedwordNode(pos=(665, 668), word='for'),
      WordNode(pos=(669, 673), word='conf'),
      ReservedwordNode(pos=(674, 676), word='in'),
      WordNode(pos=(677, 688), word='$unsetConfs', parts=[
        ParameterNode(pos=(677, 688), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(688, 689), word=';'),
      ReservedwordNode(pos=(690, 692), word='do'),
      ListNode(pos=(695, 723), parts=[
          PipelineNode(pos=(695, 722), parts=[
            ReservedwordNode(pos=(695, 696), word='!'),
            CommandNode(pos=(697, 722), parts=[
              WordNode(pos=(697, 701), word='grep'),
              WordNode(pos=(702, 704), word='-q'),
              WordNode(pos=(705, 714), word='^$conf=', parts=[
                ParameterNode(pos=(707, 712), value='conf'),
              ]),
              WordNode(pos=(715, 722), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(722, 723)),
        ]),
      ReservedwordNode(pos=(725, 729), word='done'),
    ]),
  ], pos=(665, 729)),
  OperatorNode(op=';', pos=(729, 730)),
  CompoundNode(list=[
    ForNode(pos=(732, 795), parts=[
      ReservedwordNode(pos=(732, 735), word='for'),
      WordNode(pos=(736, 741), word='confV'),
      ReservedwordNode(pos=(742, 744), word='in'),
      WordNode(pos=(745, 754), word='$setConfs', parts=[
        ParameterNode(pos=(745, 754), value='setConfs'),
      ]),
      ReservedwordNode(pos=(754, 755), word=';'),
      ReservedwordNode(pos=(756, 758), word='do'),
      ListNode(pos=(761, 789), parts=[
          CommandNode(pos=(761, 788), parts=[
            WordNode(pos=(761, 765), word='grep'),
            WordNode(pos=(766, 768), word='-q'),
            WordNode(pos=(769, 780), word='^$confV$', parts=[
              ParameterNode(pos=(771, 777), value='confV'),
            ]),
            WordNode(pos=(781, 788), word='.config'),
          ]),
          OperatorNode(op=';', pos=(788, 789)),
        ]),
      ReservedwordNode(pos=(791, 795), word='done'),
    ]),
  ], pos=(732, 795)),
  OperatorNode(op=';', pos=(795, 796)),
])


913) grep -q "^$confV\$" .config

CommandNode(pos=(761, 788), parts=[
  WordNode(pos=(761, 765), word='grep'),
  WordNode(pos=(766, 768), word='-q'),
  WordNode(pos=(769, 780), word='^$confV$', parts=[
    ParameterNode(pos=(771, 777), value='confV'),
  ]),
  WordNode(pos=(781, 788), word='.config'),
])


914) curl -fsSL   "https://git.alpinelinux.org/cgit/aports/plain/main/musl/getconf.c?h=${aportsVersion}"   -o /usr/src/getconf.c

CommandNode(pos=(59, 182), parts=[
  WordNode(pos=(59, 63), word='curl'),
  WordNode(pos=(64, 69), word='-fsSL'),
  WordNode(pos=(72, 158), word='https://git.alpinelinux.org/cgit/aports/plain/main/musl/getconf.c?h=${aportsVersion}', parts=[
    ParameterNode(pos=(141, 157), value='aportsVersion'),
  ]),
  WordNode(pos=(161, 163), word='-o'),
  WordNode(pos=(164, 182), word='/usr/src/getconf.c'),
])


915) curl -fL -o "rootfs/etc/$f" "https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion"

CommandNode(pos=(96, 209), parts=[
  WordNode(pos=(96, 100), word='curl'),
  WordNode(pos=(101, 104), word='-fL'),
  WordNode(pos=(105, 107), word='-o'),
  WordNode(pos=(108, 123), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(120, 122), value='f'),
  ]),
  WordNode(pos=(124, 209), word='https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion', parts=[
    ParameterNode(pos=(185, 187), value='f'),
    ParameterNode(pos=(191, 208), value='buildrootVersion'),
  ]),
])


916) curl -fL -o "rootfs/etc/$f" "https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion"

CommandNode(pos=(96, 209), parts=[
  WordNode(pos=(96, 100), word='curl'),
  WordNode(pos=(101, 104), word='-fL'),
  WordNode(pos=(105, 107), word='-o'),
  WordNode(pos=(108, 123), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(120, 122), value='f'),
  ]),
  WordNode(pos=(124, 209), word='https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion', parts=[
    ParameterNode(pos=(185, 187), value='f'),
    ParameterNode(pos=(191, 208), value='buildrootVersion'),
  ]),
])


917) curl -fL -o "rootfs/etc/$f" "https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion"

CommandNode(pos=(96, 209), parts=[
  WordNode(pos=(96, 100), word='curl'),
  WordNode(pos=(101, 104), word='-fL'),
  WordNode(pos=(105, 107), word='-o'),
  WordNode(pos=(108, 123), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(120, 122), value='f'),
  ]),
  WordNode(pos=(124, 209), word='https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion', parts=[
    ParameterNode(pos=(185, 187), value='f'),
    ParameterNode(pos=(191, 208), value='buildrootVersion'),
  ]),
])


918) curl -fL -o buildroot-device-table.txt "https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion"

CommandNode(pos=(350, 475), parts=[
  WordNode(pos=(350, 354), word='curl'),
  WordNode(pos=(355, 358), word='-fL'),
  WordNode(pos=(359, 361), word='-o'),
  WordNode(pos=(362, 388), word='buildroot-device-table.txt'),
  WordNode(pos=(389, 475), word='https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion', parts=[
    ParameterNode(pos=(457, 474), value='buildrootVersion'),
  ]),
])


919) user="${userHome%%=*}"

CommandNode(pos=(102, 124), parts=[
  AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
    ParameterNode(pos=(108, 123), value='userHome%%=*'),
  ]),
])


920) home="${userHome#*=}"

CommandNode(pos=(128, 149), parts=[
  AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
    ParameterNode(pos=(134, 148), value='userHome#*='),
  ]),
])


921) home="./${home#/}"

CommandNode(pos=(153, 171), parts=[
  AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
    ParameterNode(pos=(161, 170), value='home#/'),
  ]),
])


922) [ ! -d "$home" ]

CommandNode(pos=(178, 194), parts=[
  WordNode(pos=(178, 179), word='['),
  WordNode(pos=(180, 181), word='!'),
  WordNode(pos=(182, 184), word='-d'),
  WordNode(pos=(185, 192), word='$home', parts=[
    ParameterNode(pos=(186, 191), value='home'),
  ]),
  WordNode(pos=(193, 194), word=']'),
])


923) mkdir -p "$home"

CommandNode(pos=(204, 220), parts=[
  WordNode(pos=(204, 209), word='mkdir'),
  WordNode(pos=(210, 212), word='-p'),
  WordNode(pos=(213, 220), word='$home', parts=[
    ParameterNode(pos=(214, 219), value='home'),
  ]),
])


924) chown "$user" "$home"

CommandNode(pos=(225, 246), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 238), word='$user', parts=[
    ParameterNode(pos=(232, 237), value='user'),
  ]),
  WordNode(pos=(239, 246), word='$home', parts=[
    ParameterNode(pos=(240, 245), value='home'),
  ]),
])


925) chown "$user" "$home"

CommandNode(pos=(225, 246), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 238), word='$user', parts=[
    ParameterNode(pos=(232, 237), value='user'),
  ]),
  WordNode(pos=(239, 246), word='$home', parts=[
    ParameterNode(pos=(240, 245), value='home'),
  ]),
])


926) chmod 755 "$home"

CommandNode(pos=(251, 268), parts=[
  WordNode(pos=(251, 256), word='chmod'),
  WordNode(pos=(257, 260), word='755'),
  WordNode(pos=(261, 268), word='$home', parts=[
    ParameterNode(pos=(262, 267), value='home'),
  ]),
])


927) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


928) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


929) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


930) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


931) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


932) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


933) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


934) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


935) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


936) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


937) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


938) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


939) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


940) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


941) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


942) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


943) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


944) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


945) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


946) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


947) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


948) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


949) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


950) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt

CommandNode(pos=(1385, 1754), parts=[
  WordNode(pos=(1385, 1396), word='./configure'),
  WordNode(pos=(1399, 1417), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1408, 1416), value='gnuArch'),
  ]),
  WordNode(pos=(1420, 1446), word='--enable-integer-datetimes'),
  WordNode(pos=(1449, 1471), word='--enable-thread-safety'),
  WordNode(pos=(1474, 1492), word='--enable-tap-tests'),
  WordNode(pos=(1495, 1510), word='--disable-rpath'),
  WordNode(pos=(1513, 1529), word='--with-uuid=e2fs'),
  WordNode(pos=(1532, 1545), word='--with-gnu-ld'),
  WordNode(pos=(1548, 1566), word='--with-pgport=5432'),
  WordNode(pos=(1569, 1609), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1612, 1631), word='--prefix=/usr/local'),
  WordNode(pos=(1634, 1668), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1671, 1702), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1707, 1721), word='--with-openssl'),
  WordNode(pos=(1724, 1737), word='--with-libxml'),
  WordNode(pos=(1740, 1754), word='--with-libxslt'),
])


951) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2042, 2127), parts=[
  WordNode(pos=(2042, 2045), word='apk'),
  WordNode(pos=(2046, 2049), word='add'),
  WordNode(pos=(2050, 2060), word='--no-cache'),
  WordNode(pos=(2061, 2070), word='--virtual'),
  WordNode(pos=(2071, 2090), word='.postgresql-rundeps'),
  WordNode(pos=(2093, 2101), word='$runDeps', parts=[
    ParameterNode(pos=(2093, 2101), value='runDeps'),
  ]),
  WordNode(pos=(2104, 2108), word='bash'),
  WordNode(pos=(2111, 2118), word='su-exec'),
  WordNode(pos=(2121, 2127), word='tzdata'),
])


952) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


953) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


954) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


955) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


956) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


957) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


958) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


959) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


960) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


961) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4   --with-system-expat   --with-system-ffi

CommandNode(pos=(1134, 1250), parts=[
  WordNode(pos=(1134, 1145), word='./configure'),
  WordNode(pos=(1148, 1166), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1157, 1165), value='gnuArch'),
  ]),
  WordNode(pos=(1169, 1184), word='--enable-shared'),
  WordNode(pos=(1187, 1208), word='--enable-unicode=ucs4'),
  WordNode(pos=(1211, 1230), word='--with-system-expat'),
  WordNode(pos=(1233, 1250), word='--with-system-ffi'),
])


962) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


963) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


964) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


965) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


966) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


967) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


968) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


969) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


970) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


971) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


972) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


973) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


974) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


975) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


976) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


977) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


978) tarball="busybox-${BUSYBOX_VERSION}.tar.bz2"

CommandNode(pos=(10, 54), parts=[
  AssignmentNode(pos=(10, 54), word='tarball=busybox-${BUSYBOX_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(27, 45), value='BUSYBOX_VERSION'),
  ]),
])


979) curl -fL -o busybox.tar.bz2 "https://busybox.net/downloads/$tarball"

CommandNode(pos=(57, 125), parts=[
  WordNode(pos=(57, 61), word='curl'),
  WordNode(pos=(62, 65), word='-fL'),
  WordNode(pos=(66, 68), word='-o'),
  WordNode(pos=(69, 84), word='busybox.tar.bz2'),
  WordNode(pos=(85, 125), word='https://busybox.net/downloads/$tarball', parts=[
    ParameterNode(pos=(116, 124), value='tarball'),
  ]),
])


980) curl -fL -o busybox.tar.bz2.sig "https://busybox.net/downloads/$tarball.sig"

CommandNode(pos=(128, 204), parts=[
  WordNode(pos=(128, 132), word='curl'),
  WordNode(pos=(133, 136), word='-fL'),
  WordNode(pos=(137, 139), word='-o'),
  WordNode(pos=(140, 159), word='busybox.tar.bz2.sig'),
  WordNode(pos=(160, 204), word='https://busybox.net/downloads/$tarball.sig', parts=[
    ParameterNode(pos=(191, 199), value='tarball'),
  ]),
])


981) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 679), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 136), parts=[
    AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CommandNode(pos=(140, 183), parts=[
    AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(187, 201), parts=[
    WordNode(pos=(187, 191), word='make'),
    WordNode(pos=(192, 201), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CompoundNode(list=[
    ForNode(pos=(205, 301), parts=[
      ReservedwordNode(pos=(205, 208), word='for'),
      WordNode(pos=(209, 213), word='conf'),
      ReservedwordNode(pos=(214, 216), word='in'),
      WordNode(pos=(217, 228), word='$unsetConfs', parts=[
        ParameterNode(pos=(217, 228), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(228, 229), word=';'),
      ReservedwordNode(pos=(230, 232), word='do'),
      ListNode(pos=(235, 295), parts=[
          CommandNode(pos=(235, 294), parts=[
            WordNode(pos=(235, 238), word='sed'),
            WordNode(pos=(239, 241), word='-i'),
            WordNode(pos=(245, 247), word='-e'),
            WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(252, 257), value='conf'),
              ParameterNode(pos=(265, 270), value='conf'),
            ]),
            WordNode(pos=(287, 294), word='.config'),
          ]),
          OperatorNode(op=';', pos=(294, 295)),
        ]),
      ReservedwordNode(pos=(297, 301), word='done'),
    ]),
  ], pos=(205, 301)),
  OperatorNode(op=';', pos=(301, 302)),
  CompoundNode(list=[
    ForNode(pos=(305, 526), parts=[
      ReservedwordNode(pos=(305, 308), word='for'),
      WordNode(pos=(309, 314), word='confV'),
      ReservedwordNode(pos=(315, 317), word='in'),
      WordNode(pos=(318, 327), word='$setConfs', parts=[
        ParameterNode(pos=(318, 327), value='setConfs'),
      ]),
      ReservedwordNode(pos=(327, 328), word=';'),
      ReservedwordNode(pos=(329, 331), word='do'),
      ListNode(pos=(334, 520), parts=[
          CommandNode(pos=(334, 352), parts=[
            AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(340, 351), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(352, 353)),
          CommandNode(pos=(356, 443), parts=[
            WordNode(pos=(356, 359), word='sed'),
            WordNode(pos=(360, 362), word='-i'),
            WordNode(pos=(366, 368), word='-e'),
            WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(373, 378), value='conf'),
              ParameterNode(pos=(384, 390), value='confV'),
            ]),
            WordNode(pos=(396, 398), word='-e'),
            WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(405, 410), value='conf'),
              ParameterNode(pos=(424, 430), value='confV'),
            ]),
            WordNode(pos=(436, 443), word='.config'),
          ]),
          OperatorNode(op=';', pos=(443, 444)),
          CompoundNode(list=[
            IfNode(pos=(447, 519), parts=[
              ReservedwordNode(pos=(447, 449), word='if'),
              ListNode(pos=(450, 480), parts=[
                  PipelineNode(pos=(450, 479), parts=[
                    ReservedwordNode(pos=(450, 451), word='!'),
                    CommandNode(pos=(452, 479), parts=[
                      WordNode(pos=(452, 456), word='grep'),
                      WordNode(pos=(457, 459), word='-q'),
                      WordNode(pos=(460, 471), word='^$confV$', parts=[
                        ParameterNode(pos=(462, 468), value='confV'),
                      ]),
                      WordNode(pos=(472, 479), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(479, 480)),
                ]),
              ReservedwordNode(pos=(481, 485), word='then'),
              ListNode(pos=(489, 514), parts=[
                  CommandNode(pos=(489, 513), parts=[
                    WordNode(pos=(489, 493), word='echo'),
                    WordNode(pos=(494, 502), word='$confV', parts=[
                      ParameterNode(pos=(495, 501), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(513, 514)),
                ]),
              ReservedwordNode(pos=(517, 519), word='fi'),
            ]),
          ], pos=(447, 519)),
          OperatorNode(op=';', pos=(519, 520)),
        ]),
      ReservedwordNode(pos=(522, 526), word='done'),
    ]),
  ], pos=(305, 526)),
  OperatorNode(op=';', pos=(526, 527)),
  CommandNode(pos=(530, 544), parts=[
    WordNode(pos=(530, 534), word='make'),
    WordNode(pos=(535, 544), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CompoundNode(list=[
    ForNode(pos=(548, 612), parts=[
      ReservedwordNode(pos=(548, 551), word='for'),
      WordNode(pos=(552, 556), word='conf'),
      ReservedwordNode(pos=(557, 559), word='in'),
      WordNode(pos=(560, 571), word='$unsetConfs', parts=[
        ParameterNode(pos=(560, 571), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(571, 572), word=';'),
      ReservedwordNode(pos=(573, 575), word='do'),
      ListNode(pos=(578, 606), parts=[
          PipelineNode(pos=(578, 605), parts=[
            ReservedwordNode(pos=(578, 579), word='!'),
            CommandNode(pos=(580, 605), parts=[
              WordNode(pos=(580, 584), word='grep'),
              WordNode(pos=(585, 587), word='-q'),
              WordNode(pos=(588, 597), word='^$conf=', parts=[
                ParameterNode(pos=(590, 595), value='conf'),
              ]),
              WordNode(pos=(598, 605), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(605, 606)),
        ]),
      ReservedwordNode(pos=(608, 612), word='done'),
    ]),
  ], pos=(548, 612)),
  OperatorNode(op=';', pos=(612, 613)),
  CompoundNode(list=[
    ForNode(pos=(615, 678), parts=[
      ReservedwordNode(pos=(615, 618), word='for'),
      WordNode(pos=(619, 624), word='confV'),
      ReservedwordNode(pos=(625, 627), word='in'),
      WordNode(pos=(628, 637), word='$setConfs', parts=[
        ParameterNode(pos=(628, 637), value='setConfs'),
      ]),
      ReservedwordNode(pos=(637, 638), word=';'),
      ReservedwordNode(pos=(639, 641), word='do'),
      ListNode(pos=(644, 672), parts=[
          CommandNode(pos=(644, 671), parts=[
            WordNode(pos=(644, 648), word='grep'),
            WordNode(pos=(649, 651), word='-q'),
            WordNode(pos=(652, 663), word='^$confV$', parts=[
              ParameterNode(pos=(654, 660), value='confV'),
            ]),
            WordNode(pos=(664, 671), word='.config'),
          ]),
          OperatorNode(op=';', pos=(671, 672)),
        ]),
      ReservedwordNode(pos=(674, 678), word='done'),
    ]),
  ], pos=(615, 678)),
  OperatorNode(op=';', pos=(678, 679)),
])


982) sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config

CommandNode(pos=(235, 294), parts=[
  WordNode(pos=(235, 238), word='sed'),
  WordNode(pos=(239, 241), word='-i'),
  WordNode(pos=(245, 247), word='-e'),
  WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
    ParameterNode(pos=(252, 257), value='conf'),
    ParameterNode(pos=(265, 270), value='conf'),
  ]),
  WordNode(pos=(287, 294), word='.config'),
])


983) sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config

CommandNode(pos=(235, 294), parts=[
  WordNode(pos=(235, 238), word='sed'),
  WordNode(pos=(239, 241), word='-i'),
  WordNode(pos=(245, 247), word='-e'),
  WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
    ParameterNode(pos=(252, 257), value='conf'),
    ParameterNode(pos=(265, 270), value='conf'),
  ]),
  WordNode(pos=(287, 294), word='.config'),
])


984) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 679), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 136), parts=[
    AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CommandNode(pos=(140, 183), parts=[
    AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(187, 201), parts=[
    WordNode(pos=(187, 191), word='make'),
    WordNode(pos=(192, 201), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CompoundNode(list=[
    ForNode(pos=(205, 301), parts=[
      ReservedwordNode(pos=(205, 208), word='for'),
      WordNode(pos=(209, 213), word='conf'),
      ReservedwordNode(pos=(214, 216), word='in'),
      WordNode(pos=(217, 228), word='$unsetConfs', parts=[
        ParameterNode(pos=(217, 228), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(228, 229), word=';'),
      ReservedwordNode(pos=(230, 232), word='do'),
      ListNode(pos=(235, 295), parts=[
          CommandNode(pos=(235, 294), parts=[
            WordNode(pos=(235, 238), word='sed'),
            WordNode(pos=(239, 241), word='-i'),
            WordNode(pos=(245, 247), word='-e'),
            WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(252, 257), value='conf'),
              ParameterNode(pos=(265, 270), value='conf'),
            ]),
            WordNode(pos=(287, 294), word='.config'),
          ]),
          OperatorNode(op=';', pos=(294, 295)),
        ]),
      ReservedwordNode(pos=(297, 301), word='done'),
    ]),
  ], pos=(205, 301)),
  OperatorNode(op=';', pos=(301, 302)),
  CompoundNode(list=[
    ForNode(pos=(305, 526), parts=[
      ReservedwordNode(pos=(305, 308), word='for'),
      WordNode(pos=(309, 314), word='confV'),
      ReservedwordNode(pos=(315, 317), word='in'),
      WordNode(pos=(318, 327), word='$setConfs', parts=[
        ParameterNode(pos=(318, 327), value='setConfs'),
      ]),
      ReservedwordNode(pos=(327, 328), word=';'),
      ReservedwordNode(pos=(329, 331), word='do'),
      ListNode(pos=(334, 520), parts=[
          CommandNode(pos=(334, 352), parts=[
            AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(340, 351), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(352, 353)),
          CommandNode(pos=(356, 443), parts=[
            WordNode(pos=(356, 359), word='sed'),
            WordNode(pos=(360, 362), word='-i'),
            WordNode(pos=(366, 368), word='-e'),
            WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(373, 378), value='conf'),
              ParameterNode(pos=(384, 390), value='confV'),
            ]),
            WordNode(pos=(396, 398), word='-e'),
            WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(405, 410), value='conf'),
              ParameterNode(pos=(424, 430), value='confV'),
            ]),
            WordNode(pos=(436, 443), word='.config'),
          ]),
          OperatorNode(op=';', pos=(443, 444)),
          CompoundNode(list=[
            IfNode(pos=(447, 519), parts=[
              ReservedwordNode(pos=(447, 449), word='if'),
              ListNode(pos=(450, 480), parts=[
                  PipelineNode(pos=(450, 479), parts=[
                    ReservedwordNode(pos=(450, 451), word='!'),
                    CommandNode(pos=(452, 479), parts=[
                      WordNode(pos=(452, 456), word='grep'),
                      WordNode(pos=(457, 459), word='-q'),
                      WordNode(pos=(460, 471), word='^$confV$', parts=[
                        ParameterNode(pos=(462, 468), value='confV'),
                      ]),
                      WordNode(pos=(472, 479), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(479, 480)),
                ]),
              ReservedwordNode(pos=(481, 485), word='then'),
              ListNode(pos=(489, 514), parts=[
                  CommandNode(pos=(489, 513), parts=[
                    WordNode(pos=(489, 493), word='echo'),
                    WordNode(pos=(494, 502), word='$confV', parts=[
                      ParameterNode(pos=(495, 501), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(513, 514)),
                ]),
              ReservedwordNode(pos=(517, 519), word='fi'),
            ]),
          ], pos=(447, 519)),
          OperatorNode(op=';', pos=(519, 520)),
        ]),
      ReservedwordNode(pos=(522, 526), word='done'),
    ]),
  ], pos=(305, 526)),
  OperatorNode(op=';', pos=(526, 527)),
  CommandNode(pos=(530, 544), parts=[
    WordNode(pos=(530, 534), word='make'),
    WordNode(pos=(535, 544), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CompoundNode(list=[
    ForNode(pos=(548, 612), parts=[
      ReservedwordNode(pos=(548, 551), word='for'),
      WordNode(pos=(552, 556), word='conf'),
      ReservedwordNode(pos=(557, 559), word='in'),
      WordNode(pos=(560, 571), word='$unsetConfs', parts=[
        ParameterNode(pos=(560, 571), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(571, 572), word=';'),
      ReservedwordNode(pos=(573, 575), word='do'),
      ListNode(pos=(578, 606), parts=[
          PipelineNode(pos=(578, 605), parts=[
            ReservedwordNode(pos=(578, 579), word='!'),
            CommandNode(pos=(580, 605), parts=[
              WordNode(pos=(580, 584), word='grep'),
              WordNode(pos=(585, 587), word='-q'),
              WordNode(pos=(588, 597), word='^$conf=', parts=[
                ParameterNode(pos=(590, 595), value='conf'),
              ]),
              WordNode(pos=(598, 605), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(605, 606)),
        ]),
      ReservedwordNode(pos=(608, 612), word='done'),
    ]),
  ], pos=(548, 612)),
  OperatorNode(op=';', pos=(612, 613)),
  CompoundNode(list=[
    ForNode(pos=(615, 678), parts=[
      ReservedwordNode(pos=(615, 618), word='for'),
      WordNode(pos=(619, 624), word='confV'),
      ReservedwordNode(pos=(625, 627), word='in'),
      WordNode(pos=(628, 637), word='$setConfs', parts=[
        ParameterNode(pos=(628, 637), value='setConfs'),
      ]),
      ReservedwordNode(pos=(637, 638), word=';'),
      ReservedwordNode(pos=(639, 641), word='do'),
      ListNode(pos=(644, 672), parts=[
          CommandNode(pos=(644, 671), parts=[
            WordNode(pos=(644, 648), word='grep'),
            WordNode(pos=(649, 651), word='-q'),
            WordNode(pos=(652, 663), word='^$confV$', parts=[
              ParameterNode(pos=(654, 660), value='confV'),
            ]),
            WordNode(pos=(664, 671), word='.config'),
          ]),
          OperatorNode(op=';', pos=(671, 672)),
        ]),
      ReservedwordNode(pos=(674, 678), word='done'),
    ]),
  ], pos=(615, 678)),
  OperatorNode(op=';', pos=(678, 679)),
])


985) conf="${confV%=*}"

CommandNode(pos=(334, 352), parts=[
  AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
    ParameterNode(pos=(340, 351), value='confV%=*'),
  ]),
])


986) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(356, 443), parts=[
  WordNode(pos=(356, 359), word='sed'),
  WordNode(pos=(360, 362), word='-i'),
  WordNode(pos=(366, 368), word='-e'),
  WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(373, 378), value='conf'),
    ParameterNode(pos=(384, 390), value='confV'),
  ]),
  WordNode(pos=(396, 398), word='-e'),
  WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(405, 410), value='conf'),
    ParameterNode(pos=(424, 430), value='confV'),
  ]),
  WordNode(pos=(436, 443), word='.config'),
])


987) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(356, 443), parts=[
  WordNode(pos=(356, 359), word='sed'),
  WordNode(pos=(360, 362), word='-i'),
  WordNode(pos=(366, 368), word='-e'),
  WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(373, 378), value='conf'),
    ParameterNode(pos=(384, 390), value='confV'),
  ]),
  WordNode(pos=(396, 398), word='-e'),
  WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(405, 410), value='conf'),
    ParameterNode(pos=(424, 430), value='confV'),
  ]),
  WordNode(pos=(436, 443), word='.config'),
])


988) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(356, 443), parts=[
  WordNode(pos=(356, 359), word='sed'),
  WordNode(pos=(360, 362), word='-i'),
  WordNode(pos=(366, 368), word='-e'),
  WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(373, 378), value='conf'),
    ParameterNode(pos=(384, 390), value='confV'),
  ]),
  WordNode(pos=(396, 398), word='-e'),
  WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(405, 410), value='conf'),
    ParameterNode(pos=(424, 430), value='confV'),
  ]),
  WordNode(pos=(436, 443), word='.config'),
])


989) sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config

CommandNode(pos=(356, 443), parts=[
  WordNode(pos=(356, 359), word='sed'),
  WordNode(pos=(360, 362), word='-i'),
  WordNode(pos=(366, 368), word='-e'),
  WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
    ParameterNode(pos=(373, 378), value='conf'),
    ParameterNode(pos=(384, 390), value='confV'),
  ]),
  WordNode(pos=(396, 398), word='-e'),
  WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
    ParameterNode(pos=(405, 410), value='conf'),
    ParameterNode(pos=(424, 430), value='confV'),
  ]),
  WordNode(pos=(436, 443), word='.config'),
])


990) grep -q "^$confV\$" .config

CommandNode(pos=(452, 479), parts=[
  WordNode(pos=(452, 456), word='grep'),
  WordNode(pos=(457, 459), word='-q'),
  WordNode(pos=(460, 471), word='^$confV$', parts=[
    ParameterNode(pos=(462, 468), value='confV'),
  ]),
  WordNode(pos=(472, 479), word='.config'),
])


991) echo "$confV" >> .config

CommandNode(pos=(489, 513), parts=[
  WordNode(pos=(489, 493), word='echo'),
  WordNode(pos=(494, 502), word='$confV', parts=[
    ParameterNode(pos=(495, 501), value='confV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
])


992) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 679), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 136), parts=[
    AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CommandNode(pos=(140, 183), parts=[
    AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(187, 201), parts=[
    WordNode(pos=(187, 191), word='make'),
    WordNode(pos=(192, 201), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CompoundNode(list=[
    ForNode(pos=(205, 301), parts=[
      ReservedwordNode(pos=(205, 208), word='for'),
      WordNode(pos=(209, 213), word='conf'),
      ReservedwordNode(pos=(214, 216), word='in'),
      WordNode(pos=(217, 228), word='$unsetConfs', parts=[
        ParameterNode(pos=(217, 228), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(228, 229), word=';'),
      ReservedwordNode(pos=(230, 232), word='do'),
      ListNode(pos=(235, 295), parts=[
          CommandNode(pos=(235, 294), parts=[
            WordNode(pos=(235, 238), word='sed'),
            WordNode(pos=(239, 241), word='-i'),
            WordNode(pos=(245, 247), word='-e'),
            WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(252, 257), value='conf'),
              ParameterNode(pos=(265, 270), value='conf'),
            ]),
            WordNode(pos=(287, 294), word='.config'),
          ]),
          OperatorNode(op=';', pos=(294, 295)),
        ]),
      ReservedwordNode(pos=(297, 301), word='done'),
    ]),
  ], pos=(205, 301)),
  OperatorNode(op=';', pos=(301, 302)),
  CompoundNode(list=[
    ForNode(pos=(305, 526), parts=[
      ReservedwordNode(pos=(305, 308), word='for'),
      WordNode(pos=(309, 314), word='confV'),
      ReservedwordNode(pos=(315, 317), word='in'),
      WordNode(pos=(318, 327), word='$setConfs', parts=[
        ParameterNode(pos=(318, 327), value='setConfs'),
      ]),
      ReservedwordNode(pos=(327, 328), word=';'),
      ReservedwordNode(pos=(329, 331), word='do'),
      ListNode(pos=(334, 520), parts=[
          CommandNode(pos=(334, 352), parts=[
            AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(340, 351), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(352, 353)),
          CommandNode(pos=(356, 443), parts=[
            WordNode(pos=(356, 359), word='sed'),
            WordNode(pos=(360, 362), word='-i'),
            WordNode(pos=(366, 368), word='-e'),
            WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(373, 378), value='conf'),
              ParameterNode(pos=(384, 390), value='confV'),
            ]),
            WordNode(pos=(396, 398), word='-e'),
            WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(405, 410), value='conf'),
              ParameterNode(pos=(424, 430), value='confV'),
            ]),
            WordNode(pos=(436, 443), word='.config'),
          ]),
          OperatorNode(op=';', pos=(443, 444)),
          CompoundNode(list=[
            IfNode(pos=(447, 519), parts=[
              ReservedwordNode(pos=(447, 449), word='if'),
              ListNode(pos=(450, 480), parts=[
                  PipelineNode(pos=(450, 479), parts=[
                    ReservedwordNode(pos=(450, 451), word='!'),
                    CommandNode(pos=(452, 479), parts=[
                      WordNode(pos=(452, 456), word='grep'),
                      WordNode(pos=(457, 459), word='-q'),
                      WordNode(pos=(460, 471), word='^$confV$', parts=[
                        ParameterNode(pos=(462, 468), value='confV'),
                      ]),
                      WordNode(pos=(472, 479), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(479, 480)),
                ]),
              ReservedwordNode(pos=(481, 485), word='then'),
              ListNode(pos=(489, 514), parts=[
                  CommandNode(pos=(489, 513), parts=[
                    WordNode(pos=(489, 493), word='echo'),
                    WordNode(pos=(494, 502), word='$confV', parts=[
                      ParameterNode(pos=(495, 501), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(513, 514)),
                ]),
              ReservedwordNode(pos=(517, 519), word='fi'),
            ]),
          ], pos=(447, 519)),
          OperatorNode(op=';', pos=(519, 520)),
        ]),
      ReservedwordNode(pos=(522, 526), word='done'),
    ]),
  ], pos=(305, 526)),
  OperatorNode(op=';', pos=(526, 527)),
  CommandNode(pos=(530, 544), parts=[
    WordNode(pos=(530, 534), word='make'),
    WordNode(pos=(535, 544), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CompoundNode(list=[
    ForNode(pos=(548, 612), parts=[
      ReservedwordNode(pos=(548, 551), word='for'),
      WordNode(pos=(552, 556), word='conf'),
      ReservedwordNode(pos=(557, 559), word='in'),
      WordNode(pos=(560, 571), word='$unsetConfs', parts=[
        ParameterNode(pos=(560, 571), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(571, 572), word=';'),
      ReservedwordNode(pos=(573, 575), word='do'),
      ListNode(pos=(578, 606), parts=[
          PipelineNode(pos=(578, 605), parts=[
            ReservedwordNode(pos=(578, 579), word='!'),
            CommandNode(pos=(580, 605), parts=[
              WordNode(pos=(580, 584), word='grep'),
              WordNode(pos=(585, 587), word='-q'),
              WordNode(pos=(588, 597), word='^$conf=', parts=[
                ParameterNode(pos=(590, 595), value='conf'),
              ]),
              WordNode(pos=(598, 605), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(605, 606)),
        ]),
      ReservedwordNode(pos=(608, 612), word='done'),
    ]),
  ], pos=(548, 612)),
  OperatorNode(op=';', pos=(612, 613)),
  CompoundNode(list=[
    ForNode(pos=(615, 678), parts=[
      ReservedwordNode(pos=(615, 618), word='for'),
      WordNode(pos=(619, 624), word='confV'),
      ReservedwordNode(pos=(625, 627), word='in'),
      WordNode(pos=(628, 637), word='$setConfs', parts=[
        ParameterNode(pos=(628, 637), value='setConfs'),
      ]),
      ReservedwordNode(pos=(637, 638), word=';'),
      ReservedwordNode(pos=(639, 641), word='do'),
      ListNode(pos=(644, 672), parts=[
          CommandNode(pos=(644, 671), parts=[
            WordNode(pos=(644, 648), word='grep'),
            WordNode(pos=(649, 651), word='-q'),
            WordNode(pos=(652, 663), word='^$confV$', parts=[
              ParameterNode(pos=(654, 660), value='confV'),
            ]),
            WordNode(pos=(664, 671), word='.config'),
          ]),
          OperatorNode(op=';', pos=(671, 672)),
        ]),
      ReservedwordNode(pos=(674, 678), word='done'),
    ]),
  ], pos=(615, 678)),
  OperatorNode(op=';', pos=(678, 679)),
])


993) grep -q "^$conf=" .config

CommandNode(pos=(580, 605), parts=[
  WordNode(pos=(580, 584), word='grep'),
  WordNode(pos=(585, 587), word='-q'),
  WordNode(pos=(588, 597), word='^$conf=', parts=[
    ParameterNode(pos=(590, 595), value='conf'),
  ]),
  WordNode(pos=(598, 605), word='.config'),
])


994) set -ex;   setConfs='   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  ';   unsetConfs='   CONFIG_FEATURE_SYNC_FANCY  ';   make defconfig;   for conf in $unsetConfs; do   sed -i    -e "s!^$conf=.*\$!# $conf is not set!"    .config;  done;   for confV in $setConfs; do   conf="${confV%=*}";   sed -i    -e "s!^$conf=.*\$!$confV!"    -e "s!^# $conf is not set\$!$confV!"    .config;   if ! grep -q "^$confV\$" .config; then    echo "$confV" >> .config;   fi;  done;   make oldconfig;   for conf in $unsetConfs; do   ! grep -q "^$conf=" .config;  done;  for confV in $setConfs; do   grep -q "^$confV\$" .config;  done;

ListNode(pos=(0, 679), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 136), parts=[
    AssignmentNode(pos=(11, 136), word='setConfs=   CONFIG_AR=y   CONFIG_FEATURE_AR_CREATE=y   CONFIG_FEATURE_AR_LONG_FILENAMES=y   CONFIG_LAST_SUPPORTED_WCHAR=0  '),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CommandNode(pos=(140, 183), parts=[
    AssignmentNode(pos=(140, 183), word='unsetConfs=   CONFIG_FEATURE_SYNC_FANCY  '),
  ]),
  OperatorNode(op=';', pos=(183, 184)),
  CommandNode(pos=(187, 201), parts=[
    WordNode(pos=(187, 191), word='make'),
    WordNode(pos=(192, 201), word='defconfig'),
  ]),
  OperatorNode(op=';', pos=(201, 202)),
  CompoundNode(list=[
    ForNode(pos=(205, 301), parts=[
      ReservedwordNode(pos=(205, 208), word='for'),
      WordNode(pos=(209, 213), word='conf'),
      ReservedwordNode(pos=(214, 216), word='in'),
      WordNode(pos=(217, 228), word='$unsetConfs', parts=[
        ParameterNode(pos=(217, 228), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(228, 229), word=';'),
      ReservedwordNode(pos=(230, 232), word='do'),
      ListNode(pos=(235, 295), parts=[
          CommandNode(pos=(235, 294), parts=[
            WordNode(pos=(235, 238), word='sed'),
            WordNode(pos=(239, 241), word='-i'),
            WordNode(pos=(245, 247), word='-e'),
            WordNode(pos=(248, 283), word='s!^$conf=.*$!# $conf is not set!', parts=[
              ParameterNode(pos=(252, 257), value='conf'),
              ParameterNode(pos=(265, 270), value='conf'),
            ]),
            WordNode(pos=(287, 294), word='.config'),
          ]),
          OperatorNode(op=';', pos=(294, 295)),
        ]),
      ReservedwordNode(pos=(297, 301), word='done'),
    ]),
  ], pos=(205, 301)),
  OperatorNode(op=';', pos=(301, 302)),
  CompoundNode(list=[
    ForNode(pos=(305, 526), parts=[
      ReservedwordNode(pos=(305, 308), word='for'),
      WordNode(pos=(309, 314), word='confV'),
      ReservedwordNode(pos=(315, 317), word='in'),
      WordNode(pos=(318, 327), word='$setConfs', parts=[
        ParameterNode(pos=(318, 327), value='setConfs'),
      ]),
      ReservedwordNode(pos=(327, 328), word=';'),
      ReservedwordNode(pos=(329, 331), word='do'),
      ListNode(pos=(334, 520), parts=[
          CommandNode(pos=(334, 352), parts=[
            AssignmentNode(pos=(334, 352), word='conf=${confV%=*}', parts=[
              ParameterNode(pos=(340, 351), value='confV%=*'),
            ]),
          ]),
          OperatorNode(op=';', pos=(352, 353)),
          CommandNode(pos=(356, 443), parts=[
            WordNode(pos=(356, 359), word='sed'),
            WordNode(pos=(360, 362), word='-i'),
            WordNode(pos=(366, 368), word='-e'),
            WordNode(pos=(369, 392), word='s!^$conf=.*$!$confV!', parts=[
              ParameterNode(pos=(373, 378), value='conf'),
              ParameterNode(pos=(384, 390), value='confV'),
            ]),
            WordNode(pos=(396, 398), word='-e'),
            WordNode(pos=(399, 432), word='s!^# $conf is not set$!$confV!', parts=[
              ParameterNode(pos=(405, 410), value='conf'),
              ParameterNode(pos=(424, 430), value='confV'),
            ]),
            WordNode(pos=(436, 443), word='.config'),
          ]),
          OperatorNode(op=';', pos=(443, 444)),
          CompoundNode(list=[
            IfNode(pos=(447, 519), parts=[
              ReservedwordNode(pos=(447, 449), word='if'),
              ListNode(pos=(450, 480), parts=[
                  PipelineNode(pos=(450, 479), parts=[
                    ReservedwordNode(pos=(450, 451), word='!'),
                    CommandNode(pos=(452, 479), parts=[
                      WordNode(pos=(452, 456), word='grep'),
                      WordNode(pos=(457, 459), word='-q'),
                      WordNode(pos=(460, 471), word='^$confV$', parts=[
                        ParameterNode(pos=(462, 468), value='confV'),
                      ]),
                      WordNode(pos=(472, 479), word='.config'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(479, 480)),
                ]),
              ReservedwordNode(pos=(481, 485), word='then'),
              ListNode(pos=(489, 514), parts=[
                  CommandNode(pos=(489, 513), parts=[
                    WordNode(pos=(489, 493), word='echo'),
                    WordNode(pos=(494, 502), word='$confV', parts=[
                      ParameterNode(pos=(495, 501), value='confV'),
                    ]),
                    RedirectNode(output=
                      WordNode(pos=(506, 513), word='.config'), pos=(503, 513), type='>>'),
                  ]),
                  OperatorNode(op=';', pos=(513, 514)),
                ]),
              ReservedwordNode(pos=(517, 519), word='fi'),
            ]),
          ], pos=(447, 519)),
          OperatorNode(op=';', pos=(519, 520)),
        ]),
      ReservedwordNode(pos=(522, 526), word='done'),
    ]),
  ], pos=(305, 526)),
  OperatorNode(op=';', pos=(526, 527)),
  CommandNode(pos=(530, 544), parts=[
    WordNode(pos=(530, 534), word='make'),
    WordNode(pos=(535, 544), word='oldconfig'),
  ]),
  OperatorNode(op=';', pos=(544, 545)),
  CompoundNode(list=[
    ForNode(pos=(548, 612), parts=[
      ReservedwordNode(pos=(548, 551), word='for'),
      WordNode(pos=(552, 556), word='conf'),
      ReservedwordNode(pos=(557, 559), word='in'),
      WordNode(pos=(560, 571), word='$unsetConfs', parts=[
        ParameterNode(pos=(560, 571), value='unsetConfs'),
      ]),
      ReservedwordNode(pos=(571, 572), word=';'),
      ReservedwordNode(pos=(573, 575), word='do'),
      ListNode(pos=(578, 606), parts=[
          PipelineNode(pos=(578, 605), parts=[
            ReservedwordNode(pos=(578, 579), word='!'),
            CommandNode(pos=(580, 605), parts=[
              WordNode(pos=(580, 584), word='grep'),
              WordNode(pos=(585, 587), word='-q'),
              WordNode(pos=(588, 597), word='^$conf=', parts=[
                ParameterNode(pos=(590, 595), value='conf'),
              ]),
              WordNode(pos=(598, 605), word='.config'),
            ]),
          ]),
          OperatorNode(op=';', pos=(605, 606)),
        ]),
      ReservedwordNode(pos=(608, 612), word='done'),
    ]),
  ], pos=(548, 612)),
  OperatorNode(op=';', pos=(612, 613)),
  CompoundNode(list=[
    ForNode(pos=(615, 678), parts=[
      ReservedwordNode(pos=(615, 618), word='for'),
      WordNode(pos=(619, 624), word='confV'),
      ReservedwordNode(pos=(625, 627), word='in'),
      WordNode(pos=(628, 637), word='$setConfs', parts=[
        ParameterNode(pos=(628, 637), value='setConfs'),
      ]),
      ReservedwordNode(pos=(637, 638), word=';'),
      ReservedwordNode(pos=(639, 641), word='do'),
      ListNode(pos=(644, 672), parts=[
          CommandNode(pos=(644, 671), parts=[
            WordNode(pos=(644, 648), word='grep'),
            WordNode(pos=(649, 651), word='-q'),
            WordNode(pos=(652, 663), word='^$confV$', parts=[
              ParameterNode(pos=(654, 660), value='confV'),
            ]),
            WordNode(pos=(664, 671), word='.config'),
          ]),
          OperatorNode(op=';', pos=(671, 672)),
        ]),
      ReservedwordNode(pos=(674, 678), word='done'),
    ]),
  ], pos=(615, 678)),
  OperatorNode(op=';', pos=(678, 679)),
])


995) grep -q "^$confV\$" .config

CommandNode(pos=(644, 671), parts=[
  WordNode(pos=(644, 648), word='grep'),
  WordNode(pos=(649, 651), word='-q'),
  WordNode(pos=(652, 663), word='^$confV$', parts=[
    ParameterNode(pos=(654, 660), value='confV'),
  ]),
  WordNode(pos=(664, 671), word='.config'),
])


996) [ "$#" -gt 0 ]

CommandNode(pos=(441, 455), parts=[
  WordNode(pos=(441, 442), word='['),
  WordNode(pos=(443, 447), word='$#', parts=[
    ParameterNode(pos=(444, 446), value='#'),
  ]),
  WordNode(pos=(448, 451), word='-gt'),
  WordNode(pos=(452, 453), word='0'),
  WordNode(pos=(454, 455), word=']'),
])


997) f="$1"

CommandNode(pos=(462, 468), parts=[
  AssignmentNode(pos=(462, 468), word='f=$1', parts=[
    ParameterNode(pos=(465, 467), value='1'),
  ]),
])


998) [ -e "rootfs/lib/$fn" ]

CommandNode(pos=(507, 530), parts=[
  WordNode(pos=(507, 508), word='['),
  WordNode(pos=(509, 511), word='-e'),
  WordNode(pos=(512, 528), word='rootfs/lib/$fn', parts=[
    ParameterNode(pos=(524, 527), value='fn'),
  ]),
  WordNode(pos=(529, 530), word=']'),
])


999) [ "${f#rootfs/}" = "$f" ]

CommandNode(pos=(556, 581), parts=[
  WordNode(pos=(556, 557), word='['),
  WordNode(pos=(558, 572), word='${f#rootfs/}', parts=[
    ParameterNode(pos=(559, 571), value='f#rootfs/'),
  ]),
  WordNode(pos=(573, 574), word='='),
  WordNode(pos=(575, 579), word='$f', parts=[
    ParameterNode(pos=(576, 578), value='f'),
  ]),
  WordNode(pos=(580, 581), word=']'),
])


1000) [ "${f#rootfs/}" = "$f" ]

CommandNode(pos=(556, 581), parts=[
  WordNode(pos=(556, 557), word='['),
  WordNode(pos=(558, 572), word='${f#rootfs/}', parts=[
    ParameterNode(pos=(559, 571), value='f#rootfs/'),
  ]),
  WordNode(pos=(573, 574), word='='),
  WordNode(pos=(575, 579), word='$f', parts=[
    ParameterNode(pos=(576, 578), value='f'),
  ]),
  WordNode(pos=(580, 581), word=']'),
])


1001) [ "${fn#ld-}" = "$fn" ]

CommandNode(pos=(594, 617), parts=[
  WordNode(pos=(594, 595), word='['),
  WordNode(pos=(596, 607), word='${fn#ld-}', parts=[
    ParameterNode(pos=(597, 606), value='fn#ld-'),
  ]),
  WordNode(pos=(608, 609), word='='),
  WordNode(pos=(610, 615), word='$fn', parts=[
    ParameterNode(pos=(611, 614), value='fn'),
  ]),
  WordNode(pos=(616, 617), word=']'),
])


1002) [ "${fn#ld-}" = "$fn" ]

CommandNode(pos=(594, 617), parts=[
  WordNode(pos=(594, 595), word='['),
  WordNode(pos=(596, 607), word='${fn#ld-}', parts=[
    ParameterNode(pos=(597, 606), value='fn#ld-'),
  ]),
  WordNode(pos=(608, 609), word='='),
  WordNode(pos=(610, 615), word='$fn', parts=[
    ParameterNode(pos=(611, 614), value='fn'),
  ]),
  WordNode(pos=(616, 617), word=']'),
])


1003) ln -vL "$f" "rootfs/lib/$fn"

CommandNode(pos=(628, 656), parts=[
  WordNode(pos=(628, 630), word='ln'),
  WordNode(pos=(631, 634), word='-vL'),
  WordNode(pos=(635, 639), word='$f', parts=[
    ParameterNode(pos=(636, 638), value='f'),
  ]),
  WordNode(pos=(640, 656), word='rootfs/lib/$fn', parts=[
    ParameterNode(pos=(652, 655), value='fn'),
  ]),
])


1004) ln -vL "$f" "rootfs/lib/$fn"

CommandNode(pos=(628, 656), parts=[
  WordNode(pos=(628, 630), word='ln'),
  WordNode(pos=(631, 634), word='-vL'),
  WordNode(pos=(635, 639), word='$f', parts=[
    ParameterNode(pos=(636, 638), value='f'),
  ]),
  WordNode(pos=(640, 656), word='rootfs/lib/$fn', parts=[
    ParameterNode(pos=(652, 655), value='fn'),
  ]),
])


1005) cp -v "$f" "rootfs/lib/$fn"

CommandNode(pos=(670, 697), parts=[
  WordNode(pos=(670, 672), word='cp'),
  WordNode(pos=(673, 675), word='-v'),
  WordNode(pos=(676, 680), word='$f', parts=[
    ParameterNode(pos=(677, 679), value='f'),
  ]),
  WordNode(pos=(681, 697), word='rootfs/lib/$fn', parts=[
    ParameterNode(pos=(693, 696), value='fn'),
  ]),
])


1006) cp -v "$f" "rootfs/lib/$fn"

CommandNode(pos=(670, 697), parts=[
  WordNode(pos=(670, 672), word='cp'),
  WordNode(pos=(673, 675), word='-v'),
  WordNode(pos=(676, 680), word='$f', parts=[
    ParameterNode(pos=(677, 679), value='f'),
  ]),
  WordNode(pos=(681, 697), word='rootfs/lib/$fn', parts=[
    ParameterNode(pos=(693, 696), value='fn'),
  ]),
])


1007) set -- "$@" $(ldd "$f" | awk '    $1 ~ /^\// { print $1; next }    $2 == "=>" && $3 ~ /^\// { print $3; next }   ')

CommandNode(pos=(714, 829), parts=[
  WordNode(pos=(714, 717), word='set'),
  WordNode(pos=(718, 720), word='--'),
  WordNode(pos=(721, 725), word='$@', parts=[
    ParameterNode(pos=(722, 724), value='@'),
  ]),
  WordNode(pos=(726, 829), word='$(ldd "$f" | awk \'    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   \')', parts=[
    CommandsubstitutionNode(command=
      PipelineNode(pos=(728, 828), parts=[
        CommandNode(pos=(728, 736), parts=[
          WordNode(pos=(728, 731), word='ldd'),
          WordNode(pos=(732, 736), word='$f', parts=[
            ParameterNode(pos=(733, 735), value='f'),
          ]),
        ]),
        PipeNode(pipe='|', pos=(737, 738)),
        CommandNode(pos=(739, 828), parts=[
          WordNode(pos=(739, 742), word='awk'),
          WordNode(pos=(743, 828), word='    $1 ~ /^\\// { print $1; next }    $2 == "=>" && $3 ~ /^\\// { print $3; next }   '),
        ]),
      ]), pos=(726, 829)),
  ]),
])


1008) curl -fL -o "rootfs/etc/$f" "https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion"

CommandNode(pos=(96, 209), parts=[
  WordNode(pos=(96, 100), word='curl'),
  WordNode(pos=(101, 104), word='-fL'),
  WordNode(pos=(105, 107), word='-o'),
  WordNode(pos=(108, 123), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(120, 122), value='f'),
  ]),
  WordNode(pos=(124, 209), word='https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion', parts=[
    ParameterNode(pos=(185, 187), value='f'),
    ParameterNode(pos=(191, 208), value='buildrootVersion'),
  ]),
])


1009) curl -fL -o "rootfs/etc/$f" "https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion"

CommandNode(pos=(96, 209), parts=[
  WordNode(pos=(96, 100), word='curl'),
  WordNode(pos=(101, 104), word='-fL'),
  WordNode(pos=(105, 107), word='-o'),
  WordNode(pos=(108, 123), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(120, 122), value='f'),
  ]),
  WordNode(pos=(124, 209), word='https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion', parts=[
    ParameterNode(pos=(185, 187), value='f'),
    ParameterNode(pos=(191, 208), value='buildrootVersion'),
  ]),
])


1010) curl -fL -o "rootfs/etc/$f" "https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion"

CommandNode(pos=(96, 209), parts=[
  WordNode(pos=(96, 100), word='curl'),
  WordNode(pos=(101, 104), word='-fL'),
  WordNode(pos=(105, 107), word='-o'),
  WordNode(pos=(108, 123), word='rootfs/etc/$f', parts=[
    ParameterNode(pos=(120, 122), value='f'),
  ]),
  WordNode(pos=(124, 209), word='https://git.busybox.net/buildroot/plain/system/skeleton/etc/$f?id=$buildrootVersion', parts=[
    ParameterNode(pos=(185, 187), value='f'),
    ParameterNode(pos=(191, 208), value='buildrootVersion'),
  ]),
])


1011) curl -fL -o buildroot-device-table.txt "https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion"

CommandNode(pos=(350, 475), parts=[
  WordNode(pos=(350, 354), word='curl'),
  WordNode(pos=(355, 358), word='-fL'),
  WordNode(pos=(359, 361), word='-o'),
  WordNode(pos=(362, 388), word='buildroot-device-table.txt'),
  WordNode(pos=(389, 475), word='https://git.busybox.net/buildroot/plain/system/device_table.txt?id=$buildrootVersion', parts=[
    ParameterNode(pos=(457, 474), value='buildrootVersion'),
  ]),
])


1012) user="${userHome%%=*}"

CommandNode(pos=(102, 124), parts=[
  AssignmentNode(pos=(102, 124), word='user=${userHome%%=*}', parts=[
    ParameterNode(pos=(108, 123), value='userHome%%=*'),
  ]),
])


1013) home="${userHome#*=}"

CommandNode(pos=(128, 149), parts=[
  AssignmentNode(pos=(128, 149), word='home=${userHome#*=}', parts=[
    ParameterNode(pos=(134, 148), value='userHome#*='),
  ]),
])


1014) home="./${home#/}"

CommandNode(pos=(153, 171), parts=[
  AssignmentNode(pos=(153, 171), word='home=./${home#/}', parts=[
    ParameterNode(pos=(161, 170), value='home#/'),
  ]),
])


1015) [ ! -d "$home" ]

CommandNode(pos=(178, 194), parts=[
  WordNode(pos=(178, 179), word='['),
  WordNode(pos=(180, 181), word='!'),
  WordNode(pos=(182, 184), word='-d'),
  WordNode(pos=(185, 192), word='$home', parts=[
    ParameterNode(pos=(186, 191), value='home'),
  ]),
  WordNode(pos=(193, 194), word=']'),
])


1016) mkdir -p "$home"

CommandNode(pos=(204, 220), parts=[
  WordNode(pos=(204, 209), word='mkdir'),
  WordNode(pos=(210, 212), word='-p'),
  WordNode(pos=(213, 220), word='$home', parts=[
    ParameterNode(pos=(214, 219), value='home'),
  ]),
])


1017) chown "$user" "$home"

CommandNode(pos=(225, 246), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 238), word='$user', parts=[
    ParameterNode(pos=(232, 237), value='user'),
  ]),
  WordNode(pos=(239, 246), word='$home', parts=[
    ParameterNode(pos=(240, 245), value='home'),
  ]),
])


1018) chown "$user" "$home"

CommandNode(pos=(225, 246), parts=[
  WordNode(pos=(225, 230), word='chown'),
  WordNode(pos=(231, 238), word='$user', parts=[
    ParameterNode(pos=(232, 237), value='user'),
  ]),
  WordNode(pos=(239, 246), word='$home', parts=[
    ParameterNode(pos=(240, 245), value='home'),
  ]),
])


1019) chmod 755 "$home"

CommandNode(pos=(251, 268), parts=[
  WordNode(pos=(251, 256), word='chmod'),
  WordNode(pos=(257, 260), word='755'),
  WordNode(pos=(261, 268), word='$home', parts=[
    ParameterNode(pos=(262, 267), value='home'),
  ]),
])


1020) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


1021) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


1022) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


1023) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


1024) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


1025) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1442, 1481), parts=[
  WordNode(pos=(1442, 1445), word='gem'),
  WordNode(pos=(1446, 1452), word='update'),
  WordNode(pos=(1453, 1461), word='--system'),
  WordNode(pos=(1462, 1481), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1463, 1480), value='RUBYGEMS_VERSION'),
  ]),
])


1026) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


1027) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


1028) wget -O pypy.tar.bz2 "https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2" --progress=dot:giga

CommandNode(pos=(28, 157), parts=[
  WordNode(pos=(28, 32), word='wget'),
  WordNode(pos=(33, 35), word='-O'),
  WordNode(pos=(36, 48), word='pypy.tar.bz2'),
  WordNode(pos=(49, 137), word='https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2', parts=[
    ParameterNode(pos=(101, 116), value='PYPY_VERSION'),
    ParameterNode(pos=(117, 128), value='pypyArch'),
  ]),
  WordNode(pos=(138, 157), word='--progress=dot:giga'),
])


1029) wget -O pypy.tar.bz2 "https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2" --progress=dot:giga

CommandNode(pos=(28, 157), parts=[
  WordNode(pos=(28, 32), word='wget'),
  WordNode(pos=(33, 35), word='-O'),
  WordNode(pos=(36, 48), word='pypy.tar.bz2'),
  WordNode(pos=(49, 137), word='https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2', parts=[
    ParameterNode(pos=(101, 116), value='PYPY_VERSION'),
    ParameterNode(pos=(117, 128), value='pypyArch'),
  ]),
  WordNode(pos=(138, 157), word='--progress=dot:giga'),
])


1030) echo "$sha256 *pypy.tar.bz2"

CommandNode(pos=(160, 188), parts=[
  WordNode(pos=(160, 164), word='echo'),
  WordNode(pos=(165, 188), word='$sha256 *pypy.tar.bz2', parts=[
    ParameterNode(pos=(166, 173), value='sha256'),
  ]),
])


1031) %%CMD%% get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 166), parts=[
  WordNode(pos=(72, 79), word='%%CMD%%'),
  WordNode(pos=(80, 90), word='get-pip.py'),
  WordNode(pos=(93, 120), word='--disable-pip-version-check'),
  WordNode(pos=(123, 137), word='--no-cache-dir'),
  WordNode(pos=(140, 166), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(146, 165), value='PYTHON_PIP_VERSION'),
  ]),
])


1032) apk add --virtual .drupal-phpexts-rundeps $runDeps

CommandNode(pos=(566, 616), parts=[
  WordNode(pos=(566, 569), word='apk'),
  WordNode(pos=(570, 573), word='add'),
  WordNode(pos=(574, 583), word='--virtual'),
  WordNode(pos=(584, 607), word='.drupal-phpexts-rundeps'),
  WordNode(pos=(608, 616), word='$runDeps', parts=[
    ParameterNode(pos=(608, 616), value='runDeps'),
  ]),
])


1033) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


1034) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


1035) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(259, 296), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 281), word='haproxy.tar.gz'),
  WordNode(pos=(282, 296), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(283, 295), value='HAPROXY_URL'),
  ]),
])


1036) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(301, 339), parts=[
  WordNode(pos=(301, 305), word='echo'),
  WordNode(pos=(306, 339), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(307, 322), value='HAPROXY_SHA256'),
  ]),
])


1037) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(637, 689), parts=[
  WordNode(pos=(637, 641), word='make'),
  WordNode(pos=(642, 644), word='-C'),
  WordNode(pos=(645, 661), word='/usr/src/haproxy'),
  WordNode(pos=(662, 664), word='-j'),
  WordNode(pos=(665, 675), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(668, 673), parts=[
        WordNode(pos=(668, 673), word='nproc'),
      ]), pos=(666, 674)),
  ]),
  WordNode(pos=(676, 679), word='all'),
  WordNode(pos=(680, 689), word='$makeOpts', parts=[
    ParameterNode(pos=(680, 689), value='makeOpts'),
  ]),
])


1038) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(694, 740), parts=[
  WordNode(pos=(694, 698), word='make'),
  WordNode(pos=(699, 701), word='-C'),
  WordNode(pos=(702, 718), word='/usr/src/haproxy'),
  WordNode(pos=(719, 730), word='install-bin'),
  WordNode(pos=(731, 740), word='$makeOpts', parts=[
    ParameterNode(pos=(731, 740), value='makeOpts'),
  ]),
])


1039) [ -z "$savedAptMark" ]

CommandNode(pos=(925, 947), parts=[
  WordNode(pos=(925, 926), word='['),
  WordNode(pos=(927, 929), word='-z'),
  WordNode(pos=(930, 945), word='$savedAptMark', parts=[
    ParameterNode(pos=(931, 944), value='savedAptMark'),
  ]),
  WordNode(pos=(946, 947), word=']'),
])


1040) apt-mark manual $savedAptMark

CommandNode(pos=(951, 980), parts=[
  WordNode(pos=(951, 959), word='apt-mark'),
  WordNode(pos=(960, 966), word='manual'),
  WordNode(pos=(967, 980), word='$savedAptMark', parts=[
    ParameterNode(pos=(967, 980), value='savedAptMark'),
  ]),
])


1041) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(262, 369), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 289), word='/usr/local/bin/gosu'),
  WordNode(pos=(290, 369), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(340, 353), value='GOSU_VERSION'),
    ParameterNode(pos=(359, 368), value='dpkgArch'),
  ]),
])


1042) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(262, 369), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 289), word='/usr/local/bin/gosu'),
  WordNode(pos=(290, 369), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(340, 353), value='GOSU_VERSION'),
    ParameterNode(pos=(359, 368), value='dpkgArch'),
  ]),
])


1043) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(372, 487), parts=[
  WordNode(pos=(372, 376), word='wget'),
  WordNode(pos=(377, 379), word='-O'),
  WordNode(pos=(380, 403), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(404, 487), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(454, 467), value='GOSU_VERSION'),
    ParameterNode(pos=(473, 482), value='dpkgArch'),
  ]),
])


1044) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(372, 487), parts=[
  WordNode(pos=(372, 376), word='wget'),
  WordNode(pos=(377, 379), word='-O'),
  WordNode(pos=(380, 403), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(404, 487), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(454, 467), value='GOSU_VERSION'),
    ParameterNode(pos=(473, 482), value='dpkgArch'),
  ]),
])


1045) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(718, 760), parts=[
  WordNode(pos=(718, 720), word='rm'),
  WordNode(pos=(721, 723), word='-r'),
  WordNode(pos=(724, 736), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(725, 735), value='GNUPGHOME'),
  ]),
  WordNode(pos=(737, 760), word='/usr/local/bin/gosu.asc'),
])


1046) wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch"

CommandNode(pos=(845, 954), parts=[
  WordNode(pos=(845, 849), word='wget'),
  WordNode(pos=(850, 852), word='-O'),
  WordNode(pos=(853, 872), word='/usr/local/bin/tini'),
  WordNode(pos=(873, 954), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch', parts=[
    ParameterNode(pos=(925, 938), value='TINI_VERSION'),
    ParameterNode(pos=(944, 953), value='dpkgArch'),
  ]),
])


1047) wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch"

CommandNode(pos=(845, 954), parts=[
  WordNode(pos=(845, 849), word='wget'),
  WordNode(pos=(850, 852), word='-O'),
  WordNode(pos=(853, 872), word='/usr/local/bin/tini'),
  WordNode(pos=(873, 954), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch', parts=[
    ParameterNode(pos=(925, 938), value='TINI_VERSION'),
    ParameterNode(pos=(944, 953), value='dpkgArch'),
  ]),
])


1048) wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc"

CommandNode(pos=(957, 1074), parts=[
  WordNode(pos=(957, 961), word='wget'),
  WordNode(pos=(962, 964), word='-O'),
  WordNode(pos=(965, 988), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(989, 1074), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc', parts=[
    ParameterNode(pos=(1041, 1054), value='TINI_VERSION'),
    ParameterNode(pos=(1060, 1069), value='dpkgArch'),
  ]),
])


1049) wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc"

CommandNode(pos=(957, 1074), parts=[
  WordNode(pos=(957, 961), word='wget'),
  WordNode(pos=(962, 964), word='-O'),
  WordNode(pos=(965, 988), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(989, 1074), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc', parts=[
    ParameterNode(pos=(1041, 1054), value='TINI_VERSION'),
    ParameterNode(pos=(1060, 1069), value='dpkgArch'),
  ]),
])


1050) rm -r "$GNUPGHOME" /usr/local/bin/tini.asc

CommandNode(pos=(1305, 1347), parts=[
  WordNode(pos=(1305, 1307), word='rm'),
  WordNode(pos=(1308, 1310), word='-r'),
  WordNode(pos=(1311, 1323), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(1312, 1322), value='GNUPGHOME'),
  ]),
  WordNode(pos=(1324, 1347), word='/usr/local/bin/tini.asc'),
])


1051) [ -z "$savedAptMark" ]

CommandNode(pos=(1425, 1447), parts=[
  WordNode(pos=(1425, 1426), word='['),
  WordNode(pos=(1427, 1429), word='-z'),
  WordNode(pos=(1430, 1445), word='$savedAptMark', parts=[
    ParameterNode(pos=(1431, 1444), value='savedAptMark'),
  ]),
  WordNode(pos=(1446, 1447), word=']'),
])


1052) apt-mark manual $savedAptMark

CommandNode(pos=(1451, 1480), parts=[
  WordNode(pos=(1451, 1459), word='apt-mark'),
  WordNode(pos=(1460, 1466), word='manual'),
  WordNode(pos=(1467, 1480), word='$savedAptMark', parts=[
    ParameterNode(pos=(1467, 1480), value='savedAptMark'),
  ]),
])


1053) [ ! -d "$HOME" ]

CommandNode(pos=(11, 27), parts=[
  WordNode(pos=(11, 12), word='['),
  WordNode(pos=(13, 14), word='!'),
  WordNode(pos=(15, 17), word='-d'),
  WordNode(pos=(18, 25), word='$HOME', parts=[
    ParameterNode(pos=(19, 24), value='HOME'),
  ]),
  WordNode(pos=(26, 27), word=']'),
])


1054) mkdir -p "$HOME"

CommandNode(pos=(30, 46), parts=[
  WordNode(pos=(30, 35), word='mkdir'),
  WordNode(pos=(36, 38), word='-p'),
  WordNode(pos=(39, 46), word='$HOME', parts=[
    ParameterNode(pos=(40, 45), value='HOME'),
  ]),
])


1055) chown redmine:redmine "$HOME"

CommandNode(pos=(49, 78), parts=[
  WordNode(pos=(49, 54), word='chown'),
  WordNode(pos=(55, 70), word='redmine:redmine'),
  WordNode(pos=(71, 78), word='$HOME', parts=[
    ParameterNode(pos=(72, 77), value='HOME'),
  ]),
])


1056) chmod 1777 "$HOME"

CommandNode(pos=(81, 99), parts=[
  WordNode(pos=(81, 86), word='chmod'),
  WordNode(pos=(87, 91), word='1777'),
  WordNode(pos=(92, 99), word='$HOME', parts=[
    ParameterNode(pos=(93, 98), value='HOME'),
  ]),
])


1057) wget -O redmine.tar.gz "https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz"

CommandNode(pos=(0, 91), parts=[
  WordNode(pos=(0, 4), word='wget'),
  WordNode(pos=(5, 7), word='-O'),
  WordNode(pos=(8, 22), word='redmine.tar.gz'),
  WordNode(pos=(23, 91), word='https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(65, 83), value='REDMINE_VERSION'),
  ]),
])


1058) echo "$REDMINE_DOWNLOAD_MD5 redmine.tar.gz"

CommandNode(pos=(96, 139), parts=[
  WordNode(pos=(96, 100), word='echo'),
  WordNode(pos=(101, 139), word='$REDMINE_DOWNLOAD_MD5 redmine.tar.gz', parts=[
    ParameterNode(pos=(102, 123), value='REDMINE_DOWNLOAD_MD5'),
  ]),
])


1059) ./configure --build="$gnuArch" --enable-silent-rules

CommandNode(pos=(622, 674), parts=[
  WordNode(pos=(622, 633), word='./configure'),
  WordNode(pos=(634, 652), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(643, 651), value='gnuArch'),
  ]),
  WordNode(pos=(653, 674), word='--enable-silent-rules'),
])


1060) echo "$RAILS_ENV:" > ./config/database.yml

CommandNode(pos=(951, 993), parts=[
  WordNode(pos=(951, 955), word='echo'),
  WordNode(pos=(956, 969), word='$RAILS_ENV:', parts=[
    ParameterNode(pos=(957, 967), value='RAILS_ENV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(972, 993), word='./config/database.yml'), pos=(970, 993), type='>'),
])


1061) echo "  adapter: $adapter" >> ./config/database.yml

CommandNode(pos=(997, 1048), parts=[
  WordNode(pos=(997, 1001), word='echo'),
  WordNode(pos=(1002, 1023), word='  adapter: $adapter', parts=[
    ParameterNode(pos=(1014, 1022), value='adapter'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1027, 1048), word='./config/database.yml'), pos=(1024, 1048), type='>>'),
])


1062) cp Gemfile.lock "Gemfile.lock.${adapter}"

CommandNode(pos=(1110, 1151), parts=[
  WordNode(pos=(1110, 1112), word='cp'),
  WordNode(pos=(1113, 1125), word='Gemfile.lock'),
  WordNode(pos=(1126, 1151), word='Gemfile.lock.${adapter}', parts=[
    ParameterNode(pos=(1140, 1150), value='adapter'),
  ]),
])


1063) chmod -R ugo=rwX Gemfile.lock "$GEM_HOME"

CommandNode(pos=(1188, 1229), parts=[
  WordNode(pos=(1188, 1193), word='chmod'),
  WordNode(pos=(1194, 1196), word='-R'),
  WordNode(pos=(1197, 1204), word='ugo=rwX'),
  WordNode(pos=(1205, 1217), word='Gemfile.lock'),
  WordNode(pos=(1218, 1229), word='$GEM_HOME', parts=[
    ParameterNode(pos=(1219, 1228), value='GEM_HOME'),
  ]),
])


1064) [ -z "$savedAptMark" ]

CommandNode(pos=(1292, 1314), parts=[
  WordNode(pos=(1292, 1293), word='['),
  WordNode(pos=(1294, 1296), word='-z'),
  WordNode(pos=(1297, 1312), word='$savedAptMark', parts=[
    ParameterNode(pos=(1298, 1311), value='savedAptMark'),
  ]),
  WordNode(pos=(1313, 1314), word=']'),
])


1065) apt-mark manual $savedAptMark

CommandNode(pos=(1318, 1347), parts=[
  WordNode(pos=(1318, 1326), word='apt-mark'),
  WordNode(pos=(1327, 1333), word='manual'),
  WordNode(pos=(1334, 1347), word='$savedAptMark', parts=[
    ParameterNode(pos=(1334, 1347), value='savedAptMark'),
  ]),
])


1066) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1067) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


1068) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


1069) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


1070) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


1071) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


1072) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


1073) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


1074) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


1075) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


1076) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


1077) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


1078) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


1079) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


1080) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


1081) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


1082) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


1083) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


1084) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


1085) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


1086) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
])


1087) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


1088) echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main" > /etc/apt/sources.list.d/mariadb.list

CommandNode(pos=(8, 130), parts=[
  WordNode(pos=(8, 12), word='echo'),
  WordNode(pos=(13, 91), word='deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main', parts=[
    ParameterNode(pos=(57, 71), value='MARIADB_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(94, 130), word='/etc/apt/sources.list.d/mariadb.list'), pos=(92, 130), type='>'),
])


1089) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'

CommandNode(pos=(14, 95), parts=[
  WordNode(pos=(14, 18), word='echo'),
  WordNode(pos=(19, 50), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(35, 49), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(51, 77), word='mysql-server/root_password'),
  WordNode(pos=(78, 86), word='password'),
  WordNode(pos=(87, 95), word='unused'),
])


1090) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'

CommandNode(pos=(99, 186), parts=[
  WordNode(pos=(99, 103), word='echo'),
  WordNode(pos=(104, 135), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(120, 134), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(136, 168), word='mysql-server/root_password_again'),
  WordNode(pos=(169, 177), word='password'),
  WordNode(pos=(178, 186), word='unused'),
])


1091) apt-get install -y   "mariadb-server=$MARIADB_VERSION"   mariadb-backup-10.1   socat

CommandNode(pos=(235, 319), parts=[
  WordNode(pos=(235, 242), word='apt-get'),
  WordNode(pos=(243, 250), word='install'),
  WordNode(pos=(251, 253), word='-y'),
  WordNode(pos=(256, 289), word='mariadb-server=$MARIADB_VERSION', parts=[
    ParameterNode(pos=(272, 288), value='MARIADB_VERSION'),
  ]),
  WordNode(pos=(292, 311), word='mariadb-backup-10.1'),
  WordNode(pos=(314, 319), word='socat'),
])


1092) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


1093) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1094) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


1095) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


1096) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


1097) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


1098) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


1099) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


1100) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


1101) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


1102) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


1103) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


1104) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1105) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1106) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1107) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1108) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


1109) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


1110) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1160, 1312), parts=[
  WordNode(pos=(1160, 1171), word='./configure'),
  WordNode(pos=(1174, 1192), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1183, 1191), value='gnuArch'),
  ]),
  WordNode(pos=(1195, 1230), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1233, 1248), word='--enable-shared'),
  WordNode(pos=(1251, 1270), word='--with-system-expat'),
  WordNode(pos=(1273, 1290), word='--with-system-ffi'),
  WordNode(pos=(1293, 1312), word='--without-ensurepip'),
])


1111) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1112) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1113) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


1114) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


1115) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


1116) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


1117) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


1118) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


1119) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


1120) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


1121) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


1122) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


1123) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


1124) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1125) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


1126) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


1127) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


1128) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


1129) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


1130) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


1131) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


1132) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


1133) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


1134) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


1135) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


1136) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


1137) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


1138) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1139) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1140) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1141) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1142) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


1143) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


1144) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4   --with-system-expat   --with-system-ffi

CommandNode(pos=(1134, 1250), parts=[
  WordNode(pos=(1134, 1145), word='./configure'),
  WordNode(pos=(1148, 1166), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1157, 1165), value='gnuArch'),
  ]),
  WordNode(pos=(1169, 1184), word='--enable-shared'),
  WordNode(pos=(1187, 1208), word='--enable-unicode=ucs4'),
  WordNode(pos=(1211, 1230), word='--with-system-expat'),
  WordNode(pos=(1233, 1250), word='--with-system-ffi'),
])


1145) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1146) apt-mark manual $savedAptMark

CommandNode(pos=(416, 445), parts=[
  WordNode(pos=(416, 424), word='apt-mark'),
  WordNode(pos=(425, 431), word='manual'),
  WordNode(pos=(432, 445), word='$savedAptMark', parts=[
    ParameterNode(pos=(432, 445), value='savedAptMark'),
  ]),
])


1147) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


1148) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


1149) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


1150) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


1151) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


1152) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


1153) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


1154) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


1155) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


1156) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


1157) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


1158) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


1159) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


1160) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


1161) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
])


1162) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


1163) echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu %%SUITE%% main" > /etc/apt/sources.list.d/mariadb.list

CommandNode(pos=(8, 133), parts=[
  WordNode(pos=(8, 12), word='echo'),
  WordNode(pos=(13, 94), word='deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu %%SUITE%% main', parts=[
    ParameterNode(pos=(57, 71), value='MARIADB_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(97, 133), word='/etc/apt/sources.list.d/mariadb.list'), pos=(95, 133), type='>'),
])


1164) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'

CommandNode(pos=(14, 95), parts=[
  WordNode(pos=(14, 18), word='echo'),
  WordNode(pos=(19, 50), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(35, 49), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(51, 77), word='mysql-server/root_password'),
  WordNode(pos=(78, 86), word='password'),
  WordNode(pos=(87, 95), word='unused'),
])


1165) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'

CommandNode(pos=(99, 186), parts=[
  WordNode(pos=(99, 103), word='echo'),
  WordNode(pos=(104, 135), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(120, 134), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(136, 168), word='mysql-server/root_password_again'),
  WordNode(pos=(169, 177), word='password'),
  WordNode(pos=(178, 186), word='unused'),
])


1166) apt-get install -y   "mariadb-server=$MARIADB_VERSION"   %%BACKUP_PACKAGE%%   socat

CommandNode(pos=(235, 318), parts=[
  WordNode(pos=(235, 242), word='apt-get'),
  WordNode(pos=(243, 250), word='install'),
  WordNode(pos=(251, 253), word='-y'),
  WordNode(pos=(256, 289), word='mariadb-server=$MARIADB_VERSION', parts=[
    ParameterNode(pos=(272, 288), value='MARIADB_VERSION'),
  ]),
  WordNode(pos=(292, 310), word='%%BACKUP_PACKAGE%%'),
  WordNode(pos=(313, 318), word='socat'),
])


1167) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


1168) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


1169) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


1170) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


1171) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


1172) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


1173) set -eux;   apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev  ;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   mkdir /usr/local/src;   wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum -c -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum -c -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --no-cache --virtual .otp-run-deps $runDeps;  apk del --no-network .build-deps;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3380), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 159), parts=[
    WordNode(pos=(12, 15), word='apk'),
    WordNode(pos=(16, 19), word='add'),
    WordNode(pos=(20, 30), word='--no-cache'),
    WordNode(pos=(31, 40), word='--virtual'),
    WordNode(pos=(41, 52), word='.build-deps'),
    WordNode(pos=(55, 63), word='autoconf'),
    WordNode(pos=(66, 81), word='ca-certificates'),
    WordNode(pos=(84, 92), word='dpkg-dev'),
    WordNode(pos=(93, 97), word='dpkg'),
    WordNode(pos=(100, 103), word='gcc'),
    WordNode(pos=(106, 111), word='gnupg'),
    WordNode(pos=(114, 122), word='libc-dev'),
    WordNode(pos=(125, 138), word='linux-headers'),
    WordNode(pos=(141, 145), word='make'),
    WordNode(pos=(148, 159), word='ncurses-dev'),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CommandNode(pos=(165, 248), parts=[
    AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(248, 249)),
  CommandNode(pos=(251, 305), parts=[
    AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(305, 306)),
  CommandNode(pos=(308, 345), parts=[
    AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(345, 346)),
  CommandNode(pos=(349, 369), parts=[
    WordNode(pos=(349, 354), word='mkdir'),
    WordNode(pos=(355, 369), word='/usr/local/src'),
  ]),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 448), parts=[
    WordNode(pos=(373, 377), word='wget'),
    WordNode(pos=(378, 395), word='--output-document'),
    WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(448, 449)),
  CommandNode(pos=(451, 518), parts=[
    WordNode(pos=(451, 455), word='wget'),
    WordNode(pos=(456, 473), word='--output-document'),
    WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(518, 519)),
  CommandNode(pos=(521, 552), parts=[
    WordNode(pos=(521, 527), word='export'),
    WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(541, 550), parts=[
          WordNode(pos=(541, 547), word='mktemp'),
          WordNode(pos=(548, 550), word='-d'),
        ]), pos=(539, 551)),
    ]),
  ]),
  OperatorNode(op=';', pos=(552, 553)),
  CompoundNode(list=[
    ForNode(pos=(555, 659), parts=[
      ReservedwordNode(pos=(555, 558), word='for'),
      WordNode(pos=(559, 562), word='key'),
      ReservedwordNode(pos=(563, 565), word='in'),
      WordNode(pos=(566, 586), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(566, 586), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(586, 587), word=';'),
      ReservedwordNode(pos=(588, 590), word='do'),
      ListNode(pos=(593, 653), parts=[
          CommandNode(pos=(593, 652), parts=[
            WordNode(pos=(593, 596), word='gpg'),
            WordNode(pos=(597, 604), word='--batch'),
            WordNode(pos=(605, 616), word='--keyserver'),
            WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(634, 645), word='--recv-keys'),
            WordNode(pos=(646, 652), word='$key', parts=[
              ParameterNode(pos=(647, 651), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(652, 653)),
        ]),
      ReservedwordNode(pos=(655, 659), word='done'),
    ]),
  ], pos=(555, 659)),
  OperatorNode(op=';', pos=(659, 660)),
  CommandNode(pos=(662, 732), parts=[
    WordNode(pos=(662, 665), word='gpg'),
    WordNode(pos=(666, 673), word='--batch'),
    WordNode(pos=(674, 682), word='--verify'),
    WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(732, 733)),
  CommandNode(pos=(735, 753), parts=[
    WordNode(pos=(735, 742), word='gpgconf'),
    WordNode(pos=(743, 749), word='--kill'),
    WordNode(pos=(750, 753), word='all'),
  ]),
  OperatorNode(op=';', pos=(753, 754)),
  CommandNode(pos=(756, 775), parts=[
    WordNode(pos=(756, 758), word='rm'),
    WordNode(pos=(759, 762), word='-rf'),
    WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(764, 774), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(775, 776)),
  PipelineNode(pos=(778, 846), parts=[
    CommandNode(pos=(778, 829), parts=[
      WordNode(pos=(778, 782), word='echo'),
      WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(830, 831)),
    CommandNode(pos=(832, 846), parts=[
      WordNode(pos=(832, 841), word='sha256sum'),
      WordNode(pos=(842, 844), word='-c'),
      WordNode(pos=(845, 846), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(846, 847)),
  CommandNode(pos=(849, 873), parts=[
    WordNode(pos=(849, 854), word='mkdir'),
    WordNode(pos=(855, 857), word='-p'),
    WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(873, 874)),
  CommandNode(pos=(876, 968), parts=[
    WordNode(pos=(876, 879), word='tar'),
    WordNode(pos=(880, 889), word='--extract'),
    WordNode(pos=(890, 896), word='--file'),
    WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(920, 931), word='--directory'),
    WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(948, 966), word='--strip-components'),
    WordNode(pos=(967, 968), word='1'),
  ]),
  OperatorNode(op=';', pos=(968, 969)),
  CommandNode(pos=(972, 990), parts=[
    WordNode(pos=(972, 974), word='cd'),
    WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(990, 991)),
  CommandNode(pos=(993, 1142), parts=[
    AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1004, 1047), parts=[
          WordNode(pos=(1004, 1021), word='dpkg-architecture'),
          WordNode(pos=(1022, 1029), word='--query'),
          WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1002, 1048)),
    ]),
    AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
    WordNode(pos=(1099, 1107), word='./config'),
    WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1142, 1143)),
  CommandNode(pos=(1145, 1183), parts=[
    WordNode(pos=(1145, 1149), word='make'),
    WordNode(pos=(1150, 1152), word='-j'),
    WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1156, 1181), parts=[
          WordNode(pos=(1156, 1163), word='getconf'),
          WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
        ]), pos=(1154, 1182)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1183, 1184)),
  CommandNode(pos=(1186, 1217), parts=[
    WordNode(pos=(1186, 1190), word='make'),
    WordNode(pos=(1191, 1201), word='install_sw'),
    WordNode(pos=(1202, 1217), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1217, 1218)),
  CommandNode(pos=(1220, 1225), parts=[
    WordNode(pos=(1220, 1222), word='cd'),
    WordNode(pos=(1223, 1225), word='..'),
  ]),
  OperatorNode(op=';', pos=(1225, 1226)),
  CommandNode(pos=(1228, 1251), parts=[
    WordNode(pos=(1228, 1230), word='rm'),
    WordNode(pos=(1231, 1234), word='-rf'),
    WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1251, 1252)),
  CommandNode(pos=(1254, 1317), parts=[
    WordNode(pos=(1254, 1259), word='rmdir'),
    WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1317, 1318)),
  CommandNode(pos=(1320, 1380), parts=[
    WordNode(pos=(1320, 1322), word='ln'),
    WordNode(pos=(1323, 1326), word='-sf'),
    WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
    WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
    WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1380, 1381)),
  CommandNode(pos=(1383, 1398), parts=[
    WordNode(pos=(1383, 1390), word='openssl'),
    WordNode(pos=(1391, 1398), word='version'),
  ]),
  OperatorNode(op=';', pos=(1398, 1399)),
  CommandNode(pos=(1402, 1480), parts=[
    AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1480, 1481)),
  CommandNode(pos=(1483, 1525), parts=[
    AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1525, 1526)),
  CommandNode(pos=(1529, 1549), parts=[
    WordNode(pos=(1529, 1534), word='mkdir'),
    WordNode(pos=(1535, 1537), word='-p'),
    WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1549, 1550)),
  CommandNode(pos=(1552, 1611), parts=[
    WordNode(pos=(1552, 1556), word='wget'),
    WordNode(pos=(1557, 1574), word='--output-document'),
    WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
    ]),
    WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1611, 1612)),
  PipelineNode(pos=(1614, 1674), parts=[
    CommandNode(pos=(1614, 1657), parts=[
      WordNode(pos=(1614, 1618), word='echo'),
      WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1658, 1659)),
    CommandNode(pos=(1660, 1674), parts=[
      WordNode(pos=(1660, 1669), word='sha256sum'),
      WordNode(pos=(1670, 1672), word='-c'),
      WordNode(pos=(1673, 1674), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1674, 1675)),
  CommandNode(pos=(1677, 1761), parts=[
    WordNode(pos=(1677, 1680), word='tar'),
    WordNode(pos=(1681, 1690), word='--extract'),
    WordNode(pos=(1691, 1697), word='--file'),
    WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
    ]),
    WordNode(pos=(1717, 1728), word='--directory'),
    WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
    ]),
    WordNode(pos=(1741, 1759), word='--strip-components'),
    WordNode(pos=(1760, 1761), word='1'),
  ]),
  OperatorNode(op=';', pos=(1761, 1762)),
  CommandNode(pos=(1765, 1779), parts=[
    WordNode(pos=(1765, 1767), word='cd'),
    WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1779, 1780)),
  CommandNode(pos=(1782, 1808), parts=[
    WordNode(pos=(1782, 1788), word='export'),
    WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1808, 1809)),
  CommandNode(pos=(1811, 1831), parts=[
    WordNode(pos=(1811, 1822), word='./otp_build'),
    WordNode(pos=(1823, 1831), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(1831, 1832)),
  CommandNode(pos=(1834, 1874), parts=[
    AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1844, 1872), parts=[
          WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
          WordNode(pos=(1860, 1865), word='--get'),
          WordNode(pos=(1866, 1872), word='CFLAGS'),
        ]), pos=(1842, 1873)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1874, 1875)),
  CommandNode(pos=(1876, 1889), parts=[
    WordNode(pos=(1876, 1882), word='export'),
    WordNode(pos=(1883, 1889), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(1889, 1890)),
  CommandNode(pos=(1892, 1949), parts=[
    AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1904, 1947), parts=[
          WordNode(pos=(1904, 1921), word='dpkg-architecture'),
          WordNode(pos=(1922, 1929), word='--query'),
          WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(1902, 1948)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1949, 1950)),
  CommandNode(pos=(1952, 2011), parts=[
    AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1965, 2009), parts=[
          WordNode(pos=(1965, 1982), word='dpkg-architecture'),
          WordNode(pos=(1983, 1990), word='--query'),
          WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1963, 2010)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2011, 2012)),
  CommandNode(pos=(2014, 2053), parts=[
    AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2026, 2051), parts=[
          WordNode(pos=(2026, 2030), word='dpkg'),
          WordNode(pos=(2031, 2051), word='--print-architecture'),
        ]), pos=(2024, 2052)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2053, 2054)),
  CommandNode(pos=(2055, 2081), parts=[
    AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2081, 2082)),
  CommandNode(pos=(2084, 2766), parts=[
    WordNode(pos=(2084, 2095), word='./configure'),
    WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2106, 2115), value='hostArch'),
    ]),
    WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2128, 2138), value='buildArch'),
    ]),
    WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2170, 2184), word='--disable-hipe'),
    WordNode(pos=(2187, 2201), word='--disable-sctp'),
    WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
    WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
    WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
    WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
    WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
    WordNode(pos=(2323, 2343), word='--enable-smp-support'),
    WordNode(pos=(2346, 2362), word='--enable-threads'),
    WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2402, 2423), word='--without-common_test'),
    WordNode(pos=(2426, 2444), word='--without-debugger'),
    WordNode(pos=(2447, 2465), word='--without-dialyzer'),
    WordNode(pos=(2468, 2486), word='--without-diameter'),
    WordNode(pos=(2489, 2503), word='--without-edoc'),
    WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
    WordNode(pos=(2529, 2552), word='--without-erl_interface'),
    WordNode(pos=(2555, 2567), word='--without-et'),
    WordNode(pos=(2570, 2585), word='--without-eunit'),
    WordNode(pos=(2588, 2601), word='--without-ftp'),
    WordNode(pos=(2604, 2618), word='--without-hipe'),
    WordNode(pos=(2621, 2641), word='--without-jinterface'),
    WordNode(pos=(2644, 2660), word='--without-megaco'),
    WordNode(pos=(2663, 2681), word='--without-observer'),
    WordNode(pos=(2684, 2698), word='--without-odbc'),
    WordNode(pos=(2701, 2718), word='--without-reltool'),
    WordNode(pos=(2721, 2734), word='--without-ssh'),
    WordNode(pos=(2737, 2751), word='--without-tftp'),
    WordNode(pos=(2754, 2766), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(2768, 2769)),
  CommandNode(pos=(2771, 2849), parts=[
    WordNode(pos=(2771, 2775), word='make'),
    WordNode(pos=(2776, 2778), word='-j'),
    WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2782, 2807), parts=[
          WordNode(pos=(2782, 2789), word='getconf'),
          WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
        ]), pos=(2780, 2808)),
    ]),
    WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(2849, 2850)),
  CommandNode(pos=(2852, 2864), parts=[
    WordNode(pos=(2852, 2856), word='make'),
    WordNode(pos=(2857, 2864), word='install'),
  ]),
  OperatorNode(op=';', pos=(2864, 2865)),
  CommandNode(pos=(2867, 2872), parts=[
    WordNode(pos=(2867, 2869), word='cd'),
    WordNode(pos=(2870, 2872), word='..'),
  ]),
  OperatorNode(op=';', pos=(2872, 2873)),
  CommandNode(pos=(2875, 2969), parts=[
    WordNode(pos=(2875, 2877), word='rm'),
    WordNode(pos=(2878, 2881), word='-rf'),
    WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
    ]),
    WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(2971, 2972)),
  CommandNode(pos=(2975, 3172), parts=[
    AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2989, 3168), parts=[
          CommandNode(pos=(2989, 3055), parts=[
            WordNode(pos=(2989, 2996), word='scanelf'),
            WordNode(pos=(2997, 3005), word='--needed'),
            WordNode(pos=(3006, 3016), word='--nobanner'),
            WordNode(pos=(3017, 3025), word='--format'),
            WordNode(pos=(3026, 3032), word='%n#p'),
            WordNode(pos=(3033, 3044), word='--recursive'),
            WordNode(pos=(3045, 3055), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(3059, 3060)),
          CommandNode(pos=(3061, 3072), parts=[
            WordNode(pos=(3061, 3063), word='tr'),
            WordNode(pos=(3064, 3067), word=','),
            WordNode(pos=(3068, 3072), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(3076, 3077)),
          CommandNode(pos=(3078, 3085), parts=[
            WordNode(pos=(3078, 3082), word='sort'),
            WordNode(pos=(3083, 3085), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(3089, 3090)),
          CommandNode(pos=(3091, 3168), parts=[
            WordNode(pos=(3091, 3094), word='awk'),
            WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2984, 3169)),
    ]),
  ]),
  OperatorNode(op=';', pos=(3172, 3173)),
  CommandNode(pos=(3175, 3226), parts=[
    WordNode(pos=(3175, 3178), word='apk'),
    WordNode(pos=(3179, 3182), word='add'),
    WordNode(pos=(3183, 3193), word='--no-cache'),
    WordNode(pos=(3194, 3203), word='--virtual'),
    WordNode(pos=(3204, 3217), word='.otp-run-deps'),
    WordNode(pos=(3218, 3226), word='$runDeps', parts=[
      ParameterNode(pos=(3218, 3226), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3226, 3227)),
  CommandNode(pos=(3229, 3261), parts=[
    WordNode(pos=(3229, 3232), word='apk'),
    WordNode(pos=(3233, 3236), word='del'),
    WordNode(pos=(3237, 3249), word='--no-network'),
    WordNode(pos=(3250, 3261), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(3261, 3262)),
  CommandNode(pos=(3265, 3280), parts=[
    WordNode(pos=(3265, 3272), word='openssl'),
    WordNode(pos=(3273, 3280), word='version'),
  ]),
  OperatorNode(op=';', pos=(3280, 3281)),
  CommandNode(pos=(3283, 3380), parts=[
    WordNode(pos=(3283, 3286), word='erl'),
    WordNode(pos=(3287, 3295), word='-noshell'),
    WordNode(pos=(3296, 3301), word='-eval'),
    WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


1174) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


1175) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


1176) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


1177) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


1178) rm -rf "$GNUPGHOME"

CommandNode(pos=(756, 775), parts=[
  WordNode(pos=(756, 758), word='rm'),
  WordNode(pos=(759, 762), word='-rf'),
  WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(764, 774), value='GNUPGHOME'),
  ]),
])


1179) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


1180) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


1181) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(849, 873), parts=[
  WordNode(pos=(849, 854), word='mkdir'),
  WordNode(pos=(855, 857), word='-p'),
  WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
  ]),
])


1182) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


1183) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


1184) cd "$OPENSSL_PATH"

CommandNode(pos=(972, 990), parts=[
  WordNode(pos=(972, 974), word='cd'),
  WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
  ]),
])


1185) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1186) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1228, 1251), parts=[
  WordNode(pos=(1228, 1230), word='rm'),
  WordNode(pos=(1231, 1234), word='-rf'),
  WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
  ]),
])


1187) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1188) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1189) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1320, 1380), parts=[
  WordNode(pos=(1320, 1322), word='ln'),
  WordNode(pos=(1323, 1326), word='-sf'),
  WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
  WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
  WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1190) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


1191) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


1192) mkdir -p "$OTP_PATH"

CommandNode(pos=(1529, 1549), parts=[
  WordNode(pos=(1529, 1534), word='mkdir'),
  WordNode(pos=(1535, 1537), word='-p'),
  WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
  ]),
])


1193) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


1194) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


1195) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


1196) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


1197) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


1198) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


1199) cd "$OTP_PATH"

CommandNode(pos=(1765, 1779), parts=[
  WordNode(pos=(1765, 1767), word='cd'),
  WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
  ]),
])


1200) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(1782, 1808), parts=[
  WordNode(pos=(1782, 1788), word='export'),
  WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
  ]),
])


1201) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


1202) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


1203) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


1204) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(2875, 2969), parts=[
  WordNode(pos=(2875, 2877), word='rm'),
  WordNode(pos=(2878, 2881), word='-rf'),
  WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
  ]),
  WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
])


1205) apk add --no-cache --virtual .otp-run-deps $runDeps

CommandNode(pos=(3175, 3226), parts=[
  WordNode(pos=(3175, 3178), word='apk'),
  WordNode(pos=(3179, 3182), word='add'),
  WordNode(pos=(3183, 3193), word='--no-cache'),
  WordNode(pos=(3194, 3203), word='--virtual'),
  WordNode(pos=(3204, 3217), word='.otp-run-deps'),
  WordNode(pos=(3218, 3226), word='$runDeps', parts=[
    ParameterNode(pos=(3218, 3226), value='runDeps'),
  ]),
])


1206) adduser -u 100 -S -h "$RABBITMQ_DATA_DIR" -G rabbitmq rabbitmq

CommandNode(pos=(41, 103), parts=[
  WordNode(pos=(41, 48), word='adduser'),
  WordNode(pos=(49, 51), word='-u'),
  WordNode(pos=(52, 55), word='100'),
  WordNode(pos=(56, 58), word='-S'),
  WordNode(pos=(59, 61), word='-h'),
  WordNode(pos=(62, 82), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(63, 81), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(83, 85), word='-G'),
  WordNode(pos=(86, 94), word='rabbitmq'),
  WordNode(pos=(95, 103), word='rabbitmq'),
])


1207) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(106, 185), parts=[
  WordNode(pos=(106, 111), word='mkdir'),
  WordNode(pos=(112, 114), word='-p'),
  WordNode(pos=(115, 135), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(116, 134), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(136, 149), word='/etc/rabbitmq'),
  WordNode(pos=(150, 167), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(168, 185), word='/var/log/rabbitmq'),
])


1208) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(188, 286), parts=[
  WordNode(pos=(188, 193), word='chown'),
  WordNode(pos=(194, 197), word='-fR'),
  WordNode(pos=(198, 215), word='rabbitmq:rabbitmq'),
  WordNode(pos=(216, 236), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(217, 235), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(237, 250), word='/etc/rabbitmq'),
  WordNode(pos=(251, 268), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(269, 286), word='/var/log/rabbitmq'),
])


1209) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(289, 369), parts=[
  WordNode(pos=(289, 294), word='chmod'),
  WordNode(pos=(295, 298), word='777'),
  WordNode(pos=(299, 319), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(300, 318), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(320, 333), word='/etc/rabbitmq'),
  WordNode(pos=(334, 351), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(352, 369), word='/var/log/rabbitmq'),
])


1210) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(372, 435), parts=[
  WordNode(pos=(372, 374), word='ln'),
  WordNode(pos=(375, 378), word='-sf'),
  WordNode(pos=(379, 414), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(380, 398), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(415, 435), word='/root/.erlang.cookie'),
])


1211) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


1212) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


1213) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


1214) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1215) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1216) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1217) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1218) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


1219) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


1220) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


1221) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


1222) rm -rf "$GNUPGHOME"

CommandNode(pos=(670, 689), parts=[
  WordNode(pos=(670, 672), word='rm'),
  WordNode(pos=(673, 676), word='-rf'),
  WordNode(pos=(677, 689), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(678, 688), value='GNUPGHOME'),
  ]),
])


1223) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(693, 718), parts=[
  WordNode(pos=(693, 698), word='mkdir'),
  WordNode(pos=(699, 701), word='-p'),
  WordNode(pos=(702, 718), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(703, 717), value='RABBITMQ_HOME'),
  ]),
])


1224) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


1225) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


1226) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(818, 842), parts=[
  WordNode(pos=(818, 820), word='rm'),
  WordNode(pos=(821, 824), word='-rf'),
  WordNode(pos=(825, 842), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(826, 840), value='RABBITMQ_PATH'),
  ]),
])


1227) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(845, 928), parts=[
  WordNode(pos=(845, 849), word='grep'),
  WordNode(pos=(850, 853), word='-qE'),
  WordNode(pos=(854, 888), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(889, 928), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(890, 904), value='RABBITMQ_HOME'),
  ]),
])


1228) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(931, 1010), parts=[
  WordNode(pos=(931, 934), word='sed'),
  WordNode(pos=(935, 937), word='-i'),
  WordNode(pos=(938, 970), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(971, 1010), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(972, 986), value='RABBITMQ_HOME'),
  ]),
])


1229) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1013, 1077), parts=[
  WordNode(pos=(1013, 1017), word='grep'),
  WordNode(pos=(1018, 1021), word='-qE'),
  WordNode(pos=(1022, 1037), word='^SYS_PREFIX=$'),
  WordNode(pos=(1038, 1077), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1039, 1053), value='RABBITMQ_HOME'),
  ]),
])


1230) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1080, 1123), parts=[
  WordNode(pos=(1080, 1085), word='chown'),
  WordNode(pos=(1086, 1088), word='-R'),
  WordNode(pos=(1089, 1106), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1107, 1123), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1108, 1122), value='RABBITMQ_HOME'),
  ]),
])


1231) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1150, 1194), parts=[
  WordNode(pos=(1150, 1151), word='['),
  WordNode(pos=(1152, 1153), word='!'),
  WordNode(pos=(1154, 1156), word='-e'),
  WordNode(pos=(1157, 1192), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1158, 1176), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1193, 1194), word=']'),
])


1232) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1318, 1356), parts=[
  WordNode(pos=(1318, 1320), word='rm'),
  WordNode(pos=(1321, 1356), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1322, 1340), value='RABBITMQ_DATA_DIR'),
  ]),
])


1233) docker-php-ext-configure ldap --with-libdir="lib/$debMultiarch"

CommandNode(pos=(147, 210), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 176), word='ldap'),
  WordNode(pos=(177, 210), word='--with-libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(196, 209), value='debMultiarch'),
  ]),
])


1234) curl -fL -o owncloud.tar.bz2 "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2"

CommandNode(pos=(11, 118), parts=[
  WordNode(pos=(11, 15), word='curl'),
  WordNode(pos=(16, 19), word='-fL'),
  WordNode(pos=(20, 22), word='-o'),
  WordNode(pos=(23, 39), word='owncloud.tar.bz2'),
  WordNode(pos=(40, 118), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(90, 109), value='OWNCLOUD_VERSION'),
  ]),
])


1235) curl -fL -o owncloud.tar.bz2.asc "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc"

CommandNode(pos=(121, 236), parts=[
  WordNode(pos=(121, 125), word='curl'),
  WordNode(pos=(126, 129), word='-fL'),
  WordNode(pos=(130, 132), word='-o'),
  WordNode(pos=(133, 153), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(154, 236), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc', parts=[
    ParameterNode(pos=(204, 223), value='OWNCLOUD_VERSION'),
  ]),
])


1236) echo "$OWNCLOUD_SHA256 *owncloud.tar.bz2"

CommandNode(pos=(239, 280), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 280), word='$OWNCLOUD_SHA256 *owncloud.tar.bz2', parts=[
    ParameterNode(pos=(245, 261), value='OWNCLOUD_SHA256'),
  ]),
])


1237) rm -r "$GNUPGHOME" owncloud.tar.bz2.asc

CommandNode(pos=(549, 588), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 588), word='owncloud.tar.bz2.asc'),
])


1238) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


1239) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


1240) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


1241) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


1242) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


1243) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


1244) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt   --with-icu

CommandNode(pos=(1395, 1777), parts=[
  WordNode(pos=(1395, 1406), word='./configure'),
  WordNode(pos=(1409, 1427), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1418, 1426), value='gnuArch'),
  ]),
  WordNode(pos=(1430, 1456), word='--enable-integer-datetimes'),
  WordNode(pos=(1459, 1481), word='--enable-thread-safety'),
  WordNode(pos=(1484, 1502), word='--enable-tap-tests'),
  WordNode(pos=(1505, 1520), word='--disable-rpath'),
  WordNode(pos=(1523, 1539), word='--with-uuid=e2fs'),
  WordNode(pos=(1542, 1555), word='--with-gnu-ld'),
  WordNode(pos=(1558, 1576), word='--with-pgport=5432'),
  WordNode(pos=(1579, 1619), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1622, 1641), word='--prefix=/usr/local'),
  WordNode(pos=(1644, 1678), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1681, 1712), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1717, 1731), word='--with-openssl'),
  WordNode(pos=(1734, 1747), word='--with-libxml'),
  WordNode(pos=(1750, 1764), word='--with-libxslt'),
  WordNode(pos=(1767, 1777), word='--with-icu'),
])


1245) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2065, 2150), parts=[
  WordNode(pos=(2065, 2068), word='apk'),
  WordNode(pos=(2069, 2072), word='add'),
  WordNode(pos=(2073, 2083), word='--no-cache'),
  WordNode(pos=(2084, 2093), word='--virtual'),
  WordNode(pos=(2094, 2113), word='.postgresql-rundeps'),
  WordNode(pos=(2116, 2124), word='$runDeps', parts=[
    ParameterNode(pos=(2116, 2124), value='runDeps'),
  ]),
  WordNode(pos=(2127, 2131), word='bash'),
  WordNode(pos=(2134, 2141), word='su-exec'),
  WordNode(pos=(2144, 2150), word='tzdata'),
])


1246) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


1247) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


1248) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


1249) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


1250) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


1251) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


1252) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


1253) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


1254) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


1255) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


1256) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


1257) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


1258) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


1259) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


1260) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


1261) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


1262) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(101, 162), parts=[
  WordNode(pos=(101, 104), word='tee'),
  WordNode(pos=(105, 162), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(130, 156), value='MONGO_PACKAGE%-unstable'),
  ]),
])


1263) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


1264) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


1265) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


1266) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


1267) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


1268) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


1269) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


1270) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


1271) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


1272) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


1273) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


1274) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


1275) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


1276) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


1277) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


1278) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


1279) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


1280) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1281) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


1282) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


1283) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


1284) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


1285) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


1286) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


1287) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget  ;  rm -rf /var/lib/apt/lists/*;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum --check --strict -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf;  ldconfig;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum --check --strict -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3761), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 200), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 90), word='--yes'),
    WordNode(pos=(91, 114), word='--no-install-recommends'),
    WordNode(pos=(117, 125), word='autoconf'),
    WordNode(pos=(128, 143), word='ca-certificates'),
    WordNode(pos=(146, 154), word='dpkg-dev'),
    WordNode(pos=(157, 160), word='gcc'),
    WordNode(pos=(163, 168), word='gnupg'),
    WordNode(pos=(171, 186), word='libncurses5-dev'),
    WordNode(pos=(189, 193), word='make'),
    WordNode(pos=(196, 200), word='wget'),
  ]),
  OperatorNode(op=';', pos=(202, 203)),
  CommandNode(pos=(205, 232), parts=[
    WordNode(pos=(205, 207), word='rm'),
    WordNode(pos=(208, 211), word='-rf'),
    WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(232, 233)),
  CommandNode(pos=(236, 319), parts=[
    AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(319, 320)),
  CommandNode(pos=(322, 376), parts=[
    AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(376, 377)),
  CommandNode(pos=(379, 416), parts=[
    AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(416, 417)),
  CommandNode(pos=(420, 515), parts=[
    WordNode(pos=(420, 424), word='wget'),
    WordNode(pos=(425, 435), word='--progress'),
    WordNode(pos=(436, 444), word='dot:giga'),
    WordNode(pos=(445, 462), word='--output-document'),
    WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(515, 516)),
  CommandNode(pos=(518, 605), parts=[
    WordNode(pos=(518, 522), word='wget'),
    WordNode(pos=(523, 533), word='--progress'),
    WordNode(pos=(534, 542), word='dot:giga'),
    WordNode(pos=(543, 560), word='--output-document'),
    WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(605, 606)),
  CommandNode(pos=(608, 639), parts=[
    WordNode(pos=(608, 614), word='export'),
    WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(628, 637), parts=[
          WordNode(pos=(628, 634), word='mktemp'),
          WordNode(pos=(635, 637), word='-d'),
        ]), pos=(626, 638)),
    ]),
  ]),
  OperatorNode(op=';', pos=(639, 640)),
  CompoundNode(list=[
    ForNode(pos=(642, 746), parts=[
      ReservedwordNode(pos=(642, 645), word='for'),
      WordNode(pos=(646, 649), word='key'),
      ReservedwordNode(pos=(650, 652), word='in'),
      WordNode(pos=(653, 673), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(653, 673), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(673, 674), word=';'),
      ReservedwordNode(pos=(675, 677), word='do'),
      ListNode(pos=(680, 740), parts=[
          CommandNode(pos=(680, 739), parts=[
            WordNode(pos=(680, 683), word='gpg'),
            WordNode(pos=(684, 691), word='--batch'),
            WordNode(pos=(692, 703), word='--keyserver'),
            WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(721, 732), word='--recv-keys'),
            WordNode(pos=(733, 739), word='$key', parts=[
              ParameterNode(pos=(734, 738), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(739, 740)),
        ]),
      ReservedwordNode(pos=(742, 746), word='done'),
    ]),
  ], pos=(642, 746)),
  OperatorNode(op=';', pos=(746, 747)),
  CommandNode(pos=(749, 819), parts=[
    WordNode(pos=(749, 752), word='gpg'),
    WordNode(pos=(753, 760), word='--batch'),
    WordNode(pos=(761, 769), word='--verify'),
    WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(819, 820)),
  CommandNode(pos=(822, 840), parts=[
    WordNode(pos=(822, 829), word='gpgconf'),
    WordNode(pos=(830, 836), word='--kill'),
    WordNode(pos=(837, 840), word='all'),
  ]),
  OperatorNode(op=';', pos=(840, 841)),
  CommandNode(pos=(843, 862), parts=[
    WordNode(pos=(843, 845), word='rm'),
    WordNode(pos=(846, 849), word='-rf'),
    WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(851, 861), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(862, 863)),
  PipelineNode(pos=(865, 947), parts=[
    CommandNode(pos=(865, 916), parts=[
      WordNode(pos=(865, 869), word='echo'),
      WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(917, 918)),
    CommandNode(pos=(919, 947), parts=[
      WordNode(pos=(919, 928), word='sha256sum'),
      WordNode(pos=(929, 936), word='--check'),
      WordNode(pos=(937, 945), word='--strict'),
      WordNode(pos=(946, 947), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(947, 948)),
  CommandNode(pos=(950, 974), parts=[
    WordNode(pos=(950, 955), word='mkdir'),
    WordNode(pos=(956, 958), word='-p'),
    WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(977, 1069), parts=[
    WordNode(pos=(977, 980), word='tar'),
    WordNode(pos=(981, 990), word='--extract'),
    WordNode(pos=(991, 997), word='--file'),
    WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1021, 1032), word='--directory'),
    WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1049, 1067), word='--strip-components'),
    WordNode(pos=(1068, 1069), word='1'),
  ]),
  OperatorNode(op=';', pos=(1069, 1070)),
  CommandNode(pos=(1073, 1091), parts=[
    WordNode(pos=(1073, 1075), word='cd'),
    WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1091, 1092)),
  CommandNode(pos=(1094, 1156), parts=[
    AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1110, 1154), parts=[
          WordNode(pos=(1110, 1127), word='dpkg-architecture'),
          WordNode(pos=(1128, 1135), word='--query'),
          WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
        ]), pos=(1108, 1155)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1156, 1157)),
  CommandNode(pos=(1159, 1337), parts=[
    AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1170, 1213), parts=[
          WordNode(pos=(1170, 1187), word='dpkg-architecture'),
          WordNode(pos=(1188, 1195), word='--query'),
          WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1168, 1214)),
    ]),
    AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
    WordNode(pos=(1265, 1273), word='./config'),
    WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
      ParameterNode(pos=(1323, 1336), value='debMultiarch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1337, 1338)),
  CommandNode(pos=(1340, 1378), parts=[
    WordNode(pos=(1340, 1344), word='make'),
    WordNode(pos=(1345, 1347), word='-j'),
    WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1351, 1376), parts=[
          WordNode(pos=(1351, 1358), word='getconf'),
          WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
        ]), pos=(1349, 1377)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1378, 1379)),
  CommandNode(pos=(1381, 1412), parts=[
    WordNode(pos=(1381, 1385), word='make'),
    WordNode(pos=(1386, 1396), word='install_sw'),
    WordNode(pos=(1397, 1412), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1412, 1413)),
  CommandNode(pos=(1415, 1420), parts=[
    WordNode(pos=(1415, 1417), word='cd'),
    WordNode(pos=(1418, 1420), word='..'),
  ]),
  OperatorNode(op=';', pos=(1420, 1421)),
  CommandNode(pos=(1423, 1446), parts=[
    WordNode(pos=(1423, 1425), word='rm'),
    WordNode(pos=(1426, 1429), word='-rf'),
    WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1446, 1447)),
  CommandNode(pos=(1449, 1512), parts=[
    WordNode(pos=(1449, 1453), word='echo'),
    WordNode(pos=(1454, 1470), word='/usr/local/lib'),
    RedirectNode(output=
      WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
  ]),
  OperatorNode(op=';', pos=(1512, 1513)),
  CommandNode(pos=(1515, 1523), parts=[
    WordNode(pos=(1515, 1523), word='ldconfig'),
  ]),
  OperatorNode(op=';', pos=(1523, 1524)),
  CommandNode(pos=(1526, 1589), parts=[
    WordNode(pos=(1526, 1531), word='rmdir'),
    WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1589, 1590)),
  CommandNode(pos=(1592, 1652), parts=[
    WordNode(pos=(1592, 1594), word='ln'),
    WordNode(pos=(1595, 1598), word='-sf'),
    WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
    WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
    WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1652, 1653)),
  CommandNode(pos=(1655, 1670), parts=[
    WordNode(pos=(1655, 1662), word='openssl'),
    WordNode(pos=(1663, 1670), word='version'),
  ]),
  OperatorNode(op=';', pos=(1670, 1671)),
  CommandNode(pos=(1674, 1752), parts=[
    AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1752, 1753)),
  CommandNode(pos=(1755, 1797), parts=[
    AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1797, 1798)),
  CommandNode(pos=(1801, 1821), parts=[
    WordNode(pos=(1801, 1806), word='mkdir'),
    WordNode(pos=(1807, 1809), word='-p'),
    WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1821, 1822)),
  CommandNode(pos=(1824, 1903), parts=[
    WordNode(pos=(1824, 1828), word='wget'),
    WordNode(pos=(1829, 1839), word='--progress'),
    WordNode(pos=(1840, 1848), word='dot:giga'),
    WordNode(pos=(1849, 1866), word='--output-document'),
    WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
    ]),
    WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1903, 1904)),
  PipelineNode(pos=(1906, 1980), parts=[
    CommandNode(pos=(1906, 1949), parts=[
      WordNode(pos=(1906, 1910), word='echo'),
      WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1950, 1951)),
    CommandNode(pos=(1952, 1980), parts=[
      WordNode(pos=(1952, 1961), word='sha256sum'),
      WordNode(pos=(1962, 1969), word='--check'),
      WordNode(pos=(1970, 1978), word='--strict'),
      WordNode(pos=(1979, 1980), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1980, 1981)),
  CommandNode(pos=(1983, 2067), parts=[
    WordNode(pos=(1983, 1986), word='tar'),
    WordNode(pos=(1987, 1996), word='--extract'),
    WordNode(pos=(1997, 2003), word='--file'),
    WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
    ]),
    WordNode(pos=(2023, 2034), word='--directory'),
    WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
    ]),
    WordNode(pos=(2047, 2065), word='--strip-components'),
    WordNode(pos=(2066, 2067), word='1'),
  ]),
  OperatorNode(op=';', pos=(2067, 2068)),
  CommandNode(pos=(2071, 2085), parts=[
    WordNode(pos=(2071, 2073), word='cd'),
    WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2085, 2086)),
  CommandNode(pos=(2088, 2114), parts=[
    WordNode(pos=(2088, 2094), word='export'),
    WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2114, 2115)),
  CommandNode(pos=(2117, 2137), parts=[
    WordNode(pos=(2117, 2128), word='./otp_build'),
    WordNode(pos=(2129, 2137), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(2137, 2138)),
  CommandNode(pos=(2140, 2180), parts=[
    AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2150, 2178), parts=[
          WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
          WordNode(pos=(2166, 2171), word='--get'),
          WordNode(pos=(2172, 2178), word='CFLAGS'),
        ]), pos=(2148, 2179)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2180, 2181)),
  CommandNode(pos=(2182, 2195), parts=[
    WordNode(pos=(2182, 2188), word='export'),
    WordNode(pos=(2189, 2195), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(2195, 2196)),
  CommandNode(pos=(2198, 2255), parts=[
    AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2210, 2253), parts=[
          WordNode(pos=(2210, 2227), word='dpkg-architecture'),
          WordNode(pos=(2228, 2235), word='--query'),
          WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(2208, 2254)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2255, 2256)),
  CommandNode(pos=(2258, 2317), parts=[
    AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2271, 2315), parts=[
          WordNode(pos=(2271, 2288), word='dpkg-architecture'),
          WordNode(pos=(2289, 2296), word='--query'),
          WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(2269, 2316)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2317, 2318)),
  CommandNode(pos=(2320, 2359), parts=[
    AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2332, 2357), parts=[
          WordNode(pos=(2332, 2336), word='dpkg'),
          WordNode(pos=(2337, 2357), word='--print-architecture'),
        ]), pos=(2330, 2358)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2359, 2360)),
  CommandNode(pos=(2361, 2387), parts=[
    AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2387, 2388)),
  CommandNode(pos=(2390, 3072), parts=[
    WordNode(pos=(2390, 2401), word='./configure'),
    WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2412, 2421), value='hostArch'),
    ]),
    WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2434, 2444), value='buildArch'),
    ]),
    WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2476, 2490), word='--disable-hipe'),
    WordNode(pos=(2493, 2507), word='--disable-sctp'),
    WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
    WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
    WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
    WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
    WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
    WordNode(pos=(2629, 2649), word='--enable-smp-support'),
    WordNode(pos=(2652, 2668), word='--enable-threads'),
    WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2708, 2729), word='--without-common_test'),
    WordNode(pos=(2732, 2750), word='--without-debugger'),
    WordNode(pos=(2753, 2771), word='--without-dialyzer'),
    WordNode(pos=(2774, 2792), word='--without-diameter'),
    WordNode(pos=(2795, 2809), word='--without-edoc'),
    WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
    WordNode(pos=(2835, 2858), word='--without-erl_interface'),
    WordNode(pos=(2861, 2873), word='--without-et'),
    WordNode(pos=(2876, 2891), word='--without-eunit'),
    WordNode(pos=(2894, 2907), word='--without-ftp'),
    WordNode(pos=(2910, 2924), word='--without-hipe'),
    WordNode(pos=(2927, 2947), word='--without-jinterface'),
    WordNode(pos=(2950, 2966), word='--without-megaco'),
    WordNode(pos=(2969, 2987), word='--without-observer'),
    WordNode(pos=(2990, 3004), word='--without-odbc'),
    WordNode(pos=(3007, 3024), word='--without-reltool'),
    WordNode(pos=(3027, 3040), word='--without-ssh'),
    WordNode(pos=(3043, 3057), word='--without-tftp'),
    WordNode(pos=(3060, 3072), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(3074, 3075)),
  CommandNode(pos=(3077, 3155), parts=[
    WordNode(pos=(3077, 3081), word='make'),
    WordNode(pos=(3082, 3084), word='-j'),
    WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(3088, 3113), parts=[
          WordNode(pos=(3088, 3095), word='getconf'),
          WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
        ]), pos=(3086, 3114)),
    ]),
    WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(3155, 3156)),
  CommandNode(pos=(3158, 3170), parts=[
    WordNode(pos=(3158, 3162), word='make'),
    WordNode(pos=(3163, 3170), word='install'),
  ]),
  OperatorNode(op=';', pos=(3170, 3171)),
  CommandNode(pos=(3173, 3178), parts=[
    WordNode(pos=(3173, 3175), word='cd'),
    WordNode(pos=(3176, 3178), word='..'),
  ]),
  OperatorNode(op=';', pos=(3178, 3179)),
  CommandNode(pos=(3181, 3275), parts=[
    WordNode(pos=(3181, 3183), word='rm'),
    WordNode(pos=(3184, 3187), word='-rf'),
    WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
    ]),
    WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(3277, 3278)),
  CommandNode(pos=(3281, 3311), parts=[
    WordNode(pos=(3281, 3289), word='apt-mark'),
    WordNode(pos=(3290, 3294), word='auto'),
    WordNode(pos=(3295, 3299), word='.*'),
    RedirectNode(output=
      WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
  ]),
  OperatorNode(op=';', pos=(3311, 3312)),
  CommandNode(pos=(3314, 3336), parts=[
    WordNode(pos=(3314, 3315), word='['),
    WordNode(pos=(3316, 3318), word='-z'),
    WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
      ParameterNode(pos=(3320, 3333), value='savedAptMark'),
    ]),
    WordNode(pos=(3335, 3336), word=']'),
  ]),
  OperatorNode(op='||', pos=(3337, 3339)),
  CommandNode(pos=(3340, 3369), parts=[
    WordNode(pos=(3340, 3348), word='apt-mark'),
    WordNode(pos=(3349, 3355), word='manual'),
    WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
      ParameterNode(pos=(3356, 3369), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3369, 3370)),
  PipelineNode(pos=(3372, 3561), parts=[
    CommandNode(pos=(3372, 3426), parts=[
      WordNode(pos=(3372, 3376), word='find'),
      WordNode(pos=(3377, 3387), word='/usr/local'),
      WordNode(pos=(3388, 3393), word='-type'),
      WordNode(pos=(3394, 3395), word='f'),
      WordNode(pos=(3396, 3407), word='-executable'),
      WordNode(pos=(3408, 3413), word='-exec'),
      WordNode(pos=(3414, 3417), word='ldd'),
      WordNode(pos=(3418, 3422), word='{}'),
      WordNode(pos=(3423, 3426), word=';'),
    ]),
    PipeNode(pipe='|', pos=(3429, 3430)),
    CommandNode(pos=(3431, 3459), parts=[
      WordNode(pos=(3431, 3434), word='awk'),
      WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(3462, 3463)),
    CommandNode(pos=(3464, 3471), parts=[
      WordNode(pos=(3464, 3468), word='sort'),
      WordNode(pos=(3469, 3471), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3474, 3475)),
    CommandNode(pos=(3476, 3504), parts=[
      WordNode(pos=(3476, 3481), word='xargs'),
      WordNode(pos=(3482, 3484), word='-r'),
      WordNode(pos=(3485, 3495), word='dpkg-query'),
      WordNode(pos=(3496, 3504), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(3507, 3508)),
    CommandNode(pos=(3509, 3520), parts=[
      WordNode(pos=(3509, 3512), word='cut'),
      WordNode(pos=(3513, 3516), word='-d:'),
      WordNode(pos=(3517, 3520), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(3523, 3524)),
    CommandNode(pos=(3525, 3532), parts=[
      WordNode(pos=(3525, 3529), word='sort'),
      WordNode(pos=(3530, 3532), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3535, 3536)),
    CommandNode(pos=(3537, 3561), parts=[
      WordNode(pos=(3537, 3542), word='xargs'),
      WordNode(pos=(3543, 3545), word='-r'),
      WordNode(pos=(3546, 3554), word='apt-mark'),
      WordNode(pos=(3555, 3561), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3563, 3564)),
  CommandNode(pos=(3566, 3642), parts=[
    WordNode(pos=(3566, 3573), word='apt-get'),
    WordNode(pos=(3574, 3579), word='purge'),
    WordNode(pos=(3580, 3582), word='-y'),
    WordNode(pos=(3583, 3596), word='--auto-remove'),
    WordNode(pos=(3597, 3599), word='-o'),
    WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(3642, 3643)),
  CommandNode(pos=(3646, 3661), parts=[
    WordNode(pos=(3646, 3653), word='openssl'),
    WordNode(pos=(3654, 3661), word='version'),
  ]),
  OperatorNode(op=';', pos=(3661, 3662)),
  CommandNode(pos=(3664, 3761), parts=[
    WordNode(pos=(3664, 3667), word='erl'),
    WordNode(pos=(3668, 3676), word='-noshell'),
    WordNode(pos=(3677, 3682), word='-eval'),
    WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


1288) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


1289) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


1290) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


1291) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


1292) rm -rf "$GNUPGHOME"

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 849), word='-rf'),
  WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(851, 861), value='GNUPGHOME'),
  ]),
])


1293) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


1294) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


1295) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(950, 974), parts=[
  WordNode(pos=(950, 955), word='mkdir'),
  WordNode(pos=(956, 958), word='-p'),
  WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
  ]),
])


1296) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


1297) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


1298) cd "$OPENSSL_PATH"

CommandNode(pos=(1073, 1091), parts=[
  WordNode(pos=(1073, 1075), word='cd'),
  WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
  ]),
])


1299) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


1300) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


1301) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1423, 1446), parts=[
  WordNode(pos=(1423, 1425), word='rm'),
  WordNode(pos=(1426, 1429), word='-rf'),
  WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
  ]),
])


1302) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1303) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1304) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1592, 1652), parts=[
  WordNode(pos=(1592, 1594), word='ln'),
  WordNode(pos=(1595, 1598), word='-sf'),
  WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
  WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
  WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1305) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


1306) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


1307) mkdir -p "$OTP_PATH"

CommandNode(pos=(1801, 1821), parts=[
  WordNode(pos=(1801, 1806), word='mkdir'),
  WordNode(pos=(1807, 1809), word='-p'),
  WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
  ]),
])


1308) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


1309) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


1310) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


1311) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


1312) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


1313) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


1314) cd "$OTP_PATH"

CommandNode(pos=(2071, 2085), parts=[
  WordNode(pos=(2071, 2073), word='cd'),
  WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
  ]),
])


1315) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(2088, 2114), parts=[
  WordNode(pos=(2088, 2094), word='export'),
  WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
  ]),
])


1316) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


1317) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


1318) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


1319) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(3181, 3275), parts=[
  WordNode(pos=(3181, 3183), word='rm'),
  WordNode(pos=(3184, 3187), word='-rf'),
  WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
  ]),
  WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
])


1320) [ -z "$savedAptMark" ]

CommandNode(pos=(3314, 3336), parts=[
  WordNode(pos=(3314, 3315), word='['),
  WordNode(pos=(3316, 3318), word='-z'),
  WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
    ParameterNode(pos=(3320, 3333), value='savedAptMark'),
  ]),
  WordNode(pos=(3335, 3336), word=']'),
])


1321) apt-mark manual $savedAptMark

CommandNode(pos=(3340, 3369), parts=[
  WordNode(pos=(3340, 3348), word='apt-mark'),
  WordNode(pos=(3349, 3355), word='manual'),
  WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
    ParameterNode(pos=(3356, 3369), value='savedAptMark'),
  ]),
])


1322) useradd --uid 999 --system --home-dir "$RABBITMQ_DATA_DIR" --gid rabbitmq rabbitmq

CommandNode(pos=(50, 132), parts=[
  WordNode(pos=(50, 57), word='useradd'),
  WordNode(pos=(58, 63), word='--uid'),
  WordNode(pos=(64, 67), word='999'),
  WordNode(pos=(68, 76), word='--system'),
  WordNode(pos=(77, 87), word='--home-dir'),
  WordNode(pos=(88, 108), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(89, 107), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(109, 114), word='--gid'),
  WordNode(pos=(115, 123), word='rabbitmq'),
  WordNode(pos=(124, 132), word='rabbitmq'),
])


1323) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(135, 214), parts=[
  WordNode(pos=(135, 140), word='mkdir'),
  WordNode(pos=(141, 143), word='-p'),
  WordNode(pos=(144, 164), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(145, 163), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(165, 178), word='/etc/rabbitmq'),
  WordNode(pos=(179, 196), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(197, 214), word='/var/log/rabbitmq'),
])


1324) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(217, 315), parts=[
  WordNode(pos=(217, 222), word='chown'),
  WordNode(pos=(223, 226), word='-fR'),
  WordNode(pos=(227, 244), word='rabbitmq:rabbitmq'),
  WordNode(pos=(245, 265), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(246, 264), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(266, 279), word='/etc/rabbitmq'),
  WordNode(pos=(280, 297), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(298, 315), word='/var/log/rabbitmq'),
])


1325) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(318, 398), parts=[
  WordNode(pos=(318, 323), word='chmod'),
  WordNode(pos=(324, 327), word='777'),
  WordNode(pos=(328, 348), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(329, 347), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(349, 362), word='/etc/rabbitmq'),
  WordNode(pos=(363, 380), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(381, 398), word='/var/log/rabbitmq'),
])


1326) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(401, 464), parts=[
  WordNode(pos=(401, 403), word='ln'),
  WordNode(pos=(404, 407), word='-sf'),
  WordNode(pos=(408, 443), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(409, 427), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(444, 464), word='/root/.erlang.cookie'),
])


1327) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


1328) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


1329) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


1330) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1331) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1332) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1333) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1334) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


1335) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


1336) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


1337) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


1338) rm -rf "$GNUPGHOME"

CommandNode(pos=(815, 834), parts=[
  WordNode(pos=(815, 817), word='rm'),
  WordNode(pos=(818, 821), word='-rf'),
  WordNode(pos=(822, 834), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(823, 833), value='GNUPGHOME'),
  ]),
])


1339) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(838, 863), parts=[
  WordNode(pos=(838, 843), word='mkdir'),
  WordNode(pos=(844, 846), word='-p'),
  WordNode(pos=(847, 863), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(848, 862), value='RABBITMQ_HOME'),
  ]),
])


1340) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


1341) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


1342) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(963, 987), parts=[
  WordNode(pos=(963, 965), word='rm'),
  WordNode(pos=(966, 969), word='-rf'),
  WordNode(pos=(970, 987), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(971, 985), value='RABBITMQ_PATH'),
  ]),
])


1343) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(990, 1073), parts=[
  WordNode(pos=(990, 994), word='grep'),
  WordNode(pos=(995, 998), word='-qE'),
  WordNode(pos=(999, 1033), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(1034, 1073), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1035, 1049), value='RABBITMQ_HOME'),
  ]),
])


1344) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1076, 1155), parts=[
  WordNode(pos=(1076, 1079), word='sed'),
  WordNode(pos=(1080, 1082), word='-i'),
  WordNode(pos=(1083, 1115), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(1116, 1155), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1117, 1131), value='RABBITMQ_HOME'),
  ]),
])


1345) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1158, 1222), parts=[
  WordNode(pos=(1158, 1162), word='grep'),
  WordNode(pos=(1163, 1166), word='-qE'),
  WordNode(pos=(1167, 1182), word='^SYS_PREFIX=$'),
  WordNode(pos=(1183, 1222), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1184, 1198), value='RABBITMQ_HOME'),
  ]),
])


1346) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1225, 1268), parts=[
  WordNode(pos=(1225, 1230), word='chown'),
  WordNode(pos=(1231, 1233), word='-R'),
  WordNode(pos=(1234, 1251), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1252, 1268), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1253, 1267), value='RABBITMQ_HOME'),
  ]),
])


1347) apt-mark manual $savedAptMark

CommandNode(pos=(1305, 1334), parts=[
  WordNode(pos=(1305, 1313), word='apt-mark'),
  WordNode(pos=(1314, 1320), word='manual'),
  WordNode(pos=(1321, 1334), word='$savedAptMark', parts=[
    ParameterNode(pos=(1321, 1334), value='savedAptMark'),
  ]),
])


1348) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1417, 1461), parts=[
  WordNode(pos=(1417, 1418), word='['),
  WordNode(pos=(1419, 1420), word='!'),
  WordNode(pos=(1421, 1423), word='-e'),
  WordNode(pos=(1424, 1459), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1425, 1443), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1460, 1461), word=']'),
])


1349) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1576, 1614), parts=[
  WordNode(pos=(1576, 1578), word='rm'),
  WordNode(pos=(1579, 1614), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1580, 1598), value='RABBITMQ_DATA_DIR'),
  ]),
])


1350) npm install -g "ghost-cli@$GHOST_CLI_VERSION"

CommandNode(pos=(11, 56), parts=[
  WordNode(pos=(11, 14), word='npm'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-g'),
  WordNode(pos=(26, 56), word='ghost-cli@$GHOST_CLI_VERSION', parts=[
    ParameterNode(pos=(37, 55), value='GHOST_CLI_VERSION'),
  ]),
])


1351) mkdir -p "$GHOST_INSTALL"

CommandNode(pos=(11, 36), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
  ]),
])


1352) chown node:node "$GHOST_INSTALL"

CommandNode(pos=(39, 71), parts=[
  WordNode(pos=(39, 44), word='chown'),
  WordNode(pos=(45, 54), word='node:node'),
  WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
  ]),
])


1353) su-exec node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 188), parts=[
  WordNode(pos=(75, 82), word='su-exec'),
  WordNode(pos=(83, 87), word='node'),
  WordNode(pos=(88, 93), word='ghost'),
  WordNode(pos=(94, 101), word='install'),
  WordNode(pos=(102, 118), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(103, 117), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(119, 123), word='--db'),
  WordNode(pos=(124, 131), word='sqlite3'),
  WordNode(pos=(132, 143), word='--no-prompt'),
  WordNode(pos=(144, 154), word='--no-stack'),
  WordNode(pos=(155, 165), word='--no-setup'),
  WordNode(pos=(166, 171), word='--dir'),
  WordNode(pos=(172, 188), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(173, 187), value='GHOST_INSTALL'),
  ]),
])


1354) su-exec node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 188), parts=[
  WordNode(pos=(75, 82), word='su-exec'),
  WordNode(pos=(83, 87), word='node'),
  WordNode(pos=(88, 93), word='ghost'),
  WordNode(pos=(94, 101), word='install'),
  WordNode(pos=(102, 118), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(103, 117), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(119, 123), word='--db'),
  WordNode(pos=(124, 131), word='sqlite3'),
  WordNode(pos=(132, 143), word='--no-prompt'),
  WordNode(pos=(144, 154), word='--no-stack'),
  WordNode(pos=(155, 165), word='--no-setup'),
  WordNode(pos=(166, 171), word='--dir'),
  WordNode(pos=(172, 188), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(173, 187), value='GHOST_INSTALL'),
  ]),
])


1355) cd "$GHOST_INSTALL"

CommandNode(pos=(192, 211), parts=[
  WordNode(pos=(192, 194), word='cd'),
  WordNode(pos=(195, 211), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(196, 210), value='GHOST_INSTALL'),
  ]),
])


1356) su-exec node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db"

CommandNode(pos=(214, 357), parts=[
  WordNode(pos=(214, 221), word='su-exec'),
  WordNode(pos=(222, 226), word='node'),
  WordNode(pos=(227, 232), word='ghost'),
  WordNode(pos=(233, 239), word='config'),
  WordNode(pos=(240, 244), word='--ip'),
  WordNode(pos=(245, 252), word='0.0.0.0'),
  WordNode(pos=(253, 259), word='--port'),
  WordNode(pos=(260, 264), word='2368'),
  WordNode(pos=(265, 276), word='--no-prompt'),
  WordNode(pos=(277, 281), word='--db'),
  WordNode(pos=(282, 289), word='sqlite3'),
  WordNode(pos=(290, 295), word='--url'),
  WordNode(pos=(296, 317), word='http://localhost:2368'),
  WordNode(pos=(318, 326), word='--dbpath'),
  WordNode(pos=(327, 357), word='$GHOST_CONTENT/data/ghost.db', parts=[
    ParameterNode(pos=(328, 342), value='GHOST_CONTENT'),
  ]),
])


1357) su-exec node ghost config paths.contentPath "$GHOST_CONTENT"

CommandNode(pos=(360, 420), parts=[
  WordNode(pos=(360, 367), word='su-exec'),
  WordNode(pos=(368, 372), word='node'),
  WordNode(pos=(373, 378), word='ghost'),
  WordNode(pos=(379, 385), word='config'),
  WordNode(pos=(386, 403), word='paths.contentPath'),
  WordNode(pos=(404, 420), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(405, 419), value='GHOST_CONTENT'),
  ]),
])


1358) su-exec node ln -s config.production.json "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(424, 506), parts=[
  WordNode(pos=(424, 431), word='su-exec'),
  WordNode(pos=(432, 436), word='node'),
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 442), word='-s'),
  WordNode(pos=(443, 465), word='config.production.json'),
  WordNode(pos=(466, 506), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(467, 481), value='GHOST_INSTALL'),
  ]),
])


1359) readlink -f "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(509, 561), parts=[
  WordNode(pos=(509, 517), word='readlink'),
  WordNode(pos=(518, 520), word='-f'),
  WordNode(pos=(521, 561), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(522, 536), value='GHOST_INSTALL'),
  ]),
])


1360) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(565, 614), parts=[
  WordNode(pos=(565, 567), word='mv'),
  WordNode(pos=(568, 584), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(569, 583), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(585, 614), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(586, 600), value='GHOST_INSTALL'),
  ]),
])


1361) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(565, 614), parts=[
  WordNode(pos=(565, 567), word='mv'),
  WordNode(pos=(568, 584), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(569, 583), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(585, 614), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(586, 600), value='GHOST_INSTALL'),
  ]),
])


1362) mkdir -p "$GHOST_CONTENT"

CommandNode(pos=(617, 642), parts=[
  WordNode(pos=(617, 622), word='mkdir'),
  WordNode(pos=(623, 625), word='-p'),
  WordNode(pos=(626, 642), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(627, 641), value='GHOST_CONTENT'),
  ]),
])


1363) chown node:node "$GHOST_CONTENT"

CommandNode(pos=(645, 677), parts=[
  WordNode(pos=(645, 650), word='chown'),
  WordNode(pos=(651, 660), word='node:node'),
  WordNode(pos=(661, 677), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(662, 676), value='GHOST_CONTENT'),
  ]),
])


1364) cd "$GHOST_INSTALL/current"

CommandNode(pos=(681, 708), parts=[
  WordNode(pos=(681, 683), word='cd'),
  WordNode(pos=(684, 708), word='$GHOST_INSTALL/current', parts=[
    ParameterNode(pos=(685, 699), value='GHOST_INSTALL'),
  ]),
])


1365) su-exec node yarn add "sqlite3@$sqlite3Version" --force

CommandNode(pos=(778, 833), parts=[
  WordNode(pos=(778, 785), word='su-exec'),
  WordNode(pos=(786, 790), word='node'),
  WordNode(pos=(791, 795), word='yarn'),
  WordNode(pos=(796, 799), word='add'),
  WordNode(pos=(800, 825), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(809, 824), value='sqlite3Version'),
  ]),
  WordNode(pos=(826, 833), word='--force'),
])


1366) su-exec node yarn add "sqlite3@$sqlite3Version" --force --build-from-source

CommandNode(pos=(917, 992), parts=[
  WordNode(pos=(917, 924), word='su-exec'),
  WordNode(pos=(925, 929), word='node'),
  WordNode(pos=(930, 934), word='yarn'),
  WordNode(pos=(935, 938), word='add'),
  WordNode(pos=(939, 964), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(948, 963), value='sqlite3Version'),
  ]),
  WordNode(pos=(965, 972), word='--force'),
  WordNode(pos=(973, 992), word='--build-from-source'),
])


1367) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


1368) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


1369) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


1370) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


1371) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


1372) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


1373) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


1374) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1375) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1376) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1377) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1378) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


1379) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


1380) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1115, 1267), parts=[
  WordNode(pos=(1115, 1126), word='./configure'),
  WordNode(pos=(1129, 1147), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1138, 1146), value='gnuArch'),
  ]),
  WordNode(pos=(1150, 1185), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1188, 1203), word='--enable-shared'),
  WordNode(pos=(1206, 1225), word='--with-system-expat'),
  WordNode(pos=(1228, 1245), word='--with-system-ffi'),
  WordNode(pos=(1248, 1267), word='--without-ensurepip'),
])


1381) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1382) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


1383) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


1384) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(666, 709), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 672), word='-rf'),
  WordNode(pos=(673, 685), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(674, 684), value='GNUPGHOME'),
  ]),
  WordNode(pos=(686, 709), word='/usr/local/bin/gosu.asc'),
])


1385) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 304), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 219), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 240), parts=[
    WordNode(pos=(222, 229), word='command'),
    WordNode(pos=(230, 232), word='-v'),
    WordNode(pos=(233, 240), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(241, 243)),
  CommandNode(pos=(244, 262), parts=[
    WordNode(pos=(244, 251), word='gpgconf'),
    WordNode(pos=(252, 258), word='--kill'),
    WordNode(pos=(259, 262), word='all'),
  ]),
  OperatorNode(op='||', pos=(263, 265)),
  CommandNode(pos=(266, 267), parts=[
    WordNode(pos=(266, 267), word=':'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 289), parts=[
    WordNode(pos=(270, 272), word='rm'),
    WordNode(pos=(273, 276), word='-rf'),
    WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(278, 288), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(289, 290)),
  CommandNode(pos=(292, 304), parts=[
    WordNode(pos=(292, 299), word='apt-key'),
    WordNode(pos=(300, 304), word='list'),
  ]),
])


1386) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


1387) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg

CommandNode(pos=(150, 219), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
])


1388) rm -rf "$GNUPGHOME"

CommandNode(pos=(270, 289), parts=[
  WordNode(pos=(270, 272), word='rm'),
  WordNode(pos=(273, 276), word='-rf'),
  WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(278, 288), value='GNUPGHOME'),
  ]),
])


1389) mkdir -p /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 27), word='/var/lib/cassandra'),
  WordNode(pos=(28, 47), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(29, 46), value='CASSANDRA_CONFIG'),
  ]),
])


1390) chown -R cassandra:cassandra /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(52, 119), parts=[
  WordNode(pos=(52, 57), word='chown'),
  WordNode(pos=(58, 60), word='-R'),
  WordNode(pos=(61, 80), word='cassandra:cassandra'),
  WordNode(pos=(81, 99), word='/var/lib/cassandra'),
  WordNode(pos=(100, 119), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(101, 118), value='CASSANDRA_CONFIG'),
  ]),
])


1391) chmod 777 /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(124, 172), parts=[
  WordNode(pos=(124, 129), word='chmod'),
  WordNode(pos=(130, 133), word='777'),
  WordNode(pos=(134, 152), word='/var/lib/cassandra'),
  WordNode(pos=(153, 172), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(154, 171), value='CASSANDRA_CONFIG'),
  ]),
])


1392) gem install passenger --version "$PASSENGER_VERSION"

CommandNode(pos=(160, 212), parts=[
  WordNode(pos=(160, 163), word='gem'),
  WordNode(pos=(164, 171), word='install'),
  WordNode(pos=(172, 181), word='passenger'),
  WordNode(pos=(182, 191), word='--version'),
  WordNode(pos=(192, 212), word='$PASSENGER_VERSION', parts=[
    ParameterNode(pos=(193, 211), value='PASSENGER_VERSION'),
  ]),
])


1393) [ -z "$savedAptMark" ]

CommandNode(pos=(406, 428), parts=[
  WordNode(pos=(406, 407), word='['),
  WordNode(pos=(408, 410), word='-z'),
  WordNode(pos=(411, 426), word='$savedAptMark', parts=[
    ParameterNode(pos=(412, 425), value='savedAptMark'),
  ]),
  WordNode(pos=(427, 428), word=']'),
])


1394) apt-mark manual $savedAptMark

CommandNode(pos=(432, 461), parts=[
  WordNode(pos=(432, 440), word='apt-mark'),
  WordNode(pos=(441, 447), word='manual'),
  WordNode(pos=(448, 461), word='$savedAptMark', parts=[
    ParameterNode(pos=(448, 461), value='savedAptMark'),
  ]),
])


1395) set -ex;  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done

ListNode(pos=(0, 113), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    ForNode(pos=(10, 113), parts=[
      ReservedwordNode(pos=(10, 13), word='for'),
      WordNode(pos=(14, 17), word='key'),
      ReservedwordNode(pos=(18, 20), word='in'),
      WordNode(pos=(21, 30), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(21, 30), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(30, 31), word=';'),
      ReservedwordNode(pos=(32, 34), word='do'),
      ListNode(pos=(37, 107), parts=[
          CommandNode(pos=(37, 106), parts=[
            WordNode(pos=(37, 40), word='gpg'),
            WordNode(pos=(41, 48), word='--batch'),
            WordNode(pos=(49, 60), word='--keyserver'),
            WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(88, 99), word='--recv-keys'),
            WordNode(pos=(100, 106), word='$key', parts=[
              ParameterNode(pos=(101, 105), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
        ]),
      ReservedwordNode(pos=(109, 113), word='done'),
    ]),
  ], pos=(10, 113)),
])


1396) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(37, 106), parts=[
  WordNode(pos=(37, 40), word='gpg'),
  WordNode(pos=(41, 48), word='--batch'),
  WordNode(pos=(49, 60), word='--keyserver'),
  WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(88, 99), word='--recv-keys'),
  WordNode(pos=(100, 106), word='$key', parts=[
    ParameterNode(pos=(101, 105), value='key'),
  ]),
])


1397) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$MANIFEST_TOOL_GPG_KEY"

CommandNode(pos=(56, 143), parts=[
  WordNode(pos=(56, 59), word='gpg'),
  WordNode(pos=(60, 67), word='--batch'),
  WordNode(pos=(68, 79), word='--keyserver'),
  WordNode(pos=(80, 106), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(107, 118), word='--recv-keys'),
  WordNode(pos=(119, 143), word='$MANIFEST_TOOL_GPG_KEY', parts=[
    ParameterNode(pos=(120, 142), value='MANIFEST_TOOL_GPG_KEY'),
  ]),
])


1398) set -euxo pipefail;   export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$MANIFEST_TOOL_GPG_KEY";   mkdir -p bin;   for bashbrewArch in $BASHBREW_ARCHES; do   (    goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"; eval "$goEnv";    srcBin="manifest-tool-$GOOS-$GOARCH";    if [ "$GOARCH" = 'arm' ]; then [ -n "$GOARM" ]; srcBin="${srcBin}v$GOARM"; fi;    [ "$GOOS" = 'windows' ] && ext='.exe' || ext=;    srcBin="$srcBin$ext";    targetBin="bin/manifest-tool-$bashbrewArch$ext";    wget -O "$targetBin.asc" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc";    wget -O "$targetBin" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin";    gpg --batch --verify "$targetBin.asc" "$targetBin";    ls -lAFh "$targetBin"*;    file "$targetBin"*;   )  done;   gpgconf --kill all;  rm -r "$GNUPGHOME";   ls -lAFh bin/manifest-tool-*;  file bin/manifest-tool-*

ListNode(pos=(0, 993), parts=[
  CommandNode(pos=(0, 18), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 9), word='-euxo'),
    WordNode(pos=(10, 18), word='pipefail'),
  ]),
  OperatorNode(op=';', pos=(18, 19)),
  CommandNode(pos=(22, 53), parts=[
    WordNode(pos=(22, 28), word='export'),
    WordNode(pos=(29, 53), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(42, 51), parts=[
          WordNode(pos=(42, 48), word='mktemp'),
          WordNode(pos=(49, 51), word='-d'),
        ]), pos=(40, 52)),
    ]),
  ]),
  OperatorNode(op=';', pos=(53, 54)),
  CommandNode(pos=(56, 143), parts=[
    WordNode(pos=(56, 59), word='gpg'),
    WordNode(pos=(60, 67), word='--batch'),
    WordNode(pos=(68, 79), word='--keyserver'),
    WordNode(pos=(80, 106), word='ha.pool.sks-keyservers.net'),
    WordNode(pos=(107, 118), word='--recv-keys'),
    WordNode(pos=(119, 143), word='$MANIFEST_TOOL_GPG_KEY', parts=[
      ParameterNode(pos=(120, 142), value='MANIFEST_TOOL_GPG_KEY'),
    ]),
  ]),
  OperatorNode(op=';', pos=(143, 144)),
  CommandNode(pos=(147, 159), parts=[
    WordNode(pos=(147, 152), word='mkdir'),
    WordNode(pos=(153, 155), word='-p'),
    WordNode(pos=(156, 159), word='bin'),
  ]),
  OperatorNode(op=';', pos=(159, 160)),
  CompoundNode(list=[
    ForNode(pos=(163, 891), parts=[
      ReservedwordNode(pos=(163, 166), word='for'),
      WordNode(pos=(167, 179), word='bashbrewArch'),
      ReservedwordNode(pos=(180, 182), word='in'),
      WordNode(pos=(183, 199), word='$BASHBREW_ARCHES', parts=[
        ParameterNode(pos=(183, 199), value='BASHBREW_ARCHES'),
      ]),
      ReservedwordNode(pos=(199, 200), word=';'),
      ReservedwordNode(pos=(201, 203), word='do'),
      CompoundNode(list=[
        ReservedwordNode(pos=(206, 207), word='('),
        ListNode(pos=(211, 881), parts=[
            CommandNode(pos=(211, 264), parts=[
              AssignmentNode(pos=(211, 264), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
                CommandsubstitutionNode(command=
                  CommandNode(pos=(220, 262), parts=[
                    WordNode(pos=(220, 246), word='.bashbrew-arch-to-goenv.sh'),
                    WordNode(pos=(247, 262), word='$bashbrewArch', parts=[
                      ParameterNode(pos=(248, 261), value='bashbrewArch'),
                    ]),
                  ]), pos=(218, 263)),
              ]),
            ]),
            OperatorNode(op=';', pos=(264, 265)),
            CommandNode(pos=(266, 279), parts=[
              WordNode(pos=(266, 270), word='eval'),
              WordNode(pos=(271, 279), word='$goEnv', parts=[
                ParameterNode(pos=(272, 278), value='goEnv'),
              ]),
            ]),
            OperatorNode(op=';', pos=(279, 280)),
            CommandNode(pos=(284, 320), parts=[
              AssignmentNode(pos=(284, 320), word='srcBin=manifest-tool-$GOOS-$GOARCH', parts=[
                ParameterNode(pos=(306, 311), value='GOOS'),
                ParameterNode(pos=(312, 319), value='GOARCH'),
              ]),
            ]),
            OperatorNode(op=';', pos=(320, 321)),
            CompoundNode(list=[
              IfNode(pos=(325, 402), parts=[
                ReservedwordNode(pos=(325, 327), word='if'),
                ListNode(pos=(328, 350), parts=[
                    CommandNode(pos=(328, 349), parts=[
                      WordNode(pos=(328, 329), word='['),
                      WordNode(pos=(330, 339), word='$GOARCH', parts=[
                        ParameterNode(pos=(331, 338), value='GOARCH'),
                      ]),
                      WordNode(pos=(340, 341), word='='),
                      WordNode(pos=(342, 347), word='arm'),
                      WordNode(pos=(348, 349), word=']'),
                    ]),
                    OperatorNode(op=';', pos=(349, 350)),
                  ]),
                ReservedwordNode(pos=(351, 355), word='then'),
                ListNode(pos=(356, 399), parts=[
                    CommandNode(pos=(356, 371), parts=[
                      WordNode(pos=(356, 357), word='['),
                      WordNode(pos=(358, 360), word='-n'),
                      WordNode(pos=(361, 369), word='$GOARM', parts=[
                        ParameterNode(pos=(362, 368), value='GOARM'),
                      ]),
                      WordNode(pos=(370, 371), word=']'),
                    ]),
                    OperatorNode(op=';', pos=(371, 372)),
                    CommandNode(pos=(373, 398), parts=[
                      AssignmentNode(pos=(373, 398), word='srcBin=${srcBin}v$GOARM', parts=[
                        ParameterNode(pos=(381, 390), value='srcBin'),
                        ParameterNode(pos=(391, 397), value='GOARM'),
                      ]),
                    ]),
                    OperatorNode(op=';', pos=(398, 399)),
                  ]),
                ReservedwordNode(pos=(400, 402), word='fi'),
              ]),
            ], pos=(325, 402)),
            OperatorNode(op=';', pos=(402, 403)),
            CommandNode(pos=(407, 430), parts=[
              WordNode(pos=(407, 408), word='['),
              WordNode(pos=(409, 416), word='$GOOS', parts=[
                ParameterNode(pos=(410, 415), value='GOOS'),
              ]),
              WordNode(pos=(417, 418), word='='),
              WordNode(pos=(419, 428), word='windows'),
              WordNode(pos=(429, 430), word=']'),
            ]),
            OperatorNode(op='&&', pos=(431, 433)),
            CommandNode(pos=(434, 444), parts=[
              AssignmentNode(pos=(434, 444), word='ext=.exe'),
            ]),
            OperatorNode(op='||', pos=(445, 447)),
            CommandNode(pos=(448, 452), parts=[
              AssignmentNode(pos=(448, 452), word='ext='),
            ]),
            OperatorNode(op=';', pos=(452, 453)),
            CommandNode(pos=(457, 477), parts=[
              AssignmentNode(pos=(457, 477), word='srcBin=$srcBin$ext', parts=[
                ParameterNode(pos=(465, 472), value='srcBin'),
                ParameterNode(pos=(472, 476), value='ext'),
              ]),
            ]),
            OperatorNode(op=';', pos=(477, 478)),
            CommandNode(pos=(482, 529), parts=[
              AssignmentNode(pos=(482, 529), word='targetBin=bin/manifest-tool-$bashbrewArch$ext', parts=[
                ParameterNode(pos=(511, 524), value='bashbrewArch'),
                ParameterNode(pos=(524, 528), value='ext'),
              ]),
            ]),
            OperatorNode(op=';', pos=(529, 530)),
            CommandNode(pos=(534, 656), parts=[
              WordNode(pos=(534, 538), word='wget'),
              WordNode(pos=(539, 541), word='-O'),
              WordNode(pos=(542, 558), word='$targetBin.asc', parts=[
                ParameterNode(pos=(543, 553), value='targetBin'),
              ]),
              WordNode(pos=(559, 656), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc', parts=[
                ParameterNode(pos=(619, 643), value='MANIFEST_TOOL_VERSION'),
                ParameterNode(pos=(644, 651), value='srcBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(656, 657)),
            CommandNode(pos=(661, 775), parts=[
              WordNode(pos=(661, 665), word='wget'),
              WordNode(pos=(666, 668), word='-O'),
              WordNode(pos=(669, 681), word='$targetBin', parts=[
                ParameterNode(pos=(670, 680), value='targetBin'),
              ]),
              WordNode(pos=(682, 775), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin', parts=[
                ParameterNode(pos=(742, 766), value='MANIFEST_TOOL_VERSION'),
                ParameterNode(pos=(767, 774), value='srcBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(775, 776)),
            CommandNode(pos=(780, 830), parts=[
              WordNode(pos=(780, 783), word='gpg'),
              WordNode(pos=(784, 791), word='--batch'),
              WordNode(pos=(792, 800), word='--verify'),
              WordNode(pos=(801, 817), word='$targetBin.asc', parts=[
                ParameterNode(pos=(802, 812), value='targetBin'),
              ]),
              WordNode(pos=(818, 830), word='$targetBin', parts=[
                ParameterNode(pos=(819, 829), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(830, 831)),
            CommandNode(pos=(835, 857), parts=[
              WordNode(pos=(835, 837), word='ls'),
              WordNode(pos=(838, 843), word='-lAFh'),
              WordNode(pos=(844, 857), word='$targetBin*', parts=[
                ParameterNode(pos=(845, 855), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(857, 858)),
            CommandNode(pos=(862, 880), parts=[
              WordNode(pos=(862, 866), word='file'),
              WordNode(pos=(867, 880), word='$targetBin*', parts=[
                ParameterNode(pos=(868, 878), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(880, 881)),
          ]),
        ReservedwordNode(pos=(884, 885), word=')'),
      ], pos=(206, 885)),
      ReservedwordNode(pos=(887, 891), word='done'),
    ]),
  ], pos=(163, 891)),
  OperatorNode(op=';', pos=(891, 892)),
  CommandNode(pos=(895, 913), parts=[
    WordNode(pos=(895, 902), word='gpgconf'),
    WordNode(pos=(903, 909), word='--kill'),
    WordNode(pos=(910, 913), word='all'),
  ]),
  OperatorNode(op=';', pos=(913, 914)),
  CommandNode(pos=(916, 934), parts=[
    WordNode(pos=(916, 918), word='rm'),
    WordNode(pos=(919, 921), word='-r'),
    WordNode(pos=(922, 934), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(923, 933), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(934, 935)),
  CommandNode(pos=(938, 966), parts=[
    WordNode(pos=(938, 940), word='ls'),
    WordNode(pos=(941, 946), word='-lAFh'),
    WordNode(pos=(947, 966), word='bin/manifest-tool-*'),
  ]),
  OperatorNode(op=';', pos=(966, 967)),
  CommandNode(pos=(969, 993), parts=[
    WordNode(pos=(969, 973), word='file'),
    WordNode(pos=(974, 993), word='bin/manifest-tool-*'),
  ]),
])


1399) eval "$goEnv"

CommandNode(pos=(266, 279), parts=[
  WordNode(pos=(266, 270), word='eval'),
  WordNode(pos=(271, 279), word='$goEnv', parts=[
    ParameterNode(pos=(272, 278), value='goEnv'),
  ]),
])


1400) srcBin="manifest-tool-$GOOS-$GOARCH"

CommandNode(pos=(284, 320), parts=[
  AssignmentNode(pos=(284, 320), word='srcBin=manifest-tool-$GOOS-$GOARCH', parts=[
    ParameterNode(pos=(306, 311), value='GOOS'),
    ParameterNode(pos=(312, 319), value='GOARCH'),
  ]),
])


1401) srcBin="manifest-tool-$GOOS-$GOARCH"

CommandNode(pos=(284, 320), parts=[
  AssignmentNode(pos=(284, 320), word='srcBin=manifest-tool-$GOOS-$GOARCH', parts=[
    ParameterNode(pos=(306, 311), value='GOOS'),
    ParameterNode(pos=(312, 319), value='GOARCH'),
  ]),
])


1402) [ "$GOARCH" = 'arm' ]

CommandNode(pos=(328, 349), parts=[
  WordNode(pos=(328, 329), word='['),
  WordNode(pos=(330, 339), word='$GOARCH', parts=[
    ParameterNode(pos=(331, 338), value='GOARCH'),
  ]),
  WordNode(pos=(340, 341), word='='),
  WordNode(pos=(342, 347), word='arm'),
  WordNode(pos=(348, 349), word=']'),
])


1403) [ -n "$GOARM" ]

CommandNode(pos=(356, 371), parts=[
  WordNode(pos=(356, 357), word='['),
  WordNode(pos=(358, 360), word='-n'),
  WordNode(pos=(361, 369), word='$GOARM', parts=[
    ParameterNode(pos=(362, 368), value='GOARM'),
  ]),
  WordNode(pos=(370, 371), word=']'),
])


1404) srcBin="${srcBin}v$GOARM"

CommandNode(pos=(373, 398), parts=[
  AssignmentNode(pos=(373, 398), word='srcBin=${srcBin}v$GOARM', parts=[
    ParameterNode(pos=(381, 390), value='srcBin'),
    ParameterNode(pos=(391, 397), value='GOARM'),
  ]),
])


1405) srcBin="${srcBin}v$GOARM"

CommandNode(pos=(373, 398), parts=[
  AssignmentNode(pos=(373, 398), word='srcBin=${srcBin}v$GOARM', parts=[
    ParameterNode(pos=(381, 390), value='srcBin'),
    ParameterNode(pos=(391, 397), value='GOARM'),
  ]),
])


1406) [ "$GOOS" = 'windows' ]

CommandNode(pos=(407, 430), parts=[
  WordNode(pos=(407, 408), word='['),
  WordNode(pos=(409, 416), word='$GOOS', parts=[
    ParameterNode(pos=(410, 415), value='GOOS'),
  ]),
  WordNode(pos=(417, 418), word='='),
  WordNode(pos=(419, 428), word='windows'),
  WordNode(pos=(429, 430), word=']'),
])


1407) srcBin="$srcBin$ext"

CommandNode(pos=(457, 477), parts=[
  AssignmentNode(pos=(457, 477), word='srcBin=$srcBin$ext', parts=[
    ParameterNode(pos=(465, 472), value='srcBin'),
    ParameterNode(pos=(472, 476), value='ext'),
  ]),
])


1408) srcBin="$srcBin$ext"

CommandNode(pos=(457, 477), parts=[
  AssignmentNode(pos=(457, 477), word='srcBin=$srcBin$ext', parts=[
    ParameterNode(pos=(465, 472), value='srcBin'),
    ParameterNode(pos=(472, 476), value='ext'),
  ]),
])


1409) targetBin="bin/manifest-tool-$bashbrewArch$ext"

CommandNode(pos=(482, 529), parts=[
  AssignmentNode(pos=(482, 529), word='targetBin=bin/manifest-tool-$bashbrewArch$ext', parts=[
    ParameterNode(pos=(511, 524), value='bashbrewArch'),
    ParameterNode(pos=(524, 528), value='ext'),
  ]),
])


1410) targetBin="bin/manifest-tool-$bashbrewArch$ext"

CommandNode(pos=(482, 529), parts=[
  AssignmentNode(pos=(482, 529), word='targetBin=bin/manifest-tool-$bashbrewArch$ext', parts=[
    ParameterNode(pos=(511, 524), value='bashbrewArch'),
    ParameterNode(pos=(524, 528), value='ext'),
  ]),
])


1411) wget -O "$targetBin.asc" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc"

CommandNode(pos=(534, 656), parts=[
  WordNode(pos=(534, 538), word='wget'),
  WordNode(pos=(539, 541), word='-O'),
  WordNode(pos=(542, 558), word='$targetBin.asc', parts=[
    ParameterNode(pos=(543, 553), value='targetBin'),
  ]),
  WordNode(pos=(559, 656), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc', parts=[
    ParameterNode(pos=(619, 643), value='MANIFEST_TOOL_VERSION'),
    ParameterNode(pos=(644, 651), value='srcBin'),
  ]),
])


1412) wget -O "$targetBin.asc" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc"

CommandNode(pos=(534, 656), parts=[
  WordNode(pos=(534, 538), word='wget'),
  WordNode(pos=(539, 541), word='-O'),
  WordNode(pos=(542, 558), word='$targetBin.asc', parts=[
    ParameterNode(pos=(543, 553), value='targetBin'),
  ]),
  WordNode(pos=(559, 656), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc', parts=[
    ParameterNode(pos=(619, 643), value='MANIFEST_TOOL_VERSION'),
    ParameterNode(pos=(644, 651), value='srcBin'),
  ]),
])


1413) wget -O "$targetBin.asc" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc"

CommandNode(pos=(534, 656), parts=[
  WordNode(pos=(534, 538), word='wget'),
  WordNode(pos=(539, 541), word='-O'),
  WordNode(pos=(542, 558), word='$targetBin.asc', parts=[
    ParameterNode(pos=(543, 553), value='targetBin'),
  ]),
  WordNode(pos=(559, 656), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin.asc', parts=[
    ParameterNode(pos=(619, 643), value='MANIFEST_TOOL_VERSION'),
    ParameterNode(pos=(644, 651), value='srcBin'),
  ]),
])


1414) wget -O "$targetBin" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin"

CommandNode(pos=(661, 775), parts=[
  WordNode(pos=(661, 665), word='wget'),
  WordNode(pos=(666, 668), word='-O'),
  WordNode(pos=(669, 681), word='$targetBin', parts=[
    ParameterNode(pos=(670, 680), value='targetBin'),
  ]),
  WordNode(pos=(682, 775), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin', parts=[
    ParameterNode(pos=(742, 766), value='MANIFEST_TOOL_VERSION'),
    ParameterNode(pos=(767, 774), value='srcBin'),
  ]),
])


1415) wget -O "$targetBin" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin"

CommandNode(pos=(661, 775), parts=[
  WordNode(pos=(661, 665), word='wget'),
  WordNode(pos=(666, 668), word='-O'),
  WordNode(pos=(669, 681), word='$targetBin', parts=[
    ParameterNode(pos=(670, 680), value='targetBin'),
  ]),
  WordNode(pos=(682, 775), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin', parts=[
    ParameterNode(pos=(742, 766), value='MANIFEST_TOOL_VERSION'),
    ParameterNode(pos=(767, 774), value='srcBin'),
  ]),
])


1416) wget -O "$targetBin" "https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin"

CommandNode(pos=(661, 775), parts=[
  WordNode(pos=(661, 665), word='wget'),
  WordNode(pos=(666, 668), word='-O'),
  WordNode(pos=(669, 681), word='$targetBin', parts=[
    ParameterNode(pos=(670, 680), value='targetBin'),
  ]),
  WordNode(pos=(682, 775), word='https://github.com/estesp/manifest-tool/releases/download/v${MANIFEST_TOOL_VERSION}/$srcBin', parts=[
    ParameterNode(pos=(742, 766), value='MANIFEST_TOOL_VERSION'),
    ParameterNode(pos=(767, 774), value='srcBin'),
  ]),
])


1417) gpg --batch --verify "$targetBin.asc" "$targetBin"

CommandNode(pos=(780, 830), parts=[
  WordNode(pos=(780, 783), word='gpg'),
  WordNode(pos=(784, 791), word='--batch'),
  WordNode(pos=(792, 800), word='--verify'),
  WordNode(pos=(801, 817), word='$targetBin.asc', parts=[
    ParameterNode(pos=(802, 812), value='targetBin'),
  ]),
  WordNode(pos=(818, 830), word='$targetBin', parts=[
    ParameterNode(pos=(819, 829), value='targetBin'),
  ]),
])


1418) gpg --batch --verify "$targetBin.asc" "$targetBin"

CommandNode(pos=(780, 830), parts=[
  WordNode(pos=(780, 783), word='gpg'),
  WordNode(pos=(784, 791), word='--batch'),
  WordNode(pos=(792, 800), word='--verify'),
  WordNode(pos=(801, 817), word='$targetBin.asc', parts=[
    ParameterNode(pos=(802, 812), value='targetBin'),
  ]),
  WordNode(pos=(818, 830), word='$targetBin', parts=[
    ParameterNode(pos=(819, 829), value='targetBin'),
  ]),
])


1419) ls -lAFh "$targetBin"*

CommandNode(pos=(835, 857), parts=[
  WordNode(pos=(835, 837), word='ls'),
  WordNode(pos=(838, 843), word='-lAFh'),
  WordNode(pos=(844, 857), word='$targetBin*', parts=[
    ParameterNode(pos=(845, 855), value='targetBin'),
  ]),
])


1420) file "$targetBin"*

CommandNode(pos=(862, 880), parts=[
  WordNode(pos=(862, 866), word='file'),
  WordNode(pos=(867, 880), word='$targetBin*', parts=[
    ParameterNode(pos=(868, 878), value='targetBin'),
  ]),
])


1421) rm -r "$GNUPGHOME"

CommandNode(pos=(916, 934), parts=[
  WordNode(pos=(916, 918), word='rm'),
  WordNode(pos=(919, 921), word='-r'),
  WordNode(pos=(922, 934), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(923, 933), value='GNUPGHOME'),
  ]),
])


1422) set -euxo pipefail;   mkdir -p bin;   for bashbrewArch in $BASHBREW_ARCHES; do   (    goEnv="$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")"; eval "$goEnv";    [ "$GOOS" = 'windows' ] && ext='.exe' || ext=;       targetBin="bin/bashbrew-$bashbrewArch$ext";    go build     -a -v     -ldflags '-s -w'     -tags netgo -installsuffix netgo     -o "$targetBin"     -mod vendor     bashbrew/src/bashbrew    ;    ls -lAFh "$targetBin";    file "$targetBin";   )  done;   ls -lAFh bin/bashbrew-*;  file bin/bashbrew-*

ListNode(pos=(0, 509), parts=[
  CommandNode(pos=(0, 18), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 9), word='-euxo'),
    WordNode(pos=(10, 18), word='pipefail'),
  ]),
  OperatorNode(op=';', pos=(18, 19)),
  CommandNode(pos=(22, 34), parts=[
    WordNode(pos=(22, 27), word='mkdir'),
    WordNode(pos=(28, 30), word='-p'),
    WordNode(pos=(31, 34), word='bin'),
  ]),
  OperatorNode(op=';', pos=(34, 35)),
  CompoundNode(list=[
    ForNode(pos=(38, 460), parts=[
      ReservedwordNode(pos=(38, 41), word='for'),
      WordNode(pos=(42, 54), word='bashbrewArch'),
      ReservedwordNode(pos=(55, 57), word='in'),
      WordNode(pos=(58, 74), word='$BASHBREW_ARCHES', parts=[
        ParameterNode(pos=(58, 74), value='BASHBREW_ARCHES'),
      ]),
      ReservedwordNode(pos=(74, 75), word=';'),
      ReservedwordNode(pos=(76, 78), word='do'),
      CompoundNode(list=[
        ReservedwordNode(pos=(81, 82), word='('),
        ListNode(pos=(86, 450), parts=[
            CommandNode(pos=(86, 139), parts=[
              AssignmentNode(pos=(86, 139), word='goEnv=$(.bashbrew-arch-to-goenv.sh "$bashbrewArch")', parts=[
                CommandsubstitutionNode(command=
                  CommandNode(pos=(95, 137), parts=[
                    WordNode(pos=(95, 121), word='.bashbrew-arch-to-goenv.sh'),
                    WordNode(pos=(122, 137), word='$bashbrewArch', parts=[
                      ParameterNode(pos=(123, 136), value='bashbrewArch'),
                    ]),
                  ]), pos=(93, 138)),
              ]),
            ]),
            OperatorNode(op=';', pos=(139, 140)),
            CommandNode(pos=(141, 154), parts=[
              WordNode(pos=(141, 145), word='eval'),
              WordNode(pos=(146, 154), word='$goEnv', parts=[
                ParameterNode(pos=(147, 153), value='goEnv'),
              ]),
            ]),
            OperatorNode(op=';', pos=(154, 155)),
            CommandNode(pos=(159, 182), parts=[
              WordNode(pos=(159, 160), word='['),
              WordNode(pos=(161, 168), word='$GOOS', parts=[
                ParameterNode(pos=(162, 167), value='GOOS'),
              ]),
              WordNode(pos=(169, 170), word='='),
              WordNode(pos=(171, 180), word='windows'),
              WordNode(pos=(181, 182), word=']'),
            ]),
            OperatorNode(op='&&', pos=(183, 185)),
            CommandNode(pos=(186, 196), parts=[
              AssignmentNode(pos=(186, 196), word='ext=.exe'),
            ]),
            OperatorNode(op='||', pos=(197, 199)),
            CommandNode(pos=(200, 204), parts=[
              AssignmentNode(pos=(200, 204), word='ext='),
            ]),
            OperatorNode(op=';', pos=(204, 205)),
            CommandNode(pos=(212, 254), parts=[
              AssignmentNode(pos=(212, 254), word='targetBin=bin/bashbrew-$bashbrewArch$ext', parts=[
                ParameterNode(pos=(236, 249), value='bashbrewArch'),
                ParameterNode(pos=(249, 253), value='ext'),
              ]),
            ]),
            OperatorNode(op=';', pos=(254, 255)),
            CommandNode(pos=(259, 397), parts=[
              WordNode(pos=(259, 261), word='go'),
              WordNode(pos=(262, 267), word='build'),
              WordNode(pos=(272, 274), word='-a'),
              WordNode(pos=(275, 277), word='-v'),
              WordNode(pos=(282, 290), word='-ldflags'),
              WordNode(pos=(291, 298), word='-s -w'),
              WordNode(pos=(303, 308), word='-tags'),
              WordNode(pos=(309, 314), word='netgo'),
              WordNode(pos=(315, 329), word='-installsuffix'),
              WordNode(pos=(330, 335), word='netgo'),
              WordNode(pos=(340, 342), word='-o'),
              WordNode(pos=(343, 355), word='$targetBin', parts=[
                ParameterNode(pos=(344, 354), value='targetBin'),
              ]),
              WordNode(pos=(360, 364), word='-mod'),
              WordNode(pos=(365, 371), word='vendor'),
              WordNode(pos=(376, 397), word='bashbrew/src/bashbrew'),
            ]),
            OperatorNode(op=';', pos=(401, 402)),
            CommandNode(pos=(406, 427), parts=[
              WordNode(pos=(406, 408), word='ls'),
              WordNode(pos=(409, 414), word='-lAFh'),
              WordNode(pos=(415, 427), word='$targetBin', parts=[
                ParameterNode(pos=(416, 426), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(427, 428)),
            CommandNode(pos=(432, 449), parts=[
              WordNode(pos=(432, 436), word='file'),
              WordNode(pos=(437, 449), word='$targetBin', parts=[
                ParameterNode(pos=(438, 448), value='targetBin'),
              ]),
            ]),
            OperatorNode(op=';', pos=(449, 450)),
          ]),
        ReservedwordNode(pos=(453, 454), word=')'),
      ], pos=(81, 454)),
      ReservedwordNode(pos=(456, 460), word='done'),
    ]),
  ], pos=(38, 460)),
  OperatorNode(op=';', pos=(460, 461)),
  CommandNode(pos=(464, 487), parts=[
    WordNode(pos=(464, 466), word='ls'),
    WordNode(pos=(467, 472), word='-lAFh'),
    WordNode(pos=(473, 487), word='bin/bashbrew-*'),
  ]),
  OperatorNode(op=';', pos=(487, 488)),
  CommandNode(pos=(490, 509), parts=[
    WordNode(pos=(490, 494), word='file'),
    WordNode(pos=(495, 509), word='bin/bashbrew-*'),
  ]),
])


1423) eval "$goEnv"

CommandNode(pos=(141, 154), parts=[
  WordNode(pos=(141, 145), word='eval'),
  WordNode(pos=(146, 154), word='$goEnv', parts=[
    ParameterNode(pos=(147, 153), value='goEnv'),
  ]),
])


1424) [ "$GOOS" = 'windows' ]

CommandNode(pos=(159, 182), parts=[
  WordNode(pos=(159, 160), word='['),
  WordNode(pos=(161, 168), word='$GOOS', parts=[
    ParameterNode(pos=(162, 167), value='GOOS'),
  ]),
  WordNode(pos=(169, 170), word='='),
  WordNode(pos=(171, 180), word='windows'),
  WordNode(pos=(181, 182), word=']'),
])


1425) targetBin="bin/bashbrew-$bashbrewArch$ext"

CommandNode(pos=(212, 254), parts=[
  AssignmentNode(pos=(212, 254), word='targetBin=bin/bashbrew-$bashbrewArch$ext', parts=[
    ParameterNode(pos=(236, 249), value='bashbrewArch'),
    ParameterNode(pos=(249, 253), value='ext'),
  ]),
])


1426) targetBin="bin/bashbrew-$bashbrewArch$ext"

CommandNode(pos=(212, 254), parts=[
  AssignmentNode(pos=(212, 254), word='targetBin=bin/bashbrew-$bashbrewArch$ext', parts=[
    ParameterNode(pos=(236, 249), value='bashbrewArch'),
    ParameterNode(pos=(249, 253), value='ext'),
  ]),
])


1427) go build     -a -v     -ldflags '-s -w'     -tags netgo -installsuffix netgo     -o "$targetBin"     -mod vendor     bashbrew/src/bashbrew

CommandNode(pos=(259, 397), parts=[
  WordNode(pos=(259, 261), word='go'),
  WordNode(pos=(262, 267), word='build'),
  WordNode(pos=(272, 274), word='-a'),
  WordNode(pos=(275, 277), word='-v'),
  WordNode(pos=(282, 290), word='-ldflags'),
  WordNode(pos=(291, 298), word='-s -w'),
  WordNode(pos=(303, 308), word='-tags'),
  WordNode(pos=(309, 314), word='netgo'),
  WordNode(pos=(315, 329), word='-installsuffix'),
  WordNode(pos=(330, 335), word='netgo'),
  WordNode(pos=(340, 342), word='-o'),
  WordNode(pos=(343, 355), word='$targetBin', parts=[
    ParameterNode(pos=(344, 354), value='targetBin'),
  ]),
  WordNode(pos=(360, 364), word='-mod'),
  WordNode(pos=(365, 371), word='vendor'),
  WordNode(pos=(376, 397), word='bashbrew/src/bashbrew'),
])


1428) ls -lAFh "$targetBin"

CommandNode(pos=(406, 427), parts=[
  WordNode(pos=(406, 408), word='ls'),
  WordNode(pos=(409, 414), word='-lAFh'),
  WordNode(pos=(415, 427), word='$targetBin', parts=[
    ParameterNode(pos=(416, 426), value='targetBin'),
  ]),
])


1429) file "$targetBin"

CommandNode(pos=(432, 449), parts=[
  WordNode(pos=(432, 436), word='file'),
  WordNode(pos=(437, 449), word='$targetBin', parts=[
    ParameterNode(pos=(438, 448), value='targetBin'),
  ]),
])


1430) apk add --virtual .drupal-phpexts-rundeps $runDeps

CommandNode(pos=(566, 616), parts=[
  WordNode(pos=(566, 569), word='apk'),
  WordNode(pos=(570, 573), word='add'),
  WordNode(pos=(574, 583), word='--virtual'),
  WordNode(pos=(584, 607), word='.drupal-phpexts-rundeps'),
  WordNode(pos=(608, 616), word='$runDeps', parts=[
    ParameterNode(pos=(608, 616), value='runDeps'),
  ]),
])


1431) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


1432) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


1433) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


1434) apt-mark manual $savedAptMark

CommandNode(pos=(403, 432), parts=[
  WordNode(pos=(403, 411), word='apt-mark'),
  WordNode(pos=(412, 418), word='manual'),
  WordNode(pos=(419, 432), word='$savedAptMark', parts=[
    ParameterNode(pos=(419, 432), value='savedAptMark'),
  ]),
])


1435) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


1436) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


1437) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


1438) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


1439) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


1440) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


1441) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


1442) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


1443) set -eux;   apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev  ;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   mkdir /usr/local/src;   wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum -c -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum -c -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --no-cache --virtual .otp-run-deps $runDeps;  apk del --no-network .build-deps;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3380), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 159), parts=[
    WordNode(pos=(12, 15), word='apk'),
    WordNode(pos=(16, 19), word='add'),
    WordNode(pos=(20, 30), word='--no-cache'),
    WordNode(pos=(31, 40), word='--virtual'),
    WordNode(pos=(41, 52), word='.build-deps'),
    WordNode(pos=(55, 63), word='autoconf'),
    WordNode(pos=(66, 81), word='ca-certificates'),
    WordNode(pos=(84, 92), word='dpkg-dev'),
    WordNode(pos=(93, 97), word='dpkg'),
    WordNode(pos=(100, 103), word='gcc'),
    WordNode(pos=(106, 111), word='gnupg'),
    WordNode(pos=(114, 122), word='libc-dev'),
    WordNode(pos=(125, 138), word='linux-headers'),
    WordNode(pos=(141, 145), word='make'),
    WordNode(pos=(148, 159), word='ncurses-dev'),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CommandNode(pos=(165, 248), parts=[
    AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(248, 249)),
  CommandNode(pos=(251, 305), parts=[
    AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(305, 306)),
  CommandNode(pos=(308, 345), parts=[
    AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(345, 346)),
  CommandNode(pos=(349, 369), parts=[
    WordNode(pos=(349, 354), word='mkdir'),
    WordNode(pos=(355, 369), word='/usr/local/src'),
  ]),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 448), parts=[
    WordNode(pos=(373, 377), word='wget'),
    WordNode(pos=(378, 395), word='--output-document'),
    WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(448, 449)),
  CommandNode(pos=(451, 518), parts=[
    WordNode(pos=(451, 455), word='wget'),
    WordNode(pos=(456, 473), word='--output-document'),
    WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(518, 519)),
  CommandNode(pos=(521, 552), parts=[
    WordNode(pos=(521, 527), word='export'),
    WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(541, 550), parts=[
          WordNode(pos=(541, 547), word='mktemp'),
          WordNode(pos=(548, 550), word='-d'),
        ]), pos=(539, 551)),
    ]),
  ]),
  OperatorNode(op=';', pos=(552, 553)),
  CompoundNode(list=[
    ForNode(pos=(555, 659), parts=[
      ReservedwordNode(pos=(555, 558), word='for'),
      WordNode(pos=(559, 562), word='key'),
      ReservedwordNode(pos=(563, 565), word='in'),
      WordNode(pos=(566, 586), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(566, 586), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(586, 587), word=';'),
      ReservedwordNode(pos=(588, 590), word='do'),
      ListNode(pos=(593, 653), parts=[
          CommandNode(pos=(593, 652), parts=[
            WordNode(pos=(593, 596), word='gpg'),
            WordNode(pos=(597, 604), word='--batch'),
            WordNode(pos=(605, 616), word='--keyserver'),
            WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(634, 645), word='--recv-keys'),
            WordNode(pos=(646, 652), word='$key', parts=[
              ParameterNode(pos=(647, 651), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(652, 653)),
        ]),
      ReservedwordNode(pos=(655, 659), word='done'),
    ]),
  ], pos=(555, 659)),
  OperatorNode(op=';', pos=(659, 660)),
  CommandNode(pos=(662, 732), parts=[
    WordNode(pos=(662, 665), word='gpg'),
    WordNode(pos=(666, 673), word='--batch'),
    WordNode(pos=(674, 682), word='--verify'),
    WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(732, 733)),
  CommandNode(pos=(735, 753), parts=[
    WordNode(pos=(735, 742), word='gpgconf'),
    WordNode(pos=(743, 749), word='--kill'),
    WordNode(pos=(750, 753), word='all'),
  ]),
  OperatorNode(op=';', pos=(753, 754)),
  CommandNode(pos=(756, 775), parts=[
    WordNode(pos=(756, 758), word='rm'),
    WordNode(pos=(759, 762), word='-rf'),
    WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(764, 774), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(775, 776)),
  PipelineNode(pos=(778, 846), parts=[
    CommandNode(pos=(778, 829), parts=[
      WordNode(pos=(778, 782), word='echo'),
      WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(830, 831)),
    CommandNode(pos=(832, 846), parts=[
      WordNode(pos=(832, 841), word='sha256sum'),
      WordNode(pos=(842, 844), word='-c'),
      WordNode(pos=(845, 846), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(846, 847)),
  CommandNode(pos=(849, 873), parts=[
    WordNode(pos=(849, 854), word='mkdir'),
    WordNode(pos=(855, 857), word='-p'),
    WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(873, 874)),
  CommandNode(pos=(876, 968), parts=[
    WordNode(pos=(876, 879), word='tar'),
    WordNode(pos=(880, 889), word='--extract'),
    WordNode(pos=(890, 896), word='--file'),
    WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(920, 931), word='--directory'),
    WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(948, 966), word='--strip-components'),
    WordNode(pos=(967, 968), word='1'),
  ]),
  OperatorNode(op=';', pos=(968, 969)),
  CommandNode(pos=(972, 990), parts=[
    WordNode(pos=(972, 974), word='cd'),
    WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(990, 991)),
  CommandNode(pos=(993, 1142), parts=[
    AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1004, 1047), parts=[
          WordNode(pos=(1004, 1021), word='dpkg-architecture'),
          WordNode(pos=(1022, 1029), word='--query'),
          WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1002, 1048)),
    ]),
    AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
    WordNode(pos=(1099, 1107), word='./config'),
    WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1142, 1143)),
  CommandNode(pos=(1145, 1183), parts=[
    WordNode(pos=(1145, 1149), word='make'),
    WordNode(pos=(1150, 1152), word='-j'),
    WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1156, 1181), parts=[
          WordNode(pos=(1156, 1163), word='getconf'),
          WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
        ]), pos=(1154, 1182)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1183, 1184)),
  CommandNode(pos=(1186, 1217), parts=[
    WordNode(pos=(1186, 1190), word='make'),
    WordNode(pos=(1191, 1201), word='install_sw'),
    WordNode(pos=(1202, 1217), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1217, 1218)),
  CommandNode(pos=(1220, 1225), parts=[
    WordNode(pos=(1220, 1222), word='cd'),
    WordNode(pos=(1223, 1225), word='..'),
  ]),
  OperatorNode(op=';', pos=(1225, 1226)),
  CommandNode(pos=(1228, 1251), parts=[
    WordNode(pos=(1228, 1230), word='rm'),
    WordNode(pos=(1231, 1234), word='-rf'),
    WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1251, 1252)),
  CommandNode(pos=(1254, 1317), parts=[
    WordNode(pos=(1254, 1259), word='rmdir'),
    WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1317, 1318)),
  CommandNode(pos=(1320, 1380), parts=[
    WordNode(pos=(1320, 1322), word='ln'),
    WordNode(pos=(1323, 1326), word='-sf'),
    WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
    WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
    WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1380, 1381)),
  CommandNode(pos=(1383, 1398), parts=[
    WordNode(pos=(1383, 1390), word='openssl'),
    WordNode(pos=(1391, 1398), word='version'),
  ]),
  OperatorNode(op=';', pos=(1398, 1399)),
  CommandNode(pos=(1402, 1480), parts=[
    AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1480, 1481)),
  CommandNode(pos=(1483, 1525), parts=[
    AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1525, 1526)),
  CommandNode(pos=(1529, 1549), parts=[
    WordNode(pos=(1529, 1534), word='mkdir'),
    WordNode(pos=(1535, 1537), word='-p'),
    WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1549, 1550)),
  CommandNode(pos=(1552, 1611), parts=[
    WordNode(pos=(1552, 1556), word='wget'),
    WordNode(pos=(1557, 1574), word='--output-document'),
    WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
    ]),
    WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1611, 1612)),
  PipelineNode(pos=(1614, 1674), parts=[
    CommandNode(pos=(1614, 1657), parts=[
      WordNode(pos=(1614, 1618), word='echo'),
      WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1658, 1659)),
    CommandNode(pos=(1660, 1674), parts=[
      WordNode(pos=(1660, 1669), word='sha256sum'),
      WordNode(pos=(1670, 1672), word='-c'),
      WordNode(pos=(1673, 1674), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1674, 1675)),
  CommandNode(pos=(1677, 1761), parts=[
    WordNode(pos=(1677, 1680), word='tar'),
    WordNode(pos=(1681, 1690), word='--extract'),
    WordNode(pos=(1691, 1697), word='--file'),
    WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
    ]),
    WordNode(pos=(1717, 1728), word='--directory'),
    WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
    ]),
    WordNode(pos=(1741, 1759), word='--strip-components'),
    WordNode(pos=(1760, 1761), word='1'),
  ]),
  OperatorNode(op=';', pos=(1761, 1762)),
  CommandNode(pos=(1765, 1779), parts=[
    WordNode(pos=(1765, 1767), word='cd'),
    WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1779, 1780)),
  CommandNode(pos=(1782, 1808), parts=[
    WordNode(pos=(1782, 1788), word='export'),
    WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1808, 1809)),
  CommandNode(pos=(1811, 1831), parts=[
    WordNode(pos=(1811, 1822), word='./otp_build'),
    WordNode(pos=(1823, 1831), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(1831, 1832)),
  CommandNode(pos=(1834, 1874), parts=[
    AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1844, 1872), parts=[
          WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
          WordNode(pos=(1860, 1865), word='--get'),
          WordNode(pos=(1866, 1872), word='CFLAGS'),
        ]), pos=(1842, 1873)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1874, 1875)),
  CommandNode(pos=(1876, 1889), parts=[
    WordNode(pos=(1876, 1882), word='export'),
    WordNode(pos=(1883, 1889), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(1889, 1890)),
  CommandNode(pos=(1892, 1949), parts=[
    AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1904, 1947), parts=[
          WordNode(pos=(1904, 1921), word='dpkg-architecture'),
          WordNode(pos=(1922, 1929), word='--query'),
          WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(1902, 1948)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1949, 1950)),
  CommandNode(pos=(1952, 2011), parts=[
    AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1965, 2009), parts=[
          WordNode(pos=(1965, 1982), word='dpkg-architecture'),
          WordNode(pos=(1983, 1990), word='--query'),
          WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1963, 2010)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2011, 2012)),
  CommandNode(pos=(2014, 2053), parts=[
    AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2026, 2051), parts=[
          WordNode(pos=(2026, 2030), word='dpkg'),
          WordNode(pos=(2031, 2051), word='--print-architecture'),
        ]), pos=(2024, 2052)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2053, 2054)),
  CommandNode(pos=(2055, 2081), parts=[
    AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2081, 2082)),
  CommandNode(pos=(2084, 2766), parts=[
    WordNode(pos=(2084, 2095), word='./configure'),
    WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2106, 2115), value='hostArch'),
    ]),
    WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2128, 2138), value='buildArch'),
    ]),
    WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2170, 2184), word='--disable-hipe'),
    WordNode(pos=(2187, 2201), word='--disable-sctp'),
    WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
    WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
    WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
    WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
    WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
    WordNode(pos=(2323, 2343), word='--enable-smp-support'),
    WordNode(pos=(2346, 2362), word='--enable-threads'),
    WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2402, 2423), word='--without-common_test'),
    WordNode(pos=(2426, 2444), word='--without-debugger'),
    WordNode(pos=(2447, 2465), word='--without-dialyzer'),
    WordNode(pos=(2468, 2486), word='--without-diameter'),
    WordNode(pos=(2489, 2503), word='--without-edoc'),
    WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
    WordNode(pos=(2529, 2552), word='--without-erl_interface'),
    WordNode(pos=(2555, 2567), word='--without-et'),
    WordNode(pos=(2570, 2585), word='--without-eunit'),
    WordNode(pos=(2588, 2601), word='--without-ftp'),
    WordNode(pos=(2604, 2618), word='--without-hipe'),
    WordNode(pos=(2621, 2641), word='--without-jinterface'),
    WordNode(pos=(2644, 2660), word='--without-megaco'),
    WordNode(pos=(2663, 2681), word='--without-observer'),
    WordNode(pos=(2684, 2698), word='--without-odbc'),
    WordNode(pos=(2701, 2718), word='--without-reltool'),
    WordNode(pos=(2721, 2734), word='--without-ssh'),
    WordNode(pos=(2737, 2751), word='--without-tftp'),
    WordNode(pos=(2754, 2766), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(2768, 2769)),
  CommandNode(pos=(2771, 2849), parts=[
    WordNode(pos=(2771, 2775), word='make'),
    WordNode(pos=(2776, 2778), word='-j'),
    WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2782, 2807), parts=[
          WordNode(pos=(2782, 2789), word='getconf'),
          WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
        ]), pos=(2780, 2808)),
    ]),
    WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(2849, 2850)),
  CommandNode(pos=(2852, 2864), parts=[
    WordNode(pos=(2852, 2856), word='make'),
    WordNode(pos=(2857, 2864), word='install'),
  ]),
  OperatorNode(op=';', pos=(2864, 2865)),
  CommandNode(pos=(2867, 2872), parts=[
    WordNode(pos=(2867, 2869), word='cd'),
    WordNode(pos=(2870, 2872), word='..'),
  ]),
  OperatorNode(op=';', pos=(2872, 2873)),
  CommandNode(pos=(2875, 2969), parts=[
    WordNode(pos=(2875, 2877), word='rm'),
    WordNode(pos=(2878, 2881), word='-rf'),
    WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
    ]),
    WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(2971, 2972)),
  CommandNode(pos=(2975, 3172), parts=[
    AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2989, 3168), parts=[
          CommandNode(pos=(2989, 3055), parts=[
            WordNode(pos=(2989, 2996), word='scanelf'),
            WordNode(pos=(2997, 3005), word='--needed'),
            WordNode(pos=(3006, 3016), word='--nobanner'),
            WordNode(pos=(3017, 3025), word='--format'),
            WordNode(pos=(3026, 3032), word='%n#p'),
            WordNode(pos=(3033, 3044), word='--recursive'),
            WordNode(pos=(3045, 3055), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(3059, 3060)),
          CommandNode(pos=(3061, 3072), parts=[
            WordNode(pos=(3061, 3063), word='tr'),
            WordNode(pos=(3064, 3067), word=','),
            WordNode(pos=(3068, 3072), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(3076, 3077)),
          CommandNode(pos=(3078, 3085), parts=[
            WordNode(pos=(3078, 3082), word='sort'),
            WordNode(pos=(3083, 3085), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(3089, 3090)),
          CommandNode(pos=(3091, 3168), parts=[
            WordNode(pos=(3091, 3094), word='awk'),
            WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2984, 3169)),
    ]),
  ]),
  OperatorNode(op=';', pos=(3172, 3173)),
  CommandNode(pos=(3175, 3226), parts=[
    WordNode(pos=(3175, 3178), word='apk'),
    WordNode(pos=(3179, 3182), word='add'),
    WordNode(pos=(3183, 3193), word='--no-cache'),
    WordNode(pos=(3194, 3203), word='--virtual'),
    WordNode(pos=(3204, 3217), word='.otp-run-deps'),
    WordNode(pos=(3218, 3226), word='$runDeps', parts=[
      ParameterNode(pos=(3218, 3226), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3226, 3227)),
  CommandNode(pos=(3229, 3261), parts=[
    WordNode(pos=(3229, 3232), word='apk'),
    WordNode(pos=(3233, 3236), word='del'),
    WordNode(pos=(3237, 3249), word='--no-network'),
    WordNode(pos=(3250, 3261), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(3261, 3262)),
  CommandNode(pos=(3265, 3280), parts=[
    WordNode(pos=(3265, 3272), word='openssl'),
    WordNode(pos=(3273, 3280), word='version'),
  ]),
  OperatorNode(op=';', pos=(3280, 3281)),
  CommandNode(pos=(3283, 3380), parts=[
    WordNode(pos=(3283, 3286), word='erl'),
    WordNode(pos=(3287, 3295), word='-noshell'),
    WordNode(pos=(3296, 3301), word='-eval'),
    WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


1444) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


1445) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


1446) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


1447) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


1448) rm -rf "$GNUPGHOME"

CommandNode(pos=(756, 775), parts=[
  WordNode(pos=(756, 758), word='rm'),
  WordNode(pos=(759, 762), word='-rf'),
  WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(764, 774), value='GNUPGHOME'),
  ]),
])


1449) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


1450) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


1451) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(849, 873), parts=[
  WordNode(pos=(849, 854), word='mkdir'),
  WordNode(pos=(855, 857), word='-p'),
  WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
  ]),
])


1452) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


1453) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


1454) cd "$OPENSSL_PATH"

CommandNode(pos=(972, 990), parts=[
  WordNode(pos=(972, 974), word='cd'),
  WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
  ]),
])


1455) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1456) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1228, 1251), parts=[
  WordNode(pos=(1228, 1230), word='rm'),
  WordNode(pos=(1231, 1234), word='-rf'),
  WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
  ]),
])


1457) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1458) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1459) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1320, 1380), parts=[
  WordNode(pos=(1320, 1322), word='ln'),
  WordNode(pos=(1323, 1326), word='-sf'),
  WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
  WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
  WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
  ]),
])


1460) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


1461) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


1462) mkdir -p "$OTP_PATH"

CommandNode(pos=(1529, 1549), parts=[
  WordNode(pos=(1529, 1534), word='mkdir'),
  WordNode(pos=(1535, 1537), word='-p'),
  WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
  ]),
])


1463) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


1464) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


1465) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


1466) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


1467) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


1468) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


1469) cd "$OTP_PATH"

CommandNode(pos=(1765, 1779), parts=[
  WordNode(pos=(1765, 1767), word='cd'),
  WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
  ]),
])


1470) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(1782, 1808), parts=[
  WordNode(pos=(1782, 1788), word='export'),
  WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
  ]),
])


1471) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


1472) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


1473) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


1474) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(2875, 2969), parts=[
  WordNode(pos=(2875, 2877), word='rm'),
  WordNode(pos=(2878, 2881), word='-rf'),
  WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
  ]),
  WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
])


1475) apk add --no-cache --virtual .otp-run-deps $runDeps

CommandNode(pos=(3175, 3226), parts=[
  WordNode(pos=(3175, 3178), word='apk'),
  WordNode(pos=(3179, 3182), word='add'),
  WordNode(pos=(3183, 3193), word='--no-cache'),
  WordNode(pos=(3194, 3203), word='--virtual'),
  WordNode(pos=(3204, 3217), word='.otp-run-deps'),
  WordNode(pos=(3218, 3226), word='$runDeps', parts=[
    ParameterNode(pos=(3218, 3226), value='runDeps'),
  ]),
])


1476) adduser -u 100 -S -h "$RABBITMQ_DATA_DIR" -G rabbitmq rabbitmq

CommandNode(pos=(41, 103), parts=[
  WordNode(pos=(41, 48), word='adduser'),
  WordNode(pos=(49, 51), word='-u'),
  WordNode(pos=(52, 55), word='100'),
  WordNode(pos=(56, 58), word='-S'),
  WordNode(pos=(59, 61), word='-h'),
  WordNode(pos=(62, 82), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(63, 81), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(83, 85), word='-G'),
  WordNode(pos=(86, 94), word='rabbitmq'),
  WordNode(pos=(95, 103), word='rabbitmq'),
])


1477) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(106, 185), parts=[
  WordNode(pos=(106, 111), word='mkdir'),
  WordNode(pos=(112, 114), word='-p'),
  WordNode(pos=(115, 135), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(116, 134), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(136, 149), word='/etc/rabbitmq'),
  WordNode(pos=(150, 167), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(168, 185), word='/var/log/rabbitmq'),
])


1478) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(188, 286), parts=[
  WordNode(pos=(188, 193), word='chown'),
  WordNode(pos=(194, 197), word='-fR'),
  WordNode(pos=(198, 215), word='rabbitmq:rabbitmq'),
  WordNode(pos=(216, 236), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(217, 235), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(237, 250), word='/etc/rabbitmq'),
  WordNode(pos=(251, 268), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(269, 286), word='/var/log/rabbitmq'),
])


1479) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(289, 369), parts=[
  WordNode(pos=(289, 294), word='chmod'),
  WordNode(pos=(295, 298), word='777'),
  WordNode(pos=(299, 319), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(300, 318), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(320, 333), word='/etc/rabbitmq'),
  WordNode(pos=(334, 351), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(352, 369), word='/var/log/rabbitmq'),
])


1480) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(372, 435), parts=[
  WordNode(pos=(372, 374), word='ln'),
  WordNode(pos=(375, 378), word='-sf'),
  WordNode(pos=(379, 414), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(380, 398), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(415, 435), word='/root/.erlang.cookie'),
])


1481) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


1482) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


1483) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


1484) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1485) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1486) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1487) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


1488) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


1489) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


1490) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


1491) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


1492) rm -rf "$GNUPGHOME"

CommandNode(pos=(670, 689), parts=[
  WordNode(pos=(670, 672), word='rm'),
  WordNode(pos=(673, 676), word='-rf'),
  WordNode(pos=(677, 689), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(678, 688), value='GNUPGHOME'),
  ]),
])


1493) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(693, 718), parts=[
  WordNode(pos=(693, 698), word='mkdir'),
  WordNode(pos=(699, 701), word='-p'),
  WordNode(pos=(702, 718), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(703, 717), value='RABBITMQ_HOME'),
  ]),
])


1494) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


1495) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


1496) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(818, 842), parts=[
  WordNode(pos=(818, 820), word='rm'),
  WordNode(pos=(821, 824), word='-rf'),
  WordNode(pos=(825, 842), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(826, 840), value='RABBITMQ_PATH'),
  ]),
])


1497) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(845, 928), parts=[
  WordNode(pos=(845, 849), word='grep'),
  WordNode(pos=(850, 853), word='-qE'),
  WordNode(pos=(854, 888), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(889, 928), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(890, 904), value='RABBITMQ_HOME'),
  ]),
])


1498) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(931, 1010), parts=[
  WordNode(pos=(931, 934), word='sed'),
  WordNode(pos=(935, 937), word='-i'),
  WordNode(pos=(938, 970), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(971, 1010), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(972, 986), value='RABBITMQ_HOME'),
  ]),
])


1499) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1013, 1077), parts=[
  WordNode(pos=(1013, 1017), word='grep'),
  WordNode(pos=(1018, 1021), word='-qE'),
  WordNode(pos=(1022, 1037), word='^SYS_PREFIX=$'),
  WordNode(pos=(1038, 1077), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1039, 1053), value='RABBITMQ_HOME'),
  ]),
])


1500) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1080, 1123), parts=[
  WordNode(pos=(1080, 1085), word='chown'),
  WordNode(pos=(1086, 1088), word='-R'),
  WordNode(pos=(1089, 1106), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1107, 1123), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1108, 1122), value='RABBITMQ_HOME'),
  ]),
])


1501) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1150, 1194), parts=[
  WordNode(pos=(1150, 1151), word='['),
  WordNode(pos=(1152, 1153), word='!'),
  WordNode(pos=(1154, 1156), word='-e'),
  WordNode(pos=(1157, 1192), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1158, 1176), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1193, 1194), word=']'),
])


1502) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1318, 1356), parts=[
  WordNode(pos=(1318, 1320), word='rm'),
  WordNode(pos=(1321, 1356), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1322, 1340), value='RABBITMQ_DATA_DIR'),
  ]),
])


1503) mkdir -p "$HTTPD_PREFIX"

CommandNode(pos=(0, 24), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 24), word='$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(10, 23), value='HTTPD_PREFIX'),
  ]),
])


1504) chown www-data:www-data "$HTTPD_PREFIX"

CommandNode(pos=(29, 68), parts=[
  WordNode(pos=(29, 34), word='chown'),
  WordNode(pos=(35, 52), word='www-data:www-data'),
  WordNode(pos=(53, 68), word='$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(54, 67), value='HTTPD_PREFIX'),
  ]),
])


1505) local f="$1"

CommandNode(pos=(491, 503), parts=[
  WordNode(pos=(491, 496), word='local'),
  WordNode(pos=(497, 503), word='f=$1', parts=[
    ParameterNode(pos=(500, 502), value='1'),
  ]),
])


1506) local distFile="$1"

CommandNode(pos=(514, 533), parts=[
  WordNode(pos=(514, 519), word='local'),
  WordNode(pos=(520, 533), word='distFile=$1', parts=[
    ParameterNode(pos=(530, 532), value='1'),
  ]),
])


1507) set -eux;   echo 'deb http://deb.debian.org/debian stretch-backports main' > /etc/apt/sources.list.d/stretch-backports.list;  savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   bzip2   ca-certificates   dirmngr   dpkg-dev   gcc   gnupg   libbrotli-dev   libcurl4-openssl-dev   libjansson-dev   liblua5.2-dev   libnghttp2-dev   libpcre3-dev   libssl-dev   libxml2-dev   make   wget   zlib1g-dev  ;  rm -r /var/lib/apt/lists/*;   ddist() {   local f="$1"; shift;   local distFile="$1"; shift;   local success=;   local distUrl=;   for distUrl in $APACHE_DIST_URLS; do    if wget -O "$f" "$distUrl$distFile" && [ -s "$f" ]; then     success=1;     break;    fi;   done;   [ -n "$success" ];  };   ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2";  echo "$HTTPD_SHA256 *httpd.tar.bz2" | sha256sum -c -;   ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc";  export GNUPGHOME="$(mktemp -d)";  for key in   A93D62ECC3C8EA12DB220EC934EA76E6791485A8   B9E8213AEFB861AF35A41F2C995E35221AD84DFF  ; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME" httpd.tar.bz2.asc;   mkdir -p src;  tar -xf httpd.tar.bz2 -C src --strip-components=1;  rm httpd.tar.bz2;  cd src;   patches() {   while [ "$#" -gt 0 ]; do    local patchFile="$1"; shift;    local patchSha256="$1"; shift;    ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile";    echo "$patchSha256 *$patchFile" | sha256sum -c -;    patch -p0 < "$patchFile";    rm -f "$patchFile";   done;  };  patches $HTTPD_PATCHES;   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all  ;  make -j "$(nproc)";  make install;   cd ..;  rm -r src man manual;   sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   httpd -v

ListNode(pos=(0, 2586), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 123), parts=[
    WordNode(pos=(12, 16), word='echo'),
    WordNode(pos=(17, 74), word='deb http://deb.debian.org/debian stretch-backports main'),
    RedirectNode(output=
      WordNode(pos=(77, 123), word='/etc/apt/sources.list.d/stretch-backports.list'), pos=(75, 123), type='>'),
  ]),
  OperatorNode(op=';', pos=(123, 124)),
  CommandNode(pos=(126, 163), parts=[
    AssignmentNode(pos=(126, 163), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(142, 161), parts=[
          WordNode(pos=(142, 150), word='apt-mark'),
          WordNode(pos=(151, 161), word='showmanual'),
        ]), pos=(140, 162)),
    ]),
  ]),
  OperatorNode(op=';', pos=(163, 164)),
  CommandNode(pos=(166, 180), parts=[
    WordNode(pos=(166, 173), word='apt-get'),
    WordNode(pos=(174, 180), word='update'),
  ]),
  OperatorNode(op=';', pos=(180, 181)),
  CommandNode(pos=(183, 444), parts=[
    WordNode(pos=(183, 190), word='apt-get'),
    WordNode(pos=(191, 198), word='install'),
    WordNode(pos=(199, 201), word='-y'),
    WordNode(pos=(202, 225), word='--no-install-recommends'),
    WordNode(pos=(228, 233), word='bzip2'),
    WordNode(pos=(236, 251), word='ca-certificates'),
    WordNode(pos=(254, 261), word='dirmngr'),
    WordNode(pos=(264, 272), word='dpkg-dev'),
    WordNode(pos=(275, 278), word='gcc'),
    WordNode(pos=(281, 286), word='gnupg'),
    WordNode(pos=(289, 302), word='libbrotli-dev'),
    WordNode(pos=(305, 325), word='libcurl4-openssl-dev'),
    WordNode(pos=(328, 342), word='libjansson-dev'),
    WordNode(pos=(345, 358), word='liblua5.2-dev'),
    WordNode(pos=(361, 375), word='libnghttp2-dev'),
    WordNode(pos=(378, 390), word='libpcre3-dev'),
    WordNode(pos=(393, 403), word='libssl-dev'),
    WordNode(pos=(406, 417), word='libxml2-dev'),
    WordNode(pos=(420, 424), word='make'),
    WordNode(pos=(427, 431), word='wget'),
    WordNode(pos=(434, 444), word='zlib1g-dev'),
  ]),
  OperatorNode(op=';', pos=(446, 447)),
  CommandNode(pos=(449, 475), parts=[
    WordNode(pos=(449, 451), word='rm'),
    WordNode(pos=(452, 454), word='-r'),
    WordNode(pos=(455, 475), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(475, 476)),
  FunctionNode(pos=(479, 741), parts=[
    WordNode(pos=(479, 484), word='ddist'),
    ReservedwordNode(pos=(484, 485), word='('),
    ReservedwordNode(pos=(485, 486), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(487, 488), word='{'),
      ListNode(pos=(491, 738), parts=[
          CommandNode(pos=(491, 503), parts=[
            WordNode(pos=(491, 496), word='local'),
            WordNode(pos=(497, 503), word='f=$1', parts=[
              ParameterNode(pos=(500, 502), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(503, 504)),
          CommandNode(pos=(505, 510), parts=[
            WordNode(pos=(505, 510), word='shift'),
          ]),
          OperatorNode(op=';', pos=(510, 511)),
          CommandNode(pos=(514, 533), parts=[
            WordNode(pos=(514, 519), word='local'),
            WordNode(pos=(520, 533), word='distFile=$1', parts=[
              ParameterNode(pos=(530, 532), value='1'),
            ]),
          ]),
          OperatorNode(op=';', pos=(533, 534)),
          CommandNode(pos=(535, 540), parts=[
            WordNode(pos=(535, 540), word='shift'),
          ]),
          OperatorNode(op=';', pos=(540, 541)),
          CommandNode(pos=(544, 558), parts=[
            WordNode(pos=(544, 549), word='local'),
            WordNode(pos=(550, 558), word='success='),
          ]),
          OperatorNode(op=';', pos=(558, 559)),
          CommandNode(pos=(562, 576), parts=[
            WordNode(pos=(562, 567), word='local'),
            WordNode(pos=(568, 576), word='distUrl='),
          ]),
          OperatorNode(op=';', pos=(576, 577)),
          CompoundNode(list=[
            ForNode(pos=(580, 716), parts=[
              ReservedwordNode(pos=(580, 583), word='for'),
              WordNode(pos=(584, 591), word='distUrl'),
              ReservedwordNode(pos=(592, 594), word='in'),
              WordNode(pos=(595, 612), word='$APACHE_DIST_URLS', parts=[
                ParameterNode(pos=(595, 612), value='APACHE_DIST_URLS'),
              ]),
              ReservedwordNode(pos=(612, 613), word=';'),
              ReservedwordNode(pos=(614, 616), word='do'),
              ListNode(pos=(620, 709), parts=[
                  CompoundNode(list=[
                    IfNode(pos=(620, 708), parts=[
                      ReservedwordNode(pos=(620, 622), word='if'),
                      ListNode(pos=(623, 671), parts=[
                          CommandNode(pos=(623, 655), parts=[
                            WordNode(pos=(623, 627), word='wget'),
                            WordNode(pos=(628, 630), word='-O'),
                            WordNode(pos=(631, 635), word='$f', parts=[
                              ParameterNode(pos=(632, 634), value='f'),
                            ]),
                            WordNode(pos=(636, 655), word='$distUrl$distFile', parts=[
                              ParameterNode(pos=(637, 645), value='distUrl'),
                              ParameterNode(pos=(645, 654), value='distFile'),
                            ]),
                          ]),
                          OperatorNode(op='&&', pos=(656, 658)),
                          CommandNode(pos=(659, 670), parts=[
                            WordNode(pos=(659, 660), word='['),
                            WordNode(pos=(661, 663), word='-s'),
                            WordNode(pos=(664, 668), word='$f', parts=[
                              ParameterNode(pos=(665, 667), value='f'),
                            ]),
                            WordNode(pos=(669, 670), word=']'),
                          ]),
                          OperatorNode(op=';', pos=(670, 671)),
                        ]),
                      ReservedwordNode(pos=(672, 676), word='then'),
                      ListNode(pos=(681, 702), parts=[
                          CommandNode(pos=(681, 690), parts=[
                            AssignmentNode(pos=(681, 690), word='success=1'),
                          ]),
                          OperatorNode(op=';', pos=(690, 691)),
                          CommandNode(pos=(696, 701), parts=[
                            WordNode(pos=(696, 701), word='break'),
                          ]),
                          OperatorNode(op=';', pos=(701, 702)),
                        ]),
                      ReservedwordNode(pos=(706, 708), word='fi'),
                    ]),
                  ], pos=(620, 708)),
                  OperatorNode(op=';', pos=(708, 709)),
                ]),
              ReservedwordNode(pos=(712, 716), word='done'),
            ]),
          ], pos=(580, 716)),
          OperatorNode(op=';', pos=(716, 717)),
          CommandNode(pos=(720, 737), parts=[
            WordNode(pos=(720, 721), word='['),
            WordNode(pos=(722, 724), word='-n'),
            WordNode(pos=(725, 735), word='$success', parts=[
              ParameterNode(pos=(726, 734), value='success'),
            ]),
            WordNode(pos=(736, 737), word=']'),
          ]),
          OperatorNode(op=';', pos=(737, 738)),
        ]),
      ReservedwordNode(pos=(740, 741), word='}'),
    ], pos=(487, 741)),
  ]),
  OperatorNode(op=';', pos=(741, 742)),
  CommandNode(pos=(745, 803), parts=[
    WordNode(pos=(745, 750), word='ddist'),
    WordNode(pos=(751, 766), word='httpd.tar.bz2'),
    WordNode(pos=(767, 803), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
      ParameterNode(pos=(780, 794), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(803, 804)),
  PipelineNode(pos=(806, 858), parts=[
    CommandNode(pos=(806, 841), parts=[
      WordNode(pos=(806, 810), word='echo'),
      WordNode(pos=(811, 841), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
        ParameterNode(pos=(812, 825), value='HTTPD_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(842, 843)),
    CommandNode(pos=(844, 858), parts=[
      WordNode(pos=(844, 853), word='sha256sum'),
      WordNode(pos=(854, 856), word='-c'),
      WordNode(pos=(857, 858), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(858, 859)),
  CommandNode(pos=(862, 928), parts=[
    WordNode(pos=(862, 867), word='ddist'),
    WordNode(pos=(868, 887), word='httpd.tar.bz2.asc'),
    WordNode(pos=(888, 928), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
      ParameterNode(pos=(901, 915), value='HTTPD_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(928, 929)),
  CommandNode(pos=(931, 962), parts=[
    WordNode(pos=(931, 937), word='export'),
    WordNode(pos=(938, 962), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(951, 960), parts=[
          WordNode(pos=(951, 957), word='mktemp'),
          WordNode(pos=(958, 960), word='-d'),
        ]), pos=(949, 961)),
    ]),
  ]),
  OperatorNode(op=';', pos=(962, 963)),
  CompoundNode(list=[
    ForNode(pos=(965, 1146), parts=[
      ReservedwordNode(pos=(965, 968), word='for'),
      WordNode(pos=(969, 972), word='key'),
      ReservedwordNode(pos=(973, 975), word='in'),
      WordNode(pos=(978, 1018), word='A93D62ECC3C8EA12DB220EC934EA76E6791485A8'),
      WordNode(pos=(1021, 1061), word='B9E8213AEFB861AF35A41F2C995E35221AD84DFF'),
      ReservedwordNode(pos=(1063, 1064), word=';'),
      ReservedwordNode(pos=(1065, 1067), word='do'),
      ListNode(pos=(1070, 1140), parts=[
          CommandNode(pos=(1070, 1139), parts=[
            WordNode(pos=(1070, 1073), word='gpg'),
            WordNode(pos=(1074, 1081), word='--batch'),
            WordNode(pos=(1082, 1093), word='--keyserver'),
            WordNode(pos=(1094, 1120), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(1121, 1132), word='--recv-keys'),
            WordNode(pos=(1133, 1139), word='$key', parts=[
              ParameterNode(pos=(1134, 1138), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(1139, 1140)),
        ]),
      ReservedwordNode(pos=(1142, 1146), word='done'),
    ]),
  ], pos=(965, 1146)),
  OperatorNode(op=';', pos=(1146, 1147)),
  CommandNode(pos=(1149, 1201), parts=[
    WordNode(pos=(1149, 1152), word='gpg'),
    WordNode(pos=(1153, 1160), word='--batch'),
    WordNode(pos=(1161, 1169), word='--verify'),
    WordNode(pos=(1170, 1187), word='httpd.tar.bz2.asc'),
    WordNode(pos=(1188, 1201), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1201, 1202)),
  CommandNode(pos=(1204, 1222), parts=[
    WordNode(pos=(1204, 1211), word='command'),
    WordNode(pos=(1212, 1214), word='-v'),
    WordNode(pos=(1215, 1222), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(1223, 1225)),
  CommandNode(pos=(1226, 1244), parts=[
    WordNode(pos=(1226, 1233), word='gpgconf'),
    WordNode(pos=(1234, 1240), word='--kill'),
    WordNode(pos=(1241, 1244), word='all'),
  ]),
  OperatorNode(op='||', pos=(1245, 1247)),
  CommandNode(pos=(1248, 1249), parts=[
    WordNode(pos=(1248, 1249), word=':'),
  ]),
  OperatorNode(op=';', pos=(1249, 1250)),
  CommandNode(pos=(1252, 1289), parts=[
    WordNode(pos=(1252, 1254), word='rm'),
    WordNode(pos=(1255, 1258), word='-rf'),
    WordNode(pos=(1259, 1271), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(1260, 1270), value='GNUPGHOME'),
    ]),
    WordNode(pos=(1272, 1289), word='httpd.tar.bz2.asc'),
  ]),
  OperatorNode(op=';', pos=(1289, 1290)),
  CommandNode(pos=(1293, 1305), parts=[
    WordNode(pos=(1293, 1298), word='mkdir'),
    WordNode(pos=(1299, 1301), word='-p'),
    WordNode(pos=(1302, 1305), word='src'),
  ]),
  OperatorNode(op=';', pos=(1305, 1306)),
  CommandNode(pos=(1308, 1357), parts=[
    WordNode(pos=(1308, 1311), word='tar'),
    WordNode(pos=(1312, 1315), word='-xf'),
    WordNode(pos=(1316, 1329), word='httpd.tar.bz2'),
    WordNode(pos=(1330, 1332), word='-C'),
    WordNode(pos=(1333, 1336), word='src'),
    WordNode(pos=(1337, 1357), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1357, 1358)),
  CommandNode(pos=(1360, 1376), parts=[
    WordNode(pos=(1360, 1362), word='rm'),
    WordNode(pos=(1363, 1376), word='httpd.tar.bz2'),
  ]),
  OperatorNode(op=';', pos=(1376, 1377)),
  CommandNode(pos=(1379, 1385), parts=[
    WordNode(pos=(1379, 1381), word='cd'),
    WordNode(pos=(1382, 1385), word='src'),
  ]),
  OperatorNode(op=';', pos=(1385, 1386)),
  FunctionNode(pos=(1389, 1683), parts=[
    WordNode(pos=(1389, 1396), word='patches'),
    ReservedwordNode(pos=(1396, 1397), word='('),
    ReservedwordNode(pos=(1397, 1398), word=')'),
    CompoundNode(list=[
      ReservedwordNode(pos=(1399, 1400), word='{'),
      ListNode(pos=(1403, 1680), parts=[
          CompoundNode(list=[
            WhileNode(pos=(1403, 1679), parts=[
              ReservedwordNode(pos=(1403, 1408), word='while'),
              ListNode(pos=(1409, 1424), parts=[
                  CommandNode(pos=(1409, 1423), parts=[
                    WordNode(pos=(1409, 1410), word='['),
                    WordNode(pos=(1411, 1415), word='$#', parts=[
                      ParameterNode(pos=(1412, 1414), value='#'),
                    ]),
                    WordNode(pos=(1416, 1419), word='-gt'),
                    WordNode(pos=(1420, 1421), word='0'),
                    WordNode(pos=(1422, 1423), word=']'),
                  ]),
                  OperatorNode(op=';', pos=(1423, 1424)),
                ]),
              ReservedwordNode(pos=(1425, 1427), word='do'),
              ListNode(pos=(1431, 1672), parts=[
                  CommandNode(pos=(1431, 1451), parts=[
                    WordNode(pos=(1431, 1436), word='local'),
                    WordNode(pos=(1437, 1451), word='patchFile=$1', parts=[
                      ParameterNode(pos=(1448, 1450), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1451, 1452)),
                  CommandNode(pos=(1453, 1458), parts=[
                    WordNode(pos=(1453, 1458), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1458, 1459)),
                  CommandNode(pos=(1463, 1485), parts=[
                    WordNode(pos=(1463, 1468), word='local'),
                    WordNode(pos=(1469, 1485), word='patchSha256=$1', parts=[
                      ParameterNode(pos=(1482, 1484), value='1'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1485, 1486)),
                  CommandNode(pos=(1487, 1492), parts=[
                    WordNode(pos=(1487, 1492), word='shift'),
                  ]),
                  OperatorNode(op=';', pos=(1492, 1493)),
                  CommandNode(pos=(1497, 1566), parts=[
                    WordNode(pos=(1497, 1502), word='ddist'),
                    WordNode(pos=(1503, 1515), word='$patchFile', parts=[
                      ParameterNode(pos=(1504, 1514), value='patchFile'),
                    ]),
                    WordNode(pos=(1516, 1566), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
                      ParameterNode(pos=(1540, 1554), value='HTTPD_VERSION'),
                      ParameterNode(pos=(1555, 1565), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1566, 1567)),
                  PipelineNode(pos=(1571, 1619), parts=[
                    CommandNode(pos=(1571, 1602), parts=[
                      WordNode(pos=(1571, 1575), word='echo'),
                      WordNode(pos=(1576, 1602), word='$patchSha256 *$patchFile', parts=[
                        ParameterNode(pos=(1577, 1589), value='patchSha256'),
                        ParameterNode(pos=(1591, 1601), value='patchFile'),
                      ]),
                    ]),
                    PipeNode(pipe='|', pos=(1603, 1604)),
                    CommandNode(pos=(1605, 1619), parts=[
                      WordNode(pos=(1605, 1614), word='sha256sum'),
                      WordNode(pos=(1615, 1617), word='-c'),
                      WordNode(pos=(1618, 1619), word='-'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1619, 1620)),
                  CommandNode(pos=(1624, 1648), parts=[
                    WordNode(pos=(1624, 1629), word='patch'),
                    WordNode(pos=(1630, 1633), word='-p0'),
                    RedirectNode(output=
                      WordNode(pos=(1636, 1648), word='$patchFile', parts=[
                        ParameterNode(pos=(1637, 1647), value='patchFile'),
                      ]), pos=(1634, 1648), type='<'),
                  ]),
                  OperatorNode(op=';', pos=(1648, 1649)),
                  CommandNode(pos=(1653, 1671), parts=[
                    WordNode(pos=(1653, 1655), word='rm'),
                    WordNode(pos=(1656, 1658), word='-f'),
                    WordNode(pos=(1659, 1671), word='$patchFile', parts=[
                      ParameterNode(pos=(1660, 1670), value='patchFile'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(1671, 1672)),
                ]),
              ReservedwordNode(pos=(1675, 1679), word='done'),
            ]),
          ], pos=(1403, 1679)),
          OperatorNode(op=';', pos=(1679, 1680)),
        ]),
      ReservedwordNode(pos=(1682, 1683), word='}'),
    ], pos=(1399, 1683)),
  ]),
  OperatorNode(op=';', pos=(1683, 1684)),
  CommandNode(pos=(1686, 1708), parts=[
    WordNode(pos=(1686, 1693), word='patches'),
    WordNode(pos=(1694, 1708), word='$HTTPD_PATCHES', parts=[
      ParameterNode(pos=(1694, 1708), value='HTTPD_PATCHES'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1708, 1709)),
  CommandNode(pos=(1712, 1769), parts=[
    AssignmentNode(pos=(1712, 1769), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1723, 1767), parts=[
          WordNode(pos=(1723, 1740), word='dpkg-architecture'),
          WordNode(pos=(1741, 1748), word='--query'),
          WordNode(pos=(1749, 1767), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1721, 1768)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1769, 1770)),
  CommandNode(pos=(1772, 1891), parts=[
    WordNode(pos=(1772, 1783), word='./configure'),
    WordNode(pos=(1786, 1804), word='--build=$gnuArch', parts=[
      ParameterNode(pos=(1795, 1803), value='gnuArch'),
    ]),
    WordNode(pos=(1807, 1831), word='--prefix=$HTTPD_PREFIX', parts=[
      ParameterNode(pos=(1817, 1830), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(1834, 1864), word='--enable-mods-shared=reallyall'),
    WordNode(pos=(1867, 1891), word='--enable-mpms-shared=all'),
  ]),
  OperatorNode(op=';', pos=(1893, 1894)),
  CommandNode(pos=(1896, 1914), parts=[
    WordNode(pos=(1896, 1900), word='make'),
    WordNode(pos=(1901, 1903), word='-j'),
    WordNode(pos=(1904, 1914), word='$(nproc)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1907, 1912), parts=[
          WordNode(pos=(1907, 1912), word='nproc'),
        ]), pos=(1905, 1913)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1914, 1915)),
  CommandNode(pos=(1917, 1929), parts=[
    WordNode(pos=(1917, 1921), word='make'),
    WordNode(pos=(1922, 1929), word='install'),
  ]),
  OperatorNode(op=';', pos=(1929, 1930)),
  CommandNode(pos=(1933, 1938), parts=[
    WordNode(pos=(1933, 1935), word='cd'),
    WordNode(pos=(1936, 1938), word='..'),
  ]),
  OperatorNode(op=';', pos=(1938, 1939)),
  CommandNode(pos=(1941, 1961), parts=[
    WordNode(pos=(1941, 1943), word='rm'),
    WordNode(pos=(1944, 1946), word='-r'),
    WordNode(pos=(1947, 1950), word='src'),
    WordNode(pos=(1951, 1954), word='man'),
    WordNode(pos=(1955, 1961), word='manual'),
  ]),
  OperatorNode(op=';', pos=(1961, 1962)),
  CommandNode(pos=(1965, 2207), parts=[
    WordNode(pos=(1965, 1968), word='sed'),
    WordNode(pos=(1969, 1972), word='-ri'),
    WordNode(pos=(1975, 1977), word='-e'),
    WordNode(pos=(1978, 2024), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(2027, 2029), word='-e'),
    WordNode(pos=(2030, 2075), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
    WordNode(pos=(2078, 2080), word='-e'),
    WordNode(pos=(2081, 2129), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
    WordNode(pos=(2132, 2163), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
      ParameterNode(pos=(2133, 2146), value='HTTPD_PREFIX'),
    ]),
    WordNode(pos=(2166, 2207), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
      ParameterNode(pos=(2167, 2180), value='HTTPD_PREFIX'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2209, 2210)),
  CommandNode(pos=(2213, 2243), parts=[
    WordNode(pos=(2213, 2221), word='apt-mark'),
    WordNode(pos=(2222, 2226), word='auto'),
    WordNode(pos=(2227, 2231), word='.*'),
    RedirectNode(output=
      WordNode(pos=(2234, 2243), word='/dev/null'), pos=(2232, 2243), type='>'),
  ]),
  OperatorNode(op=';', pos=(2243, 2244)),
  CommandNode(pos=(2246, 2268), parts=[
    WordNode(pos=(2246, 2247), word='['),
    WordNode(pos=(2248, 2250), word='-z'),
    WordNode(pos=(2251, 2266), word='$savedAptMark', parts=[
      ParameterNode(pos=(2252, 2265), value='savedAptMark'),
    ]),
    WordNode(pos=(2267, 2268), word=']'),
  ]),
  OperatorNode(op='||', pos=(2269, 2271)),
  CommandNode(pos=(2272, 2301), parts=[
    WordNode(pos=(2272, 2280), word='apt-mark'),
    WordNode(pos=(2281, 2287), word='manual'),
    WordNode(pos=(2288, 2301), word='$savedAptMark', parts=[
      ParameterNode(pos=(2288, 2301), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2301, 2302)),
  PipelineNode(pos=(2304, 2493), parts=[
    CommandNode(pos=(2304, 2358), parts=[
      WordNode(pos=(2304, 2308), word='find'),
      WordNode(pos=(2309, 2319), word='/usr/local'),
      WordNode(pos=(2320, 2325), word='-type'),
      WordNode(pos=(2326, 2327), word='f'),
      WordNode(pos=(2328, 2339), word='-executable'),
      WordNode(pos=(2340, 2345), word='-exec'),
      WordNode(pos=(2346, 2349), word='ldd'),
      WordNode(pos=(2350, 2354), word='{}'),
      WordNode(pos=(2355, 2358), word=';'),
    ]),
    PipeNode(pipe='|', pos=(2361, 2362)),
    CommandNode(pos=(2363, 2391), parts=[
      WordNode(pos=(2363, 2366), word='awk'),
      WordNode(pos=(2367, 2391), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(2394, 2395)),
    CommandNode(pos=(2396, 2403), parts=[
      WordNode(pos=(2396, 2400), word='sort'),
      WordNode(pos=(2401, 2403), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(2406, 2407)),
    CommandNode(pos=(2408, 2436), parts=[
      WordNode(pos=(2408, 2413), word='xargs'),
      WordNode(pos=(2414, 2416), word='-r'),
      WordNode(pos=(2417, 2427), word='dpkg-query'),
      WordNode(pos=(2428, 2436), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(2439, 2440)),
    CommandNode(pos=(2441, 2452), parts=[
      WordNode(pos=(2441, 2444), word='cut'),
      WordNode(pos=(2445, 2448), word='-d:'),
      WordNode(pos=(2449, 2452), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(2455, 2456)),
    CommandNode(pos=(2457, 2464), parts=[
      WordNode(pos=(2457, 2461), word='sort'),
      WordNode(pos=(2462, 2464), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(2467, 2468)),
    CommandNode(pos=(2469, 2493), parts=[
      WordNode(pos=(2469, 2474), word='xargs'),
      WordNode(pos=(2475, 2477), word='-r'),
      WordNode(pos=(2478, 2486), word='apt-mark'),
      WordNode(pos=(2487, 2493), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2495, 2496)),
  CommandNode(pos=(2498, 2574), parts=[
    WordNode(pos=(2498, 2505), word='apt-get'),
    WordNode(pos=(2506, 2511), word='purge'),
    WordNode(pos=(2512, 2514), word='-y'),
    WordNode(pos=(2515, 2528), word='--auto-remove'),
    WordNode(pos=(2529, 2531), word='-o'),
    WordNode(pos=(2532, 2574), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(2574, 2575)),
  CommandNode(pos=(2578, 2586), parts=[
    WordNode(pos=(2578, 2583), word='httpd'),
    WordNode(pos=(2584, 2586), word='-v'),
  ]),
])


1508) wget -O "$f" "$distUrl$distFile"

CommandNode(pos=(623, 655), parts=[
  WordNode(pos=(623, 627), word='wget'),
  WordNode(pos=(628, 630), word='-O'),
  WordNode(pos=(631, 635), word='$f', parts=[
    ParameterNode(pos=(632, 634), value='f'),
  ]),
  WordNode(pos=(636, 655), word='$distUrl$distFile', parts=[
    ParameterNode(pos=(637, 645), value='distUrl'),
    ParameterNode(pos=(645, 654), value='distFile'),
  ]),
])


1509) wget -O "$f" "$distUrl$distFile"

CommandNode(pos=(623, 655), parts=[
  WordNode(pos=(623, 627), word='wget'),
  WordNode(pos=(628, 630), word='-O'),
  WordNode(pos=(631, 635), word='$f', parts=[
    ParameterNode(pos=(632, 634), value='f'),
  ]),
  WordNode(pos=(636, 655), word='$distUrl$distFile', parts=[
    ParameterNode(pos=(637, 645), value='distUrl'),
    ParameterNode(pos=(645, 654), value='distFile'),
  ]),
])


1510) wget -O "$f" "$distUrl$distFile"

CommandNode(pos=(623, 655), parts=[
  WordNode(pos=(623, 627), word='wget'),
  WordNode(pos=(628, 630), word='-O'),
  WordNode(pos=(631, 635), word='$f', parts=[
    ParameterNode(pos=(632, 634), value='f'),
  ]),
  WordNode(pos=(636, 655), word='$distUrl$distFile', parts=[
    ParameterNode(pos=(637, 645), value='distUrl'),
    ParameterNode(pos=(645, 654), value='distFile'),
  ]),
])


1511) [ -s "$f" ]

CommandNode(pos=(659, 670), parts=[
  WordNode(pos=(659, 660), word='['),
  WordNode(pos=(661, 663), word='-s'),
  WordNode(pos=(664, 668), word='$f', parts=[
    ParameterNode(pos=(665, 667), value='f'),
  ]),
  WordNode(pos=(669, 670), word=']'),
])


1512) [ -n "$success" ]

CommandNode(pos=(720, 737), parts=[
  WordNode(pos=(720, 721), word='['),
  WordNode(pos=(722, 724), word='-n'),
  WordNode(pos=(725, 735), word='$success', parts=[
    ParameterNode(pos=(726, 734), value='success'),
  ]),
  WordNode(pos=(736, 737), word=']'),
])


1513) ddist 'httpd.tar.bz2' "httpd/httpd-$HTTPD_VERSION.tar.bz2"

CommandNode(pos=(745, 803), parts=[
  WordNode(pos=(745, 750), word='ddist'),
  WordNode(pos=(751, 766), word='httpd.tar.bz2'),
  WordNode(pos=(767, 803), word='httpd/httpd-$HTTPD_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(780, 794), value='HTTPD_VERSION'),
  ]),
])


1514) echo "$HTTPD_SHA256 *httpd.tar.bz2"

CommandNode(pos=(806, 841), parts=[
  WordNode(pos=(806, 810), word='echo'),
  WordNode(pos=(811, 841), word='$HTTPD_SHA256 *httpd.tar.bz2', parts=[
    ParameterNode(pos=(812, 825), value='HTTPD_SHA256'),
  ]),
])


1515) ddist 'httpd.tar.bz2.asc' "httpd/httpd-$HTTPD_VERSION.tar.bz2.asc"

CommandNode(pos=(862, 928), parts=[
  WordNode(pos=(862, 867), word='ddist'),
  WordNode(pos=(868, 887), word='httpd.tar.bz2.asc'),
  WordNode(pos=(888, 928), word='httpd/httpd-$HTTPD_VERSION.tar.bz2.asc', parts=[
    ParameterNode(pos=(901, 915), value='HTTPD_VERSION'),
  ]),
])


1516) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(1070, 1139), parts=[
  WordNode(pos=(1070, 1073), word='gpg'),
  WordNode(pos=(1074, 1081), word='--batch'),
  WordNode(pos=(1082, 1093), word='--keyserver'),
  WordNode(pos=(1094, 1120), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(1121, 1132), word='--recv-keys'),
  WordNode(pos=(1133, 1139), word='$key', parts=[
    ParameterNode(pos=(1134, 1138), value='key'),
  ]),
])


1517) rm -rf "$GNUPGHOME" httpd.tar.bz2.asc

CommandNode(pos=(1252, 1289), parts=[
  WordNode(pos=(1252, 1254), word='rm'),
  WordNode(pos=(1255, 1258), word='-rf'),
  WordNode(pos=(1259, 1271), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(1260, 1270), value='GNUPGHOME'),
  ]),
  WordNode(pos=(1272, 1289), word='httpd.tar.bz2.asc'),
])


1518) [ "$#" -gt 0 ]

CommandNode(pos=(1409, 1423), parts=[
  WordNode(pos=(1409, 1410), word='['),
  WordNode(pos=(1411, 1415), word='$#', parts=[
    ParameterNode(pos=(1412, 1414), value='#'),
  ]),
  WordNode(pos=(1416, 1419), word='-gt'),
  WordNode(pos=(1420, 1421), word='0'),
  WordNode(pos=(1422, 1423), word=']'),
])


1519) local patchFile="$1"

CommandNode(pos=(1431, 1451), parts=[
  WordNode(pos=(1431, 1436), word='local'),
  WordNode(pos=(1437, 1451), word='patchFile=$1', parts=[
    ParameterNode(pos=(1448, 1450), value='1'),
  ]),
])


1520) local patchSha256="$1"

CommandNode(pos=(1463, 1485), parts=[
  WordNode(pos=(1463, 1468), word='local'),
  WordNode(pos=(1469, 1485), word='patchSha256=$1', parts=[
    ParameterNode(pos=(1482, 1484), value='1'),
  ]),
])


1521) ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile"

CommandNode(pos=(1497, 1566), parts=[
  WordNode(pos=(1497, 1502), word='ddist'),
  WordNode(pos=(1503, 1515), word='$patchFile', parts=[
    ParameterNode(pos=(1504, 1514), value='patchFile'),
  ]),
  WordNode(pos=(1516, 1566), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
    ParameterNode(pos=(1540, 1554), value='HTTPD_VERSION'),
    ParameterNode(pos=(1555, 1565), value='patchFile'),
  ]),
])


1522) ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile"

CommandNode(pos=(1497, 1566), parts=[
  WordNode(pos=(1497, 1502), word='ddist'),
  WordNode(pos=(1503, 1515), word='$patchFile', parts=[
    ParameterNode(pos=(1504, 1514), value='patchFile'),
  ]),
  WordNode(pos=(1516, 1566), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
    ParameterNode(pos=(1540, 1554), value='HTTPD_VERSION'),
    ParameterNode(pos=(1555, 1565), value='patchFile'),
  ]),
])


1523) ddist "$patchFile" "httpd/patches/apply_to_$HTTPD_VERSION/$patchFile"

CommandNode(pos=(1497, 1566), parts=[
  WordNode(pos=(1497, 1502), word='ddist'),
  WordNode(pos=(1503, 1515), word='$patchFile', parts=[
    ParameterNode(pos=(1504, 1514), value='patchFile'),
  ]),
  WordNode(pos=(1516, 1566), word='httpd/patches/apply_to_$HTTPD_VERSION/$patchFile', parts=[
    ParameterNode(pos=(1540, 1554), value='HTTPD_VERSION'),
    ParameterNode(pos=(1555, 1565), value='patchFile'),
  ]),
])


1524) echo "$patchSha256 *$patchFile"

CommandNode(pos=(1571, 1602), parts=[
  WordNode(pos=(1571, 1575), word='echo'),
  WordNode(pos=(1576, 1602), word='$patchSha256 *$patchFile', parts=[
    ParameterNode(pos=(1577, 1589), value='patchSha256'),
    ParameterNode(pos=(1591, 1601), value='patchFile'),
  ]),
])


1525) echo "$patchSha256 *$patchFile"

CommandNode(pos=(1571, 1602), parts=[
  WordNode(pos=(1571, 1575), word='echo'),
  WordNode(pos=(1576, 1602), word='$patchSha256 *$patchFile', parts=[
    ParameterNode(pos=(1577, 1589), value='patchSha256'),
    ParameterNode(pos=(1591, 1601), value='patchFile'),
  ]),
])


1526) rm -f "$patchFile"

CommandNode(pos=(1653, 1671), parts=[
  WordNode(pos=(1653, 1655), word='rm'),
  WordNode(pos=(1656, 1658), word='-f'),
  WordNode(pos=(1659, 1671), word='$patchFile', parts=[
    ParameterNode(pos=(1660, 1670), value='patchFile'),
  ]),
])


1527) patches $HTTPD_PATCHES

CommandNode(pos=(1686, 1708), parts=[
  WordNode(pos=(1686, 1693), word='patches'),
  WordNode(pos=(1694, 1708), word='$HTTPD_PATCHES', parts=[
    ParameterNode(pos=(1694, 1708), value='HTTPD_PATCHES'),
  ]),
])


1528) ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all

CommandNode(pos=(1772, 1891), parts=[
  WordNode(pos=(1772, 1783), word='./configure'),
  WordNode(pos=(1786, 1804), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1795, 1803), value='gnuArch'),
  ]),
  WordNode(pos=(1807, 1831), word='--prefix=$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(1817, 1830), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(1834, 1864), word='--enable-mods-shared=reallyall'),
  WordNode(pos=(1867, 1891), word='--enable-mpms-shared=all'),
])


1529) ./configure   --build="$gnuArch"   --prefix="$HTTPD_PREFIX"   --enable-mods-shared=reallyall   --enable-mpms-shared=all

CommandNode(pos=(1772, 1891), parts=[
  WordNode(pos=(1772, 1783), word='./configure'),
  WordNode(pos=(1786, 1804), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1795, 1803), value='gnuArch'),
  ]),
  WordNode(pos=(1807, 1831), word='--prefix=$HTTPD_PREFIX', parts=[
    ParameterNode(pos=(1817, 1830), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(1834, 1864), word='--enable-mods-shared=reallyall'),
  WordNode(pos=(1867, 1891), word='--enable-mpms-shared=all'),
])


1530) sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"

CommandNode(pos=(1965, 2207), parts=[
  WordNode(pos=(1965, 1968), word='sed'),
  WordNode(pos=(1969, 1972), word='-ri'),
  WordNode(pos=(1975, 1977), word='-e'),
  WordNode(pos=(1978, 2024), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(2027, 2029), word='-e'),
  WordNode(pos=(2030, 2075), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
  WordNode(pos=(2078, 2080), word='-e'),
  WordNode(pos=(2081, 2129), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(2132, 2163), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
    ParameterNode(pos=(2133, 2146), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(2166, 2207), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
    ParameterNode(pos=(2167, 2180), value='HTTPD_PREFIX'),
  ]),
])


1531) sed -ri   -e 's!^(\s*CustomLog)\s+\S+!\1 /proc/self/fd/1!g'   -e 's!^(\s*ErrorLog)\s+\S+!\1 /proc/self/fd/2!g'   -e 's!^(\s*TransferLog)\s+\S+!\1 /proc/self/fd/1!g'   "$HTTPD_PREFIX/conf/httpd.conf"   "$HTTPD_PREFIX/conf/extra/httpd-ssl.conf"

CommandNode(pos=(1965, 2207), parts=[
  WordNode(pos=(1965, 1968), word='sed'),
  WordNode(pos=(1969, 1972), word='-ri'),
  WordNode(pos=(1975, 1977), word='-e'),
  WordNode(pos=(1978, 2024), word='s!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(2027, 2029), word='-e'),
  WordNode(pos=(2030, 2075), word='s!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g'),
  WordNode(pos=(2078, 2080), word='-e'),
  WordNode(pos=(2081, 2129), word='s!^(\\s*TransferLog)\\s+\\S+!\\1 /proc/self/fd/1!g'),
  WordNode(pos=(2132, 2163), word='$HTTPD_PREFIX/conf/httpd.conf', parts=[
    ParameterNode(pos=(2133, 2146), value='HTTPD_PREFIX'),
  ]),
  WordNode(pos=(2166, 2207), word='$HTTPD_PREFIX/conf/extra/httpd-ssl.conf', parts=[
    ParameterNode(pos=(2167, 2180), value='HTTPD_PREFIX'),
  ]),
])


1532) [ -z "$savedAptMark" ]

CommandNode(pos=(2246, 2268), parts=[
  WordNode(pos=(2246, 2247), word='['),
  WordNode(pos=(2248, 2250), word='-z'),
  WordNode(pos=(2251, 2266), word='$savedAptMark', parts=[
    ParameterNode(pos=(2252, 2265), value='savedAptMark'),
  ]),
  WordNode(pos=(2267, 2268), word=']'),
])


1533) apt-mark manual $savedAptMark

CommandNode(pos=(2272, 2301), parts=[
  WordNode(pos=(2272, 2280), word='apt-mark'),
  WordNode(pos=(2281, 2287), word='manual'),
  WordNode(pos=(2288, 2301), word='$savedAptMark', parts=[
    ParameterNode(pos=(2288, 2301), value='savedAptMark'),
  ]),
])


1534) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev

CommandNode(pos=(11, 117), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
])


1535) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(548, 601), parts=[
  WordNode(pos=(548, 551), word='apk'),
  WordNode(pos=(552, 555), word='add'),
  WordNode(pos=(556, 565), word='--virtual'),
  WordNode(pos=(566, 592), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(593, 601), word='$runDeps', parts=[
    ParameterNode(pos=(593, 601), value='runDeps'),
  ]),
])


1536) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


1537) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


1538) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


1539) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


1540) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


1541) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


1542) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


1543) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


1544) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


1545) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


1546) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


1547) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


1548) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


1549) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


1550) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


1551) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


1552) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


1553) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


1554) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


1555) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


1556) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


1557) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


1558) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


1559) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


1560) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


1561) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


1562) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


1563) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


1564) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


1565) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
])


1566) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


1567) echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main" > /etc/apt/sources.list.d/mariadb.list

CommandNode(pos=(8, 130), parts=[
  WordNode(pos=(8, 12), word='echo'),
  WordNode(pos=(13, 91), word='deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main', parts=[
    ParameterNode(pos=(57, 71), value='MARIADB_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(94, 130), word='/etc/apt/sources.list.d/mariadb.list'), pos=(92, 130), type='>'),
])


1568) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'

CommandNode(pos=(14, 95), parts=[
  WordNode(pos=(14, 18), word='echo'),
  WordNode(pos=(19, 50), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(35, 49), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(51, 77), word='mysql-server/root_password'),
  WordNode(pos=(78, 86), word='password'),
  WordNode(pos=(87, 95), word='unused'),
])


1569) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'

CommandNode(pos=(99, 186), parts=[
  WordNode(pos=(99, 103), word='echo'),
  WordNode(pos=(104, 135), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(120, 134), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(136, 168), word='mysql-server/root_password_again'),
  WordNode(pos=(169, 177), word='password'),
  WordNode(pos=(178, 186), word='unused'),
])


1570) apt-get install -y   "mariadb-server=$MARIADB_VERSION"   mariadb-backup   socat

CommandNode(pos=(235, 314), parts=[
  WordNode(pos=(235, 242), word='apt-get'),
  WordNode(pos=(243, 250), word='install'),
  WordNode(pos=(251, 253), word='-y'),
  WordNode(pos=(256, 289), word='mariadb-server=$MARIADB_VERSION', parts=[
    ParameterNode(pos=(272, 288), value='MARIADB_VERSION'),
  ]),
  WordNode(pos=(292, 306), word='mariadb-backup'),
  WordNode(pos=(309, 314), word='socat'),
])


1571) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


1572) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


1573) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 464), word='echo'),
  WordNode(pos=(465, 501), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(466, 487), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


1574) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(1236, 1310), parts=[
  WordNode(pos=(1236, 1247), word='./configure'),
  WordNode(pos=(1250, 1268), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1259, 1267), value='gnuArch'),
  ]),
  WordNode(pos=(1271, 1292), word='--disable-install-doc'),
  WordNode(pos=(1295, 1310), word='--enable-shared'),
])


1575) apk add --no-network --virtual .ruby-rundeps $runDeps   bzip2   ca-certificates   libffi-dev   procps   yaml-dev   zlib-dev

CommandNode(pos=(1558, 1681), parts=[
  WordNode(pos=(1558, 1561), word='apk'),
  WordNode(pos=(1562, 1565), word='add'),
  WordNode(pos=(1566, 1578), word='--no-network'),
  WordNode(pos=(1579, 1588), word='--virtual'),
  WordNode(pos=(1589, 1602), word='.ruby-rundeps'),
  WordNode(pos=(1603, 1611), word='$runDeps', parts=[
    ParameterNode(pos=(1603, 1611), value='runDeps'),
  ]),
  WordNode(pos=(1614, 1619), word='bzip2'),
  WordNode(pos=(1622, 1637), word='ca-certificates'),
  WordNode(pos=(1640, 1650), word='libffi-dev'),
  WordNode(pos=(1653, 1659), word='procps'),
  WordNode(pos=(1662, 1670), word='yaml-dev'),
  WordNode(pos=(1673, 1681), word='zlib-dev'),
])


1576) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1861, 1900), parts=[
  WordNode(pos=(1861, 1864), word='gem'),
  WordNode(pos=(1865, 1871), word='update'),
  WordNode(pos=(1872, 1880), word='--system'),
  WordNode(pos=(1881, 1900), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1882, 1899), value='RUBYGEMS_VERSION'),
  ]),
])


1577) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


1578) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


1579) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


1580) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1581) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


1582) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


1583) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


1584) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


1585) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


1586) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


1587) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


1588) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


1589) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


1590) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


1591) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


1592) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


1593) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


1594) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


1595) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


1596) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


1597) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


1598) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


1599) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


1600) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(968, 1007), parts=[
  WordNode(pos=(968, 971), word='gem'),
  WordNode(pos=(972, 978), word='update'),
  WordNode(pos=(979, 987), word='--system'),
  WordNode(pos=(988, 1007), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(989, 1006), value='RUBYGEMS_VERSION'),
  ]),
])


1601) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


1602) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


1603) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


1604) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


1605) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


1606) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


1607) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


1608) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


1609) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


1610) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


1611) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


1612) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


1613) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


1614) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


1615) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


1616) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


1617) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1618) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1619) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1620) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1621) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1622) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


1623) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


1624) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


1625) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


1626) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


1627) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


1628) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


1629) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


1630) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


1631) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


1632) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


1633) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


1634) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


1635) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


1636) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


1637) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


1638) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


1639) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


1640) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


1641) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


1642) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1643) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1644) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1645) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1646) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1647) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


1648) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


1649) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


1650) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


1651) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


1652) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


1653) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


1654) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


1655) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 464), word='echo'),
  WordNode(pos=(465, 501), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(466, 487), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


1656) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(1236, 1310), parts=[
  WordNode(pos=(1236, 1247), word='./configure'),
  WordNode(pos=(1250, 1268), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1259, 1267), value='gnuArch'),
  ]),
  WordNode(pos=(1271, 1292), word='--disable-install-doc'),
  WordNode(pos=(1295, 1310), word='--enable-shared'),
])


1657) apk add --no-network --virtual .ruby-rundeps $runDeps   bzip2   ca-certificates   libffi-dev   procps   yaml-dev   zlib-dev

CommandNode(pos=(1558, 1681), parts=[
  WordNode(pos=(1558, 1561), word='apk'),
  WordNode(pos=(1562, 1565), word='add'),
  WordNode(pos=(1566, 1578), word='--no-network'),
  WordNode(pos=(1579, 1588), word='--virtual'),
  WordNode(pos=(1589, 1602), word='.ruby-rundeps'),
  WordNode(pos=(1603, 1611), word='$runDeps', parts=[
    ParameterNode(pos=(1603, 1611), value='runDeps'),
  ]),
  WordNode(pos=(1614, 1619), word='bzip2'),
  WordNode(pos=(1622, 1637), word='ca-certificates'),
  WordNode(pos=(1640, 1650), word='libffi-dev'),
  WordNode(pos=(1653, 1659), word='procps'),
  WordNode(pos=(1662, 1670), word='yaml-dev'),
  WordNode(pos=(1673, 1681), word='zlib-dev'),
])


1658) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1861, 1900), parts=[
  WordNode(pos=(1861, 1864), word='gem'),
  WordNode(pos=(1865, 1871), word='update'),
  WordNode(pos=(1872, 1880), word='--system'),
  WordNode(pos=(1881, 1900), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1882, 1899), value='RUBYGEMS_VERSION'),
  ]),
])


1659) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


1660) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


1661) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1662) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


1663) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


1664) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


1665) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


1666) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


1667) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


1668) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


1669) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


1670) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


1671) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


1672) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


1673) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


1674) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


1675) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


1676) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


1677) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


1678) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


1679) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


1680) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


1681) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
])


1682) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


1683) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


1684) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


1685) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


1686) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


1687) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


1688) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


1689) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


1690) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


1691) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


1692) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


1693) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


1694) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


1695) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


1696) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


1697) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


1698) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1699) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


1700) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


1701) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


1702) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


1703) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


1704) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


1705) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


1706) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


1707) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


1708) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


1709) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev

CommandNode(pos=(11, 117), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
])


1710) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(548, 601), parts=[
  WordNode(pos=(548, 551), word='apk'),
  WordNode(pos=(552, 555), word='add'),
  WordNode(pos=(556, 565), word='--virtual'),
  WordNode(pos=(566, 592), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(593, 601), word='$runDeps', parts=[
    ParameterNode(pos=(593, 601), value='runDeps'),
  ]),
])


1711) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


1712) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


1713) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$WORDPRESS_CLI_GPG_KEY"

CommandNode(pos=(257, 344), parts=[
  WordNode(pos=(257, 260), word='gpg'),
  WordNode(pos=(261, 268), word='--batch'),
  WordNode(pos=(269, 280), word='--keyserver'),
  WordNode(pos=(281, 307), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(308, 319), word='--recv-keys'),
  WordNode(pos=(320, 344), word='$WORDPRESS_CLI_GPG_KEY', parts=[
    ParameterNode(pos=(321, 343), value='WORDPRESS_CLI_GPG_KEY'),
  ]),
])


1714) rm -rf "$GNUPGHOME" /usr/local/bin/wp.gpg

CommandNode(pos=(468, 509), parts=[
  WordNode(pos=(468, 470), word='rm'),
  WordNode(pos=(471, 474), word='-rf'),
  WordNode(pos=(475, 487), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(476, 486), value='GNUPGHOME'),
  ]),
  WordNode(pos=(488, 509), word='/usr/local/bin/wp.gpg'),
])


1715) echo "$WORDPRESS_CLI_SHA512 */usr/local/bin/wp"

CommandNode(pos=(513, 560), parts=[
  WordNode(pos=(513, 517), word='echo'),
  WordNode(pos=(518, 560), word='$WORDPRESS_CLI_SHA512 */usr/local/bin/wp', parts=[
    ParameterNode(pos=(519, 540), value='WORDPRESS_CLI_SHA512'),
  ]),
])


1716) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


1717) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


1718) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


1719) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


1720) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


1721) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


1722) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


1723) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1724) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(88, 141), parts=[
  WordNode(pos=(88, 95), word='apt-get'),
  WordNode(pos=(96, 103), word='install'),
  WordNode(pos=(104, 106), word='-y'),
  WordNode(pos=(107, 130), word='--no-install-recommends'),
  WordNode(pos=(131, 141), word='$fetchDeps', parts=[
    ParameterNode(pos=(131, 141), value='fetchDeps'),
  ]),
])


1725) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


1726) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


1727) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


1728) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


1729) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(699, 741), parts=[
  WordNode(pos=(699, 701), word='rm'),
  WordNode(pos=(702, 704), word='-r'),
  WordNode(pos=(705, 717), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(706, 716), value='GNUPGHOME'),
  ]),
  WordNode(pos=(718, 741), word='/usr/local/bin/gosu.asc'),
])


1730) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(795, 836), parts=[
  WordNode(pos=(795, 802), word='apt-get'),
  WordNode(pos=(803, 808), word='purge'),
  WordNode(pos=(809, 811), word='-y'),
  WordNode(pos=(812, 825), word='--auto-remove'),
  WordNode(pos=(826, 836), word='$fetchDeps', parts=[
    ParameterNode(pos=(826, 836), value='fetchDeps'),
  ]),
])


1731) apt-get install -y $buildDeps --no-install-recommends

CommandNode(pos=(97, 150), parts=[
  WordNode(pos=(97, 104), word='apt-get'),
  WordNode(pos=(105, 112), word='install'),
  WordNode(pos=(113, 115), word='-y'),
  WordNode(pos=(116, 126), word='$buildDeps', parts=[
    ParameterNode(pos=(116, 126), value='buildDeps'),
  ]),
  WordNode(pos=(127, 150), word='--no-install-recommends'),
])


1732) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(184, 226), parts=[
  WordNode(pos=(184, 188), word='wget'),
  WordNode(pos=(189, 191), word='-O'),
  WordNode(pos=(192, 204), word='redis.tar.gz'),
  WordNode(pos=(205, 226), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(206, 225), value='REDIS_DOWNLOAD_URL'),
  ]),
])


1733) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(229, 269), parts=[
  WordNode(pos=(229, 233), word='echo'),
  WordNode(pos=(234, 269), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(235, 254), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


1734) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(751, 792), parts=[
  WordNode(pos=(751, 758), word='apt-get'),
  WordNode(pos=(759, 764), word='purge'),
  WordNode(pos=(765, 767), word='-y'),
  WordNode(pos=(768, 781), word='--auto-remove'),
  WordNode(pos=(782, 792), word='$buildDeps', parts=[
    ParameterNode(pos=(782, 792), value='buildDeps'),
  ]),
])


1735) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


1736) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


1737) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(666, 709), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 672), word='-rf'),
  WordNode(pos=(673, 685), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(674, 684), value='GNUPGHOME'),
  ]),
  WordNode(pos=(686, 709), word='/usr/local/bin/gosu.asc'),
])


1738) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 304), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 219), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 240), parts=[
    WordNode(pos=(222, 229), word='command'),
    WordNode(pos=(230, 232), word='-v'),
    WordNode(pos=(233, 240), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(241, 243)),
  CommandNode(pos=(244, 262), parts=[
    WordNode(pos=(244, 251), word='gpgconf'),
    WordNode(pos=(252, 258), word='--kill'),
    WordNode(pos=(259, 262), word='all'),
  ]),
  OperatorNode(op='||', pos=(263, 265)),
  CommandNode(pos=(266, 267), parts=[
    WordNode(pos=(266, 267), word=':'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 289), parts=[
    WordNode(pos=(270, 272), word='rm'),
    WordNode(pos=(273, 276), word='-rf'),
    WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(278, 288), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(289, 290)),
  CommandNode(pos=(292, 304), parts=[
    WordNode(pos=(292, 299), word='apt-key'),
    WordNode(pos=(300, 304), word='list'),
  ]),
])


1739) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


1740) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg

CommandNode(pos=(150, 219), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
])


1741) rm -rf "$GNUPGHOME"

CommandNode(pos=(270, 289), parts=[
  WordNode(pos=(270, 272), word='rm'),
  WordNode(pos=(273, 276), word='-rf'),
  WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(278, 288), value='GNUPGHOME'),
  ]),
])


1742) mkdir -p /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 27), word='/var/lib/cassandra'),
  WordNode(pos=(28, 47), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(29, 46), value='CASSANDRA_CONFIG'),
  ]),
])


1743) chown -R cassandra:cassandra /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(52, 119), parts=[
  WordNode(pos=(52, 57), word='chown'),
  WordNode(pos=(58, 60), word='-R'),
  WordNode(pos=(61, 80), word='cassandra:cassandra'),
  WordNode(pos=(81, 99), word='/var/lib/cassandra'),
  WordNode(pos=(100, 119), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(101, 118), value='CASSANDRA_CONFIG'),
  ]),
])


1744) chmod 777 /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(124, 172), parts=[
  WordNode(pos=(124, 129), word='chmod'),
  WordNode(pos=(130, 133), word='777'),
  WordNode(pos=(134, 152), word='/var/lib/cassandra'),
  WordNode(pos=(153, 172), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(154, 171), value='CASSANDRA_CONFIG'),
  ]),
])


1745) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev

CommandNode(pos=(11, 117), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
])


1746) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(548, 601), parts=[
  WordNode(pos=(548, 551), word='apk'),
  WordNode(pos=(552, 555), word='add'),
  WordNode(pos=(556, 565), word='--virtual'),
  WordNode(pos=(566, 592), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(593, 601), word='$runDeps', parts=[
    ParameterNode(pos=(593, 601), value='runDeps'),
  ]),
])


1747) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


1748) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


1749) npm install -g "ghost-cli@$GHOST_CLI_VERSION"

CommandNode(pos=(11, 56), parts=[
  WordNode(pos=(11, 14), word='npm'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-g'),
  WordNode(pos=(26, 56), word='ghost-cli@$GHOST_CLI_VERSION', parts=[
    ParameterNode(pos=(37, 55), value='GHOST_CLI_VERSION'),
  ]),
])


1750) mkdir -p "$GHOST_INSTALL"

CommandNode(pos=(11, 36), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
  ]),
])


1751) chown node:node "$GHOST_INSTALL"

CommandNode(pos=(39, 71), parts=[
  WordNode(pos=(39, 44), word='chown'),
  WordNode(pos=(45, 54), word='node:node'),
  WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
  ]),
])


1752) su-exec node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 188), parts=[
  WordNode(pos=(75, 82), word='su-exec'),
  WordNode(pos=(83, 87), word='node'),
  WordNode(pos=(88, 93), word='ghost'),
  WordNode(pos=(94, 101), word='install'),
  WordNode(pos=(102, 118), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(103, 117), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(119, 123), word='--db'),
  WordNode(pos=(124, 131), word='sqlite3'),
  WordNode(pos=(132, 143), word='--no-prompt'),
  WordNode(pos=(144, 154), word='--no-stack'),
  WordNode(pos=(155, 165), word='--no-setup'),
  WordNode(pos=(166, 171), word='--dir'),
  WordNode(pos=(172, 188), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(173, 187), value='GHOST_INSTALL'),
  ]),
])


1753) su-exec node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 188), parts=[
  WordNode(pos=(75, 82), word='su-exec'),
  WordNode(pos=(83, 87), word='node'),
  WordNode(pos=(88, 93), word='ghost'),
  WordNode(pos=(94, 101), word='install'),
  WordNode(pos=(102, 118), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(103, 117), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(119, 123), word='--db'),
  WordNode(pos=(124, 131), word='sqlite3'),
  WordNode(pos=(132, 143), word='--no-prompt'),
  WordNode(pos=(144, 154), word='--no-stack'),
  WordNode(pos=(155, 165), word='--no-setup'),
  WordNode(pos=(166, 171), word='--dir'),
  WordNode(pos=(172, 188), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(173, 187), value='GHOST_INSTALL'),
  ]),
])


1754) cd "$GHOST_INSTALL"

CommandNode(pos=(192, 211), parts=[
  WordNode(pos=(192, 194), word='cd'),
  WordNode(pos=(195, 211), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(196, 210), value='GHOST_INSTALL'),
  ]),
])


1755) su-exec node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db"

CommandNode(pos=(214, 357), parts=[
  WordNode(pos=(214, 221), word='su-exec'),
  WordNode(pos=(222, 226), word='node'),
  WordNode(pos=(227, 232), word='ghost'),
  WordNode(pos=(233, 239), word='config'),
  WordNode(pos=(240, 244), word='--ip'),
  WordNode(pos=(245, 252), word='0.0.0.0'),
  WordNode(pos=(253, 259), word='--port'),
  WordNode(pos=(260, 264), word='2368'),
  WordNode(pos=(265, 276), word='--no-prompt'),
  WordNode(pos=(277, 281), word='--db'),
  WordNode(pos=(282, 289), word='sqlite3'),
  WordNode(pos=(290, 295), word='--url'),
  WordNode(pos=(296, 317), word='http://localhost:2368'),
  WordNode(pos=(318, 326), word='--dbpath'),
  WordNode(pos=(327, 357), word='$GHOST_CONTENT/data/ghost.db', parts=[
    ParameterNode(pos=(328, 342), value='GHOST_CONTENT'),
  ]),
])


1756) su-exec node ghost config paths.contentPath "$GHOST_CONTENT"

CommandNode(pos=(360, 420), parts=[
  WordNode(pos=(360, 367), word='su-exec'),
  WordNode(pos=(368, 372), word='node'),
  WordNode(pos=(373, 378), word='ghost'),
  WordNode(pos=(379, 385), word='config'),
  WordNode(pos=(386, 403), word='paths.contentPath'),
  WordNode(pos=(404, 420), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(405, 419), value='GHOST_CONTENT'),
  ]),
])


1757) su-exec node ln -s config.production.json "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(424, 506), parts=[
  WordNode(pos=(424, 431), word='su-exec'),
  WordNode(pos=(432, 436), word='node'),
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 442), word='-s'),
  WordNode(pos=(443, 465), word='config.production.json'),
  WordNode(pos=(466, 506), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(467, 481), value='GHOST_INSTALL'),
  ]),
])


1758) readlink -f "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(509, 561), parts=[
  WordNode(pos=(509, 517), word='readlink'),
  WordNode(pos=(518, 520), word='-f'),
  WordNode(pos=(521, 561), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(522, 536), value='GHOST_INSTALL'),
  ]),
])


1759) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(565, 614), parts=[
  WordNode(pos=(565, 567), word='mv'),
  WordNode(pos=(568, 584), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(569, 583), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(585, 614), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(586, 600), value='GHOST_INSTALL'),
  ]),
])


1760) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(565, 614), parts=[
  WordNode(pos=(565, 567), word='mv'),
  WordNode(pos=(568, 584), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(569, 583), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(585, 614), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(586, 600), value='GHOST_INSTALL'),
  ]),
])


1761) mkdir -p "$GHOST_CONTENT"

CommandNode(pos=(617, 642), parts=[
  WordNode(pos=(617, 622), word='mkdir'),
  WordNode(pos=(623, 625), word='-p'),
  WordNode(pos=(626, 642), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(627, 641), value='GHOST_CONTENT'),
  ]),
])


1762) chown node:node "$GHOST_CONTENT"

CommandNode(pos=(645, 677), parts=[
  WordNode(pos=(645, 650), word='chown'),
  WordNode(pos=(651, 660), word='node:node'),
  WordNode(pos=(661, 677), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(662, 676), value='GHOST_CONTENT'),
  ]),
])


1763) "$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator" --version

CommandNode(pos=(681, 760), parts=[
  WordNode(pos=(681, 750), word='$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator', parts=[
    ParameterNode(pos=(682, 696), value='GHOST_INSTALL'),
  ]),
  WordNode(pos=(751, 760), word='--version'),
])


1764) cd "$GHOST_INSTALL/current"

CommandNode(pos=(764, 791), parts=[
  WordNode(pos=(764, 766), word='cd'),
  WordNode(pos=(767, 791), word='$GHOST_INSTALL/current', parts=[
    ParameterNode(pos=(768, 782), value='GHOST_INSTALL'),
  ]),
])


1765) su-exec node yarn add "sqlite3@$sqlite3Version" --force

CommandNode(pos=(861, 916), parts=[
  WordNode(pos=(861, 868), word='su-exec'),
  WordNode(pos=(869, 873), word='node'),
  WordNode(pos=(874, 878), word='yarn'),
  WordNode(pos=(879, 882), word='add'),
  WordNode(pos=(883, 908), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(892, 907), value='sqlite3Version'),
  ]),
  WordNode(pos=(909, 916), word='--force'),
])


1766) su-exec node yarn add "sqlite3@$sqlite3Version" --force --build-from-source

CommandNode(pos=(1000, 1075), parts=[
  WordNode(pos=(1000, 1007), word='su-exec'),
  WordNode(pos=(1008, 1012), word='node'),
  WordNode(pos=(1013, 1017), word='yarn'),
  WordNode(pos=(1018, 1021), word='add'),
  WordNode(pos=(1022, 1047), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(1031, 1046), value='sqlite3Version'),
  ]),
  WordNode(pos=(1048, 1055), word='--force'),
  WordNode(pos=(1056, 1075), word='--build-from-source'),
])


1767) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


1768) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


1769) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


1770) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


1771) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


1772) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


1773) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


1774) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1775) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


1776) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


1777) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


1778) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1779) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1780) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1781) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1782) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


1783) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


1784) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4   --with-system-expat   --with-system-ffi

CommandNode(pos=(1134, 1250), parts=[
  WordNode(pos=(1134, 1145), word='./configure'),
  WordNode(pos=(1148, 1166), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1157, 1165), value='gnuArch'),
  ]),
  WordNode(pos=(1169, 1184), word='--enable-shared'),
  WordNode(pos=(1187, 1208), word='--enable-unicode=ucs4'),
  WordNode(pos=(1211, 1230), word='--with-system-expat'),
  WordNode(pos=(1233, 1250), word='--with-system-ffi'),
])


1785) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1786) pypy3 get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 164), parts=[
  WordNode(pos=(72, 77), word='pypy3'),
  WordNode(pos=(78, 88), word='get-pip.py'),
  WordNode(pos=(91, 118), word='--disable-pip-version-check'),
  WordNode(pos=(121, 135), word='--no-cache-dir'),
  WordNode(pos=(138, 164), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(144, 163), value='PYTHON_PIP_VERSION'),
  ]),
])


1787) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


1788) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1789) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


1790) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


1791) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


1792) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


1793) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


1794) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


1795) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


1796) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


1797) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


1798) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


1799) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


1800) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


1801) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


1802) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


1803) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


1804) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


1805) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


1806) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


1807) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


1808) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


1809) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


1810) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


1811) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


1812) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


1813) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


1814) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


1815) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


1816) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


1817) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


1818) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


1819) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt

CommandNode(pos=(1385, 1754), parts=[
  WordNode(pos=(1385, 1396), word='./configure'),
  WordNode(pos=(1399, 1417), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1408, 1416), value='gnuArch'),
  ]),
  WordNode(pos=(1420, 1446), word='--enable-integer-datetimes'),
  WordNode(pos=(1449, 1471), word='--enable-thread-safety'),
  WordNode(pos=(1474, 1492), word='--enable-tap-tests'),
  WordNode(pos=(1495, 1510), word='--disable-rpath'),
  WordNode(pos=(1513, 1529), word='--with-uuid=e2fs'),
  WordNode(pos=(1532, 1545), word='--with-gnu-ld'),
  WordNode(pos=(1548, 1566), word='--with-pgport=5432'),
  WordNode(pos=(1569, 1609), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1612, 1631), word='--prefix=/usr/local'),
  WordNode(pos=(1634, 1668), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1671, 1702), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1707, 1721), word='--with-openssl'),
  WordNode(pos=(1724, 1737), word='--with-libxml'),
  WordNode(pos=(1740, 1754), word='--with-libxslt'),
])


1820) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2042, 2127), parts=[
  WordNode(pos=(2042, 2045), word='apk'),
  WordNode(pos=(2046, 2049), word='add'),
  WordNode(pos=(2050, 2060), word='--no-cache'),
  WordNode(pos=(2061, 2070), word='--virtual'),
  WordNode(pos=(2071, 2090), word='.postgresql-rundeps'),
  WordNode(pos=(2093, 2101), word='$runDeps', parts=[
    ParameterNode(pos=(2093, 2101), value='runDeps'),
  ]),
  WordNode(pos=(2104, 2108), word='bash'),
  WordNode(pos=(2111, 2118), word='su-exec'),
  WordNode(pos=(2121, 2127), word='tzdata'),
])


1821) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


1822) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


1823) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


1824) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


1825) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


1826) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(599, 671), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 626), word='-j'),
  WordNode(pos=(627, 657), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(630, 655), parts=[
        WordNode(pos=(630, 637), word='getconf'),
        WordNode(pos=(638, 655), word='_NPROCESSORS_ONLN'),
      ]), pos=(628, 656)),
  ]),
  WordNode(pos=(658, 661), word='all'),
  WordNode(pos=(662, 671), word='$makeOpts', parts=[
    ParameterNode(pos=(662, 671), value='makeOpts'),
  ]),
])


1827) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(676, 722), parts=[
  WordNode(pos=(676, 680), word='make'),
  WordNode(pos=(681, 683), word='-C'),
  WordNode(pos=(684, 700), word='/usr/src/haproxy'),
  WordNode(pos=(701, 712), word='install-bin'),
  WordNode(pos=(713, 722), word='$makeOpts', parts=[
    ParameterNode(pos=(713, 722), value='makeOpts'),
  ]),
])


1828) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1072, 1115), parts=[
  WordNode(pos=(1072, 1075), word='apk'),
  WordNode(pos=(1076, 1079), word='add'),
  WordNode(pos=(1080, 1089), word='--virtual'),
  WordNode(pos=(1090, 1106), word='.haproxy-rundeps'),
  WordNode(pos=(1107, 1115), word='$runDeps', parts=[
    ParameterNode(pos=(1107, 1115), value='runDeps'),
  ]),
])


1829) wget -O docker.tgz "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz"

CommandNode(pos=(34, 156), parts=[
  WordNode(pos=(34, 38), word='wget'),
  WordNode(pos=(39, 41), word='-O'),
  WordNode(pos=(42, 52), word='docker.tgz'),
  WordNode(pos=(53, 156), word='https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz', parts=[
    ParameterNode(pos=(95, 112), value='DOCKER_CHANNEL'),
    ParameterNode(pos=(113, 126), value='dockerArch'),
    ParameterNode(pos=(134, 151), value='DOCKER_VERSION'),
  ]),
])


1830) wget -O docker.tgz "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz"

CommandNode(pos=(34, 156), parts=[
  WordNode(pos=(34, 38), word='wget'),
  WordNode(pos=(39, 41), word='-O'),
  WordNode(pos=(42, 52), word='docker.tgz'),
  WordNode(pos=(53, 156), word='https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz', parts=[
    ParameterNode(pos=(95, 112), value='DOCKER_CHANNEL'),
    ParameterNode(pos=(113, 126), value='dockerArch'),
    ParameterNode(pos=(134, 151), value='DOCKER_VERSION'),
  ]),
])


1831) wget -O docker.tgz "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz"

CommandNode(pos=(34, 156), parts=[
  WordNode(pos=(34, 38), word='wget'),
  WordNode(pos=(39, 41), word='-O'),
  WordNode(pos=(42, 52), word='docker.tgz'),
  WordNode(pos=(53, 156), word='https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${dockerArch}/docker-${DOCKER_VERSION}.tgz', parts=[
    ParameterNode(pos=(95, 112), value='DOCKER_CHANNEL'),
    ParameterNode(pos=(113, 126), value='dockerArch'),
    ParameterNode(pos=(134, 151), value='DOCKER_VERSION'),
  ]),
])


1832) echo >&2 "error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'"

CommandNode(pos=(165, 273), parts=[
  WordNode(pos=(165, 169), word='echo'),
  RedirectNode(output=2, pos=(170, 173), type='>&'),
  WordNode(pos=(174, 273), word="error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'", parts=[
    ParameterNode(pos=(209, 226), value='DOCKER_VERSION'),
    ParameterNode(pos=(234, 251), value='DOCKER_CHANNEL'),
    ParameterNode(pos=(258, 271), value='dockerArch'),
  ]),
])


1833) echo >&2 "error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'"

CommandNode(pos=(165, 273), parts=[
  WordNode(pos=(165, 169), word='echo'),
  RedirectNode(output=2, pos=(170, 173), type='>&'),
  WordNode(pos=(174, 273), word="error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'", parts=[
    ParameterNode(pos=(209, 226), value='DOCKER_VERSION'),
    ParameterNode(pos=(234, 251), value='DOCKER_CHANNEL'),
    ParameterNode(pos=(258, 271), value='dockerArch'),
  ]),
])


1834) echo >&2 "error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'"

CommandNode(pos=(165, 273), parts=[
  WordNode(pos=(165, 169), word='echo'),
  RedirectNode(output=2, pos=(170, 173), type='>&'),
  WordNode(pos=(174, 273), word="error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${dockerArch}'", parts=[
    ParameterNode(pos=(209, 226), value='DOCKER_VERSION'),
    ParameterNode(pos=(234, 251), value='DOCKER_CHANNEL'),
    ParameterNode(pos=(258, 271), value='dockerArch'),
  ]),
])


1835) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


1836) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


1837) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


1838) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


1839) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


1840) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


1841) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt   --with-icu

CommandNode(pos=(1395, 1777), parts=[
  WordNode(pos=(1395, 1406), word='./configure'),
  WordNode(pos=(1409, 1427), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1418, 1426), value='gnuArch'),
  ]),
  WordNode(pos=(1430, 1456), word='--enable-integer-datetimes'),
  WordNode(pos=(1459, 1481), word='--enable-thread-safety'),
  WordNode(pos=(1484, 1502), word='--enable-tap-tests'),
  WordNode(pos=(1505, 1520), word='--disable-rpath'),
  WordNode(pos=(1523, 1539), word='--with-uuid=e2fs'),
  WordNode(pos=(1542, 1555), word='--with-gnu-ld'),
  WordNode(pos=(1558, 1576), word='--with-pgport=5432'),
  WordNode(pos=(1579, 1619), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1622, 1641), word='--prefix=/usr/local'),
  WordNode(pos=(1644, 1678), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1681, 1712), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1717, 1731), word='--with-openssl'),
  WordNode(pos=(1734, 1747), word='--with-libxml'),
  WordNode(pos=(1750, 1764), word='--with-libxslt'),
  WordNode(pos=(1767, 1777), word='--with-icu'),
])


1842) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2065, 2150), parts=[
  WordNode(pos=(2065, 2068), word='apk'),
  WordNode(pos=(2069, 2072), word='add'),
  WordNode(pos=(2073, 2083), word='--no-cache'),
  WordNode(pos=(2084, 2093), word='--virtual'),
  WordNode(pos=(2094, 2113), word='.postgresql-rundeps'),
  WordNode(pos=(2116, 2124), word='$runDeps', parts=[
    ParameterNode(pos=(2116, 2124), value='runDeps'),
  ]),
  WordNode(pos=(2127, 2131), word='bash'),
  WordNode(pos=(2134, 2141), word='su-exec'),
  WordNode(pos=(2144, 2150), word='tzdata'),
])


1843) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


1844) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


1845) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


1846) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(262, 369), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 289), word='/usr/local/bin/gosu'),
  WordNode(pos=(290, 369), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(340, 353), value='GOSU_VERSION'),
    ParameterNode(pos=(359, 368), value='dpkgArch'),
  ]),
])


1847) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(262, 369), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 289), word='/usr/local/bin/gosu'),
  WordNode(pos=(290, 369), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(340, 353), value='GOSU_VERSION'),
    ParameterNode(pos=(359, 368), value='dpkgArch'),
  ]),
])


1848) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(372, 487), parts=[
  WordNode(pos=(372, 376), word='wget'),
  WordNode(pos=(377, 379), word='-O'),
  WordNode(pos=(380, 403), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(404, 487), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(454, 467), value='GOSU_VERSION'),
    ParameterNode(pos=(473, 482), value='dpkgArch'),
  ]),
])


1849) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(372, 487), parts=[
  WordNode(pos=(372, 376), word='wget'),
  WordNode(pos=(377, 379), word='-O'),
  WordNode(pos=(380, 403), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(404, 487), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(454, 467), value='GOSU_VERSION'),
    ParameterNode(pos=(473, 482), value='dpkgArch'),
  ]),
])


1850) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(718, 760), parts=[
  WordNode(pos=(718, 720), word='rm'),
  WordNode(pos=(721, 723), word='-r'),
  WordNode(pos=(724, 736), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(725, 735), value='GNUPGHOME'),
  ]),
  WordNode(pos=(737, 760), word='/usr/local/bin/gosu.asc'),
])


1851) wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch"

CommandNode(pos=(845, 954), parts=[
  WordNode(pos=(845, 849), word='wget'),
  WordNode(pos=(850, 852), word='-O'),
  WordNode(pos=(853, 872), word='/usr/local/bin/tini'),
  WordNode(pos=(873, 954), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch', parts=[
    ParameterNode(pos=(925, 938), value='TINI_VERSION'),
    ParameterNode(pos=(944, 953), value='dpkgArch'),
  ]),
])


1852) wget -O /usr/local/bin/tini "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch"

CommandNode(pos=(845, 954), parts=[
  WordNode(pos=(845, 849), word='wget'),
  WordNode(pos=(850, 852), word='-O'),
  WordNode(pos=(853, 872), word='/usr/local/bin/tini'),
  WordNode(pos=(873, 954), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch', parts=[
    ParameterNode(pos=(925, 938), value='TINI_VERSION'),
    ParameterNode(pos=(944, 953), value='dpkgArch'),
  ]),
])


1853) wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc"

CommandNode(pos=(957, 1074), parts=[
  WordNode(pos=(957, 961), word='wget'),
  WordNode(pos=(962, 964), word='-O'),
  WordNode(pos=(965, 988), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(989, 1074), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc', parts=[
    ParameterNode(pos=(1041, 1054), value='TINI_VERSION'),
    ParameterNode(pos=(1060, 1069), value='dpkgArch'),
  ]),
])


1854) wget -O /usr/local/bin/tini.asc "https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc"

CommandNode(pos=(957, 1074), parts=[
  WordNode(pos=(957, 961), word='wget'),
  WordNode(pos=(962, 964), word='-O'),
  WordNode(pos=(965, 988), word='/usr/local/bin/tini.asc'),
  WordNode(pos=(989, 1074), word='https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc', parts=[
    ParameterNode(pos=(1041, 1054), value='TINI_VERSION'),
    ParameterNode(pos=(1060, 1069), value='dpkgArch'),
  ]),
])


1855) rm -r "$GNUPGHOME" /usr/local/bin/tini.asc

CommandNode(pos=(1305, 1347), parts=[
  WordNode(pos=(1305, 1307), word='rm'),
  WordNode(pos=(1308, 1310), word='-r'),
  WordNode(pos=(1311, 1323), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(1312, 1322), value='GNUPGHOME'),
  ]),
  WordNode(pos=(1324, 1347), word='/usr/local/bin/tini.asc'),
])


1856) [ -z "$savedAptMark" ]

CommandNode(pos=(1425, 1447), parts=[
  WordNode(pos=(1425, 1426), word='['),
  WordNode(pos=(1427, 1429), word='-z'),
  WordNode(pos=(1430, 1445), word='$savedAptMark', parts=[
    ParameterNode(pos=(1431, 1444), value='savedAptMark'),
  ]),
  WordNode(pos=(1446, 1447), word=']'),
])


1857) apt-mark manual $savedAptMark

CommandNode(pos=(1451, 1480), parts=[
  WordNode(pos=(1451, 1459), word='apt-mark'),
  WordNode(pos=(1460, 1466), word='manual'),
  WordNode(pos=(1467, 1480), word='$savedAptMark', parts=[
    ParameterNode(pos=(1467, 1480), value='savedAptMark'),
  ]),
])


1858) [ ! -d "$HOME" ]

CommandNode(pos=(11, 27), parts=[
  WordNode(pos=(11, 12), word='['),
  WordNode(pos=(13, 14), word='!'),
  WordNode(pos=(15, 17), word='-d'),
  WordNode(pos=(18, 25), word='$HOME', parts=[
    ParameterNode(pos=(19, 24), value='HOME'),
  ]),
  WordNode(pos=(26, 27), word=']'),
])


1859) mkdir -p "$HOME"

CommandNode(pos=(30, 46), parts=[
  WordNode(pos=(30, 35), word='mkdir'),
  WordNode(pos=(36, 38), word='-p'),
  WordNode(pos=(39, 46), word='$HOME', parts=[
    ParameterNode(pos=(40, 45), value='HOME'),
  ]),
])


1860) chown redmine:redmine "$HOME"

CommandNode(pos=(49, 78), parts=[
  WordNode(pos=(49, 54), word='chown'),
  WordNode(pos=(55, 70), word='redmine:redmine'),
  WordNode(pos=(71, 78), word='$HOME', parts=[
    ParameterNode(pos=(72, 77), value='HOME'),
  ]),
])


1861) chmod 1777 "$HOME"

CommandNode(pos=(81, 99), parts=[
  WordNode(pos=(81, 86), word='chmod'),
  WordNode(pos=(87, 91), word='1777'),
  WordNode(pos=(92, 99), word='$HOME', parts=[
    ParameterNode(pos=(93, 98), value='HOME'),
  ]),
])


1862) wget -O redmine.tar.gz "https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz"

CommandNode(pos=(0, 91), parts=[
  WordNode(pos=(0, 4), word='wget'),
  WordNode(pos=(5, 7), word='-O'),
  WordNode(pos=(8, 22), word='redmine.tar.gz'),
  WordNode(pos=(23, 91), word='https://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(65, 83), value='REDMINE_VERSION'),
  ]),
])


1863) echo "$REDMINE_DOWNLOAD_MD5 redmine.tar.gz"

CommandNode(pos=(96, 139), parts=[
  WordNode(pos=(96, 100), word='echo'),
  WordNode(pos=(101, 139), word='$REDMINE_DOWNLOAD_MD5 redmine.tar.gz', parts=[
    ParameterNode(pos=(102, 123), value='REDMINE_DOWNLOAD_MD5'),
  ]),
])


1864) ./configure --build="$gnuArch" --enable-silent-rules

CommandNode(pos=(622, 674), parts=[
  WordNode(pos=(622, 633), word='./configure'),
  WordNode(pos=(634, 652), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(643, 651), value='gnuArch'),
  ]),
  WordNode(pos=(653, 674), word='--enable-silent-rules'),
])


1865) echo "$RAILS_ENV:" > ./config/database.yml

CommandNode(pos=(951, 993), parts=[
  WordNode(pos=(951, 955), word='echo'),
  WordNode(pos=(956, 969), word='$RAILS_ENV:', parts=[
    ParameterNode(pos=(957, 967), value='RAILS_ENV'),
  ]),
  RedirectNode(output=
    WordNode(pos=(972, 993), word='./config/database.yml'), pos=(970, 993), type='>'),
])


1866) echo "  adapter: $adapter" >> ./config/database.yml

CommandNode(pos=(997, 1048), parts=[
  WordNode(pos=(997, 1001), word='echo'),
  WordNode(pos=(1002, 1023), word='  adapter: $adapter', parts=[
    ParameterNode(pos=(1014, 1022), value='adapter'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1027, 1048), word='./config/database.yml'), pos=(1024, 1048), type='>>'),
])


1867) cp Gemfile.lock "Gemfile.lock.${adapter}"

CommandNode(pos=(1110, 1151), parts=[
  WordNode(pos=(1110, 1112), word='cp'),
  WordNode(pos=(1113, 1125), word='Gemfile.lock'),
  WordNode(pos=(1126, 1151), word='Gemfile.lock.${adapter}', parts=[
    ParameterNode(pos=(1140, 1150), value='adapter'),
  ]),
])


1868) chmod -R ugo=rwX Gemfile.lock "$GEM_HOME"

CommandNode(pos=(1188, 1229), parts=[
  WordNode(pos=(1188, 1193), word='chmod'),
  WordNode(pos=(1194, 1196), word='-R'),
  WordNode(pos=(1197, 1204), word='ugo=rwX'),
  WordNode(pos=(1205, 1217), word='Gemfile.lock'),
  WordNode(pos=(1218, 1229), word='$GEM_HOME', parts=[
    ParameterNode(pos=(1219, 1228), value='GEM_HOME'),
  ]),
])


1869) [ -z "$savedAptMark" ]

CommandNode(pos=(1292, 1314), parts=[
  WordNode(pos=(1292, 1293), word='['),
  WordNode(pos=(1294, 1296), word='-z'),
  WordNode(pos=(1297, 1312), word='$savedAptMark', parts=[
    ParameterNode(pos=(1298, 1311), value='savedAptMark'),
  ]),
  WordNode(pos=(1313, 1314), word=']'),
])


1870) apt-mark manual $savedAptMark

CommandNode(pos=(1318, 1347), parts=[
  WordNode(pos=(1318, 1326), word='apt-mark'),
  WordNode(pos=(1327, 1333), word='manual'),
  WordNode(pos=(1334, 1347), word='$savedAptMark', parts=[
    ParameterNode(pos=(1334, 1347), value='savedAptMark'),
  ]),
])


1871) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


1872) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


1873) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


1874) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


1875) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


1876) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


1877) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


1878) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


1879) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


1880) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


1881) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


1882) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


1883) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


1884) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


1885) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1886) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1887) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1888) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1889) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


1890) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


1891) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


1892) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


1893) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


1894) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


1895) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


1896) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


1897) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


1898) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


1899) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


1900) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


1901) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


1902) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


1903) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


1904) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


1905) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mariadb.gpg'), pos=(181, 217), type='>'),
])


1906) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


1907) echo "deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main" > /etc/apt/sources.list.d/mariadb.list

CommandNode(pos=(8, 130), parts=[
  WordNode(pos=(8, 12), word='echo'),
  WordNode(pos=(13, 91), word='deb http://ftp.osuosl.org/pub/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main', parts=[
    ParameterNode(pos=(57, 71), value='MARIADB_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(94, 130), word='/etc/apt/sources.list.d/mariadb.list'), pos=(92, 130), type='>'),
])


1908) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'

CommandNode(pos=(14, 95), parts=[
  WordNode(pos=(14, 18), word='echo'),
  WordNode(pos=(19, 50), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(35, 49), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(51, 77), word='mysql-server/root_password'),
  WordNode(pos=(78, 86), word='password'),
  WordNode(pos=(87, 95), word='unused'),
])


1909) echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'

CommandNode(pos=(99, 186), parts=[
  WordNode(pos=(99, 103), word='echo'),
  WordNode(pos=(104, 135), word='mariadb-server-$MARIADB_MAJOR', parts=[
    ParameterNode(pos=(120, 134), value='MARIADB_MAJOR'),
  ]),
  WordNode(pos=(136, 168), word='mysql-server/root_password_again'),
  WordNode(pos=(169, 177), word='password'),
  WordNode(pos=(178, 186), word='unused'),
])


1910) apt-get install -y   "mariadb-server=$MARIADB_VERSION"   mariadb-backup-10.2   socat

CommandNode(pos=(235, 319), parts=[
  WordNode(pos=(235, 242), word='apt-get'),
  WordNode(pos=(243, 250), word='install'),
  WordNode(pos=(251, 253), word='-y'),
  WordNode(pos=(256, 289), word='mariadb-server=$MARIADB_VERSION', parts=[
    ParameterNode(pos=(272, 288), value='MARIADB_VERSION'),
  ]),
  WordNode(pos=(292, 311), word='mariadb-backup-10.2'),
  WordNode(pos=(314, 319), word='socat'),
])


1911) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


1912) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


1913) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


1914) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


1915) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


1916) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


1917) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


1918) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


1919) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


1920) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


1921) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


1922) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


1923) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


1924) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


1925) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


1926) apt-mark manual $savedAptMark

CommandNode(pos=(403, 432), parts=[
  WordNode(pos=(403, 411), word='apt-mark'),
  WordNode(pos=(412, 418), word='manual'),
  WordNode(pos=(419, 432), word='$savedAptMark', parts=[
    ParameterNode(pos=(419, 432), value='savedAptMark'),
  ]),
])


1927) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


1928) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


1929) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


1930) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


1931) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


1932) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


1933) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


1934) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


1935) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


1936) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


1937) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


1938) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(439, 472), parts=[
  WordNode(pos=(439, 442), word='npm'),
  WordNode(pos=(443, 450), word='install'),
  WordNode(pos=(451, 453), word='-g'),
  WordNode(pos=(454, 472), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(459, 471), value='NPM_VERSION'),
  ]),
])


1939) apk add --no-cache --virtual .build-deps   $PHPIZE_DEPS   imagemagick-dev   libjpeg-turbo-dev   libpng-dev

CommandNode(pos=(11, 117), parts=[
  WordNode(pos=(11, 14), word='apk'),
  WordNode(pos=(15, 18), word='add'),
  WordNode(pos=(19, 29), word='--no-cache'),
  WordNode(pos=(30, 39), word='--virtual'),
  WordNode(pos=(40, 51), word='.build-deps'),
  WordNode(pos=(54, 66), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(54, 66), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(69, 84), word='imagemagick-dev'),
  WordNode(pos=(87, 104), word='libjpeg-turbo-dev'),
  WordNode(pos=(107, 117), word='libpng-dev'),
])


1940) apk add --virtual .wordpress-phpexts-rundeps $runDeps

CommandNode(pos=(548, 601), parts=[
  WordNode(pos=(548, 551), word='apk'),
  WordNode(pos=(552, 555), word='add'),
  WordNode(pos=(556, 565), word='--virtual'),
  WordNode(pos=(566, 592), word='.wordpress-phpexts-rundeps'),
  WordNode(pos=(593, 601), word='$runDeps', parts=[
    ParameterNode(pos=(593, 601), value='runDeps'),
  ]),
])


1941) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


1942) curl -o /usr/local/bin/wp.gpg -fSL "https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg"

CommandNode(pos=(65, 219), parts=[
  WordNode(pos=(65, 69), word='curl'),
  WordNode(pos=(70, 72), word='-o'),
  WordNode(pos=(73, 94), word='/usr/local/bin/wp.gpg'),
  WordNode(pos=(95, 99), word='-fSL'),
  WordNode(pos=(100, 219), word='https://github.com/wp-cli/wp-cli/releases/download/v${WORDPRESS_CLI_VERSION}/wp-cli-${WORDPRESS_CLI_VERSION}.phar.gpg', parts=[
    ParameterNode(pos=(153, 177), value='WORDPRESS_CLI_VERSION'),
    ParameterNode(pos=(185, 209), value='WORDPRESS_CLI_VERSION'),
  ]),
])


1943) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$WORDPRESS_CLI_GPG_KEY"

CommandNode(pos=(257, 344), parts=[
  WordNode(pos=(257, 260), word='gpg'),
  WordNode(pos=(261, 268), word='--batch'),
  WordNode(pos=(269, 280), word='--keyserver'),
  WordNode(pos=(281, 307), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(308, 319), word='--recv-keys'),
  WordNode(pos=(320, 344), word='$WORDPRESS_CLI_GPG_KEY', parts=[
    ParameterNode(pos=(321, 343), value='WORDPRESS_CLI_GPG_KEY'),
  ]),
])


1944) rm -rf "$GNUPGHOME" /usr/local/bin/wp.gpg

CommandNode(pos=(468, 509), parts=[
  WordNode(pos=(468, 470), word='rm'),
  WordNode(pos=(471, 474), word='-rf'),
  WordNode(pos=(475, 487), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(476, 486), value='GNUPGHOME'),
  ]),
  WordNode(pos=(488, 509), word='/usr/local/bin/wp.gpg'),
])


1945) echo "$WORDPRESS_CLI_SHA512 */usr/local/bin/wp"

CommandNode(pos=(513, 560), parts=[
  WordNode(pos=(513, 517), word='echo'),
  WordNode(pos=(518, 560), word='$WORDPRESS_CLI_SHA512 */usr/local/bin/wp', parts=[
    ParameterNode(pos=(519, 540), value='WORDPRESS_CLI_SHA512'),
  ]),
])


1946) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


1947) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


1948) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 464), word='echo'),
  WordNode(pos=(465, 501), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(466, 487), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


1949) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(1236, 1310), parts=[
  WordNode(pos=(1236, 1247), word='./configure'),
  WordNode(pos=(1250, 1268), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1259, 1267), value='gnuArch'),
  ]),
  WordNode(pos=(1271, 1292), word='--disable-install-doc'),
  WordNode(pos=(1295, 1310), word='--enable-shared'),
])


1950) apk add --no-network --virtual .ruby-rundeps $runDeps   bzip2   ca-certificates   libffi-dev   procps   yaml-dev   zlib-dev

CommandNode(pos=(1558, 1681), parts=[
  WordNode(pos=(1558, 1561), word='apk'),
  WordNode(pos=(1562, 1565), word='add'),
  WordNode(pos=(1566, 1578), word='--no-network'),
  WordNode(pos=(1579, 1588), word='--virtual'),
  WordNode(pos=(1589, 1602), word='.ruby-rundeps'),
  WordNode(pos=(1603, 1611), word='$runDeps', parts=[
    ParameterNode(pos=(1603, 1611), value='runDeps'),
  ]),
  WordNode(pos=(1614, 1619), word='bzip2'),
  WordNode(pos=(1622, 1637), word='ca-certificates'),
  WordNode(pos=(1640, 1650), word='libffi-dev'),
  WordNode(pos=(1653, 1659), word='procps'),
  WordNode(pos=(1662, 1670), word='yaml-dev'),
  WordNode(pos=(1673, 1681), word='zlib-dev'),
])


1951) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


1952) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


1953) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1954) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1955) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1956) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1957) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


1958) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


1959) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1160, 1312), parts=[
  WordNode(pos=(1160, 1171), word='./configure'),
  WordNode(pos=(1174, 1192), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1183, 1191), value='gnuArch'),
  ]),
  WordNode(pos=(1195, 1230), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1233, 1248), word='--enable-shared'),
  WordNode(pos=(1251, 1270), word='--with-system-expat'),
  WordNode(pos=(1273, 1290), word='--with-system-ffi'),
  WordNode(pos=(1293, 1312), word='--without-ensurepip'),
])


1960) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1961) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


1962) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


1963) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


1964) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


1965) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


1966) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


1967) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


1968) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


1969) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


1970) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4

CommandNode(pos=(740, 814), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 790), word='--enable-shared'),
  WordNode(pos=(793, 814), word='--enable-unicode=ucs4'),
])


1971) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1972) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1973) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


1974) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1975) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


1976) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


1977) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


1978) ./configure   --build="$gnuArch"   --enable-shared   --enable-unicode=ucs4   --with-system-expat   --with-system-ffi

CommandNode(pos=(1135, 1251), parts=[
  WordNode(pos=(1135, 1146), word='./configure'),
  WordNode(pos=(1149, 1167), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1158, 1166), value='gnuArch'),
  ]),
  WordNode(pos=(1170, 1185), word='--enable-shared'),
  WordNode(pos=(1188, 1209), word='--enable-unicode=ucs4'),
  WordNode(pos=(1212, 1231), word='--with-system-expat'),
  WordNode(pos=(1234, 1251), word='--with-system-ffi'),
])


1979) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


1980) set -ex;  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done

ListNode(pos=(0, 113), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    ForNode(pos=(10, 113), parts=[
      ReservedwordNode(pos=(10, 13), word='for'),
      WordNode(pos=(14, 17), word='key'),
      ReservedwordNode(pos=(18, 20), word='in'),
      WordNode(pos=(21, 30), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(21, 30), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(30, 31), word=';'),
      ReservedwordNode(pos=(32, 34), word='do'),
      ListNode(pos=(37, 107), parts=[
          CommandNode(pos=(37, 106), parts=[
            WordNode(pos=(37, 40), word='gpg'),
            WordNode(pos=(41, 48), word='--batch'),
            WordNode(pos=(49, 60), word='--keyserver'),
            WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(88, 99), word='--recv-keys'),
            WordNode(pos=(100, 106), word='$key', parts=[
              ParameterNode(pos=(101, 105), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
        ]),
      ReservedwordNode(pos=(109, 113), word='done'),
    ]),
  ], pos=(10, 113)),
])


1981) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(37, 106), parts=[
  WordNode(pos=(37, 40), word='gpg'),
  WordNode(pos=(41, 48), word='--batch'),
  WordNode(pos=(49, 60), word='--keyserver'),
  WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(88, 99), word='--recv-keys'),
  WordNode(pos=(100, 106), word='$key', parts=[
    ParameterNode(pos=(101, 105), value='key'),
  ]),
])


1982) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(325, 366), parts=[
  WordNode(pos=(325, 333), word='apt-mark'),
  WordNode(pos=(334, 340), word='manual'),
  WordNode(pos=(341, 354), word='$savedAptMark', parts=[
    ParameterNode(pos=(341, 354), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(357, 366), word='/dev/null'), pos=(355, 366), type='>'),
])


1983) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(197, 234), parts=[
  WordNode(pos=(197, 201), word='wget'),
  WordNode(pos=(202, 204), word='-O'),
  WordNode(pos=(205, 219), word='haproxy.tar.gz'),
  WordNode(pos=(220, 234), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(221, 233), value='HAPROXY_URL'),
  ]),
])


1984) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(239, 277), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 277), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(245, 260), value='HAPROXY_SHA256'),
  ]),
])


1985) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(601, 673), parts=[
  WordNode(pos=(601, 605), word='make'),
  WordNode(pos=(606, 608), word='-C'),
  WordNode(pos=(609, 625), word='/usr/src/haproxy'),
  WordNode(pos=(626, 628), word='-j'),
  WordNode(pos=(629, 659), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(632, 657), parts=[
        WordNode(pos=(632, 639), word='getconf'),
        WordNode(pos=(640, 657), word='_NPROCESSORS_ONLN'),
      ]), pos=(630, 658)),
  ]),
  WordNode(pos=(660, 663), word='all'),
  WordNode(pos=(664, 673), word='$makeOpts', parts=[
    ParameterNode(pos=(664, 673), value='makeOpts'),
  ]),
])


1986) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(678, 724), parts=[
  WordNode(pos=(678, 682), word='make'),
  WordNode(pos=(683, 685), word='-C'),
  WordNode(pos=(686, 702), word='/usr/src/haproxy'),
  WordNode(pos=(703, 714), word='install-bin'),
  WordNode(pos=(715, 724), word='$makeOpts', parts=[
    ParameterNode(pos=(715, 724), value='makeOpts'),
  ]),
])


1987) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(1074, 1117), parts=[
  WordNode(pos=(1074, 1077), word='apk'),
  WordNode(pos=(1078, 1081), word='add'),
  WordNode(pos=(1082, 1091), word='--virtual'),
  WordNode(pos=(1092, 1108), word='.haproxy-rundeps'),
  WordNode(pos=(1109, 1117), word='$runDeps', parts=[
    ParameterNode(pos=(1109, 1117), value='runDeps'),
  ]),
])


1988) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


1989) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


1990) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


1991) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


1992) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


1993) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


1994) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


1995) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


1996) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


1997) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


1998) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


1999) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


2000) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


2001) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


2002) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


2003) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


2004) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


2005) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


2006) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


2007) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


2008) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(88, 141), parts=[
  WordNode(pos=(88, 95), word='apt-get'),
  WordNode(pos=(96, 103), word='install'),
  WordNode(pos=(104, 106), word='-y'),
  WordNode(pos=(107, 130), word='--no-install-recommends'),
  WordNode(pos=(131, 141), word='$fetchDeps', parts=[
    ParameterNode(pos=(131, 141), value='fetchDeps'),
  ]),
])


2009) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


2010) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


2011) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


2012) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


2013) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(699, 741), parts=[
  WordNode(pos=(699, 701), word='rm'),
  WordNode(pos=(702, 704), word='-r'),
  WordNode(pos=(705, 717), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(706, 716), value='GNUPGHOME'),
  ]),
  WordNode(pos=(718, 741), word='/usr/local/bin/gosu.asc'),
])


2014) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(795, 836), parts=[
  WordNode(pos=(795, 802), word='apt-get'),
  WordNode(pos=(803, 808), word='purge'),
  WordNode(pos=(809, 811), word='-y'),
  WordNode(pos=(812, 825), word='--auto-remove'),
  WordNode(pos=(826, 836), word='$fetchDeps', parts=[
    ParameterNode(pos=(826, 836), value='fetchDeps'),
  ]),
])


2015) apt-get install -y $buildDeps --no-install-recommends

CommandNode(pos=(117, 170), parts=[
  WordNode(pos=(117, 124), word='apt-get'),
  WordNode(pos=(125, 132), word='install'),
  WordNode(pos=(133, 135), word='-y'),
  WordNode(pos=(136, 146), word='$buildDeps', parts=[
    ParameterNode(pos=(136, 146), value='buildDeps'),
  ]),
  WordNode(pos=(147, 170), word='--no-install-recommends'),
])


2016) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(204, 246), parts=[
  WordNode(pos=(204, 208), word='wget'),
  WordNode(pos=(209, 211), word='-O'),
  WordNode(pos=(212, 224), word='redis.tar.gz'),
  WordNode(pos=(225, 246), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(226, 245), value='REDIS_DOWNLOAD_URL'),
  ]),
])


2017) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(249, 289), parts=[
  WordNode(pos=(249, 253), word='echo'),
  WordNode(pos=(254, 289), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(255, 274), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


2018) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(777, 818), parts=[
  WordNode(pos=(777, 784), word='apt-get'),
  WordNode(pos=(785, 790), word='purge'),
  WordNode(pos=(791, 793), word='-y'),
  WordNode(pos=(794, 807), word='--auto-remove'),
  WordNode(pos=(808, 818), word='$buildDeps', parts=[
    ParameterNode(pos=(808, 818), value='buildDeps'),
  ]),
])


2019) apt-mark manual $savedAptMark

CommandNode(pos=(416, 445), parts=[
  WordNode(pos=(416, 424), word='apt-mark'),
  WordNode(pos=(425, 431), word='manual'),
  WordNode(pos=(432, 445), word='$savedAptMark', parts=[
    ParameterNode(pos=(432, 445), value='savedAptMark'),
  ]),
])


2020) curl -o wordpress.tar.gz -fSL "https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz"

CommandNode(pos=(10, 101), parts=[
  WordNode(pos=(10, 14), word='curl'),
  WordNode(pos=(15, 17), word='-o'),
  WordNode(pos=(18, 34), word='wordpress.tar.gz'),
  WordNode(pos=(35, 39), word='-fSL'),
  WordNode(pos=(40, 101), word='https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(73, 93), value='WORDPRESS_VERSION'),
  ]),
])


2021) echo "$WORDPRESS_SHA1 *wordpress.tar.gz"

CommandNode(pos=(104, 144), parts=[
  WordNode(pos=(104, 108), word='echo'),
  WordNode(pos=(109, 144), word='$WORDPRESS_SHA1 *wordpress.tar.gz', parts=[
    ParameterNode(pos=(110, 125), value='WORDPRESS_SHA1'),
  ]),
])


2022) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(262, 299), parts=[
  WordNode(pos=(262, 266), word='wget'),
  WordNode(pos=(267, 269), word='-O'),
  WordNode(pos=(270, 284), word='haproxy.tar.gz'),
  WordNode(pos=(285, 299), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(286, 298), value='HAPROXY_URL'),
  ]),
])


2023) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(304, 342), parts=[
  WordNode(pos=(304, 308), word='echo'),
  WordNode(pos=(309, 342), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(310, 325), value='HAPROXY_SHA256'),
  ]),
])


2024) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(640, 692), parts=[
  WordNode(pos=(640, 644), word='make'),
  WordNode(pos=(645, 647), word='-C'),
  WordNode(pos=(648, 664), word='/usr/src/haproxy'),
  WordNode(pos=(665, 667), word='-j'),
  WordNode(pos=(668, 678), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(671, 676), parts=[
        WordNode(pos=(671, 676), word='nproc'),
      ]), pos=(669, 677)),
  ]),
  WordNode(pos=(679, 682), word='all'),
  WordNode(pos=(683, 692), word='$makeOpts', parts=[
    ParameterNode(pos=(683, 692), value='makeOpts'),
  ]),
])


2025) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(697, 743), parts=[
  WordNode(pos=(697, 701), word='make'),
  WordNode(pos=(702, 704), word='-C'),
  WordNode(pos=(705, 721), word='/usr/src/haproxy'),
  WordNode(pos=(722, 733), word='install-bin'),
  WordNode(pos=(734, 743), word='$makeOpts', parts=[
    ParameterNode(pos=(734, 743), value='makeOpts'),
  ]),
])


2026) [ -z "$savedAptMark" ]

CommandNode(pos=(928, 950), parts=[
  WordNode(pos=(928, 929), word='['),
  WordNode(pos=(930, 932), word='-z'),
  WordNode(pos=(933, 948), word='$savedAptMark', parts=[
    ParameterNode(pos=(934, 947), value='savedAptMark'),
  ]),
  WordNode(pos=(949, 950), word=']'),
])


2027) apt-mark manual $savedAptMark

CommandNode(pos=(954, 983), parts=[
  WordNode(pos=(954, 962), word='apt-mark'),
  WordNode(pos=(963, 969), word='manual'),
  WordNode(pos=(970, 983), word='$savedAptMark', parts=[
    ParameterNode(pos=(970, 983), value='savedAptMark'),
  ]),
])


2028) set -ex;  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done

ListNode(pos=(0, 113), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CompoundNode(list=[
    ForNode(pos=(10, 113), parts=[
      ReservedwordNode(pos=(10, 13), word='for'),
      WordNode(pos=(14, 17), word='key'),
      ReservedwordNode(pos=(18, 20), word='in'),
      WordNode(pos=(21, 30), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(21, 30), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(30, 31), word=';'),
      ReservedwordNode(pos=(32, 34), word='do'),
      ListNode(pos=(37, 107), parts=[
          CommandNode(pos=(37, 106), parts=[
            WordNode(pos=(37, 40), word='gpg'),
            WordNode(pos=(41, 48), word='--batch'),
            WordNode(pos=(49, 60), word='--keyserver'),
            WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(88, 99), word='--recv-keys'),
            WordNode(pos=(100, 106), word='$key', parts=[
              ParameterNode(pos=(101, 105), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(106, 107)),
        ]),
      ReservedwordNode(pos=(109, 113), word='done'),
    ]),
  ], pos=(10, 113)),
])


2029) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(37, 106), parts=[
  WordNode(pos=(37, 40), word='gpg'),
  WordNode(pos=(41, 48), word='--batch'),
  WordNode(pos=(49, 60), word='--keyserver'),
  WordNode(pos=(61, 87), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(88, 99), word='--recv-keys'),
  WordNode(pos=(100, 106), word='$key', parts=[
    ParameterNode(pos=(101, 105), value='key'),
  ]),
])


2030) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


2031) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(11, 137), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/gosu'),
  WordNode(pos=(39, 137), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(89, 102), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(110, 135), parts=[
        WordNode(pos=(110, 114), word='dpkg'),
        WordNode(pos=(115, 135), word='--print-architecture'),
      ]), pos=(108, 136)),
  ]),
])


2032) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(142, 276), parts=[
  WordNode(pos=(142, 146), word='wget'),
  WordNode(pos=(147, 149), word='-O'),
  WordNode(pos=(150, 173), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(174, 276), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(224, 237), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(245, 270), parts=[
        WordNode(pos=(245, 249), word='dpkg'),
        WordNode(pos=(250, 270), word='--print-architecture'),
      ]), pos=(243, 271)),
  ]),
])


2033) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(549, 591), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 591), word='/usr/local/bin/gosu.asc'),
])


2034) npm install -g "ghost-cli@$GHOST_CLI_VERSION"

CommandNode(pos=(11, 56), parts=[
  WordNode(pos=(11, 14), word='npm'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-g'),
  WordNode(pos=(26, 56), word='ghost-cli@$GHOST_CLI_VERSION', parts=[
    ParameterNode(pos=(37, 55), value='GHOST_CLI_VERSION'),
  ]),
])


2035) mkdir -p "$GHOST_INSTALL"

CommandNode(pos=(11, 36), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
  ]),
])


2036) chown node:node "$GHOST_INSTALL"

CommandNode(pos=(39, 71), parts=[
  WordNode(pos=(39, 44), word='chown'),
  WordNode(pos=(45, 54), word='node:node'),
  WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
  ]),
])


2037) gosu node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 185), parts=[
  WordNode(pos=(75, 79), word='gosu'),
  WordNode(pos=(80, 84), word='node'),
  WordNode(pos=(85, 90), word='ghost'),
  WordNode(pos=(91, 98), word='install'),
  WordNode(pos=(99, 115), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(100, 114), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(116, 120), word='--db'),
  WordNode(pos=(121, 128), word='sqlite3'),
  WordNode(pos=(129, 140), word='--no-prompt'),
  WordNode(pos=(141, 151), word='--no-stack'),
  WordNode(pos=(152, 162), word='--no-setup'),
  WordNode(pos=(163, 168), word='--dir'),
  WordNode(pos=(169, 185), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(170, 184), value='GHOST_INSTALL'),
  ]),
])


2038) gosu node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 185), parts=[
  WordNode(pos=(75, 79), word='gosu'),
  WordNode(pos=(80, 84), word='node'),
  WordNode(pos=(85, 90), word='ghost'),
  WordNode(pos=(91, 98), word='install'),
  WordNode(pos=(99, 115), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(100, 114), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(116, 120), word='--db'),
  WordNode(pos=(121, 128), word='sqlite3'),
  WordNode(pos=(129, 140), word='--no-prompt'),
  WordNode(pos=(141, 151), word='--no-stack'),
  WordNode(pos=(152, 162), word='--no-setup'),
  WordNode(pos=(163, 168), word='--dir'),
  WordNode(pos=(169, 185), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(170, 184), value='GHOST_INSTALL'),
  ]),
])


2039) cd "$GHOST_INSTALL"

CommandNode(pos=(189, 208), parts=[
  WordNode(pos=(189, 191), word='cd'),
  WordNode(pos=(192, 208), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(193, 207), value='GHOST_INSTALL'),
  ]),
])


2040) gosu node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db"

CommandNode(pos=(211, 351), parts=[
  WordNode(pos=(211, 215), word='gosu'),
  WordNode(pos=(216, 220), word='node'),
  WordNode(pos=(221, 226), word='ghost'),
  WordNode(pos=(227, 233), word='config'),
  WordNode(pos=(234, 238), word='--ip'),
  WordNode(pos=(239, 246), word='0.0.0.0'),
  WordNode(pos=(247, 253), word='--port'),
  WordNode(pos=(254, 258), word='2368'),
  WordNode(pos=(259, 270), word='--no-prompt'),
  WordNode(pos=(271, 275), word='--db'),
  WordNode(pos=(276, 283), word='sqlite3'),
  WordNode(pos=(284, 289), word='--url'),
  WordNode(pos=(290, 311), word='http://localhost:2368'),
  WordNode(pos=(312, 320), word='--dbpath'),
  WordNode(pos=(321, 351), word='$GHOST_CONTENT/data/ghost.db', parts=[
    ParameterNode(pos=(322, 336), value='GHOST_CONTENT'),
  ]),
])


2041) gosu node ghost config paths.contentPath "$GHOST_CONTENT"

CommandNode(pos=(354, 411), parts=[
  WordNode(pos=(354, 358), word='gosu'),
  WordNode(pos=(359, 363), word='node'),
  WordNode(pos=(364, 369), word='ghost'),
  WordNode(pos=(370, 376), word='config'),
  WordNode(pos=(377, 394), word='paths.contentPath'),
  WordNode(pos=(395, 411), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(396, 410), value='GHOST_CONTENT'),
  ]),
])


2042) gosu node ln -s config.production.json "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(415, 494), parts=[
  WordNode(pos=(415, 419), word='gosu'),
  WordNode(pos=(420, 424), word='node'),
  WordNode(pos=(425, 427), word='ln'),
  WordNode(pos=(428, 430), word='-s'),
  WordNode(pos=(431, 453), word='config.production.json'),
  WordNode(pos=(454, 494), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(455, 469), value='GHOST_INSTALL'),
  ]),
])


2043) readlink -f "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(497, 549), parts=[
  WordNode(pos=(497, 505), word='readlink'),
  WordNode(pos=(506, 508), word='-f'),
  WordNode(pos=(509, 549), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(510, 524), value='GHOST_INSTALL'),
  ]),
])


2044) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(553, 602), parts=[
  WordNode(pos=(553, 555), word='mv'),
  WordNode(pos=(556, 572), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(557, 571), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(573, 602), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(574, 588), value='GHOST_INSTALL'),
  ]),
])


2045) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(553, 602), parts=[
  WordNode(pos=(553, 555), word='mv'),
  WordNode(pos=(556, 572), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(557, 571), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(573, 602), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(574, 588), value='GHOST_INSTALL'),
  ]),
])


2046) mkdir -p "$GHOST_CONTENT"

CommandNode(pos=(605, 630), parts=[
  WordNode(pos=(605, 610), word='mkdir'),
  WordNode(pos=(611, 613), word='-p'),
  WordNode(pos=(614, 630), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(615, 629), value='GHOST_CONTENT'),
  ]),
])


2047) chown node:node "$GHOST_CONTENT"

CommandNode(pos=(633, 665), parts=[
  WordNode(pos=(633, 638), word='chown'),
  WordNode(pos=(639, 648), word='node:node'),
  WordNode(pos=(649, 665), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(650, 664), value='GHOST_CONTENT'),
  ]),
])


2048) "$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator" --version

CommandNode(pos=(669, 748), parts=[
  WordNode(pos=(669, 738), word='$GHOST_INSTALL/current/node_modules/knex-migrator/bin/knex-migrator', parts=[
    ParameterNode(pos=(670, 684), value='GHOST_INSTALL'),
  ]),
  WordNode(pos=(739, 748), word='--version'),
])


2049) cd "$GHOST_INSTALL/current"

CommandNode(pos=(752, 779), parts=[
  WordNode(pos=(752, 754), word='cd'),
  WordNode(pos=(755, 779), word='$GHOST_INSTALL/current', parts=[
    ParameterNode(pos=(756, 770), value='GHOST_INSTALL'),
  ]),
])


2050) gosu node yarn add "sqlite3@$sqlite3Version" --force

CommandNode(pos=(849, 901), parts=[
  WordNode(pos=(849, 853), word='gosu'),
  WordNode(pos=(854, 858), word='node'),
  WordNode(pos=(859, 863), word='yarn'),
  WordNode(pos=(864, 867), word='add'),
  WordNode(pos=(868, 893), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(877, 892), value='sqlite3Version'),
  ]),
  WordNode(pos=(894, 901), word='--force'),
])


2051) gosu node yarn add "sqlite3@$sqlite3Version" --force --build-from-source

CommandNode(pos=(1077, 1149), parts=[
  WordNode(pos=(1077, 1081), word='gosu'),
  WordNode(pos=(1082, 1086), word='node'),
  WordNode(pos=(1087, 1091), word='yarn'),
  WordNode(pos=(1092, 1095), word='add'),
  WordNode(pos=(1096, 1121), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(1105, 1120), value='sqlite3Version'),
  ]),
  WordNode(pos=(1122, 1129), word='--force'),
  WordNode(pos=(1130, 1149), word='--build-from-source'),
])


2052) [ -z "$savedAptMark" ]

CommandNode(pos=(1212, 1234), parts=[
  WordNode(pos=(1212, 1213), word='['),
  WordNode(pos=(1214, 1216), word='-z'),
  WordNode(pos=(1217, 1232), word='$savedAptMark', parts=[
    ParameterNode(pos=(1218, 1231), value='savedAptMark'),
  ]),
  WordNode(pos=(1233, 1234), word=']'),
])


2053) apt-mark manual $savedAptMark

CommandNode(pos=(1238, 1267), parts=[
  WordNode(pos=(1238, 1246), word='apt-mark'),
  WordNode(pos=(1247, 1253), word='manual'),
  WordNode(pos=(1254, 1267), word='$savedAptMark', parts=[
    ParameterNode(pos=(1254, 1267), value='savedAptMark'),
  ]),
])


2054) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


2055) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


2056) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


2057) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(109, 151), parts=[
  WordNode(pos=(109, 113), word='wget'),
  WordNode(pos=(114, 116), word='-O'),
  WordNode(pos=(117, 129), word='redis.tar.gz'),
  WordNode(pos=(130, 151), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(131, 150), value='REDIS_DOWNLOAD_URL'),
  ]),
])


2058) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(154, 194), parts=[
  WordNode(pos=(154, 158), word='echo'),
  WordNode(pos=(159, 194), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(160, 179), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


2059) apk add --virtual .redis-rundeps $runDeps

CommandNode(pos=(876, 917), parts=[
  WordNode(pos=(876, 879), word='apk'),
  WordNode(pos=(880, 883), word='add'),
  WordNode(pos=(884, 893), word='--virtual'),
  WordNode(pos=(894, 908), word='.redis-rundeps'),
  WordNode(pos=(909, 917), word='$runDeps', parts=[
    ParameterNode(pos=(909, 917), value='runDeps'),
  ]),
])


2060) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(88, 141), parts=[
  WordNode(pos=(88, 95), word='apt-get'),
  WordNode(pos=(96, 103), word='install'),
  WordNode(pos=(104, 106), word='-y'),
  WordNode(pos=(107, 130), word='--no-install-recommends'),
  WordNode(pos=(131, 141), word='$fetchDeps', parts=[
    ParameterNode(pos=(131, 141), value='fetchDeps'),
  ]),
])


2061) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


2062) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(243, 350), parts=[
  WordNode(pos=(243, 247), word='wget'),
  WordNode(pos=(248, 250), word='-O'),
  WordNode(pos=(251, 270), word='/usr/local/bin/gosu'),
  WordNode(pos=(271, 350), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(321, 334), value='GOSU_VERSION'),
    ParameterNode(pos=(340, 349), value='dpkgArch'),
  ]),
])


2063) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


2064) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(353, 468), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 384), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(385, 468), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(435, 448), value='GOSU_VERSION'),
    ParameterNode(pos=(454, 463), value='dpkgArch'),
  ]),
])


2065) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(699, 741), parts=[
  WordNode(pos=(699, 701), word='rm'),
  WordNode(pos=(702, 704), word='-r'),
  WordNode(pos=(705, 717), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(706, 716), value='GNUPGHOME'),
  ]),
  WordNode(pos=(718, 741), word='/usr/local/bin/gosu.asc'),
])


2066) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(795, 836), parts=[
  WordNode(pos=(795, 802), word='apt-get'),
  WordNode(pos=(803, 808), word='purge'),
  WordNode(pos=(809, 811), word='-y'),
  WordNode(pos=(812, 825), word='--auto-remove'),
  WordNode(pos=(826, 836), word='$fetchDeps', parts=[
    ParameterNode(pos=(826, 836), value='fetchDeps'),
  ]),
])


2067) apt-get install -y $buildDeps --no-install-recommends

CommandNode(pos=(79, 132), parts=[
  WordNode(pos=(79, 86), word='apt-get'),
  WordNode(pos=(87, 94), word='install'),
  WordNode(pos=(95, 97), word='-y'),
  WordNode(pos=(98, 108), word='$buildDeps', parts=[
    ParameterNode(pos=(98, 108), value='buildDeps'),
  ]),
  WordNode(pos=(109, 132), word='--no-install-recommends'),
])


2068) wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"

CommandNode(pos=(166, 208), parts=[
  WordNode(pos=(166, 170), word='wget'),
  WordNode(pos=(171, 173), word='-O'),
  WordNode(pos=(174, 186), word='redis.tar.gz'),
  WordNode(pos=(187, 208), word='$REDIS_DOWNLOAD_URL', parts=[
    ParameterNode(pos=(188, 207), value='REDIS_DOWNLOAD_URL'),
  ]),
])


2069) echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz"

CommandNode(pos=(211, 251), parts=[
  WordNode(pos=(211, 215), word='echo'),
  WordNode(pos=(216, 251), word='$REDIS_DOWNLOAD_SHA *redis.tar.gz', parts=[
    ParameterNode(pos=(217, 236), value='REDIS_DOWNLOAD_SHA'),
  ]),
])


2070) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(733, 774), parts=[
  WordNode(pos=(733, 740), word='apt-get'),
  WordNode(pos=(741, 746), word='purge'),
  WordNode(pos=(747, 749), word='-y'),
  WordNode(pos=(750, 763), word='--auto-remove'),
  WordNode(pos=(764, 774), word='$buildDeps', parts=[
    ParameterNode(pos=(764, 774), value='buildDeps'),
  ]),
])


2071) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2072) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2073) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2074) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2075) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2076) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2077) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2078) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2079) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2080) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2081) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2082) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2083) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2084) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2085) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2086) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2087) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2088) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2089) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2090) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2091) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2092) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2093) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2094) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2095) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2096) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(259, 296), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 281), word='haproxy.tar.gz'),
  WordNode(pos=(282, 296), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(283, 295), value='HAPROXY_URL'),
  ]),
])


2097) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(301, 339), parts=[
  WordNode(pos=(301, 305), word='echo'),
  WordNode(pos=(306, 339), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(307, 322), value='HAPROXY_SHA256'),
  ]),
])


2098) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(639, 691), parts=[
  WordNode(pos=(639, 643), word='make'),
  WordNode(pos=(644, 646), word='-C'),
  WordNode(pos=(647, 663), word='/usr/src/haproxy'),
  WordNode(pos=(664, 666), word='-j'),
  WordNode(pos=(667, 677), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(670, 675), parts=[
        WordNode(pos=(670, 675), word='nproc'),
      ]), pos=(668, 676)),
  ]),
  WordNode(pos=(678, 681), word='all'),
  WordNode(pos=(682, 691), word='$makeOpts', parts=[
    ParameterNode(pos=(682, 691), value='makeOpts'),
  ]),
])


2099) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(696, 742), parts=[
  WordNode(pos=(696, 700), word='make'),
  WordNode(pos=(701, 703), word='-C'),
  WordNode(pos=(704, 720), word='/usr/src/haproxy'),
  WordNode(pos=(721, 732), word='install-bin'),
  WordNode(pos=(733, 742), word='$makeOpts', parts=[
    ParameterNode(pos=(733, 742), value='makeOpts'),
  ]),
])


2100) [ -z "$savedAptMark" ]

CommandNode(pos=(927, 949), parts=[
  WordNode(pos=(927, 928), word='['),
  WordNode(pos=(929, 931), word='-z'),
  WordNode(pos=(932, 947), word='$savedAptMark', parts=[
    ParameterNode(pos=(933, 946), value='savedAptMark'),
  ]),
  WordNode(pos=(948, 949), word=']'),
])


2101) apt-mark manual $savedAptMark

CommandNode(pos=(953, 982), parts=[
  WordNode(pos=(953, 961), word='apt-mark'),
  WordNode(pos=(962, 968), word='manual'),
  WordNode(pos=(969, 982), word='$savedAptMark', parts=[
    ParameterNode(pos=(969, 982), value='savedAptMark'),
  ]),
])


2102) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


2103) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


2104) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


2105) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


2106) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


2107) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


2108) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(469, 502), parts=[
  WordNode(pos=(469, 472), word='npm'),
  WordNode(pos=(473, 480), word='install'),
  WordNode(pos=(481, 483), word='-g'),
  WordNode(pos=(484, 502), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(489, 501), value='NPM_VERSION'),
  ]),
])


2109) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


2110) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


2111) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


2112) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


2113) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


2114) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


2115) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


2116) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


2117) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


2118) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


2119) echo "deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


2120) echo "deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


2121) echo "deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu bionic/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


2122) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(101, 162), parts=[
  WordNode(pos=(101, 104), word='tee'),
  WordNode(pos=(105, 162), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(130, 156), value='MONGO_PACKAGE%-unstable'),
  ]),
])


2123) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2124) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2125) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2126) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2127) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2128) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2129) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2130) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2131) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2132) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2133) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2134) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2135) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2136) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2137) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2138) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2139) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2140) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2141) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2142) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2143) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2144) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2145) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2146) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2147) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2148) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2149) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2150) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2151) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2152) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2153) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2154) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2155) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2156) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2157) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2158) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


2159) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


2160) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


2161) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


2162) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


2163) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


2164) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


2165) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


2166) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2167) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


2168) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


2169) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


2170) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


2171) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


2172) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


2173) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


2174) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


2175) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


2176) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


2177) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


2178) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2179) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


2180) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


2181) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


2182) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


2183) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


2184) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


2185) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


2186) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


2187) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


2188) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


2189) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


2190) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


2191) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


2192) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


2193) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


2194) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


2195) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


2196) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


2197) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1442, 1481), parts=[
  WordNode(pos=(1442, 1445), word='gem'),
  WordNode(pos=(1446, 1452), word='update'),
  WordNode(pos=(1453, 1461), word='--system'),
  WordNode(pos=(1462, 1481), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1463, 1480), value='RUBYGEMS_VERSION'),
  ]),
])


2198) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


2199) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


2200) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


2201) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


2202) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


2203) pip install celery=="$CELERY_VERSION"

CommandNode(pos=(0, 37), parts=[
  WordNode(pos=(0, 3), word='pip'),
  WordNode(pos=(4, 11), word='install'),
  WordNode(pos=(12, 37), word='celery==$CELERY_VERSION', parts=[
    ParameterNode(pos=(21, 36), value='CELERY_VERSION'),
  ]),
])


2204) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


2205) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"

CommandNode(pos=(0, 86), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-SLO'),
  WordNode(pos=(10, 86), word='http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(35, 48), value='NODE_VERSION'),
    ParameterNode(pos=(55, 68), value='NODE_VERSION'),
  ]),
])


2206) curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"

CommandNode(pos=(91, 159), parts=[
  WordNode(pos=(91, 95), word='curl'),
  WordNode(pos=(96, 100), word='-SLO'),
  WordNode(pos=(101, 159), word='http://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc', parts=[
    ParameterNode(pos=(126, 139), value='NODE_VERSION'),
  ]),
])


2207) grep " node-v$NODE_VERSION-linux-x64.tar.gz\$" SHASUMS256.txt.asc

CommandNode(pos=(200, 265), parts=[
  WordNode(pos=(200, 204), word='grep'),
  WordNode(pos=(205, 246), word=' node-v$NODE_VERSION-linux-x64.tar.gz$', parts=[
    ParameterNode(pos=(213, 226), value='NODE_VERSION'),
  ]),
  WordNode(pos=(247, 265), word='SHASUMS256.txt.asc'),
])


2208) tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1

CommandNode(pos=(287, 369), parts=[
  WordNode(pos=(287, 290), word='tar'),
  WordNode(pos=(291, 295), word='-xzf'),
  WordNode(pos=(296, 334), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(303, 316), value='NODE_VERSION'),
  ]),
  WordNode(pos=(335, 337), word='-C'),
  WordNode(pos=(338, 348), word='/usr/local'),
  WordNode(pos=(349, 369), word='--strip-components=1'),
])


2209) rm "node-v$NODE_VERSION-linux-x64.tar.gz" SHASUMS256.txt.asc

CommandNode(pos=(374, 434), parts=[
  WordNode(pos=(374, 376), word='rm'),
  WordNode(pos=(377, 415), word='node-v$NODE_VERSION-linux-x64.tar.gz', parts=[
    ParameterNode(pos=(384, 397), value='NODE_VERSION'),
  ]),
  WordNode(pos=(416, 434), word='SHASUMS256.txt.asc'),
])


2210) npm install -g npm@"$NPM_VERSION"

CommandNode(pos=(439, 472), parts=[
  WordNode(pos=(439, 442), word='npm'),
  WordNode(pos=(443, 450), word='install'),
  WordNode(pos=(451, 453), word='-g'),
  WordNode(pos=(454, 472), word='npm@$NPM_VERSION', parts=[
    ParameterNode(pos=(459, 471), value='NPM_VERSION'),
  ]),
])


2211) curl -fL -o /openjdk.tgz "$JAVA_URL"

CommandNode(pos=(12, 48), parts=[
  WordNode(pos=(12, 16), word='curl'),
  WordNode(pos=(17, 20), word='-fL'),
  WordNode(pos=(21, 23), word='-o'),
  WordNode(pos=(24, 36), word='/openjdk.tgz'),
  WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
    ParameterNode(pos=(38, 47), value='JAVA_URL'),
  ]),
])


2212) echo "$JAVA_SHA256 */openjdk.tgz"

CommandNode(pos=(51, 84), parts=[
  WordNode(pos=(51, 55), word='echo'),
  WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
    ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
  ]),
])


2213) mkdir -p "$JAVA_HOME"

CommandNode(pos=(104, 125), parts=[
  WordNode(pos=(104, 109), word='mkdir'),
  WordNode(pos=(110, 112), word='-p'),
  WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(114, 124), value='JAVA_HOME'),
  ]),
])


2214) tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1

CommandNode(pos=(128, 207), parts=[
  WordNode(pos=(128, 131), word='tar'),
  WordNode(pos=(132, 141), word='--extract'),
  WordNode(pos=(142, 148), word='--file'),
  WordNode(pos=(149, 161), word='/openjdk.tgz'),
  WordNode(pos=(162, 173), word='--directory'),
  WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(175, 185), value='JAVA_HOME'),
  ]),
  WordNode(pos=(187, 205), word='--strip-components'),
  WordNode(pos=(206, 207), word='1'),
])


2215) ln -sfT "$JAVA_HOME" /usr/java/default

CommandNode(pos=(229, 267), parts=[
  WordNode(pos=(229, 231), word='ln'),
  WordNode(pos=(232, 236), word='-sfT'),
  WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(238, 248), value='JAVA_HOME'),
  ]),
  WordNode(pos=(250, 267), word='/usr/java/default'),
])


2216) ln -sfT "$JAVA_HOME" /usr/java/latest

CommandNode(pos=(270, 307), parts=[
  WordNode(pos=(270, 272), word='ln'),
  WordNode(pos=(273, 277), word='-sfT'),
  WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(279, 289), value='JAVA_HOME'),
  ]),
  WordNode(pos=(291, 307), word='/usr/java/latest'),
])


2217) set -eux;   curl -fL -o /openjdk.tgz "$JAVA_URL";  echo "$JAVA_SHA256 */openjdk.tgz" | sha256sum -c -;  mkdir -p "$JAVA_HOME";  tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1;  rm /openjdk.tgz;   ln -sfT "$JAVA_HOME" /usr/java/default;  ln -sfT "$JAVA_HOME" /usr/java/latest;  for bin in "$JAVA_HOME/bin/"*; do   base="$(basename "$bin")";   [ ! -e "/usr/bin/$base" ];   alternatives --install "/usr/bin/$base" "$base" "$bin" 20000;  done;   java -Xshare:dump;   java --version;  javac --version

ListNode(pos=(0, 528), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 48), parts=[
    WordNode(pos=(12, 16), word='curl'),
    WordNode(pos=(17, 20), word='-fL'),
    WordNode(pos=(21, 23), word='-o'),
    WordNode(pos=(24, 36), word='/openjdk.tgz'),
    WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
      ParameterNode(pos=(38, 47), value='JAVA_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(48, 49)),
  PipelineNode(pos=(51, 101), parts=[
    CommandNode(pos=(51, 84), parts=[
      WordNode(pos=(51, 55), word='echo'),
      WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
        ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(85, 86)),
    CommandNode(pos=(87, 101), parts=[
      WordNode(pos=(87, 96), word='sha256sum'),
      WordNode(pos=(97, 99), word='-c'),
      WordNode(pos=(100, 101), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(101, 102)),
  CommandNode(pos=(104, 125), parts=[
    WordNode(pos=(104, 109), word='mkdir'),
    WordNode(pos=(110, 112), word='-p'),
    WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(114, 124), value='JAVA_HOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 207), parts=[
    WordNode(pos=(128, 131), word='tar'),
    WordNode(pos=(132, 141), word='--extract'),
    WordNode(pos=(142, 148), word='--file'),
    WordNode(pos=(149, 161), word='/openjdk.tgz'),
    WordNode(pos=(162, 173), word='--directory'),
    WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(175, 185), value='JAVA_HOME'),
    ]),
    WordNode(pos=(187, 205), word='--strip-components'),
    WordNode(pos=(206, 207), word='1'),
  ]),
  OperatorNode(op=';', pos=(207, 208)),
  CommandNode(pos=(210, 225), parts=[
    WordNode(pos=(210, 212), word='rm'),
    WordNode(pos=(213, 225), word='/openjdk.tgz'),
  ]),
  OperatorNode(op=';', pos=(225, 226)),
  CommandNode(pos=(229, 267), parts=[
    WordNode(pos=(229, 231), word='ln'),
    WordNode(pos=(232, 236), word='-sfT'),
    WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(238, 248), value='JAVA_HOME'),
    ]),
    WordNode(pos=(250, 267), word='/usr/java/default'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 307), parts=[
    WordNode(pos=(270, 272), word='ln'),
    WordNode(pos=(273, 277), word='-sfT'),
    WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(279, 289), value='JAVA_HOME'),
    ]),
    WordNode(pos=(291, 307), word='/usr/java/latest'),
  ]),
  OperatorNode(op=';', pos=(307, 308)),
  CompoundNode(list=[
    ForNode(pos=(310, 471), parts=[
      ReservedwordNode(pos=(310, 313), word='for'),
      WordNode(pos=(314, 317), word='bin'),
      ReservedwordNode(pos=(318, 320), word='in'),
      WordNode(pos=(321, 339), word='$JAVA_HOME/bin/*', parts=[
        ParameterNode(pos=(322, 332), value='JAVA_HOME'),
      ]),
      ReservedwordNode(pos=(339, 340), word=';'),
      ReservedwordNode(pos=(341, 343), word='do'),
      ListNode(pos=(346, 465), parts=[
          CommandNode(pos=(346, 371), parts=[
            AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(354, 369), parts=[
                  WordNode(pos=(354, 362), word='basename'),
                  WordNode(pos=(363, 369), word='$bin', parts=[
                    ParameterNode(pos=(364, 368), value='bin'),
                  ]),
                ]), pos=(352, 370)),
            ]),
          ]),
          OperatorNode(op=';', pos=(371, 372)),
          CommandNode(pos=(375, 400), parts=[
            WordNode(pos=(375, 376), word='['),
            WordNode(pos=(377, 378), word='!'),
            WordNode(pos=(379, 381), word='-e'),
            WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(392, 397), value='base'),
            ]),
            WordNode(pos=(399, 400), word=']'),
          ]),
          OperatorNode(op=';', pos=(400, 401)),
          CommandNode(pos=(404, 464), parts=[
            WordNode(pos=(404, 416), word='alternatives'),
            WordNode(pos=(417, 426), word='--install'),
            WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(437, 442), value='base'),
            ]),
            WordNode(pos=(444, 451), word='$base', parts=[
              ParameterNode(pos=(445, 450), value='base'),
            ]),
            WordNode(pos=(452, 458), word='$bin', parts=[
              ParameterNode(pos=(453, 457), value='bin'),
            ]),
            WordNode(pos=(459, 464), word='20000'),
          ]),
          OperatorNode(op=';', pos=(464, 465)),
        ]),
      ReservedwordNode(pos=(467, 471), word='done'),
    ]),
  ], pos=(310, 471)),
  OperatorNode(op=';', pos=(471, 472)),
  CommandNode(pos=(475, 492), parts=[
    WordNode(pos=(475, 479), word='java'),
    WordNode(pos=(480, 492), word='-Xshare:dump'),
  ]),
  OperatorNode(op=';', pos=(492, 493)),
  CommandNode(pos=(496, 510), parts=[
    WordNode(pos=(496, 500), word='java'),
    WordNode(pos=(501, 510), word='--version'),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 528), parts=[
    WordNode(pos=(513, 518), word='javac'),
    WordNode(pos=(519, 528), word='--version'),
  ]),
])


2218) [ ! -e "/usr/bin/$base" ]

CommandNode(pos=(375, 400), parts=[
  WordNode(pos=(375, 376), word='['),
  WordNode(pos=(377, 378), word='!'),
  WordNode(pos=(379, 381), word='-e'),
  WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(392, 397), value='base'),
  ]),
  WordNode(pos=(399, 400), word=']'),
])


2219) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


2220) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


2221) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


2222) [ "$postgresHome" = '/var/lib/postgresql' ]

CommandNode(pos=(108, 151), parts=[
  WordNode(pos=(108, 109), word='['),
  WordNode(pos=(110, 125), word='$postgresHome', parts=[
    ParameterNode(pos=(111, 124), value='postgresHome'),
  ]),
  WordNode(pos=(126, 127), word='='),
  WordNode(pos=(128, 149), word='/var/lib/postgresql'),
  WordNode(pos=(150, 151), word=']'),
])


2223) mkdir -p "$postgresHome"

CommandNode(pos=(154, 178), parts=[
  WordNode(pos=(154, 159), word='mkdir'),
  WordNode(pos=(160, 162), word='-p'),
  WordNode(pos=(163, 178), word='$postgresHome', parts=[
    ParameterNode(pos=(164, 177), value='postgresHome'),
  ]),
])


2224) chown -R postgres:postgres "$postgresHome"

CommandNode(pos=(181, 223), parts=[
  WordNode(pos=(181, 186), word='chown'),
  WordNode(pos=(187, 189), word='-R'),
  WordNode(pos=(190, 207), word='postgres:postgres'),
  WordNode(pos=(208, 223), word='$postgresHome', parts=[
    ParameterNode(pos=(209, 222), value='postgresHome'),
  ]),
])


2225) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


2226) wget -O postgresql.tar.bz2 "https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2"

CommandNode(pos=(93, 203), parts=[
  WordNode(pos=(93, 97), word='wget'),
  WordNode(pos=(98, 100), word='-O'),
  WordNode(pos=(101, 119), word='postgresql.tar.bz2'),
  WordNode(pos=(120, 203), word='https://ftp.postgresql.org/pub/source/v$PG_VERSION/postgresql-$PG_VERSION.tar.bz2', parts=[
    ParameterNode(pos=(160, 171), value='PG_VERSION'),
    ParameterNode(pos=(183, 194), value='PG_VERSION'),
  ]),
])


2227) echo "$PG_SHA256 *postgresql.tar.bz2"

CommandNode(pos=(208, 245), parts=[
  WordNode(pos=(208, 212), word='echo'),
  WordNode(pos=(213, 245), word='$PG_SHA256 *postgresql.tar.bz2', parts=[
    ParameterNode(pos=(214, 224), value='PG_SHA256'),
  ]),
])


2228) ./configure   --build="$gnuArch"   --enable-integer-datetimes   --enable-thread-safety   --enable-tap-tests   --disable-rpath   --with-uuid=e2fs   --with-gnu-ld   --with-pgport=5432   --with-system-tzdata=/usr/share/zoneinfo   --prefix=/usr/local   --with-includes=/usr/local/include   --with-libraries=/usr/local/lib     --with-openssl   --with-libxml   --with-libxslt   --with-icu

CommandNode(pos=(1395, 1777), parts=[
  WordNode(pos=(1395, 1406), word='./configure'),
  WordNode(pos=(1409, 1427), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1418, 1426), value='gnuArch'),
  ]),
  WordNode(pos=(1430, 1456), word='--enable-integer-datetimes'),
  WordNode(pos=(1459, 1481), word='--enable-thread-safety'),
  WordNode(pos=(1484, 1502), word='--enable-tap-tests'),
  WordNode(pos=(1505, 1520), word='--disable-rpath'),
  WordNode(pos=(1523, 1539), word='--with-uuid=e2fs'),
  WordNode(pos=(1542, 1555), word='--with-gnu-ld'),
  WordNode(pos=(1558, 1576), word='--with-pgport=5432'),
  WordNode(pos=(1579, 1619), word='--with-system-tzdata=/usr/share/zoneinfo'),
  WordNode(pos=(1622, 1641), word='--prefix=/usr/local'),
  WordNode(pos=(1644, 1678), word='--with-includes=/usr/local/include'),
  WordNode(pos=(1681, 1712), word='--with-libraries=/usr/local/lib'),
  WordNode(pos=(1717, 1731), word='--with-openssl'),
  WordNode(pos=(1734, 1747), word='--with-libxml'),
  WordNode(pos=(1750, 1764), word='--with-libxslt'),
  WordNode(pos=(1767, 1777), word='--with-icu'),
])


2229) apk add --no-cache --virtual .postgresql-rundeps   $runDeps   bash   su-exec   tzdata

CommandNode(pos=(2065, 2150), parts=[
  WordNode(pos=(2065, 2068), word='apk'),
  WordNode(pos=(2069, 2072), word='add'),
  WordNode(pos=(2073, 2083), word='--no-cache'),
  WordNode(pos=(2084, 2093), word='--virtual'),
  WordNode(pos=(2094, 2113), word='.postgresql-rundeps'),
  WordNode(pos=(2116, 2124), word='$runDeps', parts=[
    ParameterNode(pos=(2116, 2124), value='runDeps'),
  ]),
  WordNode(pos=(2127, 2131), word='bash'),
  WordNode(pos=(2134, 2141), word='su-exec'),
  WordNode(pos=(2144, 2150), word='tzdata'),
])


2230) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


2231) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


2232) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


2233) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


2234) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


2235) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


2236) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


2237) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


2238) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


2239) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


2240) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


2241) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


2242) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


2243) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


2244) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


2245) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


2246) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(101, 162), parts=[
  WordNode(pos=(101, 104), word='tee'),
  WordNode(pos=(105, 162), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(130, 156), value='MONGO_PACKAGE%-unstable'),
  ]),
])


2247) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2248) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2249) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2250) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2251) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2252) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2253) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2254) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2255) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2256) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2257) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


2258) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2259) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


2260) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


2261) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


2262) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


2263) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


2264) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


2265) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


2266) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


2267) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


2268) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


2269) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


2270) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


2271) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


2272) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


2273) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


2274) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


2275) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


2276) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


2277) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


2278) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


2279) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


2280) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


2281) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


2282) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


2283) echo "deb http://deb.debian.org/debian $suite-backports main" > /etc/apt/sources.list.d/backports.list

CommandNode(pos=(211, 313), parts=[
  WordNode(pos=(211, 215), word='echo'),
  WordNode(pos=(216, 272), word='deb http://deb.debian.org/debian $suite-backports main', parts=[
    ParameterNode(pos=(250, 256), value='suite'),
  ]),
  RedirectNode(output=
    WordNode(pos=(275, 313), word='/etc/apt/sources.list.d/backports.list'), pos=(273, 313), type='>'),
])


2284) apt-get install -y --no-install-recommends -t "$suite-backports"   golang-go

CommandNode(pos=(333, 409), parts=[
  WordNode(pos=(333, 340), word='apt-get'),
  WordNode(pos=(341, 348), word='install'),
  WordNode(pos=(349, 351), word='-y'),
  WordNode(pos=(352, 375), word='--no-install-recommends'),
  WordNode(pos=(376, 378), word='-t'),
  WordNode(pos=(379, 397), word='$suite-backports', parts=[
    ParameterNode(pos=(380, 386), value='suite'),
  ]),
  WordNode(pos=(400, 409), word='golang-go'),
])


2285) mkdir -p "$BASHBREW_CACHE"

CommandNode(pos=(0, 26), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 26), word='$BASHBREW_CACHE', parts=[
    ParameterNode(pos=(10, 25), value='BASHBREW_CACHE'),
  ]),
])


2286) chmod 1777 "$BASHBREW_CACHE"

CommandNode(pos=(31, 59), parts=[
  WordNode(pos=(31, 36), word='chmod'),
  WordNode(pos=(37, 41), word='1777'),
  WordNode(pos=(42, 59), word='$BASHBREW_CACHE', parts=[
    ParameterNode(pos=(43, 58), value='BASHBREW_CACHE'),
  ]),
])


2287) ln -s "$PWD/bashbrew/bashbrew-entrypoint.sh" /usr/local/bin/bashbrew-entrypoint.sh

CommandNode(pos=(0, 82), parts=[
  WordNode(pos=(0, 2), word='ln'),
  WordNode(pos=(3, 5), word='-s'),
  WordNode(pos=(6, 44), word='$PWD/bashbrew/bashbrew-entrypoint.sh', parts=[
    ParameterNode(pos=(7, 11), value='PWD'),
  ]),
  WordNode(pos=(45, 82), word='/usr/local/bin/bashbrew-entrypoint.sh'),
])


2288) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2289) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2290) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2291) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2292) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2293) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2294) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2295) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2296) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2297) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2298) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2299) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2300) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2301) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2302) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2303) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2304) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2305) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2306) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2307) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2308) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2309) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2310) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2311) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2312) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2313) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


2314) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


2315) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


2316) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


2317) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


2318) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


2319) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


2320) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


2321) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


2322) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


2323) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


2324) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


2325) echo "deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse"

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 98), word='deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(47, 73), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(74, 86), value='MONGO_MAJOR'),
  ]),
])


2326) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(101, 162), parts=[
  WordNode(pos=(101, 104), word='tee'),
  WordNode(pos=(105, 162), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(130, 156), value='MONGO_PACKAGE%-unstable'),
  ]),
])


2327) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2328) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2329) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2330) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2331) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2332) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2333) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2334) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2335) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2336) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2337) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


2338) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


2339) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


2340) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


2341) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


2342) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


2343) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


2344) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


2345) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(259, 296), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 281), word='haproxy.tar.gz'),
  WordNode(pos=(282, 296), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(283, 295), value='HAPROXY_URL'),
  ]),
])


2346) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(301, 339), parts=[
  WordNode(pos=(301, 305), word='echo'),
  WordNode(pos=(306, 339), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(307, 322), value='HAPROXY_SHA256'),
  ]),
])


2347) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(639, 691), parts=[
  WordNode(pos=(639, 643), word='make'),
  WordNode(pos=(644, 646), word='-C'),
  WordNode(pos=(647, 663), word='/usr/src/haproxy'),
  WordNode(pos=(664, 666), word='-j'),
  WordNode(pos=(667, 677), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(670, 675), parts=[
        WordNode(pos=(670, 675), word='nproc'),
      ]), pos=(668, 676)),
  ]),
  WordNode(pos=(678, 681), word='all'),
  WordNode(pos=(682, 691), word='$makeOpts', parts=[
    ParameterNode(pos=(682, 691), value='makeOpts'),
  ]),
])


2348) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(696, 742), parts=[
  WordNode(pos=(696, 700), word='make'),
  WordNode(pos=(701, 703), word='-C'),
  WordNode(pos=(704, 720), word='/usr/src/haproxy'),
  WordNode(pos=(721, 732), word='install-bin'),
  WordNode(pos=(733, 742), word='$makeOpts', parts=[
    ParameterNode(pos=(733, 742), value='makeOpts'),
  ]),
])


2349) [ -z "$savedAptMark" ]

CommandNode(pos=(927, 949), parts=[
  WordNode(pos=(927, 928), word='['),
  WordNode(pos=(929, 931), word='-z'),
  WordNode(pos=(932, 947), word='$savedAptMark', parts=[
    ParameterNode(pos=(933, 946), value='savedAptMark'),
  ]),
  WordNode(pos=(948, 949), word=']'),
])


2350) apt-mark manual $savedAptMark

CommandNode(pos=(953, 982), parts=[
  WordNode(pos=(953, 961), word='apt-mark'),
  WordNode(pos=(962, 968), word='manual'),
  WordNode(pos=(969, 982), word='$savedAptMark', parts=[
    ParameterNode(pos=(969, 982), value='savedAptMark'),
  ]),
])


2351) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


2352) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


2353) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(666, 709), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 672), word='-rf'),
  WordNode(pos=(673, 685), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(674, 684), value='GNUPGHOME'),
  ]),
  WordNode(pos=(686, 709), word='/usr/local/bin/gosu.asc'),
])


2354) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 304), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 219), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 240), parts=[
    WordNode(pos=(222, 229), word='command'),
    WordNode(pos=(230, 232), word='-v'),
    WordNode(pos=(233, 240), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(241, 243)),
  CommandNode(pos=(244, 262), parts=[
    WordNode(pos=(244, 251), word='gpgconf'),
    WordNode(pos=(252, 258), word='--kill'),
    WordNode(pos=(259, 262), word='all'),
  ]),
  OperatorNode(op='||', pos=(263, 265)),
  CommandNode(pos=(266, 267), parts=[
    WordNode(pos=(266, 267), word=':'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 289), parts=[
    WordNode(pos=(270, 272), word='rm'),
    WordNode(pos=(273, 276), word='-rf'),
    WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(278, 288), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(289, 290)),
  CommandNode(pos=(292, 304), parts=[
    WordNode(pos=(292, 299), word='apt-key'),
    WordNode(pos=(300, 304), word='list'),
  ]),
])


2355) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


2356) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg

CommandNode(pos=(150, 219), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
])


2357) rm -rf "$GNUPGHOME"

CommandNode(pos=(270, 289), parts=[
  WordNode(pos=(270, 272), word='rm'),
  WordNode(pos=(273, 276), word='-rf'),
  WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(278, 288), value='GNUPGHOME'),
  ]),
])


2358) mkdir -p /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 27), word='/var/lib/cassandra'),
  WordNode(pos=(28, 47), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(29, 46), value='CASSANDRA_CONFIG'),
  ]),
])


2359) chown -R cassandra:cassandra /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(52, 119), parts=[
  WordNode(pos=(52, 57), word='chown'),
  WordNode(pos=(58, 60), word='-R'),
  WordNode(pos=(61, 80), word='cassandra:cassandra'),
  WordNode(pos=(81, 99), word='/var/lib/cassandra'),
  WordNode(pos=(100, 119), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(101, 118), value='CASSANDRA_CONFIG'),
  ]),
])


2360) chmod 777 /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(124, 172), parts=[
  WordNode(pos=(124, 129), word='chmod'),
  WordNode(pos=(130, 133), word='777'),
  WordNode(pos=(134, 152), word='/var/lib/cassandra'),
  WordNode(pos=(153, 172), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(154, 171), value='CASSANDRA_CONFIG'),
  ]),
])


2361) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2362) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(107, 136), parts=[
  WordNode(pos=(107, 111), word='wget'),
  WordNode(pos=(112, 114), word='-O'),
  WordNode(pos=(115, 125), word='php.tar.xz'),
  WordNode(pos=(126, 136), word='$PHP_URL', parts=[
    ParameterNode(pos=(127, 135), value='PHP_URL'),
  ]),
])


2363) [ -n "$PHP_SHA256" ]

CommandNode(pos=(143, 163), parts=[
  WordNode(pos=(143, 144), word='['),
  WordNode(pos=(145, 147), word='-n'),
  WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(149, 160), value='PHP_SHA256'),
  ]),
  WordNode(pos=(162, 163), word=']'),
])


2364) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(172, 202), parts=[
  WordNode(pos=(172, 176), word='echo'),
  WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(178, 189), value='PHP_SHA256'),
  ]),
])


2365) [ -n "$PHP_MD5" ]

CommandNode(pos=(230, 247), parts=[
  WordNode(pos=(230, 231), word='['),
  WordNode(pos=(232, 234), word='-n'),
  WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
    ParameterNode(pos=(236, 244), value='PHP_MD5'),
  ]),
  WordNode(pos=(246, 247), word=']'),
])


2366) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(256, 283), parts=[
  WordNode(pos=(256, 260), word='echo'),
  WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(262, 270), value='PHP_MD5'),
  ]),
])


2367) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(309, 330), parts=[
  WordNode(pos=(309, 310), word='['),
  WordNode(pos=(311, 313), word='-n'),
  WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(329, 330), word=']'),
])


2368) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(339, 376), parts=[
  WordNode(pos=(339, 343), word='wget'),
  WordNode(pos=(344, 346), word='-O'),
  WordNode(pos=(347, 361), word='php.tar.xz.asc'),
  WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
  ]),
])


2369) set -xe;   apk add --no-cache --virtual .fetch-deps   gnupg   wget  ;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apk del --no-network .fetch-deps

ListNode(pos=(0, 690), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 66), parts=[
    WordNode(pos=(11, 14), word='apk'),
    WordNode(pos=(15, 18), word='add'),
    WordNode(pos=(19, 29), word='--no-cache'),
    WordNode(pos=(30, 39), word='--virtual'),
    WordNode(pos=(40, 51), word='.fetch-deps'),
    WordNode(pos=(54, 59), word='gnupg'),
    WordNode(pos=(62, 66), word='wget'),
  ]),
  OperatorNode(op=';', pos=(68, 69)),
  CommandNode(pos=(72, 89), parts=[
    WordNode(pos=(72, 77), word='mkdir'),
    WordNode(pos=(78, 80), word='-p'),
    WordNode(pos=(81, 89), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(89, 90)),
  CommandNode(pos=(92, 103), parts=[
    WordNode(pos=(92, 94), word='cd'),
    WordNode(pos=(95, 103), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(103, 104)),
  CommandNode(pos=(107, 136), parts=[
    WordNode(pos=(107, 111), word='wget'),
    WordNode(pos=(112, 114), word='-O'),
    WordNode(pos=(115, 125), word='php.tar.xz'),
    WordNode(pos=(126, 136), word='$PHP_URL', parts=[
      ParameterNode(pos=(127, 135), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(136, 137)),
  CompoundNode(list=[
    IfNode(pos=(140, 224), parts=[
      ReservedwordNode(pos=(140, 142), word='if'),
      ListNode(pos=(143, 164), parts=[
          CommandNode(pos=(143, 163), parts=[
            WordNode(pos=(143, 144), word='['),
            WordNode(pos=(145, 147), word='-n'),
            WordNode(pos=(148, 161), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(149, 160), value='PHP_SHA256'),
            ]),
            WordNode(pos=(162, 163), word=']'),
          ]),
          OperatorNode(op=';', pos=(163, 164)),
        ]),
      ReservedwordNode(pos=(165, 169), word='then'),
      ListNode(pos=(172, 220), parts=[
          PipelineNode(pos=(172, 219), parts=[
            CommandNode(pos=(172, 202), parts=[
              WordNode(pos=(172, 176), word='echo'),
              WordNode(pos=(177, 202), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(178, 189), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(203, 204)),
            CommandNode(pos=(205, 219), parts=[
              WordNode(pos=(205, 214), word='sha256sum'),
              WordNode(pos=(215, 217), word='-c'),
              WordNode(pos=(218, 219), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(219, 220)),
        ]),
      ReservedwordNode(pos=(222, 224), word='fi'),
    ]),
  ], pos=(140, 224)),
  OperatorNode(op=';', pos=(224, 225)),
  CompoundNode(list=[
    IfNode(pos=(227, 302), parts=[
      ReservedwordNode(pos=(227, 229), word='if'),
      ListNode(pos=(230, 248), parts=[
          CommandNode(pos=(230, 247), parts=[
            WordNode(pos=(230, 231), word='['),
            WordNode(pos=(232, 234), word='-n'),
            WordNode(pos=(235, 245), word='$PHP_MD5', parts=[
              ParameterNode(pos=(236, 244), value='PHP_MD5'),
            ]),
            WordNode(pos=(246, 247), word=']'),
          ]),
          OperatorNode(op=';', pos=(247, 248)),
        ]),
      ReservedwordNode(pos=(249, 253), word='then'),
      ListNode(pos=(256, 298), parts=[
          PipelineNode(pos=(256, 297), parts=[
            CommandNode(pos=(256, 283), parts=[
              WordNode(pos=(256, 260), word='echo'),
              WordNode(pos=(261, 283), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(262, 270), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(284, 285)),
            CommandNode(pos=(286, 297), parts=[
              WordNode(pos=(286, 292), word='md5sum'),
              WordNode(pos=(293, 295), word='-c'),
              WordNode(pos=(296, 297), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(297, 298)),
        ]),
      ReservedwordNode(pos=(300, 302), word='fi'),
    ]),
  ], pos=(227, 302)),
  OperatorNode(op=';', pos=(302, 303)),
  CompoundNode(list=[
    IfNode(pos=(306, 654), parts=[
      ReservedwordNode(pos=(306, 308), word='if'),
      ListNode(pos=(309, 331), parts=[
          CommandNode(pos=(309, 330), parts=[
            WordNode(pos=(309, 310), word='['),
            WordNode(pos=(311, 313), word='-n'),
            WordNode(pos=(314, 328), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(315, 327), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(329, 330), word=']'),
          ]),
          OperatorNode(op=';', pos=(330, 331)),
        ]),
      ReservedwordNode(pos=(332, 336), word='then'),
      ListNode(pos=(339, 650), parts=[
          CommandNode(pos=(339, 376), parts=[
            WordNode(pos=(339, 343), word='wget'),
            WordNode(pos=(344, 346), word='-O'),
            WordNode(pos=(347, 361), word='php.tar.xz.asc'),
            WordNode(pos=(362, 376), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(363, 375), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(376, 377)),
          CommandNode(pos=(380, 411), parts=[
            WordNode(pos=(380, 386), word='export'),
            WordNode(pos=(387, 411), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(400, 409), parts=[
                  WordNode(pos=(400, 406), word='mktemp'),
                  WordNode(pos=(407, 409), word='-d'),
                ]), pos=(398, 410)),
            ]),
          ]),
          OperatorNode(op=';', pos=(411, 412)),
          CompoundNode(list=[
            ForNode(pos=(415, 520), parts=[
              ReservedwordNode(pos=(415, 418), word='for'),
              WordNode(pos=(419, 422), word='key'),
              ReservedwordNode(pos=(423, 425), word='in'),
              WordNode(pos=(426, 435), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(426, 435), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(435, 436), word=';'),
              ReservedwordNode(pos=(437, 439), word='do'),
              ListNode(pos=(443, 513), parts=[
                  CommandNode(pos=(443, 512), parts=[
                    WordNode(pos=(443, 446), word='gpg'),
                    WordNode(pos=(447, 454), word='--batch'),
                    WordNode(pos=(455, 466), word='--keyserver'),
                    WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(494, 505), word='--recv-keys'),
                    WordNode(pos=(506, 512), word='$key', parts=[
                      ParameterNode(pos=(507, 511), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(512, 513)),
                ]),
              ReservedwordNode(pos=(516, 520), word='done'),
            ]),
          ], pos=(415, 520)),
          OperatorNode(op=';', pos=(520, 521)),
          CommandNode(pos=(524, 570), parts=[
            WordNode(pos=(524, 527), word='gpg'),
            WordNode(pos=(528, 535), word='--batch'),
            WordNode(pos=(536, 544), word='--verify'),
            WordNode(pos=(545, 559), word='php.tar.xz.asc'),
            WordNode(pos=(560, 570), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(570, 571)),
          CommandNode(pos=(574, 604), parts=[
            WordNode(pos=(574, 581), word='command'),
            WordNode(pos=(582, 584), word='-v'),
            WordNode(pos=(585, 592), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(595, 604), word='/dev/null'), pos=(593, 604), type='>'),
          ]),
          OperatorNode(op='&&', pos=(605, 607)),
          CommandNode(pos=(608, 626), parts=[
            WordNode(pos=(608, 615), word='gpgconf'),
            WordNode(pos=(616, 622), word='--kill'),
            WordNode(pos=(623, 626), word='all'),
          ]),
          OperatorNode(op=';', pos=(626, 627)),
          CommandNode(pos=(630, 649), parts=[
            WordNode(pos=(630, 632), word='rm'),
            WordNode(pos=(633, 636), word='-rf'),
            WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(638, 648), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(649, 650)),
        ]),
      ReservedwordNode(pos=(652, 654), word='fi'),
    ]),
  ], pos=(306, 654)),
  OperatorNode(op=';', pos=(654, 655)),
  CommandNode(pos=(658, 690), parts=[
    WordNode(pos=(658, 661), word='apk'),
    WordNode(pos=(662, 665), word='del'),
    WordNode(pos=(666, 678), word='--no-network'),
    WordNode(pos=(679, 690), word='.fetch-deps'),
  ]),
])


2370) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(443, 512), parts=[
  WordNode(pos=(443, 446), word='gpg'),
  WordNode(pos=(447, 454), word='--batch'),
  WordNode(pos=(455, 466), word='--keyserver'),
  WordNode(pos=(467, 493), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(494, 505), word='--recv-keys'),
  WordNode(pos=(506, 512), word='$key', parts=[
    ParameterNode(pos=(507, 511), value='key'),
  ]),
])


2371) rm -rf "$GNUPGHOME"

CommandNode(pos=(630, 649), parts=[
  WordNode(pos=(630, 632), word='rm'),
  WordNode(pos=(633, 636), word='-rf'),
  WordNode(pos=(637, 649), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(638, 648), value='GNUPGHOME'),
  ]),
])


2372) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2373) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2374) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2375) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2376) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2377) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2378) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2379) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2380) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2381) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2382) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2383) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2384) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2385) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2386) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2387) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2388) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2389) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2390) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2391) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2392) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2393) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2394) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2395) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2396) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2397) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


2398) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


2399) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


2400) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


2401) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


2402) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(666, 709), parts=[
  WordNode(pos=(666, 668), word='rm'),
  WordNode(pos=(669, 672), word='-rf'),
  WordNode(pos=(673, 685), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(674, 684), value='GNUPGHOME'),
  ]),
  WordNode(pos=(686, 709), word='/usr/local/bin/gosu.asc'),
])


2403) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 304), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 219), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
  ]),
  OperatorNode(op=';', pos=(219, 220)),
  CommandNode(pos=(222, 240), parts=[
    WordNode(pos=(222, 229), word='command'),
    WordNode(pos=(230, 232), word='-v'),
    WordNode(pos=(233, 240), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(241, 243)),
  CommandNode(pos=(244, 262), parts=[
    WordNode(pos=(244, 251), word='gpgconf'),
    WordNode(pos=(252, 258), word='--kill'),
    WordNode(pos=(259, 262), word='all'),
  ]),
  OperatorNode(op='||', pos=(263, 265)),
  CommandNode(pos=(266, 267), parts=[
    WordNode(pos=(266, 267), word=':'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 289), parts=[
    WordNode(pos=(270, 272), word='rm'),
    WordNode(pos=(273, 276), word='-rf'),
    WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(278, 288), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(289, 290)),
  CommandNode(pos=(292, 304), parts=[
    WordNode(pos=(292, 299), word='apt-key'),
    WordNode(pos=(300, 304), word='list'),
  ]),
])


2404) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


2405) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/cassandra.gpg

CommandNode(pos=(150, 219), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 219), word='/etc/apt/trusted.gpg.d/cassandra.gpg'), pos=(181, 219), type='>'),
])


2406) rm -rf "$GNUPGHOME"

CommandNode(pos=(270, 289), parts=[
  WordNode(pos=(270, 272), word='rm'),
  WordNode(pos=(273, 276), word='-rf'),
  WordNode(pos=(277, 289), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(278, 288), value='GNUPGHOME'),
  ]),
])


2407) mkdir -p /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(0, 47), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 27), word='/var/lib/cassandra'),
  WordNode(pos=(28, 47), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(29, 46), value='CASSANDRA_CONFIG'),
  ]),
])


2408) chown -R cassandra:cassandra /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(52, 119), parts=[
  WordNode(pos=(52, 57), word='chown'),
  WordNode(pos=(58, 60), word='-R'),
  WordNode(pos=(61, 80), word='cassandra:cassandra'),
  WordNode(pos=(81, 99), word='/var/lib/cassandra'),
  WordNode(pos=(100, 119), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(101, 118), value='CASSANDRA_CONFIG'),
  ]),
])


2409) chmod 777 /var/lib/cassandra "$CASSANDRA_CONFIG"

CommandNode(pos=(124, 172), parts=[
  WordNode(pos=(124, 129), word='chmod'),
  WordNode(pos=(130, 133), word='777'),
  WordNode(pos=(134, 152), word='/var/lib/cassandra'),
  WordNode(pos=(153, 172), word='$CASSANDRA_CONFIG', parts=[
    ParameterNode(pos=(154, 171), value='CASSANDRA_CONFIG'),
  ]),
])


2410) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


2411) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


2412) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(634, 677), parts=[
  WordNode(pos=(634, 636), word='rm'),
  WordNode(pos=(637, 640), word='-rf'),
  WordNode(pos=(641, 653), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(642, 652), value='GNUPGHOME'),
  ]),
  WordNode(pos=(654, 677), word='/usr/local/bin/gosu.asc'),
])


2413) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


2414) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/mysql.gpg

CommandNode(pos=(165, 227), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 227), word='/etc/apt/trusted.gpg.d/mysql.gpg'), pos=(193, 227), type='>'),
])


2415) rm -rf "$GNUPGHOME"

CommandNode(pos=(251, 270), parts=[
  WordNode(pos=(251, 253), word='rm'),
  WordNode(pos=(254, 257), word='-rf'),
  WordNode(pos=(258, 270), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(259, 269), value='GNUPGHOME'),
  ]),
])


2416) echo "deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}" > /etc/apt/sources.list.d/mysql.list

CommandNode(pos=(0, 110), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 73), word='deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}', parts=[
    ParameterNode(pos=(58, 72), value='MYSQL_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(76, 110), word='/etc/apt/sources.list.d/mysql.list'), pos=(74, 110), type='>'),
])


2417) apt-get install -y mysql-server="${MYSQL_VERSION}"

CommandNode(pos=(362, 412), parts=[
  WordNode(pos=(362, 369), word='apt-get'),
  WordNode(pos=(370, 377), word='install'),
  WordNode(pos=(378, 380), word='-y'),
  WordNode(pos=(381, 412), word='mysql-server=${MYSQL_VERSION}', parts=[
    ParameterNode(pos=(395, 411), value='MYSQL_VERSION'),
  ]),
])


2418) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


2419) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


2420) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


2421) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


2422) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


2423) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


2424) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1143, 1295), parts=[
  WordNode(pos=(1143, 1154), word='./configure'),
  WordNode(pos=(1157, 1175), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1166, 1174), value='gnuArch'),
  ]),
  WordNode(pos=(1178, 1213), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1216, 1231), word='--enable-shared'),
  WordNode(pos=(1234, 1253), word='--with-system-expat'),
  WordNode(pos=(1256, 1273), word='--with-system-ffi'),
  WordNode(pos=(1276, 1295), word='--without-ensurepip'),
])


2425) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


2426) [ -n "$zfs" ]

CommandNode(pos=(159, 172), parts=[
  WordNode(pos=(159, 160), word='['),
  WordNode(pos=(161, 163), word='-n'),
  WordNode(pos=(164, 170), word='$zfs', parts=[
    ParameterNode(pos=(165, 169), value='zfs'),
  ]),
  WordNode(pos=(171, 172), word=']'),
])


2427) wget -O /usr/local/bin/dind "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"

CommandNode(pos=(11, 113), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/dind'),
  WordNode(pos=(39, 113), word='https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind', parts=[
    ParameterNode(pos=(88, 102), value='DIND_COMMIT'),
  ]),
])


2428) docker-php-ext-configure ldap --with-libdir="lib/$debMultiarch"

CommandNode(pos=(147, 210), parts=[
  WordNode(pos=(147, 171), word='docker-php-ext-configure'),
  WordNode(pos=(172, 176), word='ldap'),
  WordNode(pos=(177, 210), word='--with-libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(196, 209), value='debMultiarch'),
  ]),
])


2429) curl -fL -o owncloud.tar.bz2 "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2"

CommandNode(pos=(11, 118), parts=[
  WordNode(pos=(11, 15), word='curl'),
  WordNode(pos=(16, 19), word='-fL'),
  WordNode(pos=(20, 22), word='-o'),
  WordNode(pos=(23, 39), word='owncloud.tar.bz2'),
  WordNode(pos=(40, 118), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2', parts=[
    ParameterNode(pos=(90, 109), value='OWNCLOUD_VERSION'),
  ]),
])


2430) curl -fL -o owncloud.tar.bz2.asc "https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc"

CommandNode(pos=(121, 236), parts=[
  WordNode(pos=(121, 125), word='curl'),
  WordNode(pos=(126, 129), word='-fL'),
  WordNode(pos=(130, 132), word='-o'),
  WordNode(pos=(133, 153), word='owncloud.tar.bz2.asc'),
  WordNode(pos=(154, 236), word='https://download.owncloud.org/community/owncloud-${OWNCLOUD_VERSION}.tar.bz2.asc', parts=[
    ParameterNode(pos=(204, 223), value='OWNCLOUD_VERSION'),
  ]),
])


2431) echo "$OWNCLOUD_SHA256 *owncloud.tar.bz2"

CommandNode(pos=(239, 280), parts=[
  WordNode(pos=(239, 243), word='echo'),
  WordNode(pos=(244, 280), word='$OWNCLOUD_SHA256 *owncloud.tar.bz2', parts=[
    ParameterNode(pos=(245, 261), value='OWNCLOUD_SHA256'),
  ]),
])


2432) rm -r "$GNUPGHOME" owncloud.tar.bz2.asc

CommandNode(pos=(549, 588), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 588), word='owncloud.tar.bz2.asc'),
])


2433) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


2434) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(328, 430), parts=[
  WordNode(pos=(328, 332), word='wget'),
  WordNode(pos=(333, 335), word='-O'),
  WordNode(pos=(336, 347), word='ruby.tar.xz'),
  WordNode(pos=(348, 430), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(386, 403), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(409, 422), value='RUBY_VERSION'),
  ]),
])


2435) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(435, 476), parts=[
  WordNode(pos=(435, 439), word='echo'),
  WordNode(pos=(440, 476), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(441, 462), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


2436) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(814, 888), parts=[
  WordNode(pos=(814, 825), word='./configure'),
  WordNode(pos=(828, 846), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(837, 845), value='gnuArch'),
  ]),
  WordNode(pos=(849, 870), word='--disable-install-doc'),
  WordNode(pos=(873, 888), word='--enable-shared'),
])


2437) apt-mark manual $savedAptMark

CommandNode(pos=(969, 998), parts=[
  WordNode(pos=(969, 977), word='apt-mark'),
  WordNode(pos=(978, 984), word='manual'),
  WordNode(pos=(985, 998), word='$savedAptMark', parts=[
    ParameterNode(pos=(985, 998), value='savedAptMark'),
  ]),
])


2438) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1442, 1481), parts=[
  WordNode(pos=(1442, 1445), word='gem'),
  WordNode(pos=(1446, 1452), word='update'),
  WordNode(pos=(1453, 1461), word='--system'),
  WordNode(pos=(1462, 1481), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1463, 1480), value='RUBYGEMS_VERSION'),
  ]),
])


2439) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


2440) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


2441) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


2442) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


2443) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


2444) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


2445) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


2446) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


2447) set -eux;   apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev  ;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   mkdir /usr/local/src;   wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum -c -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum -c -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --no-cache --virtual .otp-run-deps $runDeps;  apk del --no-network .build-deps;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3380), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 159), parts=[
    WordNode(pos=(12, 15), word='apk'),
    WordNode(pos=(16, 19), word='add'),
    WordNode(pos=(20, 30), word='--no-cache'),
    WordNode(pos=(31, 40), word='--virtual'),
    WordNode(pos=(41, 52), word='.build-deps'),
    WordNode(pos=(55, 63), word='autoconf'),
    WordNode(pos=(66, 81), word='ca-certificates'),
    WordNode(pos=(84, 92), word='dpkg-dev'),
    WordNode(pos=(93, 97), word='dpkg'),
    WordNode(pos=(100, 103), word='gcc'),
    WordNode(pos=(106, 111), word='gnupg'),
    WordNode(pos=(114, 122), word='libc-dev'),
    WordNode(pos=(125, 138), word='linux-headers'),
    WordNode(pos=(141, 145), word='make'),
    WordNode(pos=(148, 159), word='ncurses-dev'),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CommandNode(pos=(165, 248), parts=[
    AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(248, 249)),
  CommandNode(pos=(251, 305), parts=[
    AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(305, 306)),
  CommandNode(pos=(308, 345), parts=[
    AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(345, 346)),
  CommandNode(pos=(349, 369), parts=[
    WordNode(pos=(349, 354), word='mkdir'),
    WordNode(pos=(355, 369), word='/usr/local/src'),
  ]),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 448), parts=[
    WordNode(pos=(373, 377), word='wget'),
    WordNode(pos=(378, 395), word='--output-document'),
    WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(448, 449)),
  CommandNode(pos=(451, 518), parts=[
    WordNode(pos=(451, 455), word='wget'),
    WordNode(pos=(456, 473), word='--output-document'),
    WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(518, 519)),
  CommandNode(pos=(521, 552), parts=[
    WordNode(pos=(521, 527), word='export'),
    WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(541, 550), parts=[
          WordNode(pos=(541, 547), word='mktemp'),
          WordNode(pos=(548, 550), word='-d'),
        ]), pos=(539, 551)),
    ]),
  ]),
  OperatorNode(op=';', pos=(552, 553)),
  CompoundNode(list=[
    ForNode(pos=(555, 659), parts=[
      ReservedwordNode(pos=(555, 558), word='for'),
      WordNode(pos=(559, 562), word='key'),
      ReservedwordNode(pos=(563, 565), word='in'),
      WordNode(pos=(566, 586), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(566, 586), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(586, 587), word=';'),
      ReservedwordNode(pos=(588, 590), word='do'),
      ListNode(pos=(593, 653), parts=[
          CommandNode(pos=(593, 652), parts=[
            WordNode(pos=(593, 596), word='gpg'),
            WordNode(pos=(597, 604), word='--batch'),
            WordNode(pos=(605, 616), word='--keyserver'),
            WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(634, 645), word='--recv-keys'),
            WordNode(pos=(646, 652), word='$key', parts=[
              ParameterNode(pos=(647, 651), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(652, 653)),
        ]),
      ReservedwordNode(pos=(655, 659), word='done'),
    ]),
  ], pos=(555, 659)),
  OperatorNode(op=';', pos=(659, 660)),
  CommandNode(pos=(662, 732), parts=[
    WordNode(pos=(662, 665), word='gpg'),
    WordNode(pos=(666, 673), word='--batch'),
    WordNode(pos=(674, 682), word='--verify'),
    WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(732, 733)),
  CommandNode(pos=(735, 753), parts=[
    WordNode(pos=(735, 742), word='gpgconf'),
    WordNode(pos=(743, 749), word='--kill'),
    WordNode(pos=(750, 753), word='all'),
  ]),
  OperatorNode(op=';', pos=(753, 754)),
  CommandNode(pos=(756, 775), parts=[
    WordNode(pos=(756, 758), word='rm'),
    WordNode(pos=(759, 762), word='-rf'),
    WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(764, 774), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(775, 776)),
  PipelineNode(pos=(778, 846), parts=[
    CommandNode(pos=(778, 829), parts=[
      WordNode(pos=(778, 782), word='echo'),
      WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(830, 831)),
    CommandNode(pos=(832, 846), parts=[
      WordNode(pos=(832, 841), word='sha256sum'),
      WordNode(pos=(842, 844), word='-c'),
      WordNode(pos=(845, 846), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(846, 847)),
  CommandNode(pos=(849, 873), parts=[
    WordNode(pos=(849, 854), word='mkdir'),
    WordNode(pos=(855, 857), word='-p'),
    WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(873, 874)),
  CommandNode(pos=(876, 968), parts=[
    WordNode(pos=(876, 879), word='tar'),
    WordNode(pos=(880, 889), word='--extract'),
    WordNode(pos=(890, 896), word='--file'),
    WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(920, 931), word='--directory'),
    WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(948, 966), word='--strip-components'),
    WordNode(pos=(967, 968), word='1'),
  ]),
  OperatorNode(op=';', pos=(968, 969)),
  CommandNode(pos=(972, 990), parts=[
    WordNode(pos=(972, 974), word='cd'),
    WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(990, 991)),
  CommandNode(pos=(993, 1142), parts=[
    AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1004, 1047), parts=[
          WordNode(pos=(1004, 1021), word='dpkg-architecture'),
          WordNode(pos=(1022, 1029), word='--query'),
          WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1002, 1048)),
    ]),
    AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
    WordNode(pos=(1099, 1107), word='./config'),
    WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1142, 1143)),
  CommandNode(pos=(1145, 1183), parts=[
    WordNode(pos=(1145, 1149), word='make'),
    WordNode(pos=(1150, 1152), word='-j'),
    WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1156, 1181), parts=[
          WordNode(pos=(1156, 1163), word='getconf'),
          WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
        ]), pos=(1154, 1182)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1183, 1184)),
  CommandNode(pos=(1186, 1217), parts=[
    WordNode(pos=(1186, 1190), word='make'),
    WordNode(pos=(1191, 1201), word='install_sw'),
    WordNode(pos=(1202, 1217), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1217, 1218)),
  CommandNode(pos=(1220, 1225), parts=[
    WordNode(pos=(1220, 1222), word='cd'),
    WordNode(pos=(1223, 1225), word='..'),
  ]),
  OperatorNode(op=';', pos=(1225, 1226)),
  CommandNode(pos=(1228, 1251), parts=[
    WordNode(pos=(1228, 1230), word='rm'),
    WordNode(pos=(1231, 1234), word='-rf'),
    WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1251, 1252)),
  CommandNode(pos=(1254, 1317), parts=[
    WordNode(pos=(1254, 1259), word='rmdir'),
    WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1317, 1318)),
  CommandNode(pos=(1320, 1380), parts=[
    WordNode(pos=(1320, 1322), word='ln'),
    WordNode(pos=(1323, 1326), word='-sf'),
    WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
    WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
    WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1380, 1381)),
  CommandNode(pos=(1383, 1398), parts=[
    WordNode(pos=(1383, 1390), word='openssl'),
    WordNode(pos=(1391, 1398), word='version'),
  ]),
  OperatorNode(op=';', pos=(1398, 1399)),
  CommandNode(pos=(1402, 1480), parts=[
    AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1480, 1481)),
  CommandNode(pos=(1483, 1525), parts=[
    AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1525, 1526)),
  CommandNode(pos=(1529, 1549), parts=[
    WordNode(pos=(1529, 1534), word='mkdir'),
    WordNode(pos=(1535, 1537), word='-p'),
    WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1549, 1550)),
  CommandNode(pos=(1552, 1611), parts=[
    WordNode(pos=(1552, 1556), word='wget'),
    WordNode(pos=(1557, 1574), word='--output-document'),
    WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
    ]),
    WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1611, 1612)),
  PipelineNode(pos=(1614, 1674), parts=[
    CommandNode(pos=(1614, 1657), parts=[
      WordNode(pos=(1614, 1618), word='echo'),
      WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1658, 1659)),
    CommandNode(pos=(1660, 1674), parts=[
      WordNode(pos=(1660, 1669), word='sha256sum'),
      WordNode(pos=(1670, 1672), word='-c'),
      WordNode(pos=(1673, 1674), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1674, 1675)),
  CommandNode(pos=(1677, 1761), parts=[
    WordNode(pos=(1677, 1680), word='tar'),
    WordNode(pos=(1681, 1690), word='--extract'),
    WordNode(pos=(1691, 1697), word='--file'),
    WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
    ]),
    WordNode(pos=(1717, 1728), word='--directory'),
    WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
    ]),
    WordNode(pos=(1741, 1759), word='--strip-components'),
    WordNode(pos=(1760, 1761), word='1'),
  ]),
  OperatorNode(op=';', pos=(1761, 1762)),
  CommandNode(pos=(1765, 1779), parts=[
    WordNode(pos=(1765, 1767), word='cd'),
    WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1779, 1780)),
  CommandNode(pos=(1782, 1808), parts=[
    WordNode(pos=(1782, 1788), word='export'),
    WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1808, 1809)),
  CommandNode(pos=(1811, 1831), parts=[
    WordNode(pos=(1811, 1822), word='./otp_build'),
    WordNode(pos=(1823, 1831), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(1831, 1832)),
  CommandNode(pos=(1834, 1874), parts=[
    AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1844, 1872), parts=[
          WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
          WordNode(pos=(1860, 1865), word='--get'),
          WordNode(pos=(1866, 1872), word='CFLAGS'),
        ]), pos=(1842, 1873)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1874, 1875)),
  CommandNode(pos=(1876, 1889), parts=[
    WordNode(pos=(1876, 1882), word='export'),
    WordNode(pos=(1883, 1889), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(1889, 1890)),
  CommandNode(pos=(1892, 1949), parts=[
    AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1904, 1947), parts=[
          WordNode(pos=(1904, 1921), word='dpkg-architecture'),
          WordNode(pos=(1922, 1929), word='--query'),
          WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(1902, 1948)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1949, 1950)),
  CommandNode(pos=(1952, 2011), parts=[
    AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1965, 2009), parts=[
          WordNode(pos=(1965, 1982), word='dpkg-architecture'),
          WordNode(pos=(1983, 1990), word='--query'),
          WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1963, 2010)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2011, 2012)),
  CommandNode(pos=(2014, 2053), parts=[
    AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2026, 2051), parts=[
          WordNode(pos=(2026, 2030), word='dpkg'),
          WordNode(pos=(2031, 2051), word='--print-architecture'),
        ]), pos=(2024, 2052)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2053, 2054)),
  CommandNode(pos=(2055, 2081), parts=[
    AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2081, 2082)),
  CommandNode(pos=(2084, 2766), parts=[
    WordNode(pos=(2084, 2095), word='./configure'),
    WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2106, 2115), value='hostArch'),
    ]),
    WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2128, 2138), value='buildArch'),
    ]),
    WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2170, 2184), word='--disable-hipe'),
    WordNode(pos=(2187, 2201), word='--disable-sctp'),
    WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
    WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
    WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
    WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
    WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
    WordNode(pos=(2323, 2343), word='--enable-smp-support'),
    WordNode(pos=(2346, 2362), word='--enable-threads'),
    WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2402, 2423), word='--without-common_test'),
    WordNode(pos=(2426, 2444), word='--without-debugger'),
    WordNode(pos=(2447, 2465), word='--without-dialyzer'),
    WordNode(pos=(2468, 2486), word='--without-diameter'),
    WordNode(pos=(2489, 2503), word='--without-edoc'),
    WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
    WordNode(pos=(2529, 2552), word='--without-erl_interface'),
    WordNode(pos=(2555, 2567), word='--without-et'),
    WordNode(pos=(2570, 2585), word='--without-eunit'),
    WordNode(pos=(2588, 2601), word='--without-ftp'),
    WordNode(pos=(2604, 2618), word='--without-hipe'),
    WordNode(pos=(2621, 2641), word='--without-jinterface'),
    WordNode(pos=(2644, 2660), word='--without-megaco'),
    WordNode(pos=(2663, 2681), word='--without-observer'),
    WordNode(pos=(2684, 2698), word='--without-odbc'),
    WordNode(pos=(2701, 2718), word='--without-reltool'),
    WordNode(pos=(2721, 2734), word='--without-ssh'),
    WordNode(pos=(2737, 2751), word='--without-tftp'),
    WordNode(pos=(2754, 2766), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(2768, 2769)),
  CommandNode(pos=(2771, 2849), parts=[
    WordNode(pos=(2771, 2775), word='make'),
    WordNode(pos=(2776, 2778), word='-j'),
    WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2782, 2807), parts=[
          WordNode(pos=(2782, 2789), word='getconf'),
          WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
        ]), pos=(2780, 2808)),
    ]),
    WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(2849, 2850)),
  CommandNode(pos=(2852, 2864), parts=[
    WordNode(pos=(2852, 2856), word='make'),
    WordNode(pos=(2857, 2864), word='install'),
  ]),
  OperatorNode(op=';', pos=(2864, 2865)),
  CommandNode(pos=(2867, 2872), parts=[
    WordNode(pos=(2867, 2869), word='cd'),
    WordNode(pos=(2870, 2872), word='..'),
  ]),
  OperatorNode(op=';', pos=(2872, 2873)),
  CommandNode(pos=(2875, 2969), parts=[
    WordNode(pos=(2875, 2877), word='rm'),
    WordNode(pos=(2878, 2881), word='-rf'),
    WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
    ]),
    WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(2971, 2972)),
  CommandNode(pos=(2975, 3172), parts=[
    AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2989, 3168), parts=[
          CommandNode(pos=(2989, 3055), parts=[
            WordNode(pos=(2989, 2996), word='scanelf'),
            WordNode(pos=(2997, 3005), word='--needed'),
            WordNode(pos=(3006, 3016), word='--nobanner'),
            WordNode(pos=(3017, 3025), word='--format'),
            WordNode(pos=(3026, 3032), word='%n#p'),
            WordNode(pos=(3033, 3044), word='--recursive'),
            WordNode(pos=(3045, 3055), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(3059, 3060)),
          CommandNode(pos=(3061, 3072), parts=[
            WordNode(pos=(3061, 3063), word='tr'),
            WordNode(pos=(3064, 3067), word=','),
            WordNode(pos=(3068, 3072), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(3076, 3077)),
          CommandNode(pos=(3078, 3085), parts=[
            WordNode(pos=(3078, 3082), word='sort'),
            WordNode(pos=(3083, 3085), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(3089, 3090)),
          CommandNode(pos=(3091, 3168), parts=[
            WordNode(pos=(3091, 3094), word='awk'),
            WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2984, 3169)),
    ]),
  ]),
  OperatorNode(op=';', pos=(3172, 3173)),
  CommandNode(pos=(3175, 3226), parts=[
    WordNode(pos=(3175, 3178), word='apk'),
    WordNode(pos=(3179, 3182), word='add'),
    WordNode(pos=(3183, 3193), word='--no-cache'),
    WordNode(pos=(3194, 3203), word='--virtual'),
    WordNode(pos=(3204, 3217), word='.otp-run-deps'),
    WordNode(pos=(3218, 3226), word='$runDeps', parts=[
      ParameterNode(pos=(3218, 3226), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3226, 3227)),
  CommandNode(pos=(3229, 3261), parts=[
    WordNode(pos=(3229, 3232), word='apk'),
    WordNode(pos=(3233, 3236), word='del'),
    WordNode(pos=(3237, 3249), word='--no-network'),
    WordNode(pos=(3250, 3261), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(3261, 3262)),
  CommandNode(pos=(3265, 3280), parts=[
    WordNode(pos=(3265, 3272), word='openssl'),
    WordNode(pos=(3273, 3280), word='version'),
  ]),
  OperatorNode(op=';', pos=(3280, 3281)),
  CommandNode(pos=(3283, 3380), parts=[
    WordNode(pos=(3283, 3286), word='erl'),
    WordNode(pos=(3287, 3295), word='-noshell'),
    WordNode(pos=(3296, 3301), word='-eval'),
    WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


2448) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


2449) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


2450) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


2451) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


2452) rm -rf "$GNUPGHOME"

CommandNode(pos=(756, 775), parts=[
  WordNode(pos=(756, 758), word='rm'),
  WordNode(pos=(759, 762), word='-rf'),
  WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(764, 774), value='GNUPGHOME'),
  ]),
])


2453) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


2454) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


2455) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(849, 873), parts=[
  WordNode(pos=(849, 854), word='mkdir'),
  WordNode(pos=(855, 857), word='-p'),
  WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
  ]),
])


2456) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


2457) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


2458) cd "$OPENSSL_PATH"

CommandNode(pos=(972, 990), parts=[
  WordNode(pos=(972, 974), word='cd'),
  WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
  ]),
])


2459) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


2460) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1228, 1251), parts=[
  WordNode(pos=(1228, 1230), word='rm'),
  WordNode(pos=(1231, 1234), word='-rf'),
  WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
  ]),
])


2461) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


2462) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


2463) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1320, 1380), parts=[
  WordNode(pos=(1320, 1322), word='ln'),
  WordNode(pos=(1323, 1326), word='-sf'),
  WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
  WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
  WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
  ]),
])


2464) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


2465) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


2466) mkdir -p "$OTP_PATH"

CommandNode(pos=(1529, 1549), parts=[
  WordNode(pos=(1529, 1534), word='mkdir'),
  WordNode(pos=(1535, 1537), word='-p'),
  WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
  ]),
])


2467) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


2468) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


2469) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


2470) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


2471) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


2472) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


2473) cd "$OTP_PATH"

CommandNode(pos=(1765, 1779), parts=[
  WordNode(pos=(1765, 1767), word='cd'),
  WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
  ]),
])


2474) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(1782, 1808), parts=[
  WordNode(pos=(1782, 1788), word='export'),
  WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
  ]),
])


2475) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


2476) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


2477) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


2478) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(2875, 2969), parts=[
  WordNode(pos=(2875, 2877), word='rm'),
  WordNode(pos=(2878, 2881), word='-rf'),
  WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
  ]),
  WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
])


2479) apk add --no-cache --virtual .otp-run-deps $runDeps

CommandNode(pos=(3175, 3226), parts=[
  WordNode(pos=(3175, 3178), word='apk'),
  WordNode(pos=(3179, 3182), word='add'),
  WordNode(pos=(3183, 3193), word='--no-cache'),
  WordNode(pos=(3194, 3203), word='--virtual'),
  WordNode(pos=(3204, 3217), word='.otp-run-deps'),
  WordNode(pos=(3218, 3226), word='$runDeps', parts=[
    ParameterNode(pos=(3218, 3226), value='runDeps'),
  ]),
])


2480) adduser -u 100 -S -h "$RABBITMQ_DATA_DIR" -G rabbitmq rabbitmq

CommandNode(pos=(41, 103), parts=[
  WordNode(pos=(41, 48), word='adduser'),
  WordNode(pos=(49, 51), word='-u'),
  WordNode(pos=(52, 55), word='100'),
  WordNode(pos=(56, 58), word='-S'),
  WordNode(pos=(59, 61), word='-h'),
  WordNode(pos=(62, 82), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(63, 81), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(83, 85), word='-G'),
  WordNode(pos=(86, 94), word='rabbitmq'),
  WordNode(pos=(95, 103), word='rabbitmq'),
])


2481) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(106, 185), parts=[
  WordNode(pos=(106, 111), word='mkdir'),
  WordNode(pos=(112, 114), word='-p'),
  WordNode(pos=(115, 135), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(116, 134), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(136, 149), word='/etc/rabbitmq'),
  WordNode(pos=(150, 167), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(168, 185), word='/var/log/rabbitmq'),
])


2482) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(188, 286), parts=[
  WordNode(pos=(188, 193), word='chown'),
  WordNode(pos=(194, 197), word='-fR'),
  WordNode(pos=(198, 215), word='rabbitmq:rabbitmq'),
  WordNode(pos=(216, 236), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(217, 235), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(237, 250), word='/etc/rabbitmq'),
  WordNode(pos=(251, 268), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(269, 286), word='/var/log/rabbitmq'),
])


2483) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(289, 369), parts=[
  WordNode(pos=(289, 294), word='chmod'),
  WordNode(pos=(295, 298), word='777'),
  WordNode(pos=(299, 319), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(300, 318), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(320, 333), word='/etc/rabbitmq'),
  WordNode(pos=(334, 351), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(352, 369), word='/var/log/rabbitmq'),
])


2484) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(372, 435), parts=[
  WordNode(pos=(372, 374), word='ln'),
  WordNode(pos=(375, 378), word='-sf'),
  WordNode(pos=(379, 414), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(380, 398), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(415, 435), word='/root/.erlang.cookie'),
])


2485) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


2486) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


2487) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


2488) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


2489) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


2490) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


2491) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


2492) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


2493) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


2494) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


2495) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


2496) rm -rf "$GNUPGHOME"

CommandNode(pos=(670, 689), parts=[
  WordNode(pos=(670, 672), word='rm'),
  WordNode(pos=(673, 676), word='-rf'),
  WordNode(pos=(677, 689), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(678, 688), value='GNUPGHOME'),
  ]),
])


2497) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(693, 718), parts=[
  WordNode(pos=(693, 698), word='mkdir'),
  WordNode(pos=(699, 701), word='-p'),
  WordNode(pos=(702, 718), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(703, 717), value='RABBITMQ_HOME'),
  ]),
])


2498) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


2499) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


2500) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(818, 842), parts=[
  WordNode(pos=(818, 820), word='rm'),
  WordNode(pos=(821, 824), word='-rf'),
  WordNode(pos=(825, 842), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(826, 840), value='RABBITMQ_PATH'),
  ]),
])


2501) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(845, 928), parts=[
  WordNode(pos=(845, 849), word='grep'),
  WordNode(pos=(850, 853), word='-qE'),
  WordNode(pos=(854, 888), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(889, 928), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(890, 904), value='RABBITMQ_HOME'),
  ]),
])


2502) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(931, 1010), parts=[
  WordNode(pos=(931, 934), word='sed'),
  WordNode(pos=(935, 937), word='-i'),
  WordNode(pos=(938, 970), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(971, 1010), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(972, 986), value='RABBITMQ_HOME'),
  ]),
])


2503) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1013, 1077), parts=[
  WordNode(pos=(1013, 1017), word='grep'),
  WordNode(pos=(1018, 1021), word='-qE'),
  WordNode(pos=(1022, 1037), word='^SYS_PREFIX=$'),
  WordNode(pos=(1038, 1077), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1039, 1053), value='RABBITMQ_HOME'),
  ]),
])


2504) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1080, 1123), parts=[
  WordNode(pos=(1080, 1085), word='chown'),
  WordNode(pos=(1086, 1088), word='-R'),
  WordNode(pos=(1089, 1106), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1107, 1123), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1108, 1122), value='RABBITMQ_HOME'),
  ]),
])


2505) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1150, 1194), parts=[
  WordNode(pos=(1150, 1151), word='['),
  WordNode(pos=(1152, 1153), word='!'),
  WordNode(pos=(1154, 1156), word='-e'),
  WordNode(pos=(1157, 1192), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1158, 1176), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1193, 1194), word=']'),
])


2506) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1318, 1356), parts=[
  WordNode(pos=(1318, 1320), word='rm'),
  WordNode(pos=(1321, 1356), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1322, 1340), value='RABBITMQ_DATA_DIR'),
  ]),
])


2507) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


2508) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


2509) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 464), word='echo'),
  WordNode(pos=(465, 501), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(466, 487), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


2510) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(1236, 1310), parts=[
  WordNode(pos=(1236, 1247), word='./configure'),
  WordNode(pos=(1250, 1268), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1259, 1267), value='gnuArch'),
  ]),
  WordNode(pos=(1271, 1292), word='--disable-install-doc'),
  WordNode(pos=(1295, 1310), word='--enable-shared'),
])


2511) apk add --no-network --virtual .ruby-rundeps $runDeps   bzip2   ca-certificates   libffi-dev   procps   yaml-dev   zlib-dev

CommandNode(pos=(1558, 1681), parts=[
  WordNode(pos=(1558, 1561), word='apk'),
  WordNode(pos=(1562, 1565), word='add'),
  WordNode(pos=(1566, 1578), word='--no-network'),
  WordNode(pos=(1579, 1588), word='--virtual'),
  WordNode(pos=(1589, 1602), word='.ruby-rundeps'),
  WordNode(pos=(1603, 1611), word='$runDeps', parts=[
    ParameterNode(pos=(1603, 1611), value='runDeps'),
  ]),
  WordNode(pos=(1614, 1619), word='bzip2'),
  WordNode(pos=(1622, 1637), word='ca-certificates'),
  WordNode(pos=(1640, 1650), word='libffi-dev'),
  WordNode(pos=(1653, 1659), word='procps'),
  WordNode(pos=(1662, 1670), word='yaml-dev'),
  WordNode(pos=(1673, 1681), word='zlib-dev'),
])


2512) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(1861, 1900), parts=[
  WordNode(pos=(1861, 1864), word='gem'),
  WordNode(pos=(1865, 1871), word='update'),
  WordNode(pos=(1872, 1880), word='--system'),
  WordNode(pos=(1881, 1900), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(1882, 1899), value='RUBYGEMS_VERSION'),
  ]),
])


2513) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


2514) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


2515) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(612, 665), parts=[
  WordNode(pos=(612, 619), word='apt-get'),
  WordNode(pos=(620, 627), word='install'),
  WordNode(pos=(628, 630), word='-y'),
  WordNode(pos=(631, 654), word='--no-install-recommends'),
  WordNode(pos=(655, 665), word='$buildDeps', parts=[
    ParameterNode(pos=(655, 665), value='buildDeps'),
  ]),
])


2516) curl -SL "http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz" -o nginx.tar.gz

CommandNode(pos=(701, 781), parts=[
  WordNode(pos=(701, 705), word='curl'),
  WordNode(pos=(706, 709), word='-SL'),
  WordNode(pos=(710, 765), word='http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz', parts=[
    ParameterNode(pos=(743, 757), value='NGINX_VERSION'),
  ]),
  WordNode(pos=(766, 768), word='-o'),
  WordNode(pos=(769, 781), word='nginx.tar.gz'),
])


2517) curl -SL "http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc" -o nginx.tar.gz.asc

CommandNode(pos=(786, 874), parts=[
  WordNode(pos=(786, 790), word='curl'),
  WordNode(pos=(791, 794), word='-SL'),
  WordNode(pos=(795, 854), word='http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc', parts=[
    ParameterNode(pos=(828, 842), value='NGINX_VERSION'),
  ]),
  WordNode(pos=(855, 857), word='-o'),
  WordNode(pos=(858, 874), word='nginx.tar.gz.asc'),
])


2518) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(1919, 1960), parts=[
  WordNode(pos=(1919, 1926), word='apt-get'),
  WordNode(pos=(1927, 1932), word='purge'),
  WordNode(pos=(1933, 1935), word='-y'),
  WordNode(pos=(1936, 1949), word='--auto-remove'),
  WordNode(pos=(1950, 1960), word='$buildDeps', parts=[
    ParameterNode(pos=(1950, 1960), value='buildDeps'),
  ]),
])


2519) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2520) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2521) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2522) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2523) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2524) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2525) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2526) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2527) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2528) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2529) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2530) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2531) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2532) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2533) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2534) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2535) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2536) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2537) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2538) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2539) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2540) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2541) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2542) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2543) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2544) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(165, 248), parts=[
  AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
  ]),
])


2545) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(251, 305), parts=[
  AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
  ]),
])


2546) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


2547) wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(373, 448), parts=[
  WordNode(pos=(373, 377), word='wget'),
  WordNode(pos=(378, 395), word='--output-document'),
  WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
  ]),
])


2548) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


2549) wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(451, 518), parts=[
  WordNode(pos=(451, 455), word='wget'),
  WordNode(pos=(456, 473), word='--output-document'),
  WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
  ]),
])


2550) set -eux;   apk add --no-cache --virtual .build-deps   autoconf   ca-certificates   dpkg-dev dpkg   gcc   gnupg   libc-dev   linux-headers   make   ncurses-dev  ;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   mkdir /usr/local/src;   wget --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum -c -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum -c -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   runDeps="$(   scanelf --needed --nobanner --format '%n#p' --recursive /usr/local    | tr ',' '\n'    | sort -u    | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'  )";  apk add --no-cache --virtual .otp-run-deps $runDeps;  apk del --no-network .build-deps;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3380), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 159), parts=[
    WordNode(pos=(12, 15), word='apk'),
    WordNode(pos=(16, 19), word='add'),
    WordNode(pos=(20, 30), word='--no-cache'),
    WordNode(pos=(31, 40), word='--virtual'),
    WordNode(pos=(41, 52), word='.build-deps'),
    WordNode(pos=(55, 63), word='autoconf'),
    WordNode(pos=(66, 81), word='ca-certificates'),
    WordNode(pos=(84, 92), word='dpkg-dev'),
    WordNode(pos=(93, 97), word='dpkg'),
    WordNode(pos=(100, 103), word='gcc'),
    WordNode(pos=(106, 111), word='gnupg'),
    WordNode(pos=(114, 122), word='libc-dev'),
    WordNode(pos=(125, 138), word='linux-headers'),
    WordNode(pos=(141, 145), word='make'),
    WordNode(pos=(148, 159), word='ncurses-dev'),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CommandNode(pos=(165, 248), parts=[
    AssignmentNode(pos=(165, 248), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(224, 240), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(248, 249)),
  CommandNode(pos=(251, 305), parts=[
    AssignmentNode(pos=(251, 305), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(288, 304), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(305, 306)),
  CommandNode(pos=(308, 345), parts=[
    AssignmentNode(pos=(308, 345), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(345, 346)),
  CommandNode(pos=(349, 369), parts=[
    WordNode(pos=(349, 354), word='mkdir'),
    WordNode(pos=(355, 369), word='/usr/local/src'),
  ]),
  OperatorNode(op=';', pos=(369, 370)),
  CommandNode(pos=(373, 448), parts=[
    WordNode(pos=(373, 377), word='wget'),
    WordNode(pos=(378, 395), word='--output-document'),
    WordNode(pos=(396, 422), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(397, 410), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(423, 448), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(424, 443), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(448, 449)),
  CommandNode(pos=(451, 518), parts=[
    WordNode(pos=(451, 455), word='wget'),
    WordNode(pos=(456, 473), word='--output-document'),
    WordNode(pos=(474, 496), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(475, 488), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(497, 518), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(498, 517), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(518, 519)),
  CommandNode(pos=(521, 552), parts=[
    WordNode(pos=(521, 527), word='export'),
    WordNode(pos=(528, 552), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(541, 550), parts=[
          WordNode(pos=(541, 547), word='mktemp'),
          WordNode(pos=(548, 550), word='-d'),
        ]), pos=(539, 551)),
    ]),
  ]),
  OperatorNode(op=';', pos=(552, 553)),
  CompoundNode(list=[
    ForNode(pos=(555, 659), parts=[
      ReservedwordNode(pos=(555, 558), word='for'),
      WordNode(pos=(559, 562), word='key'),
      ReservedwordNode(pos=(563, 565), word='in'),
      WordNode(pos=(566, 586), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(566, 586), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(586, 587), word=';'),
      ReservedwordNode(pos=(588, 590), word='do'),
      ListNode(pos=(593, 653), parts=[
          CommandNode(pos=(593, 652), parts=[
            WordNode(pos=(593, 596), word='gpg'),
            WordNode(pos=(597, 604), word='--batch'),
            WordNode(pos=(605, 616), word='--keyserver'),
            WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(634, 645), word='--recv-keys'),
            WordNode(pos=(646, 652), word='$key', parts=[
              ParameterNode(pos=(647, 651), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(652, 653)),
        ]),
      ReservedwordNode(pos=(655, 659), word='done'),
    ]),
  ], pos=(555, 659)),
  OperatorNode(op=';', pos=(659, 660)),
  CommandNode(pos=(662, 732), parts=[
    WordNode(pos=(662, 665), word='gpg'),
    WordNode(pos=(666, 673), word='--batch'),
    WordNode(pos=(674, 682), word='--verify'),
    WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(732, 733)),
  CommandNode(pos=(735, 753), parts=[
    WordNode(pos=(735, 742), word='gpgconf'),
    WordNode(pos=(743, 749), word='--kill'),
    WordNode(pos=(750, 753), word='all'),
  ]),
  OperatorNode(op=';', pos=(753, 754)),
  CommandNode(pos=(756, 775), parts=[
    WordNode(pos=(756, 758), word='rm'),
    WordNode(pos=(759, 762), word='-rf'),
    WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(764, 774), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(775, 776)),
  PipelineNode(pos=(778, 846), parts=[
    CommandNode(pos=(778, 829), parts=[
      WordNode(pos=(778, 782), word='echo'),
      WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(830, 831)),
    CommandNode(pos=(832, 846), parts=[
      WordNode(pos=(832, 841), word='sha256sum'),
      WordNode(pos=(842, 844), word='-c'),
      WordNode(pos=(845, 846), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(846, 847)),
  CommandNode(pos=(849, 873), parts=[
    WordNode(pos=(849, 854), word='mkdir'),
    WordNode(pos=(855, 857), word='-p'),
    WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(873, 874)),
  CommandNode(pos=(876, 968), parts=[
    WordNode(pos=(876, 879), word='tar'),
    WordNode(pos=(880, 889), word='--extract'),
    WordNode(pos=(890, 896), word='--file'),
    WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(920, 931), word='--directory'),
    WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(948, 966), word='--strip-components'),
    WordNode(pos=(967, 968), word='1'),
  ]),
  OperatorNode(op=';', pos=(968, 969)),
  CommandNode(pos=(972, 990), parts=[
    WordNode(pos=(972, 974), word='cd'),
    WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(990, 991)),
  CommandNode(pos=(993, 1142), parts=[
    AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1004, 1047), parts=[
          WordNode(pos=(1004, 1021), word='dpkg-architecture'),
          WordNode(pos=(1022, 1029), word='--query'),
          WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1002, 1048)),
    ]),
    AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
    WordNode(pos=(1099, 1107), word='./config'),
    WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1142, 1143)),
  CommandNode(pos=(1145, 1183), parts=[
    WordNode(pos=(1145, 1149), word='make'),
    WordNode(pos=(1150, 1152), word='-j'),
    WordNode(pos=(1153, 1183), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1156, 1181), parts=[
          WordNode(pos=(1156, 1163), word='getconf'),
          WordNode(pos=(1164, 1181), word='_NPROCESSORS_ONLN'),
        ]), pos=(1154, 1182)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1183, 1184)),
  CommandNode(pos=(1186, 1217), parts=[
    WordNode(pos=(1186, 1190), word='make'),
    WordNode(pos=(1191, 1201), word='install_sw'),
    WordNode(pos=(1202, 1217), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1217, 1218)),
  CommandNode(pos=(1220, 1225), parts=[
    WordNode(pos=(1220, 1222), word='cd'),
    WordNode(pos=(1223, 1225), word='..'),
  ]),
  OperatorNode(op=';', pos=(1225, 1226)),
  CommandNode(pos=(1228, 1251), parts=[
    WordNode(pos=(1228, 1230), word='rm'),
    WordNode(pos=(1231, 1234), word='-rf'),
    WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1251, 1252)),
  CommandNode(pos=(1254, 1317), parts=[
    WordNode(pos=(1254, 1259), word='rmdir'),
    WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1317, 1318)),
  CommandNode(pos=(1320, 1380), parts=[
    WordNode(pos=(1320, 1322), word='ln'),
    WordNode(pos=(1323, 1326), word='-sf'),
    WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
    WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
    WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1380, 1381)),
  CommandNode(pos=(1383, 1398), parts=[
    WordNode(pos=(1383, 1390), word='openssl'),
    WordNode(pos=(1391, 1398), word='version'),
  ]),
  OperatorNode(op=';', pos=(1398, 1399)),
  CommandNode(pos=(1402, 1480), parts=[
    AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1480, 1481)),
  CommandNode(pos=(1483, 1525), parts=[
    AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1525, 1526)),
  CommandNode(pos=(1529, 1549), parts=[
    WordNode(pos=(1529, 1534), word='mkdir'),
    WordNode(pos=(1535, 1537), word='-p'),
    WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1549, 1550)),
  CommandNode(pos=(1552, 1611), parts=[
    WordNode(pos=(1552, 1556), word='wget'),
    WordNode(pos=(1557, 1574), word='--output-document'),
    WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
    ]),
    WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1611, 1612)),
  PipelineNode(pos=(1614, 1674), parts=[
    CommandNode(pos=(1614, 1657), parts=[
      WordNode(pos=(1614, 1618), word='echo'),
      WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1658, 1659)),
    CommandNode(pos=(1660, 1674), parts=[
      WordNode(pos=(1660, 1669), word='sha256sum'),
      WordNode(pos=(1670, 1672), word='-c'),
      WordNode(pos=(1673, 1674), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1674, 1675)),
  CommandNode(pos=(1677, 1761), parts=[
    WordNode(pos=(1677, 1680), word='tar'),
    WordNode(pos=(1681, 1690), word='--extract'),
    WordNode(pos=(1691, 1697), word='--file'),
    WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
    ]),
    WordNode(pos=(1717, 1728), word='--directory'),
    WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
    ]),
    WordNode(pos=(1741, 1759), word='--strip-components'),
    WordNode(pos=(1760, 1761), word='1'),
  ]),
  OperatorNode(op=';', pos=(1761, 1762)),
  CommandNode(pos=(1765, 1779), parts=[
    WordNode(pos=(1765, 1767), word='cd'),
    WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1779, 1780)),
  CommandNode(pos=(1782, 1808), parts=[
    WordNode(pos=(1782, 1788), word='export'),
    WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1808, 1809)),
  CommandNode(pos=(1811, 1831), parts=[
    WordNode(pos=(1811, 1822), word='./otp_build'),
    WordNode(pos=(1823, 1831), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(1831, 1832)),
  CommandNode(pos=(1834, 1874), parts=[
    AssignmentNode(pos=(1834, 1874), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1844, 1872), parts=[
          WordNode(pos=(1844, 1859), word='dpkg-buildflags'),
          WordNode(pos=(1860, 1865), word='--get'),
          WordNode(pos=(1866, 1872), word='CFLAGS'),
        ]), pos=(1842, 1873)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1874, 1875)),
  CommandNode(pos=(1876, 1889), parts=[
    WordNode(pos=(1876, 1882), word='export'),
    WordNode(pos=(1883, 1889), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(1889, 1890)),
  CommandNode(pos=(1892, 1949), parts=[
    AssignmentNode(pos=(1892, 1949), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1904, 1947), parts=[
          WordNode(pos=(1904, 1921), word='dpkg-architecture'),
          WordNode(pos=(1922, 1929), word='--query'),
          WordNode(pos=(1930, 1947), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(1902, 1948)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1949, 1950)),
  CommandNode(pos=(1952, 2011), parts=[
    AssignmentNode(pos=(1952, 2011), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1965, 2009), parts=[
          WordNode(pos=(1965, 1982), word='dpkg-architecture'),
          WordNode(pos=(1983, 1990), word='--query'),
          WordNode(pos=(1991, 2009), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(1963, 2010)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2011, 2012)),
  CommandNode(pos=(2014, 2053), parts=[
    AssignmentNode(pos=(2014, 2053), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2026, 2051), parts=[
          WordNode(pos=(2026, 2030), word='dpkg'),
          WordNode(pos=(2031, 2051), word='--print-architecture'),
        ]), pos=(2024, 2052)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2053, 2054)),
  CommandNode(pos=(2055, 2081), parts=[
    AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2081, 2082)),
  CommandNode(pos=(2084, 2766), parts=[
    WordNode(pos=(2084, 2095), word='./configure'),
    WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2106, 2115), value='hostArch'),
    ]),
    WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2128, 2138), value='buildArch'),
    ]),
    WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2170, 2184), word='--disable-hipe'),
    WordNode(pos=(2187, 2201), word='--disable-sctp'),
    WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
    WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
    WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
    WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
    WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
    WordNode(pos=(2323, 2343), word='--enable-smp-support'),
    WordNode(pos=(2346, 2362), word='--enable-threads'),
    WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2402, 2423), word='--without-common_test'),
    WordNode(pos=(2426, 2444), word='--without-debugger'),
    WordNode(pos=(2447, 2465), word='--without-dialyzer'),
    WordNode(pos=(2468, 2486), word='--without-diameter'),
    WordNode(pos=(2489, 2503), word='--without-edoc'),
    WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
    WordNode(pos=(2529, 2552), word='--without-erl_interface'),
    WordNode(pos=(2555, 2567), word='--without-et'),
    WordNode(pos=(2570, 2585), word='--without-eunit'),
    WordNode(pos=(2588, 2601), word='--without-ftp'),
    WordNode(pos=(2604, 2618), word='--without-hipe'),
    WordNode(pos=(2621, 2641), word='--without-jinterface'),
    WordNode(pos=(2644, 2660), word='--without-megaco'),
    WordNode(pos=(2663, 2681), word='--without-observer'),
    WordNode(pos=(2684, 2698), word='--without-odbc'),
    WordNode(pos=(2701, 2718), word='--without-reltool'),
    WordNode(pos=(2721, 2734), word='--without-ssh'),
    WordNode(pos=(2737, 2751), word='--without-tftp'),
    WordNode(pos=(2754, 2766), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(2768, 2769)),
  CommandNode(pos=(2771, 2849), parts=[
    WordNode(pos=(2771, 2775), word='make'),
    WordNode(pos=(2776, 2778), word='-j'),
    WordNode(pos=(2779, 2809), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2782, 2807), parts=[
          WordNode(pos=(2782, 2789), word='getconf'),
          WordNode(pos=(2790, 2807), word='_NPROCESSORS_ONLN'),
        ]), pos=(2780, 2808)),
    ]),
    WordNode(pos=(2810, 2849), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(2849, 2850)),
  CommandNode(pos=(2852, 2864), parts=[
    WordNode(pos=(2852, 2856), word='make'),
    WordNode(pos=(2857, 2864), word='install'),
  ]),
  OperatorNode(op=';', pos=(2864, 2865)),
  CommandNode(pos=(2867, 2872), parts=[
    WordNode(pos=(2867, 2869), word='cd'),
    WordNode(pos=(2870, 2872), word='..'),
  ]),
  OperatorNode(op=';', pos=(2872, 2873)),
  CommandNode(pos=(2875, 2969), parts=[
    WordNode(pos=(2875, 2877), word='rm'),
    WordNode(pos=(2878, 2881), word='-rf'),
    WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
    ]),
    WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(2971, 2972)),
  CommandNode(pos=(2975, 3172), parts=[
    AssignmentNode(pos=(2975, 3172), word='runDeps=$(   scanelf --needed --nobanner --format \'%n#p\' --recursive /usr/local    | tr \',\' \'\\n\'    | sort -u    | awk \'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }\'  )', parts=[
      CommandsubstitutionNode(command=
        PipelineNode(pos=(2989, 3168), parts=[
          CommandNode(pos=(2989, 3055), parts=[
            WordNode(pos=(2989, 2996), word='scanelf'),
            WordNode(pos=(2997, 3005), word='--needed'),
            WordNode(pos=(3006, 3016), word='--nobanner'),
            WordNode(pos=(3017, 3025), word='--format'),
            WordNode(pos=(3026, 3032), word='%n#p'),
            WordNode(pos=(3033, 3044), word='--recursive'),
            WordNode(pos=(3045, 3055), word='/usr/local'),
          ]),
          PipeNode(pipe='|', pos=(3059, 3060)),
          CommandNode(pos=(3061, 3072), parts=[
            WordNode(pos=(3061, 3063), word='tr'),
            WordNode(pos=(3064, 3067), word=','),
            WordNode(pos=(3068, 3072), word='\\n'),
          ]),
          PipeNode(pipe='|', pos=(3076, 3077)),
          CommandNode(pos=(3078, 3085), parts=[
            WordNode(pos=(3078, 3082), word='sort'),
            WordNode(pos=(3083, 3085), word='-u'),
          ]),
          PipeNode(pipe='|', pos=(3089, 3090)),
          CommandNode(pos=(3091, 3168), parts=[
            WordNode(pos=(3091, 3094), word='awk'),
            WordNode(pos=(3095, 3168), word='system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }'),
          ]),
        ]), pos=(2984, 3169)),
    ]),
  ]),
  OperatorNode(op=';', pos=(3172, 3173)),
  CommandNode(pos=(3175, 3226), parts=[
    WordNode(pos=(3175, 3178), word='apk'),
    WordNode(pos=(3179, 3182), word='add'),
    WordNode(pos=(3183, 3193), word='--no-cache'),
    WordNode(pos=(3194, 3203), word='--virtual'),
    WordNode(pos=(3204, 3217), word='.otp-run-deps'),
    WordNode(pos=(3218, 3226), word='$runDeps', parts=[
      ParameterNode(pos=(3218, 3226), value='runDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3226, 3227)),
  CommandNode(pos=(3229, 3261), parts=[
    WordNode(pos=(3229, 3232), word='apk'),
    WordNode(pos=(3233, 3236), word='del'),
    WordNode(pos=(3237, 3249), word='--no-network'),
    WordNode(pos=(3250, 3261), word='.build-deps'),
  ]),
  OperatorNode(op=';', pos=(3261, 3262)),
  CommandNode(pos=(3265, 3280), parts=[
    WordNode(pos=(3265, 3272), word='openssl'),
    WordNode(pos=(3273, 3280), word='version'),
  ]),
  OperatorNode(op=';', pos=(3280, 3281)),
  CommandNode(pos=(3283, 3380), parts=[
    WordNode(pos=(3283, 3286), word='erl'),
    WordNode(pos=(3287, 3295), word='-noshell'),
    WordNode(pos=(3296, 3301), word='-eval'),
    WordNode(pos=(3302, 3380), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


2551) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


2552) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(593, 652), parts=[
  WordNode(pos=(593, 596), word='gpg'),
  WordNode(pos=(597, 604), word='--batch'),
  WordNode(pos=(605, 616), word='--keyserver'),
  WordNode(pos=(617, 633), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(618, 632), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(634, 645), word='--recv-keys'),
  WordNode(pos=(646, 652), word='$key', parts=[
    ParameterNode(pos=(647, 651), value='key'),
  ]),
])


2553) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


2554) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(662, 732), parts=[
  WordNode(pos=(662, 665), word='gpg'),
  WordNode(pos=(666, 673), word='--batch'),
  WordNode(pos=(674, 682), word='--verify'),
  WordNode(pos=(683, 709), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(684, 697), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(710, 732), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(711, 724), value='OPENSSL_PATH'),
  ]),
])


2555) rm -rf "$GNUPGHOME"

CommandNode(pos=(756, 775), parts=[
  WordNode(pos=(756, 758), word='rm'),
  WordNode(pos=(759, 762), word='-rf'),
  WordNode(pos=(763, 775), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(764, 774), value='GNUPGHOME'),
  ]),
])


2556) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


2557) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(778, 829), parts=[
  WordNode(pos=(778, 782), word='echo'),
  WordNode(pos=(783, 829), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(784, 806), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(808, 821), value='OPENSSL_PATH'),
  ]),
])


2558) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(849, 873), parts=[
  WordNode(pos=(849, 854), word='mkdir'),
  WordNode(pos=(855, 857), word='-p'),
  WordNode(pos=(858, 873), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(859, 872), value='OPENSSL_PATH'),
  ]),
])


2559) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


2560) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(876, 968), parts=[
  WordNode(pos=(876, 879), word='tar'),
  WordNode(pos=(880, 889), word='--extract'),
  WordNode(pos=(890, 896), word='--file'),
  WordNode(pos=(897, 919), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(898, 911), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(920, 931), word='--directory'),
  WordNode(pos=(932, 947), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(933, 946), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(948, 966), word='--strip-components'),
  WordNode(pos=(967, 968), word='1'),
])


2561) cd "$OPENSSL_PATH"

CommandNode(pos=(972, 990), parts=[
  WordNode(pos=(972, 974), word='cd'),
  WordNode(pos=(975, 990), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(976, 989), value='OPENSSL_PATH'),
  ]),
])


2562) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR"

CommandNode(pos=(993, 1142), parts=[
  AssignmentNode(pos=(993, 1049), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1004, 1047), parts=[
        WordNode(pos=(1004, 1021), word='dpkg-architecture'),
        WordNode(pos=(1022, 1029), word='--query'),
        WordNode(pos=(1030, 1047), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1002, 1048)),
  ]),
  AssignmentNode(pos=(1051, 1068), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1070, 1084), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1086, 1097), word='BUILD=???'),
  WordNode(pos=(1099, 1107), word='./config'),
  WordNode(pos=(1108, 1142), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1122, 1141), value='OPENSSL_CONFIG_DIR'),
  ]),
])


2563) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1228, 1251), parts=[
  WordNode(pos=(1228, 1230), word='rm'),
  WordNode(pos=(1231, 1234), word='-rf'),
  WordNode(pos=(1235, 1251), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1236, 1249), value='OPENSSL_PATH'),
  ]),
])


2564) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


2565) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1254, 1317), parts=[
  WordNode(pos=(1254, 1259), word='rmdir'),
  WordNode(pos=(1260, 1287), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1261, 1280), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1288, 1317), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1289, 1308), value='OPENSSL_CONFIG_DIR'),
  ]),
])


2566) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1320, 1380), parts=[
  WordNode(pos=(1320, 1322), word='ln'),
  WordNode(pos=(1323, 1326), word='-sf'),
  WordNode(pos=(1327, 1341), word='/etc/ssl/certs'),
  WordNode(pos=(1342, 1358), word='/etc/ssl/private'),
  WordNode(pos=(1359, 1380), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1360, 1379), value='OPENSSL_CONFIG_DIR'),
  ]),
])


2567) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1402, 1480), parts=[
  AssignmentNode(pos=(1402, 1480), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1460, 1472), value='OTP_VERSION'),
  ]),
])


2568) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1483, 1525), parts=[
  AssignmentNode(pos=(1483, 1525), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1512, 1524), value='OTP_VERSION'),
  ]),
])


2569) mkdir -p "$OTP_PATH"

CommandNode(pos=(1529, 1549), parts=[
  WordNode(pos=(1529, 1534), word='mkdir'),
  WordNode(pos=(1535, 1537), word='-p'),
  WordNode(pos=(1538, 1549), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1539, 1548), value='OTP_PATH'),
  ]),
])


2570) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


2571) wget --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1552, 1611), parts=[
  WordNode(pos=(1552, 1556), word='wget'),
  WordNode(pos=(1557, 1574), word='--output-document'),
  WordNode(pos=(1575, 1593), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1576, 1585), value='OTP_PATH'),
  ]),
  WordNode(pos=(1594, 1611), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1595, 1610), value='OTP_SOURCE_URL'),
  ]),
])


2572) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


2573) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1614, 1657), parts=[
  WordNode(pos=(1614, 1618), word='echo'),
  WordNode(pos=(1619, 1657), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1620, 1638), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1640, 1649), value='OTP_PATH'),
  ]),
])


2574) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


2575) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1677, 1761), parts=[
  WordNode(pos=(1677, 1680), word='tar'),
  WordNode(pos=(1681, 1690), word='--extract'),
  WordNode(pos=(1691, 1697), word='--file'),
  WordNode(pos=(1698, 1716), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1699, 1708), value='OTP_PATH'),
  ]),
  WordNode(pos=(1717, 1728), word='--directory'),
  WordNode(pos=(1729, 1740), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1730, 1739), value='OTP_PATH'),
  ]),
  WordNode(pos=(1741, 1759), word='--strip-components'),
  WordNode(pos=(1760, 1761), word='1'),
])


2576) cd "$OTP_PATH"

CommandNode(pos=(1765, 1779), parts=[
  WordNode(pos=(1765, 1767), word='cd'),
  WordNode(pos=(1768, 1779), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1769, 1778), value='OTP_PATH'),
  ]),
])


2577) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(1782, 1808), parts=[
  WordNode(pos=(1782, 1788), word='export'),
  WordNode(pos=(1789, 1808), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(1798, 1807), value='OTP_PATH'),
  ]),
])


2578) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2055, 2081), parts=[
  AssignmentNode(pos=(2055, 2081), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2065, 2080), value='dpkgArch##*-'),
  ]),
])


2579) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


2580) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2084, 2766), parts=[
  WordNode(pos=(2084, 2095), word='./configure'),
  WordNode(pos=(2098, 2116), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2106, 2115), value='hostArch'),
  ]),
  WordNode(pos=(2119, 2139), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2128, 2138), value='buildArch'),
  ]),
  WordNode(pos=(2142, 2167), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2170, 2184), word='--disable-hipe'),
  WordNode(pos=(2187, 2201), word='--disable-sctp'),
  WordNode(pos=(2204, 2226), word='--disable-silent-rules'),
  WordNode(pos=(2229, 2251), word='--enable-clock-gettime'),
  WordNode(pos=(2254, 2274), word='--enable-hybrid-heap'),
  WordNode(pos=(2277, 2297), word='--enable-kernel-poll'),
  WordNode(pos=(2300, 2320), word='--enable-shared-zlib'),
  WordNode(pos=(2323, 2343), word='--enable-smp-support'),
  WordNode(pos=(2346, 2362), word='--enable-threads'),
  WordNode(pos=(2365, 2399), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2402, 2423), word='--without-common_test'),
  WordNode(pos=(2426, 2444), word='--without-debugger'),
  WordNode(pos=(2447, 2465), word='--without-dialyzer'),
  WordNode(pos=(2468, 2486), word='--without-diameter'),
  WordNode(pos=(2489, 2503), word='--without-edoc'),
  WordNode(pos=(2506, 2526), word='--without-erl_docgen'),
  WordNode(pos=(2529, 2552), word='--without-erl_interface'),
  WordNode(pos=(2555, 2567), word='--without-et'),
  WordNode(pos=(2570, 2585), word='--without-eunit'),
  WordNode(pos=(2588, 2601), word='--without-ftp'),
  WordNode(pos=(2604, 2618), word='--without-hipe'),
  WordNode(pos=(2621, 2641), word='--without-jinterface'),
  WordNode(pos=(2644, 2660), word='--without-megaco'),
  WordNode(pos=(2663, 2681), word='--without-observer'),
  WordNode(pos=(2684, 2698), word='--without-odbc'),
  WordNode(pos=(2701, 2718), word='--without-reltool'),
  WordNode(pos=(2721, 2734), word='--without-ssh'),
  WordNode(pos=(2737, 2751), word='--without-tftp'),
  WordNode(pos=(2754, 2766), word='--without-wx'),
])


2581) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(2875, 2969), parts=[
  WordNode(pos=(2875, 2877), word='rm'),
  WordNode(pos=(2878, 2881), word='-rf'),
  WordNode(pos=(2884, 2896), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(2885, 2894), value='OTP_PATH'),
  ]),
  WordNode(pos=(2899, 2935), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(2938, 2969), word='/usr/local/lib/erlang/lib/*/src'),
])


2582) apk add --no-cache --virtual .otp-run-deps $runDeps

CommandNode(pos=(3175, 3226), parts=[
  WordNode(pos=(3175, 3178), word='apk'),
  WordNode(pos=(3179, 3182), word='add'),
  WordNode(pos=(3183, 3193), word='--no-cache'),
  WordNode(pos=(3194, 3203), word='--virtual'),
  WordNode(pos=(3204, 3217), word='.otp-run-deps'),
  WordNode(pos=(3218, 3226), word='$runDeps', parts=[
    ParameterNode(pos=(3218, 3226), value='runDeps'),
  ]),
])


2583) adduser -u 100 -S -h "$RABBITMQ_DATA_DIR" -G rabbitmq rabbitmq

CommandNode(pos=(41, 103), parts=[
  WordNode(pos=(41, 48), word='adduser'),
  WordNode(pos=(49, 51), word='-u'),
  WordNode(pos=(52, 55), word='100'),
  WordNode(pos=(56, 58), word='-S'),
  WordNode(pos=(59, 61), word='-h'),
  WordNode(pos=(62, 82), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(63, 81), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(83, 85), word='-G'),
  WordNode(pos=(86, 94), word='rabbitmq'),
  WordNode(pos=(95, 103), word='rabbitmq'),
])


2584) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(106, 185), parts=[
  WordNode(pos=(106, 111), word='mkdir'),
  WordNode(pos=(112, 114), word='-p'),
  WordNode(pos=(115, 135), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(116, 134), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(136, 149), word='/etc/rabbitmq'),
  WordNode(pos=(150, 167), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(168, 185), word='/var/log/rabbitmq'),
])


2585) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(188, 286), parts=[
  WordNode(pos=(188, 193), word='chown'),
  WordNode(pos=(194, 197), word='-fR'),
  WordNode(pos=(198, 215), word='rabbitmq:rabbitmq'),
  WordNode(pos=(216, 236), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(217, 235), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(237, 250), word='/etc/rabbitmq'),
  WordNode(pos=(251, 268), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(269, 286), word='/var/log/rabbitmq'),
])


2586) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(289, 369), parts=[
  WordNode(pos=(289, 294), word='chmod'),
  WordNode(pos=(295, 298), word='777'),
  WordNode(pos=(299, 319), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(300, 318), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(320, 333), word='/etc/rabbitmq'),
  WordNode(pos=(334, 351), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(352, 369), word='/var/log/rabbitmq'),
])


2587) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(372, 435), parts=[
  WordNode(pos=(372, 374), word='ln'),
  WordNode(pos=(375, 378), word='-sf'),
  WordNode(pos=(379, 414), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(380, 398), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(415, 435), word='/root/.erlang.cookie'),
])


2588) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


2589) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(89, 245), parts=[
  AssignmentNode(pos=(89, 245), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(173, 190), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(220, 237), value='RABBITMQ_VERSION'),
  ]),
])


2590) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(248, 305), parts=[
  AssignmentNode(pos=(248, 305), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(287, 304), value='RABBITMQ_VERSION'),
  ]),
])


2591) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


2592) wget --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(309, 386), parts=[
  WordNode(pos=(309, 313), word='wget'),
  WordNode(pos=(314, 331), word='--output-document'),
  WordNode(pos=(332, 359), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(333, 347), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(360, 386), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(361, 381), value='RABBITMQ_SOURCE_URL'),
  ]),
])


2593) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


2594) wget --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(389, 458), parts=[
  WordNode(pos=(389, 393), word='wget'),
  WordNode(pos=(394, 411), word='--output-document'),
  WordNode(pos=(412, 435), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(413, 427), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(436, 458), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(437, 457), value='RABBITMQ_SOURCE_URL'),
  ]),
])


2595) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


2596) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(496, 571), parts=[
  WordNode(pos=(496, 499), word='gpg'),
  WordNode(pos=(500, 507), word='--batch'),
  WordNode(pos=(508, 519), word='--keyserver'),
  WordNode(pos=(520, 536), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(521, 535), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(537, 548), word='--recv-keys'),
  WordNode(pos=(549, 571), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(550, 570), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


2597) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


2598) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(574, 646), parts=[
  WordNode(pos=(574, 577), word='gpg'),
  WordNode(pos=(578, 585), word='--batch'),
  WordNode(pos=(586, 594), word='--verify'),
  WordNode(pos=(595, 622), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(596, 610), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(623, 646), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(624, 638), value='RABBITMQ_PATH'),
  ]),
])


2599) rm -rf "$GNUPGHOME"

CommandNode(pos=(670, 689), parts=[
  WordNode(pos=(670, 672), word='rm'),
  WordNode(pos=(673, 676), word='-rf'),
  WordNode(pos=(677, 689), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(678, 688), value='GNUPGHOME'),
  ]),
])


2600) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(693, 718), parts=[
  WordNode(pos=(693, 698), word='mkdir'),
  WordNode(pos=(699, 701), word='-p'),
  WordNode(pos=(702, 718), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(703, 717), value='RABBITMQ_HOME'),
  ]),
])


2601) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


2602) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(721, 815), parts=[
  WordNode(pos=(721, 724), word='tar'),
  WordNode(pos=(725, 734), word='--extract'),
  WordNode(pos=(735, 741), word='--file'),
  WordNode(pos=(742, 765), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(743, 757), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(766, 777), word='--directory'),
  WordNode(pos=(778, 794), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(779, 793), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(795, 813), word='--strip-components'),
  WordNode(pos=(814, 815), word='1'),
])


2603) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(818, 842), parts=[
  WordNode(pos=(818, 820), word='rm'),
  WordNode(pos=(821, 824), word='-rf'),
  WordNode(pos=(825, 842), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(826, 840), value='RABBITMQ_PATH'),
  ]),
])


2604) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(845, 928), parts=[
  WordNode(pos=(845, 849), word='grep'),
  WordNode(pos=(850, 853), word='-qE'),
  WordNode(pos=(854, 888), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(889, 928), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(890, 904), value='RABBITMQ_HOME'),
  ]),
])


2605) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(931, 1010), parts=[
  WordNode(pos=(931, 934), word='sed'),
  WordNode(pos=(935, 937), word='-i'),
  WordNode(pos=(938, 970), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(971, 1010), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(972, 986), value='RABBITMQ_HOME'),
  ]),
])


2606) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1013, 1077), parts=[
  WordNode(pos=(1013, 1017), word='grep'),
  WordNode(pos=(1018, 1021), word='-qE'),
  WordNode(pos=(1022, 1037), word='^SYS_PREFIX=$'),
  WordNode(pos=(1038, 1077), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1039, 1053), value='RABBITMQ_HOME'),
  ]),
])


2607) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1080, 1123), parts=[
  WordNode(pos=(1080, 1085), word='chown'),
  WordNode(pos=(1086, 1088), word='-R'),
  WordNode(pos=(1089, 1106), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1107, 1123), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1108, 1122), value='RABBITMQ_HOME'),
  ]),
])


2608) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1150, 1194), parts=[
  WordNode(pos=(1150, 1151), word='['),
  WordNode(pos=(1152, 1153), word='!'),
  WordNode(pos=(1154, 1156), word='-e'),
  WordNode(pos=(1157, 1192), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1158, 1176), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1193, 1194), word=']'),
])


2609) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1318, 1356), parts=[
  WordNode(pos=(1318, 1320), word='rm'),
  WordNode(pos=(1321, 1356), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1322, 1340), value='RABBITMQ_DATA_DIR'),
  ]),
])


2610) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


2611) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


2612) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(634, 677), parts=[
  WordNode(pos=(634, 636), word='rm'),
  WordNode(pos=(637, 640), word='-rf'),
  WordNode(pos=(641, 653), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(642, 652), value='GNUPGHOME'),
  ]),
  WordNode(pos=(654, 677), word='/usr/local/bin/gosu.asc'),
])


2613) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


2614) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/mysql.gpg

CommandNode(pos=(165, 227), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 227), word='/etc/apt/trusted.gpg.d/mysql.gpg'), pos=(193, 227), type='>'),
])


2615) rm -rf "$GNUPGHOME"

CommandNode(pos=(251, 270), parts=[
  WordNode(pos=(251, 253), word='rm'),
  WordNode(pos=(254, 257), word='-rf'),
  WordNode(pos=(258, 270), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(259, 269), value='GNUPGHOME'),
  ]),
])


2616) echo "deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}" > /etc/apt/sources.list.d/mysql.list

CommandNode(pos=(0, 110), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 73), word='deb http://repo.mysql.com/apt/debian/ stretch mysql-${MYSQL_MAJOR}', parts=[
    ParameterNode(pos=(58, 72), value='MYSQL_MAJOR'),
  ]),
  RedirectNode(output=
    WordNode(pos=(76, 110), word='/etc/apt/sources.list.d/mysql.list'), pos=(74, 110), type='>'),
])


2617) apt-get install -y mysql-community-client="${MYSQL_VERSION}" mysql-community-server-core="${MYSQL_VERSION}"

CommandNode(pos=(362, 469), parts=[
  WordNode(pos=(362, 369), word='apt-get'),
  WordNode(pos=(370, 377), word='install'),
  WordNode(pos=(378, 380), word='-y'),
  WordNode(pos=(381, 422), word='mysql-community-client=${MYSQL_VERSION}', parts=[
    ParameterNode(pos=(405, 421), value='MYSQL_VERSION'),
  ]),
  WordNode(pos=(423, 469), word='mysql-community-server-core=${MYSQL_VERSION}', parts=[
    ParameterNode(pos=(452, 468), value='MYSQL_VERSION'),
  ]),
])


2618) apt-get install -y mysql-community-client="${MYSQL_VERSION}" mysql-community-server-core="${MYSQL_VERSION}"

CommandNode(pos=(362, 469), parts=[
  WordNode(pos=(362, 369), word='apt-get'),
  WordNode(pos=(370, 377), word='install'),
  WordNode(pos=(378, 380), word='-y'),
  WordNode(pos=(381, 422), word='mysql-community-client=${MYSQL_VERSION}', parts=[
    ParameterNode(pos=(405, 421), value='MYSQL_VERSION'),
  ]),
  WordNode(pos=(423, 469), word='mysql-community-server-core=${MYSQL_VERSION}', parts=[
    ParameterNode(pos=(452, 468), value='MYSQL_VERSION'),
  ]),
])


2619) url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"

CommandNode(pos=(29, 96), parts=[
  AssignmentNode(pos=(29, 96), word='url=https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz', parts=[
    ParameterNode(pos=(58, 75), value='GOLANG_VERSION'),
    ParameterNode(pos=(76, 88), value='goRelArch'),
  ]),
])


2620) url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"

CommandNode(pos=(29, 96), parts=[
  AssignmentNode(pos=(29, 96), word='url=https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz', parts=[
    ParameterNode(pos=(58, 75), value='GOLANG_VERSION'),
    ParameterNode(pos=(76, 88), value='goRelArch'),
  ]),
])


2621) wget -O go.tgz "$url"

CommandNode(pos=(99, 120), parts=[
  WordNode(pos=(99, 103), word='wget'),
  WordNode(pos=(104, 106), word='-O'),
  WordNode(pos=(107, 113), word='go.tgz'),
  WordNode(pos=(114, 120), word='$url', parts=[
    ParameterNode(pos=(115, 119), value='url'),
  ]),
])


2622) echo "${goRelSha256} *go.tgz"

CommandNode(pos=(123, 152), parts=[
  WordNode(pos=(123, 127), word='echo'),
  WordNode(pos=(128, 152), word='${goRelSha256} *go.tgz', parts=[
    ParameterNode(pos=(129, 143), value='goRelSha256'),
  ]),
])


2623) [ "$goRelArch" = 'src' ]

CommandNode(pos=(220, 244), parts=[
  WordNode(pos=(220, 221), word='['),
  WordNode(pos=(222, 234), word='$goRelArch', parts=[
    ParameterNode(pos=(223, 233), value='goRelArch'),
  ]),
  WordNode(pos=(235, 236), word='='),
  WordNode(pos=(237, 242), word='src'),
  WordNode(pos=(243, 244), word=']'),
])


2624) export PATH="/usr/local/go/bin:$PATH"

CommandNode(pos=(436, 473), parts=[
  WordNode(pos=(436, 442), word='export'),
  WordNode(pos=(443, 473), word='PATH=/usr/local/go/bin:$PATH', parts=[
    ParameterNode(pos=(467, 472), value='PATH'),
  ]),
])


2625) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


2626) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


2627) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


2628) curl -fL -o /openjdk.tgz "$JAVA_URL"

CommandNode(pos=(12, 48), parts=[
  WordNode(pos=(12, 16), word='curl'),
  WordNode(pos=(17, 20), word='-fL'),
  WordNode(pos=(21, 23), word='-o'),
  WordNode(pos=(24, 36), word='/openjdk.tgz'),
  WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
    ParameterNode(pos=(38, 47), value='JAVA_URL'),
  ]),
])


2629) echo "$JAVA_SHA256 */openjdk.tgz"

CommandNode(pos=(51, 84), parts=[
  WordNode(pos=(51, 55), word='echo'),
  WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
    ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
  ]),
])


2630) mkdir -p "$JAVA_HOME"

CommandNode(pos=(104, 125), parts=[
  WordNode(pos=(104, 109), word='mkdir'),
  WordNode(pos=(110, 112), word='-p'),
  WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(114, 124), value='JAVA_HOME'),
  ]),
])


2631) tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1

CommandNode(pos=(128, 207), parts=[
  WordNode(pos=(128, 131), word='tar'),
  WordNode(pos=(132, 141), word='--extract'),
  WordNode(pos=(142, 148), word='--file'),
  WordNode(pos=(149, 161), word='/openjdk.tgz'),
  WordNode(pos=(162, 173), word='--directory'),
  WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(175, 185), value='JAVA_HOME'),
  ]),
  WordNode(pos=(187, 205), word='--strip-components'),
  WordNode(pos=(206, 207), word='1'),
])


2632) ln -sfT "$JAVA_HOME" /usr/java/default

CommandNode(pos=(229, 267), parts=[
  WordNode(pos=(229, 231), word='ln'),
  WordNode(pos=(232, 236), word='-sfT'),
  WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(238, 248), value='JAVA_HOME'),
  ]),
  WordNode(pos=(250, 267), word='/usr/java/default'),
])


2633) ln -sfT "$JAVA_HOME" /usr/java/latest

CommandNode(pos=(270, 307), parts=[
  WordNode(pos=(270, 272), word='ln'),
  WordNode(pos=(273, 277), word='-sfT'),
  WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(279, 289), value='JAVA_HOME'),
  ]),
  WordNode(pos=(291, 307), word='/usr/java/latest'),
])


2634) set -eux;   curl -fL -o /openjdk.tgz "$JAVA_URL";  echo "$JAVA_SHA256 */openjdk.tgz" | sha256sum -c -;  mkdir -p "$JAVA_HOME";  tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1;  rm /openjdk.tgz;   ln -sfT "$JAVA_HOME" /usr/java/default;  ln -sfT "$JAVA_HOME" /usr/java/latest;  for bin in "$JAVA_HOME/bin/"*; do   base="$(basename "$bin")";   [ ! -e "/usr/bin/$base" ];   alternatives --install "/usr/bin/$base" "$base" "$bin" 20000;  done;   java -Xshare:dump;   java --version;  javac --version

ListNode(pos=(0, 528), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 48), parts=[
    WordNode(pos=(12, 16), word='curl'),
    WordNode(pos=(17, 20), word='-fL'),
    WordNode(pos=(21, 23), word='-o'),
    WordNode(pos=(24, 36), word='/openjdk.tgz'),
    WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
      ParameterNode(pos=(38, 47), value='JAVA_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(48, 49)),
  PipelineNode(pos=(51, 101), parts=[
    CommandNode(pos=(51, 84), parts=[
      WordNode(pos=(51, 55), word='echo'),
      WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
        ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(85, 86)),
    CommandNode(pos=(87, 101), parts=[
      WordNode(pos=(87, 96), word='sha256sum'),
      WordNode(pos=(97, 99), word='-c'),
      WordNode(pos=(100, 101), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(101, 102)),
  CommandNode(pos=(104, 125), parts=[
    WordNode(pos=(104, 109), word='mkdir'),
    WordNode(pos=(110, 112), word='-p'),
    WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(114, 124), value='JAVA_HOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 207), parts=[
    WordNode(pos=(128, 131), word='tar'),
    WordNode(pos=(132, 141), word='--extract'),
    WordNode(pos=(142, 148), word='--file'),
    WordNode(pos=(149, 161), word='/openjdk.tgz'),
    WordNode(pos=(162, 173), word='--directory'),
    WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(175, 185), value='JAVA_HOME'),
    ]),
    WordNode(pos=(187, 205), word='--strip-components'),
    WordNode(pos=(206, 207), word='1'),
  ]),
  OperatorNode(op=';', pos=(207, 208)),
  CommandNode(pos=(210, 225), parts=[
    WordNode(pos=(210, 212), word='rm'),
    WordNode(pos=(213, 225), word='/openjdk.tgz'),
  ]),
  OperatorNode(op=';', pos=(225, 226)),
  CommandNode(pos=(229, 267), parts=[
    WordNode(pos=(229, 231), word='ln'),
    WordNode(pos=(232, 236), word='-sfT'),
    WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(238, 248), value='JAVA_HOME'),
    ]),
    WordNode(pos=(250, 267), word='/usr/java/default'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 307), parts=[
    WordNode(pos=(270, 272), word='ln'),
    WordNode(pos=(273, 277), word='-sfT'),
    WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(279, 289), value='JAVA_HOME'),
    ]),
    WordNode(pos=(291, 307), word='/usr/java/latest'),
  ]),
  OperatorNode(op=';', pos=(307, 308)),
  CompoundNode(list=[
    ForNode(pos=(310, 471), parts=[
      ReservedwordNode(pos=(310, 313), word='for'),
      WordNode(pos=(314, 317), word='bin'),
      ReservedwordNode(pos=(318, 320), word='in'),
      WordNode(pos=(321, 339), word='$JAVA_HOME/bin/*', parts=[
        ParameterNode(pos=(322, 332), value='JAVA_HOME'),
      ]),
      ReservedwordNode(pos=(339, 340), word=';'),
      ReservedwordNode(pos=(341, 343), word='do'),
      ListNode(pos=(346, 465), parts=[
          CommandNode(pos=(346, 371), parts=[
            AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(354, 369), parts=[
                  WordNode(pos=(354, 362), word='basename'),
                  WordNode(pos=(363, 369), word='$bin', parts=[
                    ParameterNode(pos=(364, 368), value='bin'),
                  ]),
                ]), pos=(352, 370)),
            ]),
          ]),
          OperatorNode(op=';', pos=(371, 372)),
          CommandNode(pos=(375, 400), parts=[
            WordNode(pos=(375, 376), word='['),
            WordNode(pos=(377, 378), word='!'),
            WordNode(pos=(379, 381), word='-e'),
            WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(392, 397), value='base'),
            ]),
            WordNode(pos=(399, 400), word=']'),
          ]),
          OperatorNode(op=';', pos=(400, 401)),
          CommandNode(pos=(404, 464), parts=[
            WordNode(pos=(404, 416), word='alternatives'),
            WordNode(pos=(417, 426), word='--install'),
            WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(437, 442), value='base'),
            ]),
            WordNode(pos=(444, 451), word='$base', parts=[
              ParameterNode(pos=(445, 450), value='base'),
            ]),
            WordNode(pos=(452, 458), word='$bin', parts=[
              ParameterNode(pos=(453, 457), value='bin'),
            ]),
            WordNode(pos=(459, 464), word='20000'),
          ]),
          OperatorNode(op=';', pos=(464, 465)),
        ]),
      ReservedwordNode(pos=(467, 471), word='done'),
    ]),
  ], pos=(310, 471)),
  OperatorNode(op=';', pos=(471, 472)),
  CommandNode(pos=(475, 492), parts=[
    WordNode(pos=(475, 479), word='java'),
    WordNode(pos=(480, 492), word='-Xshare:dump'),
  ]),
  OperatorNode(op=';', pos=(492, 493)),
  CommandNode(pos=(496, 510), parts=[
    WordNode(pos=(496, 500), word='java'),
    WordNode(pos=(501, 510), word='--version'),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 528), parts=[
    WordNode(pos=(513, 518), word='javac'),
    WordNode(pos=(519, 528), word='--version'),
  ]),
])


2635) [ ! -e "/usr/bin/$base" ]

CommandNode(pos=(375, 400), parts=[
  WordNode(pos=(375, 376), word='['),
  WordNode(pos=(377, 378), word='!'),
  WordNode(pos=(379, 381), word='-e'),
  WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(392, 397), value='base'),
  ]),
  WordNode(pos=(399, 400), word=']'),
])


2636) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


2637) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


2638) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


2639) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2640) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2641) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2642) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2643) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2644) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2645) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2646) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2647) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2648) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2649) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2650) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2651) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2652) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2653) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2654) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2655) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2656) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2657) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2658) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2659) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2660) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2661) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2662) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2663) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2664) wget -O pypy.tar.bz2 "https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2" --progress=dot:giga

CommandNode(pos=(162, 291), parts=[
  WordNode(pos=(162, 166), word='wget'),
  WordNode(pos=(167, 169), word='-O'),
  WordNode(pos=(170, 182), word='pypy.tar.bz2'),
  WordNode(pos=(183, 271), word='https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2', parts=[
    ParameterNode(pos=(235, 250), value='PYPY_VERSION'),
    ParameterNode(pos=(251, 262), value='pypyArch'),
  ]),
  WordNode(pos=(272, 291), word='--progress=dot:giga'),
])


2665) wget -O pypy.tar.bz2 "https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2" --progress=dot:giga

CommandNode(pos=(162, 291), parts=[
  WordNode(pos=(162, 166), word='wget'),
  WordNode(pos=(167, 169), word='-O'),
  WordNode(pos=(170, 182), word='pypy.tar.bz2'),
  WordNode(pos=(183, 271), word='https://bitbucket.org/pypy/pypy/downloads/%%TAR%%-v${PYPY_VERSION}-${pypyArch}.tar.bz2', parts=[
    ParameterNode(pos=(235, 250), value='PYPY_VERSION'),
    ParameterNode(pos=(251, 262), value='pypyArch'),
  ]),
  WordNode(pos=(272, 291), word='--progress=dot:giga'),
])


2666) echo "$sha256 *pypy.tar.bz2"

CommandNode(pos=(294, 322), parts=[
  WordNode(pos=(294, 298), word='echo'),
  WordNode(pos=(299, 322), word='$sha256 *pypy.tar.bz2', parts=[
    ParameterNode(pos=(300, 307), value='sha256'),
  ]),
])


2667) %%CMD%% get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(778, 872), parts=[
  WordNode(pos=(778, 785), word='%%CMD%%'),
  WordNode(pos=(786, 796), word='get-pip.py'),
  WordNode(pos=(799, 826), word='--disable-pip-version-check'),
  WordNode(pos=(829, 843), word='--no-cache-dir'),
  WordNode(pos=(846, 872), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(852, 871), value='PYTHON_PIP_VERSION'),
  ]),
])


2668) [ -z "$savedAptMark" ]

CommandNode(pos=(947, 969), parts=[
  WordNode(pos=(947, 948), word='['),
  WordNode(pos=(949, 951), word='-z'),
  WordNode(pos=(952, 967), word='$savedAptMark', parts=[
    ParameterNode(pos=(953, 966), value='savedAptMark'),
  ]),
  WordNode(pos=(968, 969), word=']'),
])


2669) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(973, 1014), parts=[
  WordNode(pos=(973, 981), word='apt-mark'),
  WordNode(pos=(982, 988), word='manual'),
  WordNode(pos=(989, 1002), word='$savedAptMark', parts=[
    ParameterNode(pos=(989, 1002), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1005, 1014), word='/dev/null'), pos=(1003, 1014), type='>'),
])


2670) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


2671) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


2672) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


2673) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


2674) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


2675) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


2676) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


2677) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


2678) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


2679) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


2680) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


2681) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


2682) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(353, 455), parts=[
  WordNode(pos=(353, 357), word='wget'),
  WordNode(pos=(358, 360), word='-O'),
  WordNode(pos=(361, 372), word='ruby.tar.xz'),
  WordNode(pos=(373, 455), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(411, 428), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(434, 447), value='RUBY_VERSION'),
  ]),
])


2683) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(460, 501), parts=[
  WordNode(pos=(460, 464), word='echo'),
  WordNode(pos=(465, 501), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(466, 487), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


2684) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(1236, 1310), parts=[
  WordNode(pos=(1236, 1247), word='./configure'),
  WordNode(pos=(1250, 1268), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1259, 1267), value='gnuArch'),
  ]),
  WordNode(pos=(1271, 1292), word='--disable-install-doc'),
  WordNode(pos=(1295, 1310), word='--enable-shared'),
])


2685) apk add --no-network --virtual .ruby-rundeps $runDeps   bzip2   ca-certificates   libffi-dev   procps   yaml-dev   zlib-dev

CommandNode(pos=(1558, 1681), parts=[
  WordNode(pos=(1558, 1561), word='apk'),
  WordNode(pos=(1562, 1565), word='add'),
  WordNode(pos=(1566, 1578), word='--no-network'),
  WordNode(pos=(1579, 1588), word='--virtual'),
  WordNode(pos=(1589, 1602), word='.ruby-rundeps'),
  WordNode(pos=(1603, 1611), word='$runDeps', parts=[
    ParameterNode(pos=(1603, 1611), value='runDeps'),
  ]),
  WordNode(pos=(1614, 1619), word='bzip2'),
  WordNode(pos=(1622, 1637), word='ca-certificates'),
  WordNode(pos=(1640, 1650), word='libffi-dev'),
  WordNode(pos=(1653, 1659), word='procps'),
  WordNode(pos=(1662, 1670), word='yaml-dev'),
  WordNode(pos=(1673, 1681), word='zlib-dev'),
])


2686) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


2687) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


2688) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


2689) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


2690) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


2691) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


2692) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


2693) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


2694) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


2695) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


2696) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


2697) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


2698) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


2699) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(11, 137), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/gosu'),
  WordNode(pos=(39, 137), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(89, 102), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(110, 135), parts=[
        WordNode(pos=(110, 114), word='dpkg'),
        WordNode(pos=(115, 135), word='--print-architecture'),
      ]), pos=(108, 136)),
  ]),
])


2700) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(142, 276), parts=[
  WordNode(pos=(142, 146), word='wget'),
  WordNode(pos=(147, 149), word='-O'),
  WordNode(pos=(150, 173), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(174, 276), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(224, 237), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(245, 270), parts=[
        WordNode(pos=(245, 249), word='dpkg'),
        WordNode(pos=(250, 270), word='--print-architecture'),
      ]), pos=(243, 271)),
  ]),
])


2701) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(549, 591), parts=[
  WordNode(pos=(549, 551), word='rm'),
  WordNode(pos=(552, 554), word='-r'),
  WordNode(pos=(555, 567), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(556, 566), value='GNUPGHOME'),
  ]),
  WordNode(pos=(568, 591), word='/usr/local/bin/gosu.asc'),
])


2702) npm install -g "ghost-cli@$GHOST_CLI_VERSION"

CommandNode(pos=(11, 56), parts=[
  WordNode(pos=(11, 14), word='npm'),
  WordNode(pos=(15, 22), word='install'),
  WordNode(pos=(23, 25), word='-g'),
  WordNode(pos=(26, 56), word='ghost-cli@$GHOST_CLI_VERSION', parts=[
    ParameterNode(pos=(37, 55), value='GHOST_CLI_VERSION'),
  ]),
])


2703) mkdir -p "$GHOST_INSTALL"

CommandNode(pos=(11, 36), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 36), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(21, 35), value='GHOST_INSTALL'),
  ]),
])


2704) chown node:node "$GHOST_INSTALL"

CommandNode(pos=(39, 71), parts=[
  WordNode(pos=(39, 44), word='chown'),
  WordNode(pos=(45, 54), word='node:node'),
  WordNode(pos=(55, 71), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(56, 70), value='GHOST_INSTALL'),
  ]),
])


2705) gosu node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 185), parts=[
  WordNode(pos=(75, 79), word='gosu'),
  WordNode(pos=(80, 84), word='node'),
  WordNode(pos=(85, 90), word='ghost'),
  WordNode(pos=(91, 98), word='install'),
  WordNode(pos=(99, 115), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(100, 114), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(116, 120), word='--db'),
  WordNode(pos=(121, 128), word='sqlite3'),
  WordNode(pos=(129, 140), word='--no-prompt'),
  WordNode(pos=(141, 151), word='--no-stack'),
  WordNode(pos=(152, 162), word='--no-setup'),
  WordNode(pos=(163, 168), word='--dir'),
  WordNode(pos=(169, 185), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(170, 184), value='GHOST_INSTALL'),
  ]),
])


2706) gosu node ghost install "$GHOST_VERSION" --db sqlite3 --no-prompt --no-stack --no-setup --dir "$GHOST_INSTALL"

CommandNode(pos=(75, 185), parts=[
  WordNode(pos=(75, 79), word='gosu'),
  WordNode(pos=(80, 84), word='node'),
  WordNode(pos=(85, 90), word='ghost'),
  WordNode(pos=(91, 98), word='install'),
  WordNode(pos=(99, 115), word='$GHOST_VERSION', parts=[
    ParameterNode(pos=(100, 114), value='GHOST_VERSION'),
  ]),
  WordNode(pos=(116, 120), word='--db'),
  WordNode(pos=(121, 128), word='sqlite3'),
  WordNode(pos=(129, 140), word='--no-prompt'),
  WordNode(pos=(141, 151), word='--no-stack'),
  WordNode(pos=(152, 162), word='--no-setup'),
  WordNode(pos=(163, 168), word='--dir'),
  WordNode(pos=(169, 185), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(170, 184), value='GHOST_INSTALL'),
  ]),
])


2707) cd "$GHOST_INSTALL"

CommandNode(pos=(189, 208), parts=[
  WordNode(pos=(189, 191), word='cd'),
  WordNode(pos=(192, 208), word='$GHOST_INSTALL', parts=[
    ParameterNode(pos=(193, 207), value='GHOST_INSTALL'),
  ]),
])


2708) gosu node ghost config --ip 0.0.0.0 --port 2368 --no-prompt --db sqlite3 --url http://localhost:2368 --dbpath "$GHOST_CONTENT/data/ghost.db"

CommandNode(pos=(211, 351), parts=[
  WordNode(pos=(211, 215), word='gosu'),
  WordNode(pos=(216, 220), word='node'),
  WordNode(pos=(221, 226), word='ghost'),
  WordNode(pos=(227, 233), word='config'),
  WordNode(pos=(234, 238), word='--ip'),
  WordNode(pos=(239, 246), word='0.0.0.0'),
  WordNode(pos=(247, 253), word='--port'),
  WordNode(pos=(254, 258), word='2368'),
  WordNode(pos=(259, 270), word='--no-prompt'),
  WordNode(pos=(271, 275), word='--db'),
  WordNode(pos=(276, 283), word='sqlite3'),
  WordNode(pos=(284, 289), word='--url'),
  WordNode(pos=(290, 311), word='http://localhost:2368'),
  WordNode(pos=(312, 320), word='--dbpath'),
  WordNode(pos=(321, 351), word='$GHOST_CONTENT/data/ghost.db', parts=[
    ParameterNode(pos=(322, 336), value='GHOST_CONTENT'),
  ]),
])


2709) gosu node ghost config paths.contentPath "$GHOST_CONTENT"

CommandNode(pos=(354, 411), parts=[
  WordNode(pos=(354, 358), word='gosu'),
  WordNode(pos=(359, 363), word='node'),
  WordNode(pos=(364, 369), word='ghost'),
  WordNode(pos=(370, 376), word='config'),
  WordNode(pos=(377, 394), word='paths.contentPath'),
  WordNode(pos=(395, 411), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(396, 410), value='GHOST_CONTENT'),
  ]),
])


2710) gosu node ln -s config.production.json "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(415, 494), parts=[
  WordNode(pos=(415, 419), word='gosu'),
  WordNode(pos=(420, 424), word='node'),
  WordNode(pos=(425, 427), word='ln'),
  WordNode(pos=(428, 430), word='-s'),
  WordNode(pos=(431, 453), word='config.production.json'),
  WordNode(pos=(454, 494), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(455, 469), value='GHOST_INSTALL'),
  ]),
])


2711) readlink -f "$GHOST_INSTALL/config.development.json"

CommandNode(pos=(497, 549), parts=[
  WordNode(pos=(497, 505), word='readlink'),
  WordNode(pos=(506, 508), word='-f'),
  WordNode(pos=(509, 549), word='$GHOST_INSTALL/config.development.json', parts=[
    ParameterNode(pos=(510, 524), value='GHOST_INSTALL'),
  ]),
])


2712) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(553, 602), parts=[
  WordNode(pos=(553, 555), word='mv'),
  WordNode(pos=(556, 572), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(557, 571), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(573, 602), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(574, 588), value='GHOST_INSTALL'),
  ]),
])


2713) mv "$GHOST_CONTENT" "$GHOST_INSTALL/content.orig"

CommandNode(pos=(553, 602), parts=[
  WordNode(pos=(553, 555), word='mv'),
  WordNode(pos=(556, 572), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(557, 571), value='GHOST_CONTENT'),
  ]),
  WordNode(pos=(573, 602), word='$GHOST_INSTALL/content.orig', parts=[
    ParameterNode(pos=(574, 588), value='GHOST_INSTALL'),
  ]),
])


2714) mkdir -p "$GHOST_CONTENT"

CommandNode(pos=(605, 630), parts=[
  WordNode(pos=(605, 610), word='mkdir'),
  WordNode(pos=(611, 613), word='-p'),
  WordNode(pos=(614, 630), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(615, 629), value='GHOST_CONTENT'),
  ]),
])


2715) chown node:node "$GHOST_CONTENT"

CommandNode(pos=(633, 665), parts=[
  WordNode(pos=(633, 638), word='chown'),
  WordNode(pos=(639, 648), word='node:node'),
  WordNode(pos=(649, 665), word='$GHOST_CONTENT', parts=[
    ParameterNode(pos=(650, 664), value='GHOST_CONTENT'),
  ]),
])


2716) cd "$GHOST_INSTALL/current"

CommandNode(pos=(669, 696), parts=[
  WordNode(pos=(669, 671), word='cd'),
  WordNode(pos=(672, 696), word='$GHOST_INSTALL/current', parts=[
    ParameterNode(pos=(673, 687), value='GHOST_INSTALL'),
  ]),
])


2717) gosu node yarn add "sqlite3@$sqlite3Version" --force

CommandNode(pos=(766, 818), parts=[
  WordNode(pos=(766, 770), word='gosu'),
  WordNode(pos=(771, 775), word='node'),
  WordNode(pos=(776, 780), word='yarn'),
  WordNode(pos=(781, 784), word='add'),
  WordNode(pos=(785, 810), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(794, 809), value='sqlite3Version'),
  ]),
  WordNode(pos=(811, 818), word='--force'),
])


2718) gosu node yarn add "sqlite3@$sqlite3Version" --force --build-from-source

CommandNode(pos=(994, 1066), parts=[
  WordNode(pos=(994, 998), word='gosu'),
  WordNode(pos=(999, 1003), word='node'),
  WordNode(pos=(1004, 1008), word='yarn'),
  WordNode(pos=(1009, 1012), word='add'),
  WordNode(pos=(1013, 1038), word='sqlite3@$sqlite3Version', parts=[
    ParameterNode(pos=(1022, 1037), value='sqlite3Version'),
  ]),
  WordNode(pos=(1039, 1046), word='--force'),
  WordNode(pos=(1047, 1066), word='--build-from-source'),
])


2719) [ -z "$savedAptMark" ]

CommandNode(pos=(1129, 1151), parts=[
  WordNode(pos=(1129, 1130), word='['),
  WordNode(pos=(1131, 1133), word='-z'),
  WordNode(pos=(1134, 1149), word='$savedAptMark', parts=[
    ParameterNode(pos=(1135, 1148), value='savedAptMark'),
  ]),
  WordNode(pos=(1150, 1151), word=']'),
])


2720) apt-mark manual $savedAptMark

CommandNode(pos=(1155, 1184), parts=[
  WordNode(pos=(1155, 1163), word='apt-mark'),
  WordNode(pos=(1164, 1170), word='manual'),
  WordNode(pos=(1171, 1184), word='$savedAptMark', parts=[
    ParameterNode(pos=(1171, 1184), value='savedAptMark'),
  ]),
])


2721) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2722) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2723) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2724) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2725) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2726) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2727) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2728) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2729) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2730) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2731) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2732) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2733) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2734) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2735) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2736) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2737) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2738) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2739) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2740) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2741) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2742) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2743) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2744) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2745) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2746) [ -n "$zfs" ]

CommandNode(pos=(159, 172), parts=[
  WordNode(pos=(159, 160), word='['),
  WordNode(pos=(161, 163), word='-n'),
  WordNode(pos=(164, 170), word='$zfs', parts=[
    ParameterNode(pos=(165, 169), value='zfs'),
  ]),
  WordNode(pos=(171, 172), word=']'),
])


2747) wget -O /usr/local/bin/dind "https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind"

CommandNode(pos=(11, 113), parts=[
  WordNode(pos=(11, 15), word='wget'),
  WordNode(pos=(16, 18), word='-O'),
  WordNode(pos=(19, 38), word='/usr/local/bin/dind'),
  WordNode(pos=(39, 113), word='https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind', parts=[
    ParameterNode(pos=(88, 102), value='DIND_COMMIT'),
  ]),
])


2748) pypy3 get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 164), parts=[
  WordNode(pos=(72, 77), word='pypy3'),
  WordNode(pos=(78, 88), word='get-pip.py'),
  WordNode(pos=(91, 118), word='--disable-pip-version-check'),
  WordNode(pos=(121, 135), word='--no-cache-dir'),
  WordNode(pos=(138, 164), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(144, 163), value='PYTHON_PIP_VERSION'),
  ]),
])


2749) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2750) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2751) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2752) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2753) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2754) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2755) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2756) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2757) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2758) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2759) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2760) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2761) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2762) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2763) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2764) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2765) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2766) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2767) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2768) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2769) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2770) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2771) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2772) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2773) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2774) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


2775) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


2776) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


2777) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


2778) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


2779) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


2780) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1115, 1267), parts=[
  WordNode(pos=(1115, 1126), word='./configure'),
  WordNode(pos=(1129, 1147), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1138, 1146), value='gnuArch'),
  ]),
  WordNode(pos=(1150, 1185), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1188, 1203), word='--enable-shared'),
  WordNode(pos=(1206, 1225), word='--with-system-expat'),
  WordNode(pos=(1228, 1245), word='--with-system-ffi'),
  WordNode(pos=(1248, 1267), word='--without-ensurepip'),
])


2781) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


2782) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(184, 221), parts=[
  WordNode(pos=(184, 188), word='wget'),
  WordNode(pos=(189, 191), word='-O'),
  WordNode(pos=(192, 206), word='haproxy.tar.gz'),
  WordNode(pos=(207, 221), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(208, 220), value='HAPROXY_URL'),
  ]),
])


2783) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(226, 264), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 264), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(232, 247), value='HAPROXY_SHA256'),
  ]),
])


2784) make -C /usr/src/haproxy -j "$(getconf _NPROCESSORS_ONLN)" all $makeOpts

CommandNode(pos=(522, 594), parts=[
  WordNode(pos=(522, 526), word='make'),
  WordNode(pos=(527, 529), word='-C'),
  WordNode(pos=(530, 546), word='/usr/src/haproxy'),
  WordNode(pos=(547, 549), word='-j'),
  WordNode(pos=(550, 580), word='$(getconf _NPROCESSORS_ONLN)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(553, 578), parts=[
        WordNode(pos=(553, 560), word='getconf'),
        WordNode(pos=(561, 578), word='_NPROCESSORS_ONLN'),
      ]), pos=(551, 579)),
  ]),
  WordNode(pos=(581, 584), word='all'),
  WordNode(pos=(585, 594), word='$makeOpts', parts=[
    ParameterNode(pos=(585, 594), value='makeOpts'),
  ]),
])


2785) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(599, 645), parts=[
  WordNode(pos=(599, 603), word='make'),
  WordNode(pos=(604, 606), word='-C'),
  WordNode(pos=(607, 623), word='/usr/src/haproxy'),
  WordNode(pos=(624, 635), word='install-bin'),
  WordNode(pos=(636, 645), word='$makeOpts', parts=[
    ParameterNode(pos=(636, 645), value='makeOpts'),
  ]),
])


2786) apk add --virtual .haproxy-rundeps $runDeps

CommandNode(pos=(995, 1038), parts=[
  WordNode(pos=(995, 998), word='apk'),
  WordNode(pos=(999, 1002), word='add'),
  WordNode(pos=(1003, 1012), word='--virtual'),
  WordNode(pos=(1013, 1029), word='.haproxy-rundeps'),
  WordNode(pos=(1030, 1038), word='$runDeps', parts=[
    ParameterNode(pos=(1030, 1038), value='runDeps'),
  ]),
])


2787) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(70, 123), parts=[
  WordNode(pos=(70, 77), word='apt-get'),
  WordNode(pos=(78, 85), word='install'),
  WordNode(pos=(86, 88), word='-y'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
  WordNode(pos=(113, 123), word='$fetchDeps', parts=[
    ParameterNode(pos=(113, 123), value='fetchDeps'),
  ]),
])


2788) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


2789) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(225, 332), parts=[
  WordNode(pos=(225, 229), word='wget'),
  WordNode(pos=(230, 232), word='-O'),
  WordNode(pos=(233, 252), word='/usr/local/bin/gosu'),
  WordNode(pos=(253, 332), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(303, 316), value='GOSU_VERSION'),
    ParameterNode(pos=(322, 331), value='dpkgArch'),
  ]),
])


2790) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


2791) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(335, 450), parts=[
  WordNode(pos=(335, 339), word='wget'),
  WordNode(pos=(340, 342), word='-O'),
  WordNode(pos=(343, 366), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(367, 450), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(417, 430), value='GOSU_VERSION'),
    ParameterNode(pos=(436, 445), value='dpkgArch'),
  ]),
])


2792) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(721, 763), parts=[
  WordNode(pos=(721, 723), word='rm'),
  WordNode(pos=(724, 726), word='-r'),
  WordNode(pos=(727, 739), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(728, 738), value='GNUPGHOME'),
  ]),
  WordNode(pos=(740, 763), word='/usr/local/bin/gosu.asc'),
])


2793) apt-get purge -y --auto-remove $fetchDeps

CommandNode(pos=(818, 859), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 859), word='$fetchDeps', parts=[
    ParameterNode(pos=(849, 859), value='fetchDeps'),
  ]),
])


2794) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg;  command -v gpgconf > /dev/null && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 313), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 250), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
    RedirectNode(output=
      WordNode(pos=(241, 250), word='/dev/null'), pos=(239, 250), type='>'),
  ]),
  OperatorNode(op='&&', pos=(251, 253)),
  CommandNode(pos=(254, 272), parts=[
    WordNode(pos=(254, 261), word='gpgconf'),
    WordNode(pos=(262, 268), word='--kill'),
    WordNode(pos=(269, 272), word='all'),
  ]),
  OperatorNode(op='||', pos=(273, 275)),
  CommandNode(pos=(276, 277), parts=[
    WordNode(pos=(276, 277), word=':'),
  ]),
  OperatorNode(op=';', pos=(277, 278)),
  CommandNode(pos=(280, 298), parts=[
    WordNode(pos=(280, 282), word='rm'),
    WordNode(pos=(283, 285), word='-r'),
    WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(287, 297), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(298, 299)),
  CommandNode(pos=(301, 313), parts=[
    WordNode(pos=(301, 308), word='apt-key'),
    WordNode(pos=(309, 313), word='list'),
  ]),
])


2795) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


2796) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/percona.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/percona.gpg'), pos=(181, 217), type='>'),
])


2797) rm -r "$GNUPGHOME"

CommandNode(pos=(280, 298), parts=[
  WordNode(pos=(280, 282), word='rm'),
  WordNode(pos=(283, 285), word='-r'),
  WordNode(pos=(286, 298), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(287, 297), value='GNUPGHOME'),
  ]),
])


2798) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


2799) set -ex;  {   for key in    percona-server-server/root_password    percona-server-server/root_password_again    "percona-server-server-$PERCONA_MAJOR/root-pass"    "percona-server-server-$PERCONA_MAJOR/re-root-pass"   ; do    echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused';   done;  } | debconf-set-selections;  apt-get update;  apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION  ;  rm -rf /var/lib/apt/lists/*;  sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf;  rm -rf /var/lib/mysql;  mkdir -p /var/lib/mysql /var/run/mysqld;  chown -R mysql:mysql /var/lib/mysql /var/run/mysqld;  chmod 777 /var/run/mysqld;  find /etc/mysql/ -name '*.cnf' -print0   | xargs -0 grep -lZE '^(bind-address|log)'   | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/';  echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf

ListNode(pos=(0, 873), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  PipelineNode(pos=(10, 331), parts=[
    CompoundNode(list=[
      ReservedwordNode(pos=(10, 11), word='{'),
      ListNode(pos=(14, 303), parts=[
          CompoundNode(list=[
            ForNode(pos=(14, 302), parts=[
              ReservedwordNode(pos=(14, 17), word='for'),
              WordNode(pos=(18, 21), word='key'),
              ReservedwordNode(pos=(22, 24), word='in'),
              WordNode(pos=(28, 63), word='percona-server-server/root_password'),
              WordNode(pos=(67, 108), word='percona-server-server/root_password_again'),
              WordNode(pos=(112, 160), word='percona-server-server-$PERCONA_MAJOR/root-pass', parts=[
                ParameterNode(pos=(135, 149), value='PERCONA_MAJOR'),
              ]),
              WordNode(pos=(164, 215), word='percona-server-server-$PERCONA_MAJOR/re-root-pass', parts=[
                ParameterNode(pos=(187, 201), value='PERCONA_MAJOR'),
              ]),
              ReservedwordNode(pos=(218, 219), word=';'),
              ReservedwordNode(pos=(220, 222), word='do'),
              ListNode(pos=(226, 295), parts=[
                  CommandNode(pos=(226, 294), parts=[
                    WordNode(pos=(226, 230), word='echo'),
                    WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
                      ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
                    ]),
                    WordNode(pos=(270, 276), word='$key', parts=[
                      ParameterNode(pos=(271, 275), value='key'),
                    ]),
                    WordNode(pos=(277, 285), word='password'),
                    WordNode(pos=(286, 294), word='unused'),
                  ]),
                  OperatorNode(op=';', pos=(294, 295)),
                ]),
              ReservedwordNode(pos=(298, 302), word='done'),
            ]),
          ], pos=(14, 302)),
          OperatorNode(op=';', pos=(302, 303)),
        ]),
      ReservedwordNode(pos=(305, 306), word='}'),
    ], pos=(10, 306)),
    PipeNode(pipe='|', pos=(307, 308)),
    CommandNode(pos=(309, 331), parts=[
      WordNode(pos=(309, 331), word='debconf-set-selections'),
    ]),
  ]),
  OperatorNode(op=';', pos=(331, 332)),
  CommandNode(pos=(334, 348), parts=[
    WordNode(pos=(334, 341), word='apt-get'),
    WordNode(pos=(342, 348), word='update'),
  ]),
  OperatorNode(op=';', pos=(348, 349)),
  CommandNode(pos=(351, 425), parts=[
    WordNode(pos=(351, 358), word='apt-get'),
    WordNode(pos=(359, 366), word='install'),
    WordNode(pos=(367, 369), word='-y'),
    WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
      ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
      ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(427, 428)),
  CommandNode(pos=(430, 457), parts=[
    WordNode(pos=(430, 432), word='rm'),
    WordNode(pos=(433, 436), word='-rf'),
    WordNode(pos=(437, 457), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(457, 458)),
  CommandNode(pos=(460, 501), parts=[
    WordNode(pos=(460, 463), word='sed'),
    WordNode(pos=(464, 467), word='-ri'),
    WordNode(pos=(468, 483), word='s/^user\\s/#&/'),
    WordNode(pos=(484, 501), word='/etc/mysql/my.cnf'),
  ]),
  OperatorNode(op=';', pos=(501, 502)),
  CommandNode(pos=(504, 525), parts=[
    WordNode(pos=(504, 506), word='rm'),
    WordNode(pos=(507, 510), word='-rf'),
    WordNode(pos=(511, 525), word='/var/lib/mysql'),
  ]),
  OperatorNode(op=';', pos=(525, 526)),
  CommandNode(pos=(528, 567), parts=[
    WordNode(pos=(528, 533), word='mkdir'),
    WordNode(pos=(534, 536), word='-p'),
    WordNode(pos=(537, 551), word='/var/lib/mysql'),
    WordNode(pos=(552, 567), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(567, 568)),
  CommandNode(pos=(570, 621), parts=[
    WordNode(pos=(570, 575), word='chown'),
    WordNode(pos=(576, 578), word='-R'),
    WordNode(pos=(579, 590), word='mysql:mysql'),
    WordNode(pos=(591, 605), word='/var/lib/mysql'),
    WordNode(pos=(606, 621), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(621, 622)),
  CommandNode(pos=(624, 649), parts=[
    WordNode(pos=(624, 629), word='chmod'),
    WordNode(pos=(630, 633), word='777'),
    WordNode(pos=(634, 649), word='/var/run/mysqld'),
  ]),
  OperatorNode(op=';', pos=(649, 650)),
  PipelineNode(pos=(652, 788), parts=[
    CommandNode(pos=(652, 690), parts=[
      WordNode(pos=(652, 656), word='find'),
      WordNode(pos=(657, 668), word='/etc/mysql/'),
      WordNode(pos=(669, 674), word='-name'),
      WordNode(pos=(675, 682), word='*.cnf'),
      WordNode(pos=(683, 690), word='-print0'),
    ]),
    PipeNode(pipe='|', pos=(693, 694)),
    CommandNode(pos=(695, 735), parts=[
      WordNode(pos=(695, 700), word='xargs'),
      WordNode(pos=(701, 703), word='-0'),
      WordNode(pos=(704, 708), word='grep'),
      WordNode(pos=(709, 713), word='-lZE'),
      WordNode(pos=(714, 735), word='^(bind-address|log)'),
    ]),
    PipeNode(pipe='|', pos=(738, 739)),
    CommandNode(pos=(740, 788), parts=[
      WordNode(pos=(740, 745), word='xargs'),
      WordNode(pos=(746, 749), word='-rt'),
      WordNode(pos=(750, 752), word='-0'),
      WordNode(pos=(753, 756), word='sed'),
      WordNode(pos=(757, 760), word='-Ei'),
      WordNode(pos=(761, 788), word='s/^(bind-address|log)/#&/'),
    ]),
  ]),
  OperatorNode(op=';', pos=(788, 789)),
  CommandNode(pos=(791, 873), parts=[
    WordNode(pos=(791, 795), word='echo'),
    WordNode(pos=(796, 842), word='[mysqld]\\nskip-host-cache\\nskip-name-resolve'),
    RedirectNode(output=
      WordNode(pos=(845, 873), word='/etc/mysql/conf.d/docker.cnf'), pos=(843, 873), type='>'),
  ]),
])


2800) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


2801) echo "percona-server-server-$PERCONA_MAJOR" "$key" password 'unused'

CommandNode(pos=(226, 294), parts=[
  WordNode(pos=(226, 230), word='echo'),
  WordNode(pos=(231, 269), word='percona-server-server-$PERCONA_MAJOR', parts=[
    ParameterNode(pos=(254, 268), value='PERCONA_MAJOR'),
  ]),
  WordNode(pos=(270, 276), word='$key', parts=[
    ParameterNode(pos=(271, 275), value='key'),
  ]),
  WordNode(pos=(277, 285), word='password'),
  WordNode(pos=(286, 294), word='unused'),
])


2802) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


2803) apt-get install -y   percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION

CommandNode(pos=(351, 425), parts=[
  WordNode(pos=(351, 358), word='apt-get'),
  WordNode(pos=(359, 366), word='install'),
  WordNode(pos=(367, 369), word='-y'),
  WordNode(pos=(372, 425), word='percona-server-server-$PERCONA_MAJOR=$PERCONA_VERSION', parts=[
    ParameterNode(pos=(394, 408), value='PERCONA_MAJOR'),
    ParameterNode(pos=(409, 425), value='PERCONA_VERSION'),
  ]),
])


2804) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2805) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2806) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2807) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2808) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2809) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2810) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2811) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2812) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2813) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2814) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2815) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2816) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2817) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2818) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2819) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2820) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2821) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2822) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2823) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2824) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2825) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2826) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2827) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2828) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2829) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)"

CommandNode(pos=(128, 254), parts=[
  WordNode(pos=(128, 132), word='wget'),
  WordNode(pos=(133, 135), word='-O'),
  WordNode(pos=(136, 155), word='/usr/local/bin/gosu'),
  WordNode(pos=(156, 254), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)', parts=[
    ParameterNode(pos=(206, 219), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(227, 252), parts=[
        WordNode(pos=(227, 231), word='dpkg'),
        WordNode(pos=(232, 252), word='--print-architecture'),
      ]), pos=(225, 253)),
  ]),
])


2830) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc"

CommandNode(pos=(259, 393), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 290), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(291, 393), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc', parts=[
    ParameterNode(pos=(341, 354), value='GOSU_VERSION'),
    CommandsubstitutionNode(command=
      CommandNode(pos=(362, 387), parts=[
        WordNode(pos=(362, 366), word='dpkg'),
        WordNode(pos=(367, 387), word='--print-architecture'),
      ]), pos=(360, 388)),
  ]),
])


2831) rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(678, 721), parts=[
  WordNode(pos=(678, 680), word='rm'),
  WordNode(pos=(681, 684), word='-rf'),
  WordNode(pos=(685, 697), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(686, 696), value='GNUPGHOME'),
  ]),
  WordNode(pos=(698, 721), word='/usr/local/bin/gosu.asc'),
])


2832) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(93, 162), parts=[
  WordNode(pos=(93, 96), word='gpg'),
  WordNode(pos=(97, 104), word='--batch'),
  WordNode(pos=(105, 116), word='--keyserver'),
  WordNode(pos=(117, 143), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(144, 155), word='--recv-keys'),
  WordNode(pos=(156, 162), word='$key', parts=[
    ParameterNode(pos=(157, 161), value='key'),
  ]),
])


2833) gpg --batch --export "$key" > /etc/apt/trusted.gpg.d/postgres.gpg

CommandNode(pos=(165, 230), parts=[
  WordNode(pos=(165, 168), word='gpg'),
  WordNode(pos=(169, 176), word='--batch'),
  WordNode(pos=(177, 185), word='--export'),
  WordNode(pos=(186, 192), word='$key', parts=[
    ParameterNode(pos=(187, 191), value='key'),
  ]),
  RedirectNode(output=
    WordNode(pos=(195, 230), word='/etc/apt/trusted.gpg.d/postgres.gpg'), pos=(193, 230), type='>'),
])


2834) rm -rf "$GNUPGHOME"

CommandNode(pos=(288, 307), parts=[
  WordNode(pos=(288, 290), word='rm'),
  WordNode(pos=(291, 294), word='-rf'),
  WordNode(pos=(295, 307), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(296, 306), value='GNUPGHOME'),
  ]),
])


2835) dpkg-divert --add --rename --divert "/usr/share/postgresql/postgresql.conf.sample.dpkg" "/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample"

CommandNode(pos=(11, 155), parts=[
  WordNode(pos=(11, 22), word='dpkg-divert'),
  WordNode(pos=(23, 28), word='--add'),
  WordNode(pos=(29, 37), word='--rename'),
  WordNode(pos=(38, 46), word='--divert'),
  WordNode(pos=(47, 98), word='/usr/share/postgresql/postgresql.conf.sample.dpkg'),
  WordNode(pos=(99, 155), word='/usr/share/postgresql/$PG_MAJOR/postgresql.conf.sample', parts=[
    ParameterNode(pos=(122, 131), value='PG_MAJOR'),
  ]),
])


2836) ln -sv ../postgresql.conf.sample "/usr/share/postgresql/$PG_MAJOR/"

CommandNode(pos=(261, 328), parts=[
  WordNode(pos=(261, 263), word='ln'),
  WordNode(pos=(264, 267), word='-sv'),
  WordNode(pos=(268, 293), word='../postgresql.conf.sample'),
  WordNode(pos=(294, 328), word='/usr/share/postgresql/$PG_MAJOR/', parts=[
    ParameterNode(pos=(317, 326), value='PG_MAJOR'),
  ]),
])


2837) mkdir -p "$PGDATA"

CommandNode(pos=(0, 18), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 18), word='$PGDATA', parts=[
    ParameterNode(pos=(10, 17), value='PGDATA'),
  ]),
])


2838) chown -R postgres:postgres "$PGDATA"

CommandNode(pos=(22, 58), parts=[
  WordNode(pos=(22, 27), word='chown'),
  WordNode(pos=(28, 30), word='-R'),
  WordNode(pos=(31, 48), word='postgres:postgres'),
  WordNode(pos=(49, 58), word='$PGDATA', parts=[
    ParameterNode(pos=(50, 57), value='PGDATA'),
  ]),
])


2839) chmod 777 "$PGDATA"

CommandNode(pos=(62, 81), parts=[
  WordNode(pos=(62, 67), word='chmod'),
  WordNode(pos=(68, 71), word='777'),
  WordNode(pos=(72, 81), word='$PGDATA', parts=[
    ParameterNode(pos=(73, 80), value='PGDATA'),
  ]),
])


2840) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


2841) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2842) sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS"

CommandNode(pos=(112, 187), parts=[
  WordNode(pos=(112, 115), word='sed'),
  WordNode(pos=(116, 119), word='-ri'),
  WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
  WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
  ]),
])


2843) . "$APACHE_ENVVARS"

CommandNode(pos=(191, 210), parts=[
  WordNode(pos=(191, 192), word='.'),
  WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
    ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
  ]),
])


2844) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


2845) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


2846) set -eux;  apt-get update;  apt-get install -y --no-install-recommends apache2;  rm -rf /var/lib/apt/lists/*;   sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS";   . "$APACHE_ENVVARS";  for dir in   "$APACHE_LOCK_DIR"   "$APACHE_RUN_DIR"   "$APACHE_LOG_DIR"  ; do   rm -rvf "$dir";   mkdir -p "$dir";   chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir";   chmod 777 "$dir";  done;   rm -rvf /var/www/html/*;   ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log";  ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log";  chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

ListNode(pos=(0, 682), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(11, 25), parts=[
    WordNode(pos=(11, 18), word='apt-get'),
    WordNode(pos=(19, 25), word='update'),
  ]),
  OperatorNode(op=';', pos=(25, 26)),
  CommandNode(pos=(28, 78), parts=[
    WordNode(pos=(28, 35), word='apt-get'),
    WordNode(pos=(36, 43), word='install'),
    WordNode(pos=(44, 46), word='-y'),
    WordNode(pos=(47, 70), word='--no-install-recommends'),
    WordNode(pos=(71, 78), word='apache2'),
  ]),
  OperatorNode(op=';', pos=(78, 79)),
  CommandNode(pos=(81, 108), parts=[
    WordNode(pos=(81, 83), word='rm'),
    WordNode(pos=(84, 87), word='-rf'),
    WordNode(pos=(88, 108), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(108, 109)),
  CommandNode(pos=(112, 187), parts=[
    WordNode(pos=(112, 115), word='sed'),
    WordNode(pos=(116, 119), word='-ri'),
    WordNode(pos=(120, 169), word='s/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/'),
    WordNode(pos=(170, 187), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(171, 186), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(187, 188)),
  CommandNode(pos=(191, 210), parts=[
    WordNode(pos=(191, 192), word='.'),
    WordNode(pos=(193, 210), word='$APACHE_ENVVARS', parts=[
      ParameterNode(pos=(194, 209), value='APACHE_ENVVARS'),
    ]),
  ]),
  OperatorNode(op=';', pos=(210, 211)),
  CompoundNode(list=[
    ForNode(pos=(213, 406), parts=[
      ReservedwordNode(pos=(213, 216), word='for'),
      WordNode(pos=(217, 220), word='dir'),
      ReservedwordNode(pos=(221, 223), word='in'),
      WordNode(pos=(226, 244), word='$APACHE_LOCK_DIR', parts=[
        ParameterNode(pos=(227, 243), value='APACHE_LOCK_DIR'),
      ]),
      WordNode(pos=(247, 264), word='$APACHE_RUN_DIR', parts=[
        ParameterNode(pos=(248, 263), value='APACHE_RUN_DIR'),
      ]),
      WordNode(pos=(267, 284), word='$APACHE_LOG_DIR', parts=[
        ParameterNode(pos=(268, 283), value='APACHE_LOG_DIR'),
      ]),
      ReservedwordNode(pos=(286, 287), word=';'),
      ReservedwordNode(pos=(288, 290), word='do'),
      ListNode(pos=(293, 400), parts=[
          CommandNode(pos=(293, 307), parts=[
            WordNode(pos=(293, 295), word='rm'),
            WordNode(pos=(296, 300), word='-rvf'),
            WordNode(pos=(301, 307), word='$dir', parts=[
              ParameterNode(pos=(302, 306), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(307, 308)),
          CommandNode(pos=(311, 326), parts=[
            WordNode(pos=(311, 316), word='mkdir'),
            WordNode(pos=(317, 319), word='-p'),
            WordNode(pos=(320, 326), word='$dir', parts=[
              ParameterNode(pos=(321, 325), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(326, 327)),
          CommandNode(pos=(330, 379), parts=[
            WordNode(pos=(330, 335), word='chown'),
            WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
              ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
              ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
            ]),
            WordNode(pos=(373, 379), word='$dir', parts=[
              ParameterNode(pos=(374, 378), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
          CommandNode(pos=(383, 399), parts=[
            WordNode(pos=(383, 388), word='chmod'),
            WordNode(pos=(389, 392), word='777'),
            WordNode(pos=(393, 399), word='$dir', parts=[
              ParameterNode(pos=(394, 398), value='dir'),
            ]),
          ]),
          OperatorNode(op=';', pos=(399, 400)),
        ]),
      ReservedwordNode(pos=(402, 406), word='done'),
    ]),
  ], pos=(213, 406)),
  OperatorNode(op=';', pos=(406, 407)),
  CommandNode(pos=(410, 433), parts=[
    WordNode(pos=(410, 412), word='rm'),
    WordNode(pos=(413, 417), word='-rvf'),
    WordNode(pos=(418, 433), word='/var/www/html/*'),
  ]),
  OperatorNode(op=';', pos=(433, 434)),
  CommandNode(pos=(437, 484), parts=[
    WordNode(pos=(437, 439), word='ln'),
    WordNode(pos=(440, 444), word='-sfT'),
    WordNode(pos=(445, 456), word='/dev/stderr'),
    WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
      ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(484, 485)),
  CommandNode(pos=(487, 535), parts=[
    WordNode(pos=(487, 489), word='ln'),
    WordNode(pos=(490, 494), word='-sfT'),
    WordNode(pos=(495, 506), word='/dev/stdout'),
    WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
      ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(535, 536)),
  CommandNode(pos=(538, 599), parts=[
    WordNode(pos=(538, 540), word='ln'),
    WordNode(pos=(541, 545), word='-sfT'),
    WordNode(pos=(546, 557), word='/dev/stdout'),
    WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
      ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(599, 600)),
  CommandNode(pos=(602, 682), parts=[
    WordNode(pos=(602, 607), word='chown'),
    WordNode(pos=(608, 610), word='-R'),
    WordNode(pos=(611, 627), word='--no-dereference'),
    WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
      ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
      ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
    ]),
    WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
      ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
    ]),
  ]),
])


2847) rm -rvf "$dir"

CommandNode(pos=(293, 307), parts=[
  WordNode(pos=(293, 295), word='rm'),
  WordNode(pos=(296, 300), word='-rvf'),
  WordNode(pos=(301, 307), word='$dir', parts=[
    ParameterNode(pos=(302, 306), value='dir'),
  ]),
])


2848) mkdir -p "$dir"

CommandNode(pos=(311, 326), parts=[
  WordNode(pos=(311, 316), word='mkdir'),
  WordNode(pos=(317, 319), word='-p'),
  WordNode(pos=(320, 326), word='$dir', parts=[
    ParameterNode(pos=(321, 325), value='dir'),
  ]),
])


2849) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


2850) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


2851) chown "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"

CommandNode(pos=(330, 379), parts=[
  WordNode(pos=(330, 335), word='chown'),
  WordNode(pos=(336, 372), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(337, 353), value='APACHE_RUN_USER'),
    ParameterNode(pos=(354, 371), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(373, 379), word='$dir', parts=[
    ParameterNode(pos=(374, 378), value='dir'),
  ]),
])


2852) chmod 777 "$dir"

CommandNode(pos=(383, 399), parts=[
  WordNode(pos=(383, 388), word='chmod'),
  WordNode(pos=(389, 392), word='777'),
  WordNode(pos=(393, 399), word='$dir', parts=[
    ParameterNode(pos=(394, 398), value='dir'),
  ]),
])


2853) ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log"

CommandNode(pos=(437, 484), parts=[
  WordNode(pos=(437, 439), word='ln'),
  WordNode(pos=(440, 444), word='-sfT'),
  WordNode(pos=(445, 456), word='/dev/stderr'),
  WordNode(pos=(457, 484), word='$APACHE_LOG_DIR/error.log', parts=[
    ParameterNode(pos=(458, 473), value='APACHE_LOG_DIR'),
  ]),
])


2854) ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log"

CommandNode(pos=(487, 535), parts=[
  WordNode(pos=(487, 489), word='ln'),
  WordNode(pos=(490, 494), word='-sfT'),
  WordNode(pos=(495, 506), word='/dev/stdout'),
  WordNode(pos=(507, 535), word='$APACHE_LOG_DIR/access.log', parts=[
    ParameterNode(pos=(508, 523), value='APACHE_LOG_DIR'),
  ]),
])


2855) ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

CommandNode(pos=(538, 599), parts=[
  WordNode(pos=(538, 540), word='ln'),
  WordNode(pos=(541, 545), word='-sfT'),
  WordNode(pos=(546, 557), word='/dev/stdout'),
  WordNode(pos=(558, 599), word='$APACHE_LOG_DIR/other_vhosts_access.log', parts=[
    ParameterNode(pos=(559, 574), value='APACHE_LOG_DIR'),
  ]),
])


2856) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


2857) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


2858) chown -R --no-dereference "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$APACHE_LOG_DIR"

CommandNode(pos=(602, 682), parts=[
  WordNode(pos=(602, 607), word='chown'),
  WordNode(pos=(608, 610), word='-R'),
  WordNode(pos=(611, 627), word='--no-dereference'),
  WordNode(pos=(628, 664), word='$APACHE_RUN_USER:$APACHE_RUN_GROUP', parts=[
    ParameterNode(pos=(629, 645), value='APACHE_RUN_USER'),
    ParameterNode(pos=(646, 663), value='APACHE_RUN_GROUP'),
  ]),
  WordNode(pos=(665, 682), word='$APACHE_LOG_DIR', parts=[
    ParameterNode(pos=(666, 681), value='APACHE_LOG_DIR'),
  ]),
])


2859) tee "$APACHE_CONFDIR/conf-available/docker-php.conf"

CommandNode(pos=(318, 370), parts=[
  WordNode(pos=(318, 321), word='tee'),
  WordNode(pos=(322, 370), word='$APACHE_CONFDIR/conf-available/docker-php.conf', parts=[
    ParameterNode(pos=(323, 338), value='APACHE_CONFDIR'),
  ]),
])


2860) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


2861) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


2862) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


2863) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


2864) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


2865) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


2866) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


2867) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


2868) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


2869) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


2870) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


2871) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


2872) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


2873) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


2874) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


2875) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


2876) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


2877) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(13, 126), parts=[
  WordNode(pos=(13, 17), word='wget'),
  WordNode(pos=(18, 20), word='-O'),
  WordNode(pos=(21, 34), word='python.tar.xz'),
  WordNode(pos=(35, 126), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(70, 95), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(103, 118), value='PYTHON_VERSION'),
  ]),
])


2878) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


2879) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(131, 252), parts=[
  WordNode(pos=(131, 135), word='wget'),
  WordNode(pos=(136, 138), word='-O'),
  WordNode(pos=(139, 156), word='python.tar.xz.asc'),
  WordNode(pos=(157, 252), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(192, 217), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(225, 240), value='PYTHON_VERSION'),
  ]),
])


2880) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(293, 366), parts=[
  WordNode(pos=(293, 296), word='gpg'),
  WordNode(pos=(297, 304), word='--batch'),
  WordNode(pos=(305, 316), word='--keyserver'),
  WordNode(pos=(317, 343), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(344, 355), word='--recv-keys'),
  WordNode(pos=(356, 366), word='$GPG_KEY', parts=[
    ParameterNode(pos=(357, 365), value='GPG_KEY'),
  ]),
])


2881) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(495, 532), parts=[
  WordNode(pos=(495, 497), word='rm'),
  WordNode(pos=(498, 501), word='-rf'),
  WordNode(pos=(502, 514), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(503, 513), value='GNUPGHOME'),
  ]),
  WordNode(pos=(515, 532), word='python.tar.xz.asc'),
])


2882) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(740, 892), parts=[
  WordNode(pos=(740, 751), word='./configure'),
  WordNode(pos=(754, 772), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(763, 771), value='gnuArch'),
  ]),
  WordNode(pos=(775, 810), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(813, 828), word='--enable-shared'),
  WordNode(pos=(831, 850), word='--with-system-expat'),
  WordNode(pos=(853, 870), word='--with-system-ffi'),
  WordNode(pos=(873, 892), word='--without-ensurepip'),
])


2883) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


2884) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


2885) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


2886) wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"

CommandNode(pos=(285, 392), parts=[
  WordNode(pos=(285, 289), word='wget'),
  WordNode(pos=(290, 292), word='-O'),
  WordNode(pos=(293, 312), word='/usr/local/bin/gosu'),
  WordNode(pos=(313, 392), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch', parts=[
    ParameterNode(pos=(363, 376), value='GOSU_VERSION'),
    ParameterNode(pos=(382, 391), value='dpkgArch'),
  ]),
])


2887) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


2888) wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"

CommandNode(pos=(395, 510), parts=[
  WordNode(pos=(395, 399), word='wget'),
  WordNode(pos=(400, 402), word='-O'),
  WordNode(pos=(403, 426), word='/usr/local/bin/gosu.asc'),
  WordNode(pos=(427, 510), word='https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc', parts=[
    ParameterNode(pos=(477, 490), value='GOSU_VERSION'),
    ParameterNode(pos=(496, 505), value='dpkgArch'),
  ]),
])


2889) rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc

CommandNode(pos=(768, 810), parts=[
  WordNode(pos=(768, 770), word='rm'),
  WordNode(pos=(771, 773), word='-r'),
  WordNode(pos=(774, 786), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(775, 785), value='GNUPGHOME'),
  ]),
  WordNode(pos=(787, 810), word='/usr/local/bin/gosu.asc'),
])


2890) wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"

CommandNode(pos=(881, 974), parts=[
  WordNode(pos=(881, 885), word='wget'),
  WordNode(pos=(886, 888), word='-O'),
  WordNode(pos=(889, 900), word='/js-yaml.js'),
  WordNode(pos=(901, 974), word='https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js', parts=[
    ParameterNode(pos=(940, 957), value='JSYAML_VERSION'),
  ]),
])


2891) set -ex;  export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;  gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME";  apt-key list

ListNode(pos=(0, 301), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-ex'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(10, 41), parts=[
    WordNode(pos=(10, 16), word='export'),
    WordNode(pos=(17, 41), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(30, 39), parts=[
          WordNode(pos=(30, 36), word='mktemp'),
          WordNode(pos=(37, 39), word='-d'),
        ]), pos=(28, 40)),
    ]),
  ]),
  OperatorNode(op=';', pos=(41, 42)),
  CompoundNode(list=[
    ForNode(pos=(44, 147), parts=[
      ReservedwordNode(pos=(44, 47), word='for'),
      WordNode(pos=(48, 51), word='key'),
      ReservedwordNode(pos=(52, 54), word='in'),
      WordNode(pos=(55, 64), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(55, 64), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(64, 65), word=';'),
      ReservedwordNode(pos=(66, 68), word='do'),
      ListNode(pos=(71, 141), parts=[
          CommandNode(pos=(71, 140), parts=[
            WordNode(pos=(71, 74), word='gpg'),
            WordNode(pos=(75, 82), word='--batch'),
            WordNode(pos=(83, 94), word='--keyserver'),
            WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(122, 133), word='--recv-keys'),
            WordNode(pos=(134, 140), word='$key', parts=[
              ParameterNode(pos=(135, 139), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(140, 141)),
        ]),
      ReservedwordNode(pos=(143, 147), word='done'),
    ]),
  ], pos=(44, 147)),
  OperatorNode(op=';', pos=(147, 148)),
  CommandNode(pos=(150, 217), parts=[
    WordNode(pos=(150, 153), word='gpg'),
    WordNode(pos=(154, 161), word='--batch'),
    WordNode(pos=(162, 170), word='--export'),
    WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
      ParameterNode(pos=(171, 180), value='GPG_KEYS'),
    ]),
    RedirectNode(output=
      WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
  ]),
  OperatorNode(op=';', pos=(217, 218)),
  CommandNode(pos=(220, 238), parts=[
    WordNode(pos=(220, 227), word='command'),
    WordNode(pos=(228, 230), word='-v'),
    WordNode(pos=(231, 238), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(239, 241)),
  CommandNode(pos=(242, 260), parts=[
    WordNode(pos=(242, 249), word='gpgconf'),
    WordNode(pos=(250, 256), word='--kill'),
    WordNode(pos=(257, 260), word='all'),
  ]),
  OperatorNode(op='||', pos=(261, 263)),
  CommandNode(pos=(264, 265), parts=[
    WordNode(pos=(264, 265), word=':'),
  ]),
  OperatorNode(op=';', pos=(265, 266)),
  CommandNode(pos=(268, 286), parts=[
    WordNode(pos=(268, 270), word='rm'),
    WordNode(pos=(271, 273), word='-r'),
    WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(275, 285), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(286, 287)),
  CommandNode(pos=(289, 301), parts=[
    WordNode(pos=(289, 296), word='apt-key'),
    WordNode(pos=(297, 301), word='list'),
  ]),
])


2892) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(71, 140), parts=[
  WordNode(pos=(71, 74), word='gpg'),
  WordNode(pos=(75, 82), word='--batch'),
  WordNode(pos=(83, 94), word='--keyserver'),
  WordNode(pos=(95, 121), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(122, 133), word='--recv-keys'),
  WordNode(pos=(134, 140), word='$key', parts=[
    ParameterNode(pos=(135, 139), value='key'),
  ]),
])


2893) gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg

CommandNode(pos=(150, 217), parts=[
  WordNode(pos=(150, 153), word='gpg'),
  WordNode(pos=(154, 161), word='--batch'),
  WordNode(pos=(162, 170), word='--export'),
  WordNode(pos=(171, 180), word='$GPG_KEYS', parts=[
    ParameterNode(pos=(171, 180), value='GPG_KEYS'),
  ]),
  RedirectNode(output=
    WordNode(pos=(183, 217), word='/etc/apt/trusted.gpg.d/mongodb.gpg'), pos=(181, 217), type='>'),
])


2894) rm -r "$GNUPGHOME"

CommandNode(pos=(268, 286), parts=[
  WordNode(pos=(268, 270), word='rm'),
  WordNode(pos=(271, 273), word='-r'),
  WordNode(pos=(274, 286), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(275, 285), value='GNUPGHOME'),
  ]),
])


2895) echo "deb http://$MONGO_REPO/apt/%%DISTRO%% %%SUITE%%/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR %%COMPONENT%%"

CommandNode(pos=(0, 108), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 108), word='deb http://$MONGO_REPO/apt/%%DISTRO%% %%SUITE%%/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR %%COMPONENT%%', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(54, 80), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(81, 93), value='MONGO_MAJOR'),
  ]),
])


2896) echo "deb http://$MONGO_REPO/apt/%%DISTRO%% %%SUITE%%/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR %%COMPONENT%%"

CommandNode(pos=(0, 108), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 108), word='deb http://$MONGO_REPO/apt/%%DISTRO%% %%SUITE%%/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR %%COMPONENT%%', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(54, 80), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(81, 93), value='MONGO_MAJOR'),
  ]),
])


2897) echo "deb http://$MONGO_REPO/apt/%%DISTRO%% %%SUITE%%/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR %%COMPONENT%%"

CommandNode(pos=(0, 108), parts=[
  WordNode(pos=(0, 4), word='echo'),
  WordNode(pos=(5, 108), word='deb http://$MONGO_REPO/apt/%%DISTRO%% %%SUITE%%/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR %%COMPONENT%%', parts=[
    ParameterNode(pos=(17, 28), value='MONGO_REPO'),
    ParameterNode(pos=(54, 80), value='MONGO_PACKAGE%-unstable'),
    ParameterNode(pos=(81, 93), value='MONGO_MAJOR'),
  ]),
])


2898) tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"

CommandNode(pos=(111, 172), parts=[
  WordNode(pos=(111, 114), word='tee'),
  WordNode(pos=(115, 172), word='/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list', parts=[
    ParameterNode(pos=(140, 166), value='MONGO_PACKAGE%-unstable'),
  ]),
])


2899) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2900) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2901) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2902) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2903) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2904) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2905) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2906) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2907) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2908) apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION

CommandNode(pos=(30, 244), parts=[
  WordNode(pos=(30, 37), word='apt-get'),
  WordNode(pos=(38, 45), word='install'),
  WordNode(pos=(46, 48), word='-y'),
  WordNode(pos=(51, 82), word='${MONGO_PACKAGE}=$MONGO_VERSION', parts=[
    ParameterNode(pos=(51, 67), value='MONGO_PACKAGE'),
    ParameterNode(pos=(68, 82), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(85, 123), word='${MONGO_PACKAGE}-server=$MONGO_VERSION', parts=[
    ParameterNode(pos=(85, 101), value='MONGO_PACKAGE'),
    ParameterNode(pos=(109, 123), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(126, 163), word='${MONGO_PACKAGE}-shell=$MONGO_VERSION', parts=[
    ParameterNode(pos=(126, 142), value='MONGO_PACKAGE'),
    ParameterNode(pos=(149, 163), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(166, 204), word='${MONGO_PACKAGE}-mongos=$MONGO_VERSION', parts=[
    ParameterNode(pos=(166, 182), value='MONGO_PACKAGE'),
    ParameterNode(pos=(190, 204), value='MONGO_VERSION'),
  ]),
  WordNode(pos=(207, 244), word='${MONGO_PACKAGE}-tools=$MONGO_VERSION', parts=[
    ParameterNode(pos=(207, 223), value='MONGO_PACKAGE'),
    ParameterNode(pos=(230, 244), value='MONGO_VERSION'),
  ]),
])


2909) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


2910) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


2911) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


2912) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


2913) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


2914) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


2915) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1144, 1296), parts=[
  WordNode(pos=(1144, 1155), word='./configure'),
  WordNode(pos=(1158, 1176), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1167, 1175), value='gnuArch'),
  ]),
  WordNode(pos=(1179, 1214), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1217, 1232), word='--enable-shared'),
  WordNode(pos=(1235, 1254), word='--with-system-expat'),
  WordNode(pos=(1257, 1274), word='--with-system-ffi'),
  WordNode(pos=(1277, 1296), word='--without-ensurepip'),
])


2916) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


2917) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


2918) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2919) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


2920) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


2921) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


2922) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


2923) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


2924) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


2925) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


2926) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


2927) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


2928) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


2929) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


2930) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


2931) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


2932) [ -z "$savedAptMark" ]

CommandNode(pos=(213, 235), parts=[
  WordNode(pos=(213, 214), word='['),
  WordNode(pos=(215, 217), word='-z'),
  WordNode(pos=(218, 233), word='$savedAptMark', parts=[
    ParameterNode(pos=(219, 232), value='savedAptMark'),
  ]),
  WordNode(pos=(234, 235), word=']'),
])


2933) apt-mark manual $savedAptMark

CommandNode(pos=(239, 268), parts=[
  WordNode(pos=(239, 247), word='apt-mark'),
  WordNode(pos=(248, 254), word='manual'),
  WordNode(pos=(255, 268), word='$savedAptMark', parts=[
    ParameterNode(pos=(255, 268), value='savedAptMark'),
  ]),
])


2934) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(381, 474), parts=[
  WordNode(pos=(381, 387), word='python'),
  WordNode(pos=(388, 398), word='get-pip.py'),
  WordNode(pos=(401, 428), word='--disable-pip-version-check'),
  WordNode(pos=(431, 445), word='--no-cache-dir'),
  WordNode(pos=(448, 474), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(454, 473), value='PYTHON_PIP_VERSION'),
  ]),
])


2935) apt-mark manual $savedAptMark

CommandNode(pos=(414, 443), parts=[
  WordNode(pos=(414, 422), word='apt-mark'),
  WordNode(pos=(423, 429), word='manual'),
  WordNode(pos=(430, 443), word='$savedAptMark', parts=[
    ParameterNode(pos=(430, 443), value='savedAptMark'),
  ]),
])


2936) curl -fSL "https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz" -o drupal.tar.gz

CommandNode(pos=(0, 98), parts=[
  WordNode(pos=(0, 4), word='curl'),
  WordNode(pos=(5, 9), word='-fSL'),
  WordNode(pos=(10, 81), word='https://ftp.drupal.org/files/projects/drupal-${DRUPAL_VERSION}.tar.gz', parts=[
    ParameterNode(pos=(56, 73), value='DRUPAL_VERSION'),
  ]),
  WordNode(pos=(82, 84), word='-o'),
  WordNode(pos=(85, 98), word='drupal.tar.gz'),
])


2937) echo "${DRUPAL_MD5} *drupal.tar.gz"

CommandNode(pos=(103, 138), parts=[
  WordNode(pos=(103, 107), word='echo'),
  WordNode(pos=(108, 138), word='${DRUPAL_MD5} *drupal.tar.gz', parts=[
    ParameterNode(pos=(109, 122), value='DRUPAL_MD5'),
  ]),
])


2938) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(91, 144), parts=[
  WordNode(pos=(91, 98), word='apt-get'),
  WordNode(pos=(99, 106), word='install'),
  WordNode(pos=(107, 109), word='-y'),
  WordNode(pos=(110, 133), word='--no-install-recommends'),
  WordNode(pos=(134, 144), word='$buildDeps', parts=[
    ParameterNode(pos=(134, 144), value='buildDeps'),
  ]),
])


2939) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


2940) wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz"

CommandNode(pos=(182, 284), parts=[
  WordNode(pos=(182, 186), word='wget'),
  WordNode(pos=(187, 189), word='-O'),
  WordNode(pos=(190, 201), word='ruby.tar.xz'),
  WordNode(pos=(202, 284), word='https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz', parts=[
    ParameterNode(pos=(240, 257), value='RUBY_MAJOR%-rc'),
    ParameterNode(pos=(263, 276), value='RUBY_VERSION'),
  ]),
])


2941) echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz"

CommandNode(pos=(289, 330), parts=[
  WordNode(pos=(289, 293), word='echo'),
  WordNode(pos=(294, 330), word='$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz', parts=[
    ParameterNode(pos=(295, 316), value='RUBY_DOWNLOAD_SHA256'),
  ]),
])


2942) ./configure   --build="$gnuArch"   --disable-install-doc   --enable-shared

CommandNode(pos=(668, 742), parts=[
  WordNode(pos=(668, 679), word='./configure'),
  WordNode(pos=(682, 700), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(691, 699), value='gnuArch'),
  ]),
  WordNode(pos=(703, 724), word='--disable-install-doc'),
  WordNode(pos=(727, 742), word='--enable-shared'),
])


2943) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(788, 829), parts=[
  WordNode(pos=(788, 795), word='apt-get'),
  WordNode(pos=(796, 801), word='purge'),
  WordNode(pos=(802, 804), word='-y'),
  WordNode(pos=(805, 818), word='--auto-remove'),
  WordNode(pos=(819, 829), word='$buildDeps', parts=[
    ParameterNode(pos=(819, 829), value='buildDeps'),
  ]),
])


2944) gem update --system "$RUBYGEMS_VERSION"

CommandNode(pos=(968, 1007), parts=[
  WordNode(pos=(968, 971), word='gem'),
  WordNode(pos=(972, 978), word='update'),
  WordNode(pos=(979, 987), word='--system'),
  WordNode(pos=(988, 1007), word='$RUBYGEMS_VERSION', parts=[
    ParameterNode(pos=(989, 1006), value='RUBYGEMS_VERSION'),
  ]),
])


2945) mkdir -p "$GEM_HOME"

CommandNode(pos=(0, 20), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 20), word='$GEM_HOME', parts=[
    ParameterNode(pos=(10, 19), value='GEM_HOME'),
  ]),
])


2946) chmod 777 "$GEM_HOME"

CommandNode(pos=(24, 45), parts=[
  WordNode(pos=(24, 29), word='chmod'),
  WordNode(pos=(30, 33), word='777'),
  WordNode(pos=(34, 45), word='$GEM_HOME', parts=[
    ParameterNode(pos=(35, 44), value='GEM_HOME'),
  ]),
])


2947) curl -fL -o /openjdk.tgz "$JAVA_URL"

CommandNode(pos=(12, 48), parts=[
  WordNode(pos=(12, 16), word='curl'),
  WordNode(pos=(17, 20), word='-fL'),
  WordNode(pos=(21, 23), word='-o'),
  WordNode(pos=(24, 36), word='/openjdk.tgz'),
  WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
    ParameterNode(pos=(38, 47), value='JAVA_URL'),
  ]),
])


2948) echo "$JAVA_SHA256 */openjdk.tgz"

CommandNode(pos=(51, 84), parts=[
  WordNode(pos=(51, 55), word='echo'),
  WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
    ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
  ]),
])


2949) mkdir -p "$JAVA_HOME"

CommandNode(pos=(104, 125), parts=[
  WordNode(pos=(104, 109), word='mkdir'),
  WordNode(pos=(110, 112), word='-p'),
  WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(114, 124), value='JAVA_HOME'),
  ]),
])


2950) tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1

CommandNode(pos=(128, 207), parts=[
  WordNode(pos=(128, 131), word='tar'),
  WordNode(pos=(132, 141), word='--extract'),
  WordNode(pos=(142, 148), word='--file'),
  WordNode(pos=(149, 161), word='/openjdk.tgz'),
  WordNode(pos=(162, 173), word='--directory'),
  WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(175, 185), value='JAVA_HOME'),
  ]),
  WordNode(pos=(187, 205), word='--strip-components'),
  WordNode(pos=(206, 207), word='1'),
])


2951) ln -sfT "$JAVA_HOME" /usr/java/default

CommandNode(pos=(229, 267), parts=[
  WordNode(pos=(229, 231), word='ln'),
  WordNode(pos=(232, 236), word='-sfT'),
  WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(238, 248), value='JAVA_HOME'),
  ]),
  WordNode(pos=(250, 267), word='/usr/java/default'),
])


2952) ln -sfT "$JAVA_HOME" /usr/java/latest

CommandNode(pos=(270, 307), parts=[
  WordNode(pos=(270, 272), word='ln'),
  WordNode(pos=(273, 277), word='-sfT'),
  WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(279, 289), value='JAVA_HOME'),
  ]),
  WordNode(pos=(291, 307), word='/usr/java/latest'),
])


2953) set -eux;   curl -fL -o /openjdk.tgz "$JAVA_URL";  echo "$JAVA_SHA256 */openjdk.tgz" | sha256sum -c -;  mkdir -p "$JAVA_HOME";  tar --extract --file /openjdk.tgz --directory "$JAVA_HOME" --strip-components 1;  rm /openjdk.tgz;   ln -sfT "$JAVA_HOME" /usr/java/default;  ln -sfT "$JAVA_HOME" /usr/java/latest;  for bin in "$JAVA_HOME/bin/"*; do   base="$(basename "$bin")";   [ ! -e "/usr/bin/$base" ];   alternatives --install "/usr/bin/$base" "$base" "$bin" 20000;  done;   java -Xshare:dump;   java --version;  javac --version

ListNode(pos=(0, 528), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 48), parts=[
    WordNode(pos=(12, 16), word='curl'),
    WordNode(pos=(17, 20), word='-fL'),
    WordNode(pos=(21, 23), word='-o'),
    WordNode(pos=(24, 36), word='/openjdk.tgz'),
    WordNode(pos=(37, 48), word='$JAVA_URL', parts=[
      ParameterNode(pos=(38, 47), value='JAVA_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(48, 49)),
  PipelineNode(pos=(51, 101), parts=[
    CommandNode(pos=(51, 84), parts=[
      WordNode(pos=(51, 55), word='echo'),
      WordNode(pos=(56, 84), word='$JAVA_SHA256 */openjdk.tgz', parts=[
        ParameterNode(pos=(57, 69), value='JAVA_SHA256'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(85, 86)),
    CommandNode(pos=(87, 101), parts=[
      WordNode(pos=(87, 96), word='sha256sum'),
      WordNode(pos=(97, 99), word='-c'),
      WordNode(pos=(100, 101), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(101, 102)),
  CommandNode(pos=(104, 125), parts=[
    WordNode(pos=(104, 109), word='mkdir'),
    WordNode(pos=(110, 112), word='-p'),
    WordNode(pos=(113, 125), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(114, 124), value='JAVA_HOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 207), parts=[
    WordNode(pos=(128, 131), word='tar'),
    WordNode(pos=(132, 141), word='--extract'),
    WordNode(pos=(142, 148), word='--file'),
    WordNode(pos=(149, 161), word='/openjdk.tgz'),
    WordNode(pos=(162, 173), word='--directory'),
    WordNode(pos=(174, 186), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(175, 185), value='JAVA_HOME'),
    ]),
    WordNode(pos=(187, 205), word='--strip-components'),
    WordNode(pos=(206, 207), word='1'),
  ]),
  OperatorNode(op=';', pos=(207, 208)),
  CommandNode(pos=(210, 225), parts=[
    WordNode(pos=(210, 212), word='rm'),
    WordNode(pos=(213, 225), word='/openjdk.tgz'),
  ]),
  OperatorNode(op=';', pos=(225, 226)),
  CommandNode(pos=(229, 267), parts=[
    WordNode(pos=(229, 231), word='ln'),
    WordNode(pos=(232, 236), word='-sfT'),
    WordNode(pos=(237, 249), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(238, 248), value='JAVA_HOME'),
    ]),
    WordNode(pos=(250, 267), word='/usr/java/default'),
  ]),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(270, 307), parts=[
    WordNode(pos=(270, 272), word='ln'),
    WordNode(pos=(273, 277), word='-sfT'),
    WordNode(pos=(278, 290), word='$JAVA_HOME', parts=[
      ParameterNode(pos=(279, 289), value='JAVA_HOME'),
    ]),
    WordNode(pos=(291, 307), word='/usr/java/latest'),
  ]),
  OperatorNode(op=';', pos=(307, 308)),
  CompoundNode(list=[
    ForNode(pos=(310, 471), parts=[
      ReservedwordNode(pos=(310, 313), word='for'),
      WordNode(pos=(314, 317), word='bin'),
      ReservedwordNode(pos=(318, 320), word='in'),
      WordNode(pos=(321, 339), word='$JAVA_HOME/bin/*', parts=[
        ParameterNode(pos=(322, 332), value='JAVA_HOME'),
      ]),
      ReservedwordNode(pos=(339, 340), word=';'),
      ReservedwordNode(pos=(341, 343), word='do'),
      ListNode(pos=(346, 465), parts=[
          CommandNode(pos=(346, 371), parts=[
            AssignmentNode(pos=(346, 371), word='base=$(basename "$bin")', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(354, 369), parts=[
                  WordNode(pos=(354, 362), word='basename'),
                  WordNode(pos=(363, 369), word='$bin', parts=[
                    ParameterNode(pos=(364, 368), value='bin'),
                  ]),
                ]), pos=(352, 370)),
            ]),
          ]),
          OperatorNode(op=';', pos=(371, 372)),
          CommandNode(pos=(375, 400), parts=[
            WordNode(pos=(375, 376), word='['),
            WordNode(pos=(377, 378), word='!'),
            WordNode(pos=(379, 381), word='-e'),
            WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(392, 397), value='base'),
            ]),
            WordNode(pos=(399, 400), word=']'),
          ]),
          OperatorNode(op=';', pos=(400, 401)),
          CommandNode(pos=(404, 464), parts=[
            WordNode(pos=(404, 416), word='alternatives'),
            WordNode(pos=(417, 426), word='--install'),
            WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
              ParameterNode(pos=(437, 442), value='base'),
            ]),
            WordNode(pos=(444, 451), word='$base', parts=[
              ParameterNode(pos=(445, 450), value='base'),
            ]),
            WordNode(pos=(452, 458), word='$bin', parts=[
              ParameterNode(pos=(453, 457), value='bin'),
            ]),
            WordNode(pos=(459, 464), word='20000'),
          ]),
          OperatorNode(op=';', pos=(464, 465)),
        ]),
      ReservedwordNode(pos=(467, 471), word='done'),
    ]),
  ], pos=(310, 471)),
  OperatorNode(op=';', pos=(471, 472)),
  CommandNode(pos=(475, 492), parts=[
    WordNode(pos=(475, 479), word='java'),
    WordNode(pos=(480, 492), word='-Xshare:dump'),
  ]),
  OperatorNode(op=';', pos=(492, 493)),
  CommandNode(pos=(496, 510), parts=[
    WordNode(pos=(496, 500), word='java'),
    WordNode(pos=(501, 510), word='--version'),
  ]),
  OperatorNode(op=';', pos=(510, 511)),
  CommandNode(pos=(513, 528), parts=[
    WordNode(pos=(513, 518), word='javac'),
    WordNode(pos=(519, 528), word='--version'),
  ]),
])


2954) [ ! -e "/usr/bin/$base" ]

CommandNode(pos=(375, 400), parts=[
  WordNode(pos=(375, 376), word='['),
  WordNode(pos=(377, 378), word='!'),
  WordNode(pos=(379, 381), word='-e'),
  WordNode(pos=(382, 398), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(392, 397), value='base'),
  ]),
  WordNode(pos=(399, 400), word=']'),
])


2955) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


2956) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


2957) alternatives --install "/usr/bin/$base" "$base" "$bin" 20000

CommandNode(pos=(404, 464), parts=[
  WordNode(pos=(404, 416), word='alternatives'),
  WordNode(pos=(417, 426), word='--install'),
  WordNode(pos=(427, 443), word='/usr/bin/$base', parts=[
    ParameterNode(pos=(437, 442), value='base'),
  ]),
  WordNode(pos=(444, 451), word='$base', parts=[
    ParameterNode(pos=(445, 450), value='base'),
  ]),
  WordNode(pos=(452, 458), word='$bin', parts=[
    ParameterNode(pos=(453, 457), value='bin'),
  ]),
  WordNode(pos=(459, 464), word='20000'),
])


2958) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


2959) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


2960) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


2961) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


2962) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


2963) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


2964) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1160, 1312), parts=[
  WordNode(pos=(1160, 1171), word='./configure'),
  WordNode(pos=(1174, 1192), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1183, 1191), value='gnuArch'),
  ]),
  WordNode(pos=(1195, 1230), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1233, 1248), word='--enable-shared'),
  WordNode(pos=(1251, 1270), word='--with-system-expat'),
  WordNode(pos=(1273, 1290), word='--with-system-ffi'),
  WordNode(pos=(1293, 1312), word='--without-ensurepip'),
])


2965) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


2966) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


2967) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2968) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


2969) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2970) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


2971) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


2972) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


2973) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


2974) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


2975) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


2976) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


2977) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


2978) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


2979) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


2980) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2981) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2982) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2983) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2984) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


2985) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


2986) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


2987) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


2988) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


2989) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


2990) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


2991) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


2992) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


2993) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


2994) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


2995) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


2996) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


2997) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


2998) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


2999) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


3000) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


3001) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


3002) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


3003) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


3004) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


3005) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


3006) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


3007) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


3008) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


3009) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


3010) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


3011) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


3012) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


3013) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


3014) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


3015) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


3016) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


3017) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


3018) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


3019) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


3020) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


3021) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


3022) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


3023) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


3024) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


3025) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


3026) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


3027) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


3028) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


3029) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


3030) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


3031) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


3032) wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"

CommandNode(pos=(77, 190), parts=[
  WordNode(pos=(77, 81), word='wget'),
  WordNode(pos=(82, 84), word='-O'),
  WordNode(pos=(85, 98), word='python.tar.xz'),
  WordNode(pos=(99, 190), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz', parts=[
    ParameterNode(pos=(134, 159), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(167, 182), value='PYTHON_VERSION'),
  ]),
])


3033) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


3034) wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"

CommandNode(pos=(195, 316), parts=[
  WordNode(pos=(195, 199), word='wget'),
  WordNode(pos=(200, 202), word='-O'),
  WordNode(pos=(203, 220), word='python.tar.xz.asc'),
  WordNode(pos=(221, 316), word='https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc', parts=[
    ParameterNode(pos=(256, 281), value='PYTHON_VERSION%%[a-z]*'),
    ParameterNode(pos=(289, 304), value='PYTHON_VERSION'),
  ]),
])


3035) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY"

CommandNode(pos=(357, 430), parts=[
  WordNode(pos=(357, 360), word='gpg'),
  WordNode(pos=(361, 368), word='--batch'),
  WordNode(pos=(369, 380), word='--keyserver'),
  WordNode(pos=(381, 407), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(408, 419), word='--recv-keys'),
  WordNode(pos=(420, 430), word='$GPG_KEY', parts=[
    ParameterNode(pos=(421, 429), value='GPG_KEY'),
  ]),
])


3036) rm -rf "$GNUPGHOME" python.tar.xz.asc

CommandNode(pos=(559, 596), parts=[
  WordNode(pos=(559, 561), word='rm'),
  WordNode(pos=(562, 565), word='-rf'),
  WordNode(pos=(566, 578), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(567, 577), value='GNUPGHOME'),
  ]),
  WordNode(pos=(579, 596), word='python.tar.xz.asc'),
])


3037) ./configure   --build="$gnuArch"   --enable-loadable-sqlite-extensions   --enable-shared   --with-system-expat   --with-system-ffi   --without-ensurepip

CommandNode(pos=(1115, 1267), parts=[
  WordNode(pos=(1115, 1126), word='./configure'),
  WordNode(pos=(1129, 1147), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1138, 1146), value='gnuArch'),
  ]),
  WordNode(pos=(1150, 1185), word='--enable-loadable-sqlite-extensions'),
  WordNode(pos=(1188, 1203), word='--enable-shared'),
  WordNode(pos=(1206, 1225), word='--with-system-expat'),
  WordNode(pos=(1228, 1245), word='--with-system-ffi'),
  WordNode(pos=(1248, 1267), word='--without-ensurepip'),
])


3038) python get-pip.py   --disable-pip-version-check   --no-cache-dir   "pip==$PYTHON_PIP_VERSION"

CommandNode(pos=(72, 165), parts=[
  WordNode(pos=(72, 78), word='python'),
  WordNode(pos=(79, 89), word='get-pip.py'),
  WordNode(pos=(92, 119), word='--disable-pip-version-check'),
  WordNode(pos=(122, 136), word='--no-cache-dir'),
  WordNode(pos=(139, 165), word='pip==$PYTHON_PIP_VERSION', parts=[
    ParameterNode(pos=(145, 164), value='PYTHON_PIP_VERSION'),
  ]),
])


3039) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


3040) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


3041) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


3042) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


3043) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


3044) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


3045) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget  ;  rm -rf /var/lib/apt/lists/*;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum --check --strict -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf;  ldconfig;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum --check --strict -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3761), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 200), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 90), word='--yes'),
    WordNode(pos=(91, 114), word='--no-install-recommends'),
    WordNode(pos=(117, 125), word='autoconf'),
    WordNode(pos=(128, 143), word='ca-certificates'),
    WordNode(pos=(146, 154), word='dpkg-dev'),
    WordNode(pos=(157, 160), word='gcc'),
    WordNode(pos=(163, 168), word='gnupg'),
    WordNode(pos=(171, 186), word='libncurses5-dev'),
    WordNode(pos=(189, 193), word='make'),
    WordNode(pos=(196, 200), word='wget'),
  ]),
  OperatorNode(op=';', pos=(202, 203)),
  CommandNode(pos=(205, 232), parts=[
    WordNode(pos=(205, 207), word='rm'),
    WordNode(pos=(208, 211), word='-rf'),
    WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(232, 233)),
  CommandNode(pos=(236, 319), parts=[
    AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(319, 320)),
  CommandNode(pos=(322, 376), parts=[
    AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(376, 377)),
  CommandNode(pos=(379, 416), parts=[
    AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(416, 417)),
  CommandNode(pos=(420, 515), parts=[
    WordNode(pos=(420, 424), word='wget'),
    WordNode(pos=(425, 435), word='--progress'),
    WordNode(pos=(436, 444), word='dot:giga'),
    WordNode(pos=(445, 462), word='--output-document'),
    WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(515, 516)),
  CommandNode(pos=(518, 605), parts=[
    WordNode(pos=(518, 522), word='wget'),
    WordNode(pos=(523, 533), word='--progress'),
    WordNode(pos=(534, 542), word='dot:giga'),
    WordNode(pos=(543, 560), word='--output-document'),
    WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(605, 606)),
  CommandNode(pos=(608, 639), parts=[
    WordNode(pos=(608, 614), word='export'),
    WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(628, 637), parts=[
          WordNode(pos=(628, 634), word='mktemp'),
          WordNode(pos=(635, 637), word='-d'),
        ]), pos=(626, 638)),
    ]),
  ]),
  OperatorNode(op=';', pos=(639, 640)),
  CompoundNode(list=[
    ForNode(pos=(642, 746), parts=[
      ReservedwordNode(pos=(642, 645), word='for'),
      WordNode(pos=(646, 649), word='key'),
      ReservedwordNode(pos=(650, 652), word='in'),
      WordNode(pos=(653, 673), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(653, 673), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(673, 674), word=';'),
      ReservedwordNode(pos=(675, 677), word='do'),
      ListNode(pos=(680, 740), parts=[
          CommandNode(pos=(680, 739), parts=[
            WordNode(pos=(680, 683), word='gpg'),
            WordNode(pos=(684, 691), word='--batch'),
            WordNode(pos=(692, 703), word='--keyserver'),
            WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(721, 732), word='--recv-keys'),
            WordNode(pos=(733, 739), word='$key', parts=[
              ParameterNode(pos=(734, 738), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(739, 740)),
        ]),
      ReservedwordNode(pos=(742, 746), word='done'),
    ]),
  ], pos=(642, 746)),
  OperatorNode(op=';', pos=(746, 747)),
  CommandNode(pos=(749, 819), parts=[
    WordNode(pos=(749, 752), word='gpg'),
    WordNode(pos=(753, 760), word='--batch'),
    WordNode(pos=(761, 769), word='--verify'),
    WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(819, 820)),
  CommandNode(pos=(822, 840), parts=[
    WordNode(pos=(822, 829), word='gpgconf'),
    WordNode(pos=(830, 836), word='--kill'),
    WordNode(pos=(837, 840), word='all'),
  ]),
  OperatorNode(op=';', pos=(840, 841)),
  CommandNode(pos=(843, 862), parts=[
    WordNode(pos=(843, 845), word='rm'),
    WordNode(pos=(846, 849), word='-rf'),
    WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(851, 861), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(862, 863)),
  PipelineNode(pos=(865, 947), parts=[
    CommandNode(pos=(865, 916), parts=[
      WordNode(pos=(865, 869), word='echo'),
      WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(917, 918)),
    CommandNode(pos=(919, 947), parts=[
      WordNode(pos=(919, 928), word='sha256sum'),
      WordNode(pos=(929, 936), word='--check'),
      WordNode(pos=(937, 945), word='--strict'),
      WordNode(pos=(946, 947), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(947, 948)),
  CommandNode(pos=(950, 974), parts=[
    WordNode(pos=(950, 955), word='mkdir'),
    WordNode(pos=(956, 958), word='-p'),
    WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(977, 1069), parts=[
    WordNode(pos=(977, 980), word='tar'),
    WordNode(pos=(981, 990), word='--extract'),
    WordNode(pos=(991, 997), word='--file'),
    WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1021, 1032), word='--directory'),
    WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1049, 1067), word='--strip-components'),
    WordNode(pos=(1068, 1069), word='1'),
  ]),
  OperatorNode(op=';', pos=(1069, 1070)),
  CommandNode(pos=(1073, 1091), parts=[
    WordNode(pos=(1073, 1075), word='cd'),
    WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1091, 1092)),
  CommandNode(pos=(1094, 1156), parts=[
    AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1110, 1154), parts=[
          WordNode(pos=(1110, 1127), word='dpkg-architecture'),
          WordNode(pos=(1128, 1135), word='--query'),
          WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
        ]), pos=(1108, 1155)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1156, 1157)),
  CommandNode(pos=(1159, 1337), parts=[
    AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1170, 1213), parts=[
          WordNode(pos=(1170, 1187), word='dpkg-architecture'),
          WordNode(pos=(1188, 1195), word='--query'),
          WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1168, 1214)),
    ]),
    AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
    WordNode(pos=(1265, 1273), word='./config'),
    WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
      ParameterNode(pos=(1323, 1336), value='debMultiarch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1337, 1338)),
  CommandNode(pos=(1340, 1378), parts=[
    WordNode(pos=(1340, 1344), word='make'),
    WordNode(pos=(1345, 1347), word='-j'),
    WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1351, 1376), parts=[
          WordNode(pos=(1351, 1358), word='getconf'),
          WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
        ]), pos=(1349, 1377)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1378, 1379)),
  CommandNode(pos=(1381, 1412), parts=[
    WordNode(pos=(1381, 1385), word='make'),
    WordNode(pos=(1386, 1396), word='install_sw'),
    WordNode(pos=(1397, 1412), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1412, 1413)),
  CommandNode(pos=(1415, 1420), parts=[
    WordNode(pos=(1415, 1417), word='cd'),
    WordNode(pos=(1418, 1420), word='..'),
  ]),
  OperatorNode(op=';', pos=(1420, 1421)),
  CommandNode(pos=(1423, 1446), parts=[
    WordNode(pos=(1423, 1425), word='rm'),
    WordNode(pos=(1426, 1429), word='-rf'),
    WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1446, 1447)),
  CommandNode(pos=(1449, 1512), parts=[
    WordNode(pos=(1449, 1453), word='echo'),
    WordNode(pos=(1454, 1470), word='/usr/local/lib'),
    RedirectNode(output=
      WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
  ]),
  OperatorNode(op=';', pos=(1512, 1513)),
  CommandNode(pos=(1515, 1523), parts=[
    WordNode(pos=(1515, 1523), word='ldconfig'),
  ]),
  OperatorNode(op=';', pos=(1523, 1524)),
  CommandNode(pos=(1526, 1589), parts=[
    WordNode(pos=(1526, 1531), word='rmdir'),
    WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1589, 1590)),
  CommandNode(pos=(1592, 1652), parts=[
    WordNode(pos=(1592, 1594), word='ln'),
    WordNode(pos=(1595, 1598), word='-sf'),
    WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
    WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
    WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1652, 1653)),
  CommandNode(pos=(1655, 1670), parts=[
    WordNode(pos=(1655, 1662), word='openssl'),
    WordNode(pos=(1663, 1670), word='version'),
  ]),
  OperatorNode(op=';', pos=(1670, 1671)),
  CommandNode(pos=(1674, 1752), parts=[
    AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1752, 1753)),
  CommandNode(pos=(1755, 1797), parts=[
    AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1797, 1798)),
  CommandNode(pos=(1801, 1821), parts=[
    WordNode(pos=(1801, 1806), word='mkdir'),
    WordNode(pos=(1807, 1809), word='-p'),
    WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1821, 1822)),
  CommandNode(pos=(1824, 1903), parts=[
    WordNode(pos=(1824, 1828), word='wget'),
    WordNode(pos=(1829, 1839), word='--progress'),
    WordNode(pos=(1840, 1848), word='dot:giga'),
    WordNode(pos=(1849, 1866), word='--output-document'),
    WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
    ]),
    WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1903, 1904)),
  PipelineNode(pos=(1906, 1980), parts=[
    CommandNode(pos=(1906, 1949), parts=[
      WordNode(pos=(1906, 1910), word='echo'),
      WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1950, 1951)),
    CommandNode(pos=(1952, 1980), parts=[
      WordNode(pos=(1952, 1961), word='sha256sum'),
      WordNode(pos=(1962, 1969), word='--check'),
      WordNode(pos=(1970, 1978), word='--strict'),
      WordNode(pos=(1979, 1980), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1980, 1981)),
  CommandNode(pos=(1983, 2067), parts=[
    WordNode(pos=(1983, 1986), word='tar'),
    WordNode(pos=(1987, 1996), word='--extract'),
    WordNode(pos=(1997, 2003), word='--file'),
    WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
    ]),
    WordNode(pos=(2023, 2034), word='--directory'),
    WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
    ]),
    WordNode(pos=(2047, 2065), word='--strip-components'),
    WordNode(pos=(2066, 2067), word='1'),
  ]),
  OperatorNode(op=';', pos=(2067, 2068)),
  CommandNode(pos=(2071, 2085), parts=[
    WordNode(pos=(2071, 2073), word='cd'),
    WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2085, 2086)),
  CommandNode(pos=(2088, 2114), parts=[
    WordNode(pos=(2088, 2094), word='export'),
    WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2114, 2115)),
  CommandNode(pos=(2117, 2137), parts=[
    WordNode(pos=(2117, 2128), word='./otp_build'),
    WordNode(pos=(2129, 2137), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(2137, 2138)),
  CommandNode(pos=(2140, 2180), parts=[
    AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2150, 2178), parts=[
          WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
          WordNode(pos=(2166, 2171), word='--get'),
          WordNode(pos=(2172, 2178), word='CFLAGS'),
        ]), pos=(2148, 2179)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2180, 2181)),
  CommandNode(pos=(2182, 2195), parts=[
    WordNode(pos=(2182, 2188), word='export'),
    WordNode(pos=(2189, 2195), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(2195, 2196)),
  CommandNode(pos=(2198, 2255), parts=[
    AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2210, 2253), parts=[
          WordNode(pos=(2210, 2227), word='dpkg-architecture'),
          WordNode(pos=(2228, 2235), word='--query'),
          WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(2208, 2254)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2255, 2256)),
  CommandNode(pos=(2258, 2317), parts=[
    AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2271, 2315), parts=[
          WordNode(pos=(2271, 2288), word='dpkg-architecture'),
          WordNode(pos=(2289, 2296), word='--query'),
          WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(2269, 2316)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2317, 2318)),
  CommandNode(pos=(2320, 2359), parts=[
    AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2332, 2357), parts=[
          WordNode(pos=(2332, 2336), word='dpkg'),
          WordNode(pos=(2337, 2357), word='--print-architecture'),
        ]), pos=(2330, 2358)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2359, 2360)),
  CommandNode(pos=(2361, 2387), parts=[
    AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2387, 2388)),
  CommandNode(pos=(2390, 3072), parts=[
    WordNode(pos=(2390, 2401), word='./configure'),
    WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2412, 2421), value='hostArch'),
    ]),
    WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2434, 2444), value='buildArch'),
    ]),
    WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2476, 2490), word='--disable-hipe'),
    WordNode(pos=(2493, 2507), word='--disable-sctp'),
    WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
    WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
    WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
    WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
    WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
    WordNode(pos=(2629, 2649), word='--enable-smp-support'),
    WordNode(pos=(2652, 2668), word='--enable-threads'),
    WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2708, 2729), word='--without-common_test'),
    WordNode(pos=(2732, 2750), word='--without-debugger'),
    WordNode(pos=(2753, 2771), word='--without-dialyzer'),
    WordNode(pos=(2774, 2792), word='--without-diameter'),
    WordNode(pos=(2795, 2809), word='--without-edoc'),
    WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
    WordNode(pos=(2835, 2858), word='--without-erl_interface'),
    WordNode(pos=(2861, 2873), word='--without-et'),
    WordNode(pos=(2876, 2891), word='--without-eunit'),
    WordNode(pos=(2894, 2907), word='--without-ftp'),
    WordNode(pos=(2910, 2924), word='--without-hipe'),
    WordNode(pos=(2927, 2947), word='--without-jinterface'),
    WordNode(pos=(2950, 2966), word='--without-megaco'),
    WordNode(pos=(2969, 2987), word='--without-observer'),
    WordNode(pos=(2990, 3004), word='--without-odbc'),
    WordNode(pos=(3007, 3024), word='--without-reltool'),
    WordNode(pos=(3027, 3040), word='--without-ssh'),
    WordNode(pos=(3043, 3057), word='--without-tftp'),
    WordNode(pos=(3060, 3072), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(3074, 3075)),
  CommandNode(pos=(3077, 3155), parts=[
    WordNode(pos=(3077, 3081), word='make'),
    WordNode(pos=(3082, 3084), word='-j'),
    WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(3088, 3113), parts=[
          WordNode(pos=(3088, 3095), word='getconf'),
          WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
        ]), pos=(3086, 3114)),
    ]),
    WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(3155, 3156)),
  CommandNode(pos=(3158, 3170), parts=[
    WordNode(pos=(3158, 3162), word='make'),
    WordNode(pos=(3163, 3170), word='install'),
  ]),
  OperatorNode(op=';', pos=(3170, 3171)),
  CommandNode(pos=(3173, 3178), parts=[
    WordNode(pos=(3173, 3175), word='cd'),
    WordNode(pos=(3176, 3178), word='..'),
  ]),
  OperatorNode(op=';', pos=(3178, 3179)),
  CommandNode(pos=(3181, 3275), parts=[
    WordNode(pos=(3181, 3183), word='rm'),
    WordNode(pos=(3184, 3187), word='-rf'),
    WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
    ]),
    WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(3277, 3278)),
  CommandNode(pos=(3281, 3311), parts=[
    WordNode(pos=(3281, 3289), word='apt-mark'),
    WordNode(pos=(3290, 3294), word='auto'),
    WordNode(pos=(3295, 3299), word='.*'),
    RedirectNode(output=
      WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
  ]),
  OperatorNode(op=';', pos=(3311, 3312)),
  CommandNode(pos=(3314, 3336), parts=[
    WordNode(pos=(3314, 3315), word='['),
    WordNode(pos=(3316, 3318), word='-z'),
    WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
      ParameterNode(pos=(3320, 3333), value='savedAptMark'),
    ]),
    WordNode(pos=(3335, 3336), word=']'),
  ]),
  OperatorNode(op='||', pos=(3337, 3339)),
  CommandNode(pos=(3340, 3369), parts=[
    WordNode(pos=(3340, 3348), word='apt-mark'),
    WordNode(pos=(3349, 3355), word='manual'),
    WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
      ParameterNode(pos=(3356, 3369), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3369, 3370)),
  PipelineNode(pos=(3372, 3561), parts=[
    CommandNode(pos=(3372, 3426), parts=[
      WordNode(pos=(3372, 3376), word='find'),
      WordNode(pos=(3377, 3387), word='/usr/local'),
      WordNode(pos=(3388, 3393), word='-type'),
      WordNode(pos=(3394, 3395), word='f'),
      WordNode(pos=(3396, 3407), word='-executable'),
      WordNode(pos=(3408, 3413), word='-exec'),
      WordNode(pos=(3414, 3417), word='ldd'),
      WordNode(pos=(3418, 3422), word='{}'),
      WordNode(pos=(3423, 3426), word=';'),
    ]),
    PipeNode(pipe='|', pos=(3429, 3430)),
    CommandNode(pos=(3431, 3459), parts=[
      WordNode(pos=(3431, 3434), word='awk'),
      WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(3462, 3463)),
    CommandNode(pos=(3464, 3471), parts=[
      WordNode(pos=(3464, 3468), word='sort'),
      WordNode(pos=(3469, 3471), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3474, 3475)),
    CommandNode(pos=(3476, 3504), parts=[
      WordNode(pos=(3476, 3481), word='xargs'),
      WordNode(pos=(3482, 3484), word='-r'),
      WordNode(pos=(3485, 3495), word='dpkg-query'),
      WordNode(pos=(3496, 3504), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(3507, 3508)),
    CommandNode(pos=(3509, 3520), parts=[
      WordNode(pos=(3509, 3512), word='cut'),
      WordNode(pos=(3513, 3516), word='-d:'),
      WordNode(pos=(3517, 3520), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(3523, 3524)),
    CommandNode(pos=(3525, 3532), parts=[
      WordNode(pos=(3525, 3529), word='sort'),
      WordNode(pos=(3530, 3532), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3535, 3536)),
    CommandNode(pos=(3537, 3561), parts=[
      WordNode(pos=(3537, 3542), word='xargs'),
      WordNode(pos=(3543, 3545), word='-r'),
      WordNode(pos=(3546, 3554), word='apt-mark'),
      WordNode(pos=(3555, 3561), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3563, 3564)),
  CommandNode(pos=(3566, 3642), parts=[
    WordNode(pos=(3566, 3573), word='apt-get'),
    WordNode(pos=(3574, 3579), word='purge'),
    WordNode(pos=(3580, 3582), word='-y'),
    WordNode(pos=(3583, 3596), word='--auto-remove'),
    WordNode(pos=(3597, 3599), word='-o'),
    WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(3642, 3643)),
  CommandNode(pos=(3646, 3661), parts=[
    WordNode(pos=(3646, 3653), word='openssl'),
    WordNode(pos=(3654, 3661), word='version'),
  ]),
  OperatorNode(op=';', pos=(3661, 3662)),
  CommandNode(pos=(3664, 3761), parts=[
    WordNode(pos=(3664, 3667), word='erl'),
    WordNode(pos=(3668, 3676), word='-noshell'),
    WordNode(pos=(3677, 3682), word='-eval'),
    WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


3046) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


3047) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


3048) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


3049) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


3050) rm -rf "$GNUPGHOME"

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 849), word='-rf'),
  WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(851, 861), value='GNUPGHOME'),
  ]),
])


3051) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


3052) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


3053) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(950, 974), parts=[
  WordNode(pos=(950, 955), word='mkdir'),
  WordNode(pos=(956, 958), word='-p'),
  WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
  ]),
])


3054) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


3055) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


3056) cd "$OPENSSL_PATH"

CommandNode(pos=(1073, 1091), parts=[
  WordNode(pos=(1073, 1075), word='cd'),
  WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
  ]),
])


3057) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


3058) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


3059) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1423, 1446), parts=[
  WordNode(pos=(1423, 1425), word='rm'),
  WordNode(pos=(1426, 1429), word='-rf'),
  WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
  ]),
])


3060) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


3061) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


3062) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1592, 1652), parts=[
  WordNode(pos=(1592, 1594), word='ln'),
  WordNode(pos=(1595, 1598), word='-sf'),
  WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
  WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
  WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
  ]),
])


3063) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


3064) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


3065) mkdir -p "$OTP_PATH"

CommandNode(pos=(1801, 1821), parts=[
  WordNode(pos=(1801, 1806), word='mkdir'),
  WordNode(pos=(1807, 1809), word='-p'),
  WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
  ]),
])


3066) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


3067) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


3068) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


3069) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


3070) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


3071) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


3072) cd "$OTP_PATH"

CommandNode(pos=(2071, 2085), parts=[
  WordNode(pos=(2071, 2073), word='cd'),
  WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
  ]),
])


3073) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(2088, 2114), parts=[
  WordNode(pos=(2088, 2094), word='export'),
  WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
  ]),
])


3074) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


3075) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


3076) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


3077) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(3181, 3275), parts=[
  WordNode(pos=(3181, 3183), word='rm'),
  WordNode(pos=(3184, 3187), word='-rf'),
  WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
  ]),
  WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
])


3078) [ -z "$savedAptMark" ]

CommandNode(pos=(3314, 3336), parts=[
  WordNode(pos=(3314, 3315), word='['),
  WordNode(pos=(3316, 3318), word='-z'),
  WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
    ParameterNode(pos=(3320, 3333), value='savedAptMark'),
  ]),
  WordNode(pos=(3335, 3336), word=']'),
])


3079) apt-mark manual $savedAptMark

CommandNode(pos=(3340, 3369), parts=[
  WordNode(pos=(3340, 3348), word='apt-mark'),
  WordNode(pos=(3349, 3355), word='manual'),
  WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
    ParameterNode(pos=(3356, 3369), value='savedAptMark'),
  ]),
])


3080) useradd --uid 999 --system --home-dir "$RABBITMQ_DATA_DIR" --gid rabbitmq rabbitmq

CommandNode(pos=(50, 132), parts=[
  WordNode(pos=(50, 57), word='useradd'),
  WordNode(pos=(58, 63), word='--uid'),
  WordNode(pos=(64, 67), word='999'),
  WordNode(pos=(68, 76), word='--system'),
  WordNode(pos=(77, 87), word='--home-dir'),
  WordNode(pos=(88, 108), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(89, 107), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(109, 114), word='--gid'),
  WordNode(pos=(115, 123), word='rabbitmq'),
  WordNode(pos=(124, 132), word='rabbitmq'),
])


3081) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(135, 214), parts=[
  WordNode(pos=(135, 140), word='mkdir'),
  WordNode(pos=(141, 143), word='-p'),
  WordNode(pos=(144, 164), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(145, 163), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(165, 178), word='/etc/rabbitmq'),
  WordNode(pos=(179, 196), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(197, 214), word='/var/log/rabbitmq'),
])


3082) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(217, 315), parts=[
  WordNode(pos=(217, 222), word='chown'),
  WordNode(pos=(223, 226), word='-fR'),
  WordNode(pos=(227, 244), word='rabbitmq:rabbitmq'),
  WordNode(pos=(245, 265), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(246, 264), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(266, 279), word='/etc/rabbitmq'),
  WordNode(pos=(280, 297), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(298, 315), word='/var/log/rabbitmq'),
])


3083) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(318, 398), parts=[
  WordNode(pos=(318, 323), word='chmod'),
  WordNode(pos=(324, 327), word='777'),
  WordNode(pos=(328, 348), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(329, 347), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(349, 362), word='/etc/rabbitmq'),
  WordNode(pos=(363, 380), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(381, 398), word='/var/log/rabbitmq'),
])


3084) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(401, 464), parts=[
  WordNode(pos=(401, 403), word='ln'),
  WordNode(pos=(404, 407), word='-sf'),
  WordNode(pos=(408, 443), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(409, 427), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(444, 464), word='/root/.erlang.cookie'),
])


3085) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


3086) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


3087) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


3088) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


3089) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


3090) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


3091) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


3092) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


3093) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


3094) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


3095) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


3096) rm -rf "$GNUPGHOME"

CommandNode(pos=(815, 834), parts=[
  WordNode(pos=(815, 817), word='rm'),
  WordNode(pos=(818, 821), word='-rf'),
  WordNode(pos=(822, 834), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(823, 833), value='GNUPGHOME'),
  ]),
])


3097) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(838, 863), parts=[
  WordNode(pos=(838, 843), word='mkdir'),
  WordNode(pos=(844, 846), word='-p'),
  WordNode(pos=(847, 863), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(848, 862), value='RABBITMQ_HOME'),
  ]),
])


3098) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


3099) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


3100) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(963, 987), parts=[
  WordNode(pos=(963, 965), word='rm'),
  WordNode(pos=(966, 969), word='-rf'),
  WordNode(pos=(970, 987), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(971, 985), value='RABBITMQ_PATH'),
  ]),
])


3101) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(990, 1073), parts=[
  WordNode(pos=(990, 994), word='grep'),
  WordNode(pos=(995, 998), word='-qE'),
  WordNode(pos=(999, 1033), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(1034, 1073), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1035, 1049), value='RABBITMQ_HOME'),
  ]),
])


3102) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1076, 1155), parts=[
  WordNode(pos=(1076, 1079), word='sed'),
  WordNode(pos=(1080, 1082), word='-i'),
  WordNode(pos=(1083, 1115), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(1116, 1155), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1117, 1131), value='RABBITMQ_HOME'),
  ]),
])


3103) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1158, 1222), parts=[
  WordNode(pos=(1158, 1162), word='grep'),
  WordNode(pos=(1163, 1166), word='-qE'),
  WordNode(pos=(1167, 1182), word='^SYS_PREFIX=$'),
  WordNode(pos=(1183, 1222), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1184, 1198), value='RABBITMQ_HOME'),
  ]),
])


3104) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1225, 1268), parts=[
  WordNode(pos=(1225, 1230), word='chown'),
  WordNode(pos=(1231, 1233), word='-R'),
  WordNode(pos=(1234, 1251), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1252, 1268), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1253, 1267), value='RABBITMQ_HOME'),
  ]),
])


3105) apt-mark manual $savedAptMark

CommandNode(pos=(1305, 1334), parts=[
  WordNode(pos=(1305, 1313), word='apt-mark'),
  WordNode(pos=(1314, 1320), word='manual'),
  WordNode(pos=(1321, 1334), word='$savedAptMark', parts=[
    ParameterNode(pos=(1321, 1334), value='savedAptMark'),
  ]),
])


3106) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1417, 1461), parts=[
  WordNode(pos=(1417, 1418), word='['),
  WordNode(pos=(1419, 1420), word='!'),
  WordNode(pos=(1421, 1423), word='-e'),
  WordNode(pos=(1424, 1459), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1425, 1443), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1460, 1461), word=']'),
])


3107) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1576, 1614), parts=[
  WordNode(pos=(1576, 1578), word='rm'),
  WordNode(pos=(1579, 1614), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1580, 1598), value='RABBITMQ_DATA_DIR'),
  ]),
])


3108) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


3109) mkdir -p "$GOPATH/src" "$GOPATH/bin"

CommandNode(pos=(0, 36), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 22), word='$GOPATH/src', parts=[
    ParameterNode(pos=(10, 17), value='GOPATH'),
  ]),
  WordNode(pos=(23, 36), word='$GOPATH/bin', parts=[
    ParameterNode(pos=(24, 31), value='GOPATH'),
  ]),
])


3110) chmod -R 777 "$GOPATH"

CommandNode(pos=(40, 62), parts=[
  WordNode(pos=(40, 45), word='chmod'),
  WordNode(pos=(46, 48), word='-R'),
  WordNode(pos=(49, 52), word='777'),
  WordNode(pos=(53, 62), word='$GOPATH', parts=[
    ParameterNode(pos=(54, 61), value='GOPATH'),
  ]),
])


3111) mkdir -p "$CATALINA_HOME"

CommandNode(pos=(0, 25), parts=[
  WordNode(pos=(0, 5), word='mkdir'),
  WordNode(pos=(6, 8), word='-p'),
  WordNode(pos=(9, 25), word='$CATALINA_HOME', parts=[
    ParameterNode(pos=(10, 24), value='CATALINA_HOME'),
  ]),
])


3112) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


3113) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(191, 260), parts=[
  WordNode(pos=(191, 194), word='gpg'),
  WordNode(pos=(195, 202), word='--batch'),
  WordNode(pos=(203, 214), word='--keyserver'),
  WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(242, 253), word='--recv-keys'),
  WordNode(pos=(254, 260), word='$key', parts=[
    ParameterNode(pos=(255, 259), value='key'),
  ]),
])


3114) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


3115) wget -O tomcat.tar.gz "$url"

CommandNode(pos=(386, 414), parts=[
  WordNode(pos=(386, 390), word='wget'),
  WordNode(pos=(391, 393), word='-O'),
  WordNode(pos=(394, 407), word='tomcat.tar.gz'),
  WordNode(pos=(408, 414), word='$url', parts=[
    ParameterNode(pos=(409, 413), value='url'),
  ]),
])


3116) [ -n "$success" ]

CommandNode(pos=(459, 476), parts=[
  WordNode(pos=(459, 460), word='['),
  WordNode(pos=(461, 463), word='-n'),
  WordNode(pos=(464, 474), word='$success', parts=[
    ParameterNode(pos=(465, 473), value='success'),
  ]),
  WordNode(pos=(475, 476), word=']'),
])


3117) echo "$TOMCAT_SHA512 *tomcat.tar.gz"

CommandNode(pos=(480, 516), parts=[
  WordNode(pos=(480, 484), word='echo'),
  WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
    ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
  ]),
])


3118) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;   apt-get install -y --no-install-recommends gnupg dirmngr;   export GNUPGHOME="$(mktemp -d)";  for key in $GPG_KEYS; do   gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done;   apt-get install -y --no-install-recommends wget ca-certificates;   success=;  for url in $TOMCAT_TGZ_URLS; do   if wget -O tomcat.tar.gz "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   echo "$TOMCAT_SHA512 *tomcat.tar.gz" | sha512sum --strict --check -;   success=;  for url in $TOMCAT_ASC_URLS; do   if wget -O tomcat.tar.gz.asc "$url"; then    success=1;    break;   fi;  done;  [ -n "$success" ];   gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz;  tar -xvf tomcat.tar.gz --strip-components=1;  rm bin/*.bat;  rm tomcat.tar.gz*;  command -v gpgconf && gpgconf --kill all || :;  rm -rf "$GNUPGHOME";   nativeBuildDir="$(mktemp -d)";  tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1;  apt-get install -y --no-install-recommends   dpkg-dev   gcc   libapr1-dev   libssl-dev   make  ;  (   export CATALINA_HOME="$PWD";   cd "$nativeBuildDir/native";   gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";   aprConfig="$(which apr-1-config)";   ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes;   make -j "$(nproc)";   make install;  );  rm -rf "$nativeBuildDir";  rm bin/tomcat-native.tar.gz;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null;  find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;  rm -rf /var/lib/apt/lists/*;   find ./bin/ -name '*.sh' -exec sed -ri 's|^#!/bin/sh$|#!/usr/bin/env bash|' '{}' +;   chmod -R +rX .;  chmod 777 logs work

ListNode(pos=(0, 2097), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(70, 126), parts=[
    WordNode(pos=(70, 77), word='apt-get'),
    WordNode(pos=(78, 85), word='install'),
    WordNode(pos=(86, 88), word='-y'),
    WordNode(pos=(89, 112), word='--no-install-recommends'),
    WordNode(pos=(113, 118), word='gnupg'),
    WordNode(pos=(119, 126), word='dirmngr'),
  ]),
  OperatorNode(op=';', pos=(126, 127)),
  CommandNode(pos=(130, 161), parts=[
    WordNode(pos=(130, 136), word='export'),
    WordNode(pos=(137, 161), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(150, 159), parts=[
          WordNode(pos=(150, 156), word='mktemp'),
          WordNode(pos=(157, 159), word='-d'),
        ]), pos=(148, 160)),
    ]),
  ]),
  OperatorNode(op=';', pos=(161, 162)),
  CompoundNode(list=[
    ForNode(pos=(164, 267), parts=[
      ReservedwordNode(pos=(164, 167), word='for'),
      WordNode(pos=(168, 171), word='key'),
      ReservedwordNode(pos=(172, 174), word='in'),
      WordNode(pos=(175, 184), word='$GPG_KEYS', parts=[
        ParameterNode(pos=(175, 184), value='GPG_KEYS'),
      ]),
      ReservedwordNode(pos=(184, 185), word=';'),
      ReservedwordNode(pos=(186, 188), word='do'),
      ListNode(pos=(191, 261), parts=[
          CommandNode(pos=(191, 260), parts=[
            WordNode(pos=(191, 194), word='gpg'),
            WordNode(pos=(195, 202), word='--batch'),
            WordNode(pos=(203, 214), word='--keyserver'),
            WordNode(pos=(215, 241), word='ha.pool.sks-keyservers.net'),
            WordNode(pos=(242, 253), word='--recv-keys'),
            WordNode(pos=(254, 260), word='$key', parts=[
              ParameterNode(pos=(255, 259), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(260, 261)),
        ]),
      ReservedwordNode(pos=(263, 267), word='done'),
    ]),
  ], pos=(164, 267)),
  OperatorNode(op=';', pos=(267, 268)),
  CommandNode(pos=(271, 334), parts=[
    WordNode(pos=(271, 278), word='apt-get'),
    WordNode(pos=(279, 286), word='install'),
    WordNode(pos=(287, 289), word='-y'),
    WordNode(pos=(290, 313), word='--no-install-recommends'),
    WordNode(pos=(314, 318), word='wget'),
    WordNode(pos=(319, 334), word='ca-certificates'),
  ]),
  OperatorNode(op=';', pos=(334, 335)),
  CommandNode(pos=(338, 346), parts=[
    AssignmentNode(pos=(338, 346), word='success='),
  ]),
  OperatorNode(op=';', pos=(346, 347)),
  CompoundNode(list=[
    ForNode(pos=(349, 456), parts=[
      ReservedwordNode(pos=(349, 352), word='for'),
      WordNode(pos=(353, 356), word='url'),
      ReservedwordNode(pos=(357, 359), word='in'),
      WordNode(pos=(360, 376), word='$TOMCAT_TGZ_URLS', parts=[
        ParameterNode(pos=(360, 376), value='TOMCAT_TGZ_URLS'),
      ]),
      ReservedwordNode(pos=(376, 377), word=';'),
      ReservedwordNode(pos=(378, 380), word='do'),
      ListNode(pos=(383, 450), parts=[
          CompoundNode(list=[
            IfNode(pos=(383, 449), parts=[
              ReservedwordNode(pos=(383, 385), word='if'),
              ListNode(pos=(386, 415), parts=[
                  CommandNode(pos=(386, 414), parts=[
                    WordNode(pos=(386, 390), word='wget'),
                    WordNode(pos=(391, 393), word='-O'),
                    WordNode(pos=(394, 407), word='tomcat.tar.gz'),
                    WordNode(pos=(408, 414), word='$url', parts=[
                      ParameterNode(pos=(409, 413), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(414, 415)),
                ]),
              ReservedwordNode(pos=(416, 420), word='then'),
              ListNode(pos=(424, 444), parts=[
                  CommandNode(pos=(424, 433), parts=[
                    AssignmentNode(pos=(424, 433), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(433, 434)),
                  CommandNode(pos=(438, 443), parts=[
                    WordNode(pos=(438, 443), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(443, 444)),
                ]),
              ReservedwordNode(pos=(447, 449), word='fi'),
            ]),
          ], pos=(383, 449)),
          OperatorNode(op=';', pos=(449, 450)),
        ]),
      ReservedwordNode(pos=(452, 456), word='done'),
    ]),
  ], pos=(349, 456)),
  OperatorNode(op=';', pos=(456, 457)),
  CommandNode(pos=(459, 476), parts=[
    WordNode(pos=(459, 460), word='['),
    WordNode(pos=(461, 463), word='-n'),
    WordNode(pos=(464, 474), word='$success', parts=[
      ParameterNode(pos=(465, 473), value='success'),
    ]),
    WordNode(pos=(475, 476), word=']'),
  ]),
  OperatorNode(op=';', pos=(476, 477)),
  PipelineNode(pos=(480, 547), parts=[
    CommandNode(pos=(480, 516), parts=[
      WordNode(pos=(480, 484), word='echo'),
      WordNode(pos=(485, 516), word='$TOMCAT_SHA512 *tomcat.tar.gz', parts=[
        ParameterNode(pos=(486, 500), value='TOMCAT_SHA512'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(517, 518)),
    CommandNode(pos=(519, 547), parts=[
      WordNode(pos=(519, 528), word='sha512sum'),
      WordNode(pos=(529, 537), word='--strict'),
      WordNode(pos=(538, 545), word='--check'),
      WordNode(pos=(546, 547), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(547, 548)),
  CommandNode(pos=(551, 559), parts=[
    AssignmentNode(pos=(551, 559), word='success='),
  ]),
  OperatorNode(op=';', pos=(559, 560)),
  CompoundNode(list=[
    ForNode(pos=(562, 673), parts=[
      ReservedwordNode(pos=(562, 565), word='for'),
      WordNode(pos=(566, 569), word='url'),
      ReservedwordNode(pos=(570, 572), word='in'),
      WordNode(pos=(573, 589), word='$TOMCAT_ASC_URLS', parts=[
        ParameterNode(pos=(573, 589), value='TOMCAT_ASC_URLS'),
      ]),
      ReservedwordNode(pos=(589, 590), word=';'),
      ReservedwordNode(pos=(591, 593), word='do'),
      ListNode(pos=(596, 667), parts=[
          CompoundNode(list=[
            IfNode(pos=(596, 666), parts=[
              ReservedwordNode(pos=(596, 598), word='if'),
              ListNode(pos=(599, 632), parts=[
                  CommandNode(pos=(599, 631), parts=[
                    WordNode(pos=(599, 603), word='wget'),
                    WordNode(pos=(604, 606), word='-O'),
                    WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
                    WordNode(pos=(625, 631), word='$url', parts=[
                      ParameterNode(pos=(626, 630), value='url'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(631, 632)),
                ]),
              ReservedwordNode(pos=(633, 637), word='then'),
              ListNode(pos=(641, 661), parts=[
                  CommandNode(pos=(641, 650), parts=[
                    AssignmentNode(pos=(641, 650), word='success=1'),
                  ]),
                  OperatorNode(op=';', pos=(650, 651)),
                  CommandNode(pos=(655, 660), parts=[
                    WordNode(pos=(655, 660), word='break'),
                  ]),
                  OperatorNode(op=';', pos=(660, 661)),
                ]),
              ReservedwordNode(pos=(664, 666), word='fi'),
            ]),
          ], pos=(596, 666)),
          OperatorNode(op=';', pos=(666, 667)),
        ]),
      ReservedwordNode(pos=(669, 673), word='done'),
    ]),
  ], pos=(562, 673)),
  OperatorNode(op=';', pos=(673, 674)),
  CommandNode(pos=(676, 693), parts=[
    WordNode(pos=(676, 677), word='['),
    WordNode(pos=(678, 680), word='-n'),
    WordNode(pos=(681, 691), word='$success', parts=[
      ParameterNode(pos=(682, 690), value='success'),
    ]),
    WordNode(pos=(692, 693), word=']'),
  ]),
  OperatorNode(op=';', pos=(693, 694)),
  CommandNode(pos=(697, 749), parts=[
    WordNode(pos=(697, 700), word='gpg'),
    WordNode(pos=(701, 708), word='--batch'),
    WordNode(pos=(709, 717), word='--verify'),
    WordNode(pos=(718, 735), word='tomcat.tar.gz.asc'),
    WordNode(pos=(736, 749), word='tomcat.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(749, 750)),
  CommandNode(pos=(752, 795), parts=[
    WordNode(pos=(752, 755), word='tar'),
    WordNode(pos=(756, 760), word='-xvf'),
    WordNode(pos=(761, 774), word='tomcat.tar.gz'),
    WordNode(pos=(775, 795), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(795, 796)),
  CommandNode(pos=(798, 810), parts=[
    WordNode(pos=(798, 800), word='rm'),
    WordNode(pos=(801, 810), word='bin/*.bat'),
  ]),
  OperatorNode(op=';', pos=(810, 811)),
  CommandNode(pos=(813, 830), parts=[
    WordNode(pos=(813, 815), word='rm'),
    WordNode(pos=(816, 830), word='tomcat.tar.gz*'),
  ]),
  OperatorNode(op=';', pos=(830, 831)),
  CommandNode(pos=(833, 851), parts=[
    WordNode(pos=(833, 840), word='command'),
    WordNode(pos=(841, 843), word='-v'),
    WordNode(pos=(844, 851), word='gpgconf'),
  ]),
  OperatorNode(op='&&', pos=(852, 854)),
  CommandNode(pos=(855, 873), parts=[
    WordNode(pos=(855, 862), word='gpgconf'),
    WordNode(pos=(863, 869), word='--kill'),
    WordNode(pos=(870, 873), word='all'),
  ]),
  OperatorNode(op='||', pos=(874, 876)),
  CommandNode(pos=(877, 878), parts=[
    WordNode(pos=(877, 878), word=':'),
  ]),
  OperatorNode(op=';', pos=(878, 879)),
  CommandNode(pos=(881, 900), parts=[
    WordNode(pos=(881, 883), word='rm'),
    WordNode(pos=(884, 887), word='-rf'),
    WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(889, 899), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(900, 901)),
  CommandNode(pos=(904, 933), parts=[
    AssignmentNode(pos=(904, 933), word='nativeBuildDir=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(922, 931), parts=[
          WordNode(pos=(922, 928), word='mktemp'),
          WordNode(pos=(929, 931), word='-d'),
        ]), pos=(920, 932)),
    ]),
  ]),
  OperatorNode(op=';', pos=(933, 934)),
  CommandNode(pos=(936, 1011), parts=[
    WordNode(pos=(936, 939), word='tar'),
    WordNode(pos=(940, 944), word='-xvf'),
    WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
    WordNode(pos=(970, 972), word='-C'),
    WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(974, 989), value='nativeBuildDir'),
    ]),
    WordNode(pos=(991, 1011), word='--strip-components=1'),
  ]),
  OperatorNode(op=';', pos=(1011, 1012)),
  CommandNode(pos=(1014, 1107), parts=[
    WordNode(pos=(1014, 1021), word='apt-get'),
    WordNode(pos=(1022, 1029), word='install'),
    WordNode(pos=(1030, 1032), word='-y'),
    WordNode(pos=(1033, 1056), word='--no-install-recommends'),
    WordNode(pos=(1059, 1067), word='dpkg-dev'),
    WordNode(pos=(1070, 1073), word='gcc'),
    WordNode(pos=(1076, 1087), word='libapr1-dev'),
    WordNode(pos=(1090, 1100), word='libssl-dev'),
    WordNode(pos=(1103, 1107), word='make'),
  ]),
  OperatorNode(op=';', pos=(1109, 1110)),
  CompoundNode(list=[
    ReservedwordNode(pos=(1112, 1113), word='('),
    ListNode(pos=(1116, 1491), parts=[
        CommandNode(pos=(1116, 1143), parts=[
          WordNode(pos=(1116, 1122), word='export'),
          WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
            ParameterNode(pos=(1138, 1142), value='PWD'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1143, 1144)),
        CommandNode(pos=(1147, 1174), parts=[
          WordNode(pos=(1147, 1149), word='cd'),
          WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
            ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
          ]),
        ]),
        OperatorNode(op=';', pos=(1174, 1175)),
        CommandNode(pos=(1178, 1235), parts=[
          AssignmentNode(pos=(1178, 1235), word='gnuArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1189, 1233), parts=[
                WordNode(pos=(1189, 1206), word='dpkg-architecture'),
                WordNode(pos=(1207, 1214), word='--query'),
                WordNode(pos=(1215, 1233), word='DEB_BUILD_GNU_TYPE'),
              ]), pos=(1187, 1234)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1235, 1236)),
        CommandNode(pos=(1239, 1272), parts=[
          AssignmentNode(pos=(1239, 1272), word='aprConfig=$(which apr-1-config)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1252, 1270), parts=[
                WordNode(pos=(1252, 1257), word='which'),
                WordNode(pos=(1258, 1270), word='apr-1-config'),
              ]), pos=(1250, 1271)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1272, 1273)),
        CommandNode(pos=(1276, 1452), parts=[
          WordNode(pos=(1276, 1287), word='./configure'),
          WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
            ParameterNode(pos=(1300, 1308), value='gnuArch'),
          ]),
          WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
            ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
          ]),
          WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
            ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
          ]),
          WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
            ParameterNode(pos=(1390, 1400), value='aprConfig'),
          ]),
          WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
            ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
          ]),
          WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
        ]),
        OperatorNode(op=';', pos=(1452, 1453)),
        CommandNode(pos=(1456, 1474), parts=[
          WordNode(pos=(1456, 1460), word='make'),
          WordNode(pos=(1461, 1463), word='-j'),
          WordNode(pos=(1464, 1474), word='$(nproc)', parts=[
            CommandsubstitutionNode(command=
              CommandNode(pos=(1467, 1472), parts=[
                WordNode(pos=(1467, 1472), word='nproc'),
              ]), pos=(1465, 1473)),
          ]),
        ]),
        OperatorNode(op=';', pos=(1474, 1475)),
        CommandNode(pos=(1478, 1490), parts=[
          WordNode(pos=(1478, 1482), word='make'),
          WordNode(pos=(1483, 1490), word='install'),
        ]),
        OperatorNode(op=';', pos=(1490, 1491)),
      ]),
    ReservedwordNode(pos=(1493, 1494), word=')'),
  ], pos=(1112, 1494)),
  OperatorNode(op=';', pos=(1494, 1495)),
  CommandNode(pos=(1497, 1521), parts=[
    WordNode(pos=(1497, 1499), word='rm'),
    WordNode(pos=(1500, 1503), word='-rf'),
    WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
      ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1521, 1522)),
  CommandNode(pos=(1524, 1551), parts=[
    WordNode(pos=(1524, 1526), word='rm'),
    WordNode(pos=(1527, 1551), word='bin/tomcat-native.tar.gz'),
  ]),
  OperatorNode(op=';', pos=(1551, 1552)),
  CommandNode(pos=(1555, 1585), parts=[
    WordNode(pos=(1555, 1563), word='apt-mark'),
    WordNode(pos=(1564, 1568), word='auto'),
    WordNode(pos=(1569, 1573), word='.*'),
    RedirectNode(output=
      WordNode(pos=(1576, 1585), word='/dev/null'), pos=(1574, 1585), type='>'),
  ]),
  OperatorNode(op=';', pos=(1585, 1586)),
  CommandNode(pos=(1588, 1610), parts=[
    WordNode(pos=(1588, 1589), word='['),
    WordNode(pos=(1590, 1592), word='-z'),
    WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
      ParameterNode(pos=(1594, 1607), value='savedAptMark'),
    ]),
    WordNode(pos=(1609, 1610), word=']'),
  ]),
  OperatorNode(op='||', pos=(1611, 1613)),
  CommandNode(pos=(1614, 1655), parts=[
    WordNode(pos=(1614, 1622), word='apt-mark'),
    WordNode(pos=(1623, 1629), word='manual'),
    WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
      ParameterNode(pos=(1630, 1643), value='savedAptMark'),
    ]),
    RedirectNode(output=
      WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
  ]),
  OperatorNode(op=';', pos=(1655, 1656)),
  PipelineNode(pos=(1658, 1860), parts=[
    CommandNode(pos=(1658, 1725), parts=[
      WordNode(pos=(1658, 1662), word='find'),
      WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
        ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
      ]),
      WordNode(pos=(1687, 1692), word='-type'),
      WordNode(pos=(1693, 1694), word='f'),
      WordNode(pos=(1695, 1706), word='-executable'),
      WordNode(pos=(1707, 1712), word='-exec'),
      WordNode(pos=(1713, 1716), word='ldd'),
      WordNode(pos=(1717, 1721), word='{}'),
      WordNode(pos=(1722, 1725), word=';'),
    ]),
    PipeNode(pipe='|', pos=(1728, 1729)),
    CommandNode(pos=(1730, 1758), parts=[
      WordNode(pos=(1730, 1733), word='awk'),
      WordNode(pos=(1734, 1758), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(1761, 1762)),
    CommandNode(pos=(1763, 1770), parts=[
      WordNode(pos=(1763, 1767), word='sort'),
      WordNode(pos=(1768, 1770), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1773, 1774)),
    CommandNode(pos=(1775, 1803), parts=[
      WordNode(pos=(1775, 1780), word='xargs'),
      WordNode(pos=(1781, 1783), word='-r'),
      WordNode(pos=(1784, 1794), word='dpkg-query'),
      WordNode(pos=(1795, 1803), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(1806, 1807)),
    CommandNode(pos=(1808, 1819), parts=[
      WordNode(pos=(1808, 1811), word='cut'),
      WordNode(pos=(1812, 1815), word='-d:'),
      WordNode(pos=(1816, 1819), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(1822, 1823)),
    CommandNode(pos=(1824, 1831), parts=[
      WordNode(pos=(1824, 1828), word='sort'),
      WordNode(pos=(1829, 1831), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(1834, 1835)),
    CommandNode(pos=(1836, 1860), parts=[
      WordNode(pos=(1836, 1841), word='xargs'),
      WordNode(pos=(1842, 1844), word='-r'),
      WordNode(pos=(1845, 1853), word='apt-mark'),
      WordNode(pos=(1854, 1860), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1862, 1863)),
  CommandNode(pos=(1865, 1941), parts=[
    WordNode(pos=(1865, 1872), word='apt-get'),
    WordNode(pos=(1873, 1878), word='purge'),
    WordNode(pos=(1879, 1881), word='-y'),
    WordNode(pos=(1882, 1895), word='--auto-remove'),
    WordNode(pos=(1896, 1898), word='-o'),
    WordNode(pos=(1899, 1941), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(1941, 1942)),
  CommandNode(pos=(1944, 1971), parts=[
    WordNode(pos=(1944, 1946), word='rm'),
    WordNode(pos=(1947, 1950), word='-rf'),
    WordNode(pos=(1951, 1971), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(1971, 1972)),
  CommandNode(pos=(1975, 2057), parts=[
    WordNode(pos=(1975, 1979), word='find'),
    WordNode(pos=(1980, 1986), word='./bin/'),
    WordNode(pos=(1987, 1992), word='-name'),
    WordNode(pos=(1993, 1999), word='*.sh'),
    WordNode(pos=(2000, 2005), word='-exec'),
    WordNode(pos=(2006, 2009), word='sed'),
    WordNode(pos=(2010, 2013), word='-ri'),
    WordNode(pos=(2014, 2050), word='s|^#!/bin/sh$|#!/usr/bin/env bash|'),
    WordNode(pos=(2051, 2055), word='{}'),
    WordNode(pos=(2056, 2057), word='+'),
  ]),
  OperatorNode(op=';', pos=(2057, 2058)),
  CommandNode(pos=(2061, 2075), parts=[
    WordNode(pos=(2061, 2066), word='chmod'),
    WordNode(pos=(2067, 2069), word='-R'),
    WordNode(pos=(2070, 2073), word='+rX'),
    WordNode(pos=(2074, 2075), word='.'),
  ]),
  OperatorNode(op=';', pos=(2075, 2076)),
  CommandNode(pos=(2078, 2097), parts=[
    WordNode(pos=(2078, 2083), word='chmod'),
    WordNode(pos=(2084, 2087), word='777'),
    WordNode(pos=(2088, 2092), word='logs'),
    WordNode(pos=(2093, 2097), word='work'),
  ]),
])


3119) wget -O tomcat.tar.gz.asc "$url"

CommandNode(pos=(599, 631), parts=[
  WordNode(pos=(599, 603), word='wget'),
  WordNode(pos=(604, 606), word='-O'),
  WordNode(pos=(607, 624), word='tomcat.tar.gz.asc'),
  WordNode(pos=(625, 631), word='$url', parts=[
    ParameterNode(pos=(626, 630), value='url'),
  ]),
])


3120) [ -n "$success" ]

CommandNode(pos=(676, 693), parts=[
  WordNode(pos=(676, 677), word='['),
  WordNode(pos=(678, 680), word='-n'),
  WordNode(pos=(681, 691), word='$success', parts=[
    ParameterNode(pos=(682, 690), value='success'),
  ]),
  WordNode(pos=(692, 693), word=']'),
])


3121) rm -rf "$GNUPGHOME"

CommandNode(pos=(881, 900), parts=[
  WordNode(pos=(881, 883), word='rm'),
  WordNode(pos=(884, 887), word='-rf'),
  WordNode(pos=(888, 900), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(889, 899), value='GNUPGHOME'),
  ]),
])


3122) tar -xvf bin/tomcat-native.tar.gz -C "$nativeBuildDir" --strip-components=1

CommandNode(pos=(936, 1011), parts=[
  WordNode(pos=(936, 939), word='tar'),
  WordNode(pos=(940, 944), word='-xvf'),
  WordNode(pos=(945, 969), word='bin/tomcat-native.tar.gz'),
  WordNode(pos=(970, 972), word='-C'),
  WordNode(pos=(973, 990), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(974, 989), value='nativeBuildDir'),
  ]),
  WordNode(pos=(991, 1011), word='--strip-components=1'),
])


3123) export CATALINA_HOME="$PWD"

CommandNode(pos=(1116, 1143), parts=[
  WordNode(pos=(1116, 1122), word='export'),
  WordNode(pos=(1123, 1143), word='CATALINA_HOME=$PWD', parts=[
    ParameterNode(pos=(1138, 1142), value='PWD'),
  ]),
])


3124) cd "$nativeBuildDir/native"

CommandNode(pos=(1147, 1174), parts=[
  WordNode(pos=(1147, 1149), word='cd'),
  WordNode(pos=(1150, 1174), word='$nativeBuildDir/native', parts=[
    ParameterNode(pos=(1151, 1166), value='nativeBuildDir'),
  ]),
])


3125) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


3126) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


3127) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


3128) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


3129) ./configure    --build="$gnuArch"    --libdir="$TOMCAT_NATIVE_LIBDIR"    --prefix="$CATALINA_HOME"    --with-apr="$aprConfig"    --with-java-home="$JAVA_HOME"    --with-ssl=yes

CommandNode(pos=(1276, 1452), parts=[
  WordNode(pos=(1276, 1287), word='./configure'),
  WordNode(pos=(1291, 1309), word='--build=$gnuArch', parts=[
    ParameterNode(pos=(1300, 1308), value='gnuArch'),
  ]),
  WordNode(pos=(1313, 1345), word='--libdir=$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1323, 1344), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1349, 1374), word='--prefix=$CATALINA_HOME', parts=[
    ParameterNode(pos=(1359, 1373), value='CATALINA_HOME'),
  ]),
  WordNode(pos=(1378, 1401), word='--with-apr=$aprConfig', parts=[
    ParameterNode(pos=(1390, 1400), value='aprConfig'),
  ]),
  WordNode(pos=(1405, 1434), word='--with-java-home=$JAVA_HOME', parts=[
    ParameterNode(pos=(1423, 1433), value='JAVA_HOME'),
  ]),
  WordNode(pos=(1438, 1452), word='--with-ssl=yes'),
])


3130) rm -rf "$nativeBuildDir"

CommandNode(pos=(1497, 1521), parts=[
  WordNode(pos=(1497, 1499), word='rm'),
  WordNode(pos=(1500, 1503), word='-rf'),
  WordNode(pos=(1504, 1521), word='$nativeBuildDir', parts=[
    ParameterNode(pos=(1505, 1520), value='nativeBuildDir'),
  ]),
])


3131) [ -z "$savedAptMark" ]

CommandNode(pos=(1588, 1610), parts=[
  WordNode(pos=(1588, 1589), word='['),
  WordNode(pos=(1590, 1592), word='-z'),
  WordNode(pos=(1593, 1608), word='$savedAptMark', parts=[
    ParameterNode(pos=(1594, 1607), value='savedAptMark'),
  ]),
  WordNode(pos=(1609, 1610), word=']'),
])


3132) apt-mark manual $savedAptMark > /dev/null

CommandNode(pos=(1614, 1655), parts=[
  WordNode(pos=(1614, 1622), word='apt-mark'),
  WordNode(pos=(1623, 1629), word='manual'),
  WordNode(pos=(1630, 1643), word='$savedAptMark', parts=[
    ParameterNode(pos=(1630, 1643), value='savedAptMark'),
  ]),
  RedirectNode(output=
    WordNode(pos=(1646, 1655), word='/dev/null'), pos=(1644, 1655), type='>'),
])


3133) find "$TOMCAT_NATIVE_LIBDIR" -type f -executable -exec ldd '{}' ';'

CommandNode(pos=(1658, 1725), parts=[
  WordNode(pos=(1658, 1662), word='find'),
  WordNode(pos=(1663, 1686), word='$TOMCAT_NATIVE_LIBDIR', parts=[
    ParameterNode(pos=(1664, 1685), value='TOMCAT_NATIVE_LIBDIR'),
  ]),
  WordNode(pos=(1687, 1692), word='-type'),
  WordNode(pos=(1693, 1694), word='f'),
  WordNode(pos=(1695, 1706), word='-executable'),
  WordNode(pos=(1707, 1712), word='-exec'),
  WordNode(pos=(1713, 1716), word='ldd'),
  WordNode(pos=(1717, 1721), word='{}'),
  WordNode(pos=(1722, 1725), word=';'),
])


3134) echo "$nativeLines"

CommandNode(pos=(187, 206), parts=[
  WordNode(pos=(187, 191), word='echo'),
  WordNode(pos=(192, 206), word='$nativeLines', parts=[
    ParameterNode(pos=(193, 205), value='nativeLines'),
  ]),
])


3135) echo >&2 "$nativeLines"

CommandNode(pos=(280, 303), parts=[
  WordNode(pos=(280, 284), word='echo'),
  RedirectNode(output=2, pos=(285, 288), type='>&'),
  WordNode(pos=(289, 303), word='$nativeLines', parts=[
    ParameterNode(pos=(290, 302), value='nativeLines'),
  ]),
])


3136) wget -O haproxy.tar.gz "$HAPROXY_URL"

CommandNode(pos=(259, 296), parts=[
  WordNode(pos=(259, 263), word='wget'),
  WordNode(pos=(264, 266), word='-O'),
  WordNode(pos=(267, 281), word='haproxy.tar.gz'),
  WordNode(pos=(282, 296), word='$HAPROXY_URL', parts=[
    ParameterNode(pos=(283, 295), value='HAPROXY_URL'),
  ]),
])


3137) echo "$HAPROXY_SHA256 *haproxy.tar.gz"

CommandNode(pos=(301, 339), parts=[
  WordNode(pos=(301, 305), word='echo'),
  WordNode(pos=(306, 339), word='$HAPROXY_SHA256 *haproxy.tar.gz', parts=[
    ParameterNode(pos=(307, 322), value='HAPROXY_SHA256'),
  ]),
])


3138) make -C /usr/src/haproxy -j "$(nproc)" all $makeOpts

CommandNode(pos=(637, 689), parts=[
  WordNode(pos=(637, 641), word='make'),
  WordNode(pos=(642, 644), word='-C'),
  WordNode(pos=(645, 661), word='/usr/src/haproxy'),
  WordNode(pos=(662, 664), word='-j'),
  WordNode(pos=(665, 675), word='$(nproc)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(668, 673), parts=[
        WordNode(pos=(668, 673), word='nproc'),
      ]), pos=(666, 674)),
  ]),
  WordNode(pos=(676, 679), word='all'),
  WordNode(pos=(680, 689), word='$makeOpts', parts=[
    ParameterNode(pos=(680, 689), value='makeOpts'),
  ]),
])


3139) make -C /usr/src/haproxy install-bin $makeOpts

CommandNode(pos=(694, 740), parts=[
  WordNode(pos=(694, 698), word='make'),
  WordNode(pos=(699, 701), word='-C'),
  WordNode(pos=(702, 718), word='/usr/src/haproxy'),
  WordNode(pos=(719, 730), word='install-bin'),
  WordNode(pos=(731, 740), word='$makeOpts', parts=[
    ParameterNode(pos=(731, 740), value='makeOpts'),
  ]),
])


3140) [ -z "$savedAptMark" ]

CommandNode(pos=(925, 947), parts=[
  WordNode(pos=(925, 926), word='['),
  WordNode(pos=(927, 929), word='-z'),
  WordNode(pos=(930, 945), word='$savedAptMark', parts=[
    ParameterNode(pos=(931, 944), value='savedAptMark'),
  ]),
  WordNode(pos=(946, 947), word=']'),
])


3141) apt-mark manual $savedAptMark

CommandNode(pos=(951, 980), parts=[
  WordNode(pos=(951, 959), word='apt-mark'),
  WordNode(pos=(960, 966), word='manual'),
  WordNode(pos=(967, 980), word='$savedAptMark', parts=[
    ParameterNode(pos=(967, 980), value='savedAptMark'),
  ]),
])


3142) OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"

CommandNode(pos=(236, 319), parts=[
  AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
    ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
  ]),
])


3143) OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION"

CommandNode(pos=(322, 376), parts=[
  AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
    ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
  ]),
])


3144) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


3145) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc"

CommandNode(pos=(420, 515), parts=[
  WordNode(pos=(420, 424), word='wget'),
  WordNode(pos=(425, 435), word='--progress'),
  WordNode(pos=(436, 444), word='dot:giga'),
  WordNode(pos=(445, 462), word='--output-document'),
  WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
  ]),
])


3146) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


3147) wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL"

CommandNode(pos=(518, 605), parts=[
  WordNode(pos=(518, 522), word='wget'),
  WordNode(pos=(523, 533), word='--progress'),
  WordNode(pos=(534, 542), word='dot:giga'),
  WordNode(pos=(543, 560), word='--output-document'),
  WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
    ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
  ]),
])


3148) set -eux;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install --yes --no-install-recommends   autoconf   ca-certificates   dpkg-dev   gcc   gnupg   libncurses5-dev   make   wget  ;  rm -rf /var/lib/apt/lists/*;   OPENSSL_SOURCE_URL="https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz";  OPENSSL_PATH="/usr/local/src/openssl-$OPENSSL_VERSION";  OPENSSL_CONFIG_DIR=/usr/local/etc/ssl;   wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_SOURCE_URL.asc";  wget --progress dot:giga --output-document "$OPENSSL_PATH.tar.gz" "$OPENSSL_SOURCE_URL";  export GNUPGHOME="$(mktemp -d)";  for key in $OPENSSL_PGP_KEY_IDS; do   gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key";  done;  gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz";  gpgconf --kill all;  rm -rf "$GNUPGHOME";  echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz" | sha256sum --check --strict -;  mkdir -p "$OPENSSL_PATH";  tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1;   cd "$OPENSSL_PATH";  debMultiarch="$(dpkg-architecture --query DEB_HOST_MULTIARCH)";  MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch";  make -j "$(getconf _NPROCESSORS_ONLN)";  make install_sw install_ssldirs;  cd ..;  rm -rf "$OPENSSL_PATH"*;  echo '/usr/local/lib' > /etc/ld.so.conf.d/000-openssl-libc.conf;  ldconfig;  rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private";  ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR";  openssl version;   OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz";  OTP_PATH="/usr/local/src/otp-$OTP_VERSION";   mkdir -p "$OTP_PATH";  wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL";  echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz" | sha256sum --check --strict -;  tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1;   cd "$OTP_PATH";  export ERL_TOP="$OTP_PATH";  ./otp_build autoconf;  CFLAGS="$(dpkg-buildflags --get CFLAGS)"; export CFLAGS;  hostArch="$(dpkg-architecture --query DEB_HOST_GNU_TYPE)";  buildArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";  dpkgArch="$(dpkg --print-architecture)"; dpkgArch="${dpkgArch##*-}";  ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx  ;  make -j "$(getconf _NPROCESSORS_ONLN)" GEN_OPT_FLGS="-O2 -fno-strict-aliasing";  make install;  cd ..;  rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src  ;   apt-mark auto '.*' > /dev/null;  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;  find /usr/local -type f -executable -exec ldd '{}' ';'   | awk '/=>/ { print $(NF-1) }'   | sort -u   | xargs -r dpkg-query --search   | cut -d: -f1   | sort -u   | xargs -r apt-mark manual  ;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   openssl version;  erl -noshell -eval 'io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'

ListNode(pos=(0, 3761), parts=[
  CommandNode(pos=(0, 8), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 8), word='-eux'),
  ]),
  OperatorNode(op=';', pos=(8, 9)),
  CommandNode(pos=(12, 49), parts=[
    AssignmentNode(pos=(12, 49), word='savedAptMark=$(apt-mark showmanual)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(28, 47), parts=[
          WordNode(pos=(28, 36), word='apt-mark'),
          WordNode(pos=(37, 47), word='showmanual'),
        ]), pos=(26, 48)),
    ]),
  ]),
  OperatorNode(op=';', pos=(49, 50)),
  CommandNode(pos=(52, 66), parts=[
    WordNode(pos=(52, 59), word='apt-get'),
    WordNode(pos=(60, 66), word='update'),
  ]),
  OperatorNode(op=';', pos=(66, 67)),
  CommandNode(pos=(69, 200), parts=[
    WordNode(pos=(69, 76), word='apt-get'),
    WordNode(pos=(77, 84), word='install'),
    WordNode(pos=(85, 90), word='--yes'),
    WordNode(pos=(91, 114), word='--no-install-recommends'),
    WordNode(pos=(117, 125), word='autoconf'),
    WordNode(pos=(128, 143), word='ca-certificates'),
    WordNode(pos=(146, 154), word='dpkg-dev'),
    WordNode(pos=(157, 160), word='gcc'),
    WordNode(pos=(163, 168), word='gnupg'),
    WordNode(pos=(171, 186), word='libncurses5-dev'),
    WordNode(pos=(189, 193), word='make'),
    WordNode(pos=(196, 200), word='wget'),
  ]),
  OperatorNode(op=';', pos=(202, 203)),
  CommandNode(pos=(205, 232), parts=[
    WordNode(pos=(205, 207), word='rm'),
    WordNode(pos=(208, 211), word='-rf'),
    WordNode(pos=(212, 232), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(232, 233)),
  CommandNode(pos=(236, 319), parts=[
    AssignmentNode(pos=(236, 319), word='OPENSSL_SOURCE_URL=https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz', parts=[
      ParameterNode(pos=(295, 311), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(319, 320)),
  CommandNode(pos=(322, 376), parts=[
    AssignmentNode(pos=(322, 376), word='OPENSSL_PATH=/usr/local/src/openssl-$OPENSSL_VERSION', parts=[
      ParameterNode(pos=(359, 375), value='OPENSSL_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(376, 377)),
  CommandNode(pos=(379, 416), parts=[
    AssignmentNode(pos=(379, 416), word='OPENSSL_CONFIG_DIR=/usr/local/etc/ssl'),
  ]),
  OperatorNode(op=';', pos=(416, 417)),
  CommandNode(pos=(420, 515), parts=[
    WordNode(pos=(420, 424), word='wget'),
    WordNode(pos=(425, 435), word='--progress'),
    WordNode(pos=(436, 444), word='dot:giga'),
    WordNode(pos=(445, 462), word='--output-document'),
    WordNode(pos=(463, 489), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(464, 477), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(490, 515), word='$OPENSSL_SOURCE_URL.asc', parts=[
      ParameterNode(pos=(491, 510), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(515, 516)),
  CommandNode(pos=(518, 605), parts=[
    WordNode(pos=(518, 522), word='wget'),
    WordNode(pos=(523, 533), word='--progress'),
    WordNode(pos=(534, 542), word='dot:giga'),
    WordNode(pos=(543, 560), word='--output-document'),
    WordNode(pos=(561, 583), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(562, 575), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(584, 605), word='$OPENSSL_SOURCE_URL', parts=[
      ParameterNode(pos=(585, 604), value='OPENSSL_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(605, 606)),
  CommandNode(pos=(608, 639), parts=[
    WordNode(pos=(608, 614), word='export'),
    WordNode(pos=(615, 639), word='GNUPGHOME=$(mktemp -d)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(628, 637), parts=[
          WordNode(pos=(628, 634), word='mktemp'),
          WordNode(pos=(635, 637), word='-d'),
        ]), pos=(626, 638)),
    ]),
  ]),
  OperatorNode(op=';', pos=(639, 640)),
  CompoundNode(list=[
    ForNode(pos=(642, 746), parts=[
      ReservedwordNode(pos=(642, 645), word='for'),
      WordNode(pos=(646, 649), word='key'),
      ReservedwordNode(pos=(650, 652), word='in'),
      WordNode(pos=(653, 673), word='$OPENSSL_PGP_KEY_IDS', parts=[
        ParameterNode(pos=(653, 673), value='OPENSSL_PGP_KEY_IDS'),
      ]),
      ReservedwordNode(pos=(673, 674), word=';'),
      ReservedwordNode(pos=(675, 677), word='do'),
      ListNode(pos=(680, 740), parts=[
          CommandNode(pos=(680, 739), parts=[
            WordNode(pos=(680, 683), word='gpg'),
            WordNode(pos=(684, 691), word='--batch'),
            WordNode(pos=(692, 703), word='--keyserver'),
            WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
              ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
            ]),
            WordNode(pos=(721, 732), word='--recv-keys'),
            WordNode(pos=(733, 739), word='$key', parts=[
              ParameterNode(pos=(734, 738), value='key'),
            ]),
          ]),
          OperatorNode(op=';', pos=(739, 740)),
        ]),
      ReservedwordNode(pos=(742, 746), word='done'),
    ]),
  ], pos=(642, 746)),
  OperatorNode(op=';', pos=(746, 747)),
  CommandNode(pos=(749, 819), parts=[
    WordNode(pos=(749, 752), word='gpg'),
    WordNode(pos=(753, 760), word='--batch'),
    WordNode(pos=(761, 769), word='--verify'),
    WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
      ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(819, 820)),
  CommandNode(pos=(822, 840), parts=[
    WordNode(pos=(822, 829), word='gpgconf'),
    WordNode(pos=(830, 836), word='--kill'),
    WordNode(pos=(837, 840), word='all'),
  ]),
  OperatorNode(op=';', pos=(840, 841)),
  CommandNode(pos=(843, 862), parts=[
    WordNode(pos=(843, 845), word='rm'),
    WordNode(pos=(846, 849), word='-rf'),
    WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
      ParameterNode(pos=(851, 861), value='GNUPGHOME'),
    ]),
  ]),
  OperatorNode(op=';', pos=(862, 863)),
  PipelineNode(pos=(865, 947), parts=[
    CommandNode(pos=(865, 916), parts=[
      WordNode(pos=(865, 869), word='echo'),
      WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
        ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
        ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(917, 918)),
    CommandNode(pos=(919, 947), parts=[
      WordNode(pos=(919, 928), word='sha256sum'),
      WordNode(pos=(929, 936), word='--check'),
      WordNode(pos=(937, 945), word='--strict'),
      WordNode(pos=(946, 947), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(947, 948)),
  CommandNode(pos=(950, 974), parts=[
    WordNode(pos=(950, 955), word='mkdir'),
    WordNode(pos=(956, 958), word='-p'),
    WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(974, 975)),
  CommandNode(pos=(977, 1069), parts=[
    WordNode(pos=(977, 980), word='tar'),
    WordNode(pos=(981, 990), word='--extract'),
    WordNode(pos=(991, 997), word='--file'),
    WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
      ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1021, 1032), word='--directory'),
    WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
    ]),
    WordNode(pos=(1049, 1067), word='--strip-components'),
    WordNode(pos=(1068, 1069), word='1'),
  ]),
  OperatorNode(op=';', pos=(1069, 1070)),
  CommandNode(pos=(1073, 1091), parts=[
    WordNode(pos=(1073, 1075), word='cd'),
    WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
      ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1091, 1092)),
  CommandNode(pos=(1094, 1156), parts=[
    AssignmentNode(pos=(1094, 1156), word='debMultiarch=$(dpkg-architecture --query DEB_HOST_MULTIARCH)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1110, 1154), parts=[
          WordNode(pos=(1110, 1127), word='dpkg-architecture'),
          WordNode(pos=(1128, 1135), word='--query'),
          WordNode(pos=(1136, 1154), word='DEB_HOST_MULTIARCH'),
        ]), pos=(1108, 1155)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1156, 1157)),
  CommandNode(pos=(1159, 1337), parts=[
    AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1170, 1213), parts=[
          WordNode(pos=(1170, 1187), word='dpkg-architecture'),
          WordNode(pos=(1188, 1195), word='--query'),
          WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
        ]), pos=(1168, 1214)),
    ]),
    AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
    AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
    AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
    WordNode(pos=(1265, 1273), word='./config'),
    WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
      ParameterNode(pos=(1323, 1336), value='debMultiarch'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1337, 1338)),
  CommandNode(pos=(1340, 1378), parts=[
    WordNode(pos=(1340, 1344), word='make'),
    WordNode(pos=(1345, 1347), word='-j'),
    WordNode(pos=(1348, 1378), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(1351, 1376), parts=[
          WordNode(pos=(1351, 1358), word='getconf'),
          WordNode(pos=(1359, 1376), word='_NPROCESSORS_ONLN'),
        ]), pos=(1349, 1377)),
    ]),
  ]),
  OperatorNode(op=';', pos=(1378, 1379)),
  CommandNode(pos=(1381, 1412), parts=[
    WordNode(pos=(1381, 1385), word='make'),
    WordNode(pos=(1386, 1396), word='install_sw'),
    WordNode(pos=(1397, 1412), word='install_ssldirs'),
  ]),
  OperatorNode(op=';', pos=(1412, 1413)),
  CommandNode(pos=(1415, 1420), parts=[
    WordNode(pos=(1415, 1417), word='cd'),
    WordNode(pos=(1418, 1420), word='..'),
  ]),
  OperatorNode(op=';', pos=(1420, 1421)),
  CommandNode(pos=(1423, 1446), parts=[
    WordNode(pos=(1423, 1425), word='rm'),
    WordNode(pos=(1426, 1429), word='-rf'),
    WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
      ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1446, 1447)),
  CommandNode(pos=(1449, 1512), parts=[
    WordNode(pos=(1449, 1453), word='echo'),
    WordNode(pos=(1454, 1470), word='/usr/local/lib'),
    RedirectNode(output=
      WordNode(pos=(1473, 1512), word='/etc/ld.so.conf.d/000-openssl-libc.conf'), pos=(1471, 1512), type='>'),
  ]),
  OperatorNode(op=';', pos=(1512, 1513)),
  CommandNode(pos=(1515, 1523), parts=[
    WordNode(pos=(1515, 1523), word='ldconfig'),
  ]),
  OperatorNode(op=';', pos=(1523, 1524)),
  CommandNode(pos=(1526, 1589), parts=[
    WordNode(pos=(1526, 1531), word='rmdir'),
    WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
      ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
    ]),
    WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
      ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1589, 1590)),
  CommandNode(pos=(1592, 1652), parts=[
    WordNode(pos=(1592, 1594), word='ln'),
    WordNode(pos=(1595, 1598), word='-sf'),
    WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
    WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
    WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
      ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1652, 1653)),
  CommandNode(pos=(1655, 1670), parts=[
    WordNode(pos=(1655, 1662), word='openssl'),
    WordNode(pos=(1663, 1670), word='version'),
  ]),
  OperatorNode(op=';', pos=(1670, 1671)),
  CommandNode(pos=(1674, 1752), parts=[
    AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
      ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1752, 1753)),
  CommandNode(pos=(1755, 1797), parts=[
    AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
      ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1797, 1798)),
  CommandNode(pos=(1801, 1821), parts=[
    WordNode(pos=(1801, 1806), word='mkdir'),
    WordNode(pos=(1807, 1809), word='-p'),
    WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
      ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1821, 1822)),
  CommandNode(pos=(1824, 1903), parts=[
    WordNode(pos=(1824, 1828), word='wget'),
    WordNode(pos=(1829, 1839), word='--progress'),
    WordNode(pos=(1840, 1848), word='dot:giga'),
    WordNode(pos=(1849, 1866), word='--output-document'),
    WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
    ]),
    WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
      ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1903, 1904)),
  PipelineNode(pos=(1906, 1980), parts=[
    CommandNode(pos=(1906, 1949), parts=[
      WordNode(pos=(1906, 1910), word='echo'),
      WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
        ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
        ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
      ]),
    ]),
    PipeNode(pipe='|', pos=(1950, 1951)),
    CommandNode(pos=(1952, 1980), parts=[
      WordNode(pos=(1952, 1961), word='sha256sum'),
      WordNode(pos=(1962, 1969), word='--check'),
      WordNode(pos=(1970, 1978), word='--strict'),
      WordNode(pos=(1979, 1980), word='-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(1980, 1981)),
  CommandNode(pos=(1983, 2067), parts=[
    WordNode(pos=(1983, 1986), word='tar'),
    WordNode(pos=(1987, 1996), word='--extract'),
    WordNode(pos=(1997, 2003), word='--file'),
    WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
      ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
    ]),
    WordNode(pos=(2023, 2034), word='--directory'),
    WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
    ]),
    WordNode(pos=(2047, 2065), word='--strip-components'),
    WordNode(pos=(2066, 2067), word='1'),
  ]),
  OperatorNode(op=';', pos=(2067, 2068)),
  CommandNode(pos=(2071, 2085), parts=[
    WordNode(pos=(2071, 2073), word='cd'),
    WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
      ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2085, 2086)),
  CommandNode(pos=(2088, 2114), parts=[
    WordNode(pos=(2088, 2094), word='export'),
    WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
      ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2114, 2115)),
  CommandNode(pos=(2117, 2137), parts=[
    WordNode(pos=(2117, 2128), word='./otp_build'),
    WordNode(pos=(2129, 2137), word='autoconf'),
  ]),
  OperatorNode(op=';', pos=(2137, 2138)),
  CommandNode(pos=(2140, 2180), parts=[
    AssignmentNode(pos=(2140, 2180), word='CFLAGS=$(dpkg-buildflags --get CFLAGS)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2150, 2178), parts=[
          WordNode(pos=(2150, 2165), word='dpkg-buildflags'),
          WordNode(pos=(2166, 2171), word='--get'),
          WordNode(pos=(2172, 2178), word='CFLAGS'),
        ]), pos=(2148, 2179)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2180, 2181)),
  CommandNode(pos=(2182, 2195), parts=[
    WordNode(pos=(2182, 2188), word='export'),
    WordNode(pos=(2189, 2195), word='CFLAGS'),
  ]),
  OperatorNode(op=';', pos=(2195, 2196)),
  CommandNode(pos=(2198, 2255), parts=[
    AssignmentNode(pos=(2198, 2255), word='hostArch=$(dpkg-architecture --query DEB_HOST_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2210, 2253), parts=[
          WordNode(pos=(2210, 2227), word='dpkg-architecture'),
          WordNode(pos=(2228, 2235), word='--query'),
          WordNode(pos=(2236, 2253), word='DEB_HOST_GNU_TYPE'),
        ]), pos=(2208, 2254)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2255, 2256)),
  CommandNode(pos=(2258, 2317), parts=[
    AssignmentNode(pos=(2258, 2317), word='buildArch=$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2271, 2315), parts=[
          WordNode(pos=(2271, 2288), word='dpkg-architecture'),
          WordNode(pos=(2289, 2296), word='--query'),
          WordNode(pos=(2297, 2315), word='DEB_BUILD_GNU_TYPE'),
        ]), pos=(2269, 2316)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2317, 2318)),
  CommandNode(pos=(2320, 2359), parts=[
    AssignmentNode(pos=(2320, 2359), word='dpkgArch=$(dpkg --print-architecture)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(2332, 2357), parts=[
          WordNode(pos=(2332, 2336), word='dpkg'),
          WordNode(pos=(2337, 2357), word='--print-architecture'),
        ]), pos=(2330, 2358)),
    ]),
  ]),
  OperatorNode(op=';', pos=(2359, 2360)),
  CommandNode(pos=(2361, 2387), parts=[
    AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
      ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
    ]),
  ]),
  OperatorNode(op=';', pos=(2387, 2388)),
  CommandNode(pos=(2390, 3072), parts=[
    WordNode(pos=(2390, 2401), word='./configure'),
    WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
      ParameterNode(pos=(2412, 2421), value='hostArch'),
    ]),
    WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
      ParameterNode(pos=(2434, 2444), value='buildArch'),
    ]),
    WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
    WordNode(pos=(2476, 2490), word='--disable-hipe'),
    WordNode(pos=(2493, 2507), word='--disable-sctp'),
    WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
    WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
    WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
    WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
    WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
    WordNode(pos=(2629, 2649), word='--enable-smp-support'),
    WordNode(pos=(2652, 2668), word='--enable-threads'),
    WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
    WordNode(pos=(2708, 2729), word='--without-common_test'),
    WordNode(pos=(2732, 2750), word='--without-debugger'),
    WordNode(pos=(2753, 2771), word='--without-dialyzer'),
    WordNode(pos=(2774, 2792), word='--without-diameter'),
    WordNode(pos=(2795, 2809), word='--without-edoc'),
    WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
    WordNode(pos=(2835, 2858), word='--without-erl_interface'),
    WordNode(pos=(2861, 2873), word='--without-et'),
    WordNode(pos=(2876, 2891), word='--without-eunit'),
    WordNode(pos=(2894, 2907), word='--without-ftp'),
    WordNode(pos=(2910, 2924), word='--without-hipe'),
    WordNode(pos=(2927, 2947), word='--without-jinterface'),
    WordNode(pos=(2950, 2966), word='--without-megaco'),
    WordNode(pos=(2969, 2987), word='--without-observer'),
    WordNode(pos=(2990, 3004), word='--without-odbc'),
    WordNode(pos=(3007, 3024), word='--without-reltool'),
    WordNode(pos=(3027, 3040), word='--without-ssh'),
    WordNode(pos=(3043, 3057), word='--without-tftp'),
    WordNode(pos=(3060, 3072), word='--without-wx'),
  ]),
  OperatorNode(op=';', pos=(3074, 3075)),
  CommandNode(pos=(3077, 3155), parts=[
    WordNode(pos=(3077, 3081), word='make'),
    WordNode(pos=(3082, 3084), word='-j'),
    WordNode(pos=(3085, 3115), word='$(getconf _NPROCESSORS_ONLN)', parts=[
      CommandsubstitutionNode(command=
        CommandNode(pos=(3088, 3113), parts=[
          WordNode(pos=(3088, 3095), word='getconf'),
          WordNode(pos=(3096, 3113), word='_NPROCESSORS_ONLN'),
        ]), pos=(3086, 3114)),
    ]),
    WordNode(pos=(3116, 3155), word='GEN_OPT_FLGS=-O2 -fno-strict-aliasing'),
  ]),
  OperatorNode(op=';', pos=(3155, 3156)),
  CommandNode(pos=(3158, 3170), parts=[
    WordNode(pos=(3158, 3162), word='make'),
    WordNode(pos=(3163, 3170), word='install'),
  ]),
  OperatorNode(op=';', pos=(3170, 3171)),
  CommandNode(pos=(3173, 3178), parts=[
    WordNode(pos=(3173, 3175), word='cd'),
    WordNode(pos=(3176, 3178), word='..'),
  ]),
  OperatorNode(op=';', pos=(3178, 3179)),
  CommandNode(pos=(3181, 3275), parts=[
    WordNode(pos=(3181, 3183), word='rm'),
    WordNode(pos=(3184, 3187), word='-rf'),
    WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
      ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
    ]),
    WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
    WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
  ]),
  OperatorNode(op=';', pos=(3277, 3278)),
  CommandNode(pos=(3281, 3311), parts=[
    WordNode(pos=(3281, 3289), word='apt-mark'),
    WordNode(pos=(3290, 3294), word='auto'),
    WordNode(pos=(3295, 3299), word='.*'),
    RedirectNode(output=
      WordNode(pos=(3302, 3311), word='/dev/null'), pos=(3300, 3311), type='>'),
  ]),
  OperatorNode(op=';', pos=(3311, 3312)),
  CommandNode(pos=(3314, 3336), parts=[
    WordNode(pos=(3314, 3315), word='['),
    WordNode(pos=(3316, 3318), word='-z'),
    WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
      ParameterNode(pos=(3320, 3333), value='savedAptMark'),
    ]),
    WordNode(pos=(3335, 3336), word=']'),
  ]),
  OperatorNode(op='||', pos=(3337, 3339)),
  CommandNode(pos=(3340, 3369), parts=[
    WordNode(pos=(3340, 3348), word='apt-mark'),
    WordNode(pos=(3349, 3355), word='manual'),
    WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
      ParameterNode(pos=(3356, 3369), value='savedAptMark'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3369, 3370)),
  PipelineNode(pos=(3372, 3561), parts=[
    CommandNode(pos=(3372, 3426), parts=[
      WordNode(pos=(3372, 3376), word='find'),
      WordNode(pos=(3377, 3387), word='/usr/local'),
      WordNode(pos=(3388, 3393), word='-type'),
      WordNode(pos=(3394, 3395), word='f'),
      WordNode(pos=(3396, 3407), word='-executable'),
      WordNode(pos=(3408, 3413), word='-exec'),
      WordNode(pos=(3414, 3417), word='ldd'),
      WordNode(pos=(3418, 3422), word='{}'),
      WordNode(pos=(3423, 3426), word=';'),
    ]),
    PipeNode(pipe='|', pos=(3429, 3430)),
    CommandNode(pos=(3431, 3459), parts=[
      WordNode(pos=(3431, 3434), word='awk'),
      WordNode(pos=(3435, 3459), word='/=>/ { print $(NF-1) }'),
    ]),
    PipeNode(pipe='|', pos=(3462, 3463)),
    CommandNode(pos=(3464, 3471), parts=[
      WordNode(pos=(3464, 3468), word='sort'),
      WordNode(pos=(3469, 3471), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3474, 3475)),
    CommandNode(pos=(3476, 3504), parts=[
      WordNode(pos=(3476, 3481), word='xargs'),
      WordNode(pos=(3482, 3484), word='-r'),
      WordNode(pos=(3485, 3495), word='dpkg-query'),
      WordNode(pos=(3496, 3504), word='--search'),
    ]),
    PipeNode(pipe='|', pos=(3507, 3508)),
    CommandNode(pos=(3509, 3520), parts=[
      WordNode(pos=(3509, 3512), word='cut'),
      WordNode(pos=(3513, 3516), word='-d:'),
      WordNode(pos=(3517, 3520), word='-f1'),
    ]),
    PipeNode(pipe='|', pos=(3523, 3524)),
    CommandNode(pos=(3525, 3532), parts=[
      WordNode(pos=(3525, 3529), word='sort'),
      WordNode(pos=(3530, 3532), word='-u'),
    ]),
    PipeNode(pipe='|', pos=(3535, 3536)),
    CommandNode(pos=(3537, 3561), parts=[
      WordNode(pos=(3537, 3542), word='xargs'),
      WordNode(pos=(3543, 3545), word='-r'),
      WordNode(pos=(3546, 3554), word='apt-mark'),
      WordNode(pos=(3555, 3561), word='manual'),
    ]),
  ]),
  OperatorNode(op=';', pos=(3563, 3564)),
  CommandNode(pos=(3566, 3642), parts=[
    WordNode(pos=(3566, 3573), word='apt-get'),
    WordNode(pos=(3574, 3579), word='purge'),
    WordNode(pos=(3580, 3582), word='-y'),
    WordNode(pos=(3583, 3596), word='--auto-remove'),
    WordNode(pos=(3597, 3599), word='-o'),
    WordNode(pos=(3600, 3642), word='APT::AutoRemove::RecommendsImportant=false'),
  ]),
  OperatorNode(op=';', pos=(3642, 3643)),
  CommandNode(pos=(3646, 3661), parts=[
    WordNode(pos=(3646, 3653), word='openssl'),
    WordNode(pos=(3654, 3661), word='version'),
  ]),
  OperatorNode(op=';', pos=(3661, 3662)),
  CommandNode(pos=(3664, 3761), parts=[
    WordNode(pos=(3664, 3667), word='erl'),
    WordNode(pos=(3668, 3676), word='-noshell'),
    WordNode(pos=(3677, 3682), word='-eval'),
    WordNode(pos=(3683, 3761), word='io:format("~p~n~n~p~n~n", [crypto:supports(), ssl:versions()]), init:stop().'),
  ]),
])


3149) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


3150) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$key"

CommandNode(pos=(680, 739), parts=[
  WordNode(pos=(680, 683), word='gpg'),
  WordNode(pos=(684, 691), word='--batch'),
  WordNode(pos=(692, 703), word='--keyserver'),
  WordNode(pos=(704, 720), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(705, 719), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(721, 732), word='--recv-keys'),
  WordNode(pos=(733, 739), word='$key', parts=[
    ParameterNode(pos=(734, 738), value='key'),
  ]),
])


3151) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


3152) gpg --batch --verify "$OPENSSL_PATH.tar.gz.asc" "$OPENSSL_PATH.tar.gz"

CommandNode(pos=(749, 819), parts=[
  WordNode(pos=(749, 752), word='gpg'),
  WordNode(pos=(753, 760), word='--batch'),
  WordNode(pos=(761, 769), word='--verify'),
  WordNode(pos=(770, 796), word='$OPENSSL_PATH.tar.gz.asc', parts=[
    ParameterNode(pos=(771, 784), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(797, 819), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(798, 811), value='OPENSSL_PATH'),
  ]),
])


3153) rm -rf "$GNUPGHOME"

CommandNode(pos=(843, 862), parts=[
  WordNode(pos=(843, 845), word='rm'),
  WordNode(pos=(846, 849), word='-rf'),
  WordNode(pos=(850, 862), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(851, 861), value='GNUPGHOME'),
  ]),
])


3154) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


3155) echo "$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz"

CommandNode(pos=(865, 916), parts=[
  WordNode(pos=(865, 869), word='echo'),
  WordNode(pos=(870, 916), word='$OPENSSL_SOURCE_SHA256 *$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(871, 893), value='OPENSSL_SOURCE_SHA256'),
    ParameterNode(pos=(895, 908), value='OPENSSL_PATH'),
  ]),
])


3156) mkdir -p "$OPENSSL_PATH"

CommandNode(pos=(950, 974), parts=[
  WordNode(pos=(950, 955), word='mkdir'),
  WordNode(pos=(956, 958), word='-p'),
  WordNode(pos=(959, 974), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(960, 973), value='OPENSSL_PATH'),
  ]),
])


3157) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


3158) tar --extract --file "$OPENSSL_PATH.tar.gz" --directory "$OPENSSL_PATH" --strip-components 1

CommandNode(pos=(977, 1069), parts=[
  WordNode(pos=(977, 980), word='tar'),
  WordNode(pos=(981, 990), word='--extract'),
  WordNode(pos=(991, 997), word='--file'),
  WordNode(pos=(998, 1020), word='$OPENSSL_PATH.tar.gz', parts=[
    ParameterNode(pos=(999, 1012), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1021, 1032), word='--directory'),
  WordNode(pos=(1033, 1048), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1034, 1047), value='OPENSSL_PATH'),
  ]),
  WordNode(pos=(1049, 1067), word='--strip-components'),
  WordNode(pos=(1068, 1069), word='1'),
])


3159) cd "$OPENSSL_PATH"

CommandNode(pos=(1073, 1091), parts=[
  WordNode(pos=(1073, 1075), word='cd'),
  WordNode(pos=(1076, 1091), word='$OPENSSL_PATH', parts=[
    ParameterNode(pos=(1077, 1090), value='OPENSSL_PATH'),
  ]),
])


3160) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


3161) MACHINE="$(dpkg-architecture --query DEB_BUILD_GNU_CPU)"  RELEASE="4.x.y-z"  SYSTEM='Linux'  BUILD='???'  ./config --openssldir="$OPENSSL_CONFIG_DIR" --libdir="lib/$debMultiarch"

CommandNode(pos=(1159, 1337), parts=[
  AssignmentNode(pos=(1159, 1215), word='MACHINE=$(dpkg-architecture --query DEB_BUILD_GNU_CPU)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(1170, 1213), parts=[
        WordNode(pos=(1170, 1187), word='dpkg-architecture'),
        WordNode(pos=(1188, 1195), word='--query'),
        WordNode(pos=(1196, 1213), word='DEB_BUILD_GNU_CPU'),
      ]), pos=(1168, 1214)),
  ]),
  AssignmentNode(pos=(1217, 1234), word='RELEASE=4.x.y-z'),
  AssignmentNode(pos=(1236, 1250), word='SYSTEM=Linux'),
  AssignmentNode(pos=(1252, 1263), word='BUILD=???'),
  WordNode(pos=(1265, 1273), word='./config'),
  WordNode(pos=(1274, 1308), word='--openssldir=$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1288, 1307), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1309, 1337), word='--libdir=lib/$debMultiarch', parts=[
    ParameterNode(pos=(1323, 1336), value='debMultiarch'),
  ]),
])


3162) rm -rf "$OPENSSL_PATH"*

CommandNode(pos=(1423, 1446), parts=[
  WordNode(pos=(1423, 1425), word='rm'),
  WordNode(pos=(1426, 1429), word='-rf'),
  WordNode(pos=(1430, 1446), word='$OPENSSL_PATH*', parts=[
    ParameterNode(pos=(1431, 1444), value='OPENSSL_PATH'),
  ]),
])


3163) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


3164) rmdir "$OPENSSL_CONFIG_DIR/certs" "$OPENSSL_CONFIG_DIR/private"

CommandNode(pos=(1526, 1589), parts=[
  WordNode(pos=(1526, 1531), word='rmdir'),
  WordNode(pos=(1532, 1559), word='$OPENSSL_CONFIG_DIR/certs', parts=[
    ParameterNode(pos=(1533, 1552), value='OPENSSL_CONFIG_DIR'),
  ]),
  WordNode(pos=(1560, 1589), word='$OPENSSL_CONFIG_DIR/private', parts=[
    ParameterNode(pos=(1561, 1580), value='OPENSSL_CONFIG_DIR'),
  ]),
])


3165) ln -sf /etc/ssl/certs /etc/ssl/private "$OPENSSL_CONFIG_DIR"

CommandNode(pos=(1592, 1652), parts=[
  WordNode(pos=(1592, 1594), word='ln'),
  WordNode(pos=(1595, 1598), word='-sf'),
  WordNode(pos=(1599, 1613), word='/etc/ssl/certs'),
  WordNode(pos=(1614, 1630), word='/etc/ssl/private'),
  WordNode(pos=(1631, 1652), word='$OPENSSL_CONFIG_DIR', parts=[
    ParameterNode(pos=(1632, 1651), value='OPENSSL_CONFIG_DIR'),
  ]),
])


3166) OTP_SOURCE_URL="https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz"

CommandNode(pos=(1674, 1752), parts=[
  AssignmentNode(pos=(1674, 1752), word='OTP_SOURCE_URL=https://github.com/erlang/otp/archive/OTP-$OTP_VERSION.tar.gz', parts=[
    ParameterNode(pos=(1732, 1744), value='OTP_VERSION'),
  ]),
])


3167) OTP_PATH="/usr/local/src/otp-$OTP_VERSION"

CommandNode(pos=(1755, 1797), parts=[
  AssignmentNode(pos=(1755, 1797), word='OTP_PATH=/usr/local/src/otp-$OTP_VERSION', parts=[
    ParameterNode(pos=(1784, 1796), value='OTP_VERSION'),
  ]),
])


3168) mkdir -p "$OTP_PATH"

CommandNode(pos=(1801, 1821), parts=[
  WordNode(pos=(1801, 1806), word='mkdir'),
  WordNode(pos=(1807, 1809), word='-p'),
  WordNode(pos=(1810, 1821), word='$OTP_PATH', parts=[
    ParameterNode(pos=(1811, 1820), value='OTP_PATH'),
  ]),
])


3169) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


3170) wget --progress dot:giga --output-document "$OTP_PATH.tar.gz" "$OTP_SOURCE_URL"

CommandNode(pos=(1824, 1903), parts=[
  WordNode(pos=(1824, 1828), word='wget'),
  WordNode(pos=(1829, 1839), word='--progress'),
  WordNode(pos=(1840, 1848), word='dot:giga'),
  WordNode(pos=(1849, 1866), word='--output-document'),
  WordNode(pos=(1867, 1885), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1868, 1877), value='OTP_PATH'),
  ]),
  WordNode(pos=(1886, 1903), word='$OTP_SOURCE_URL', parts=[
    ParameterNode(pos=(1887, 1902), value='OTP_SOURCE_URL'),
  ]),
])


3171) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


3172) echo "$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz"

CommandNode(pos=(1906, 1949), parts=[
  WordNode(pos=(1906, 1910), word='echo'),
  WordNode(pos=(1911, 1949), word='$OTP_SOURCE_SHA256 *$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(1912, 1930), value='OTP_SOURCE_SHA256'),
    ParameterNode(pos=(1932, 1941), value='OTP_PATH'),
  ]),
])


3173) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


3174) tar --extract --file "$OTP_PATH.tar.gz" --directory "$OTP_PATH" --strip-components 1

CommandNode(pos=(1983, 2067), parts=[
  WordNode(pos=(1983, 1986), word='tar'),
  WordNode(pos=(1987, 1996), word='--extract'),
  WordNode(pos=(1997, 2003), word='--file'),
  WordNode(pos=(2004, 2022), word='$OTP_PATH.tar.gz', parts=[
    ParameterNode(pos=(2005, 2014), value='OTP_PATH'),
  ]),
  WordNode(pos=(2023, 2034), word='--directory'),
  WordNode(pos=(2035, 2046), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2036, 2045), value='OTP_PATH'),
  ]),
  WordNode(pos=(2047, 2065), word='--strip-components'),
  WordNode(pos=(2066, 2067), word='1'),
])


3175) cd "$OTP_PATH"

CommandNode(pos=(2071, 2085), parts=[
  WordNode(pos=(2071, 2073), word='cd'),
  WordNode(pos=(2074, 2085), word='$OTP_PATH', parts=[
    ParameterNode(pos=(2075, 2084), value='OTP_PATH'),
  ]),
])


3176) export ERL_TOP="$OTP_PATH"

CommandNode(pos=(2088, 2114), parts=[
  WordNode(pos=(2088, 2094), word='export'),
  WordNode(pos=(2095, 2114), word='ERL_TOP=$OTP_PATH', parts=[
    ParameterNode(pos=(2104, 2113), value='OTP_PATH'),
  ]),
])


3177) dpkgArch="${dpkgArch##*-}"

CommandNode(pos=(2361, 2387), parts=[
  AssignmentNode(pos=(2361, 2387), word='dpkgArch=${dpkgArch##*-}', parts=[
    ParameterNode(pos=(2371, 2386), value='dpkgArch##*-'),
  ]),
])


3178) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


3179) ./configure   --host="$hostArch"   --build="$buildArch"   --disable-dynamic-ssl-lib   --disable-hipe   --disable-sctp   --disable-silent-rules   --enable-clock-gettime   --enable-hybrid-heap   --enable-kernel-poll   --enable-shared-zlib   --enable-smp-support   --enable-threads   --with-microstate-accounting=extra   --without-common_test   --without-debugger   --without-dialyzer   --without-diameter   --without-edoc   --without-erl_docgen   --without-erl_interface   --without-et   --without-eunit   --without-ftp   --without-hipe   --without-jinterface   --without-megaco   --without-observer   --without-odbc   --without-reltool   --without-ssh   --without-tftp   --without-wx

CommandNode(pos=(2390, 3072), parts=[
  WordNode(pos=(2390, 2401), word='./configure'),
  WordNode(pos=(2404, 2422), word='--host=$hostArch', parts=[
    ParameterNode(pos=(2412, 2421), value='hostArch'),
  ]),
  WordNode(pos=(2425, 2445), word='--build=$buildArch', parts=[
    ParameterNode(pos=(2434, 2444), value='buildArch'),
  ]),
  WordNode(pos=(2448, 2473), word='--disable-dynamic-ssl-lib'),
  WordNode(pos=(2476, 2490), word='--disable-hipe'),
  WordNode(pos=(2493, 2507), word='--disable-sctp'),
  WordNode(pos=(2510, 2532), word='--disable-silent-rules'),
  WordNode(pos=(2535, 2557), word='--enable-clock-gettime'),
  WordNode(pos=(2560, 2580), word='--enable-hybrid-heap'),
  WordNode(pos=(2583, 2603), word='--enable-kernel-poll'),
  WordNode(pos=(2606, 2626), word='--enable-shared-zlib'),
  WordNode(pos=(2629, 2649), word='--enable-smp-support'),
  WordNode(pos=(2652, 2668), word='--enable-threads'),
  WordNode(pos=(2671, 2705), word='--with-microstate-accounting=extra'),
  WordNode(pos=(2708, 2729), word='--without-common_test'),
  WordNode(pos=(2732, 2750), word='--without-debugger'),
  WordNode(pos=(2753, 2771), word='--without-dialyzer'),
  WordNode(pos=(2774, 2792), word='--without-diameter'),
  WordNode(pos=(2795, 2809), word='--without-edoc'),
  WordNode(pos=(2812, 2832), word='--without-erl_docgen'),
  WordNode(pos=(2835, 2858), word='--without-erl_interface'),
  WordNode(pos=(2861, 2873), word='--without-et'),
  WordNode(pos=(2876, 2891), word='--without-eunit'),
  WordNode(pos=(2894, 2907), word='--without-ftp'),
  WordNode(pos=(2910, 2924), word='--without-hipe'),
  WordNode(pos=(2927, 2947), word='--without-jinterface'),
  WordNode(pos=(2950, 2966), word='--without-megaco'),
  WordNode(pos=(2969, 2987), word='--without-observer'),
  WordNode(pos=(2990, 3004), word='--without-odbc'),
  WordNode(pos=(3007, 3024), word='--without-reltool'),
  WordNode(pos=(3027, 3040), word='--without-ssh'),
  WordNode(pos=(3043, 3057), word='--without-tftp'),
  WordNode(pos=(3060, 3072), word='--without-wx'),
])


3180) rm -rf   "$OTP_PATH"*   /usr/local/lib/erlang/lib/*/examples   /usr/local/lib/erlang/lib/*/src

CommandNode(pos=(3181, 3275), parts=[
  WordNode(pos=(3181, 3183), word='rm'),
  WordNode(pos=(3184, 3187), word='-rf'),
  WordNode(pos=(3190, 3202), word='$OTP_PATH*', parts=[
    ParameterNode(pos=(3191, 3200), value='OTP_PATH'),
  ]),
  WordNode(pos=(3205, 3241), word='/usr/local/lib/erlang/lib/*/examples'),
  WordNode(pos=(3244, 3275), word='/usr/local/lib/erlang/lib/*/src'),
])


3181) [ -z "$savedAptMark" ]

CommandNode(pos=(3314, 3336), parts=[
  WordNode(pos=(3314, 3315), word='['),
  WordNode(pos=(3316, 3318), word='-z'),
  WordNode(pos=(3319, 3334), word='$savedAptMark', parts=[
    ParameterNode(pos=(3320, 3333), value='savedAptMark'),
  ]),
  WordNode(pos=(3335, 3336), word=']'),
])


3182) apt-mark manual $savedAptMark

CommandNode(pos=(3340, 3369), parts=[
  WordNode(pos=(3340, 3348), word='apt-mark'),
  WordNode(pos=(3349, 3355), word='manual'),
  WordNode(pos=(3356, 3369), word='$savedAptMark', parts=[
    ParameterNode(pos=(3356, 3369), value='savedAptMark'),
  ]),
])


3183) useradd --uid 999 --system --home-dir "$RABBITMQ_DATA_DIR" --gid rabbitmq rabbitmq

CommandNode(pos=(50, 132), parts=[
  WordNode(pos=(50, 57), word='useradd'),
  WordNode(pos=(58, 63), word='--uid'),
  WordNode(pos=(64, 67), word='999'),
  WordNode(pos=(68, 76), word='--system'),
  WordNode(pos=(77, 87), word='--home-dir'),
  WordNode(pos=(88, 108), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(89, 107), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(109, 114), word='--gid'),
  WordNode(pos=(115, 123), word='rabbitmq'),
  WordNode(pos=(124, 132), word='rabbitmq'),
])


3184) mkdir -p "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(135, 214), parts=[
  WordNode(pos=(135, 140), word='mkdir'),
  WordNode(pos=(141, 143), word='-p'),
  WordNode(pos=(144, 164), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(145, 163), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(165, 178), word='/etc/rabbitmq'),
  WordNode(pos=(179, 196), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(197, 214), word='/var/log/rabbitmq'),
])


3185) chown -fR rabbitmq:rabbitmq "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(217, 315), parts=[
  WordNode(pos=(217, 222), word='chown'),
  WordNode(pos=(223, 226), word='-fR'),
  WordNode(pos=(227, 244), word='rabbitmq:rabbitmq'),
  WordNode(pos=(245, 265), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(246, 264), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(266, 279), word='/etc/rabbitmq'),
  WordNode(pos=(280, 297), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(298, 315), word='/var/log/rabbitmq'),
])


3186) chmod 777 "$RABBITMQ_DATA_DIR" /etc/rabbitmq /tmp/rabbitmq-ssl /var/log/rabbitmq

CommandNode(pos=(318, 398), parts=[
  WordNode(pos=(318, 323), word='chmod'),
  WordNode(pos=(324, 327), word='777'),
  WordNode(pos=(328, 348), word='$RABBITMQ_DATA_DIR', parts=[
    ParameterNode(pos=(329, 347), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(349, 362), word='/etc/rabbitmq'),
  WordNode(pos=(363, 380), word='/tmp/rabbitmq-ssl'),
  WordNode(pos=(381, 398), word='/var/log/rabbitmq'),
])


3187) ln -sf "$RABBITMQ_DATA_DIR/.erlang.cookie" /root/.erlang.cookie

CommandNode(pos=(401, 464), parts=[
  WordNode(pos=(401, 403), word='ln'),
  WordNode(pos=(404, 407), word='-sf'),
  WordNode(pos=(408, 443), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(409, 427), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(444, 464), word='/root/.erlang.cookie'),
])


3188) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


3189) RABBITMQ_SOURCE_URL="https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz"

CommandNode(pos=(194, 350), parts=[
  AssignmentNode(pos=(194, 350), word='RABBITMQ_SOURCE_URL=https://github.com/rabbitmq/rabbitmq-server/releases/download/v$RABBITMQ_VERSION/rabbitmq-server-generic-unix-$RABBITMQ_VERSION.tar.xz', parts=[
    ParameterNode(pos=(278, 295), value='RABBITMQ_VERSION'),
    ParameterNode(pos=(325, 342), value='RABBITMQ_VERSION'),
  ]),
])


3190) RABBITMQ_PATH="/usr/local/src/rabbitmq-$RABBITMQ_VERSION"

CommandNode(pos=(353, 410), parts=[
  AssignmentNode(pos=(353, 410), word='RABBITMQ_PATH=/usr/local/src/rabbitmq-$RABBITMQ_VERSION', parts=[
    ParameterNode(pos=(392, 409), value='RABBITMQ_VERSION'),
  ]),
])


3191) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


3192) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_SOURCE_URL.asc"

CommandNode(pos=(414, 511), parts=[
  WordNode(pos=(414, 418), word='wget'),
  WordNode(pos=(419, 429), word='--progress'),
  WordNode(pos=(430, 438), word='dot:giga'),
  WordNode(pos=(439, 456), word='--output-document'),
  WordNode(pos=(457, 484), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(458, 472), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(485, 511), word='$RABBITMQ_SOURCE_URL.asc', parts=[
    ParameterNode(pos=(486, 506), value='RABBITMQ_SOURCE_URL'),
  ]),
])


3193) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


3194) wget --progress dot:giga --output-document "$RABBITMQ_PATH.tar.xz" "$RABBITMQ_SOURCE_URL"

CommandNode(pos=(514, 603), parts=[
  WordNode(pos=(514, 518), word='wget'),
  WordNode(pos=(519, 529), word='--progress'),
  WordNode(pos=(530, 538), word='dot:giga'),
  WordNode(pos=(539, 556), word='--output-document'),
  WordNode(pos=(557, 580), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(558, 572), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(581, 603), word='$RABBITMQ_SOURCE_URL', parts=[
    ParameterNode(pos=(582, 602), value='RABBITMQ_SOURCE_URL'),
  ]),
])


3195) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


3196) gpg --batch --keyserver "$PGP_KEYSERVER" --recv-keys "$RABBITMQ_PGP_KEY_ID"

CommandNode(pos=(641, 716), parts=[
  WordNode(pos=(641, 644), word='gpg'),
  WordNode(pos=(645, 652), word='--batch'),
  WordNode(pos=(653, 664), word='--keyserver'),
  WordNode(pos=(665, 681), word='$PGP_KEYSERVER', parts=[
    ParameterNode(pos=(666, 680), value='PGP_KEYSERVER'),
  ]),
  WordNode(pos=(682, 693), word='--recv-keys'),
  WordNode(pos=(694, 716), word='$RABBITMQ_PGP_KEY_ID', parts=[
    ParameterNode(pos=(695, 715), value='RABBITMQ_PGP_KEY_ID'),
  ]),
])


3197) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


3198) gpg --batch --verify "$RABBITMQ_PATH.tar.xz.asc" "$RABBITMQ_PATH.tar.xz"

CommandNode(pos=(719, 791), parts=[
  WordNode(pos=(719, 722), word='gpg'),
  WordNode(pos=(723, 730), word='--batch'),
  WordNode(pos=(731, 739), word='--verify'),
  WordNode(pos=(740, 767), word='$RABBITMQ_PATH.tar.xz.asc', parts=[
    ParameterNode(pos=(741, 755), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(768, 791), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(769, 783), value='RABBITMQ_PATH'),
  ]),
])


3199) rm -rf "$GNUPGHOME"

CommandNode(pos=(815, 834), parts=[
  WordNode(pos=(815, 817), word='rm'),
  WordNode(pos=(818, 821), word='-rf'),
  WordNode(pos=(822, 834), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(823, 833), value='GNUPGHOME'),
  ]),
])


3200) mkdir -p "$RABBITMQ_HOME"

CommandNode(pos=(838, 863), parts=[
  WordNode(pos=(838, 843), word='mkdir'),
  WordNode(pos=(844, 846), word='-p'),
  WordNode(pos=(847, 863), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(848, 862), value='RABBITMQ_HOME'),
  ]),
])


3201) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


3202) tar --extract --file "$RABBITMQ_PATH.tar.xz" --directory "$RABBITMQ_HOME" --strip-components 1

CommandNode(pos=(866, 960), parts=[
  WordNode(pos=(866, 869), word='tar'),
  WordNode(pos=(870, 879), word='--extract'),
  WordNode(pos=(880, 886), word='--file'),
  WordNode(pos=(887, 910), word='$RABBITMQ_PATH.tar.xz', parts=[
    ParameterNode(pos=(888, 902), value='RABBITMQ_PATH'),
  ]),
  WordNode(pos=(911, 922), word='--directory'),
  WordNode(pos=(923, 939), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(924, 938), value='RABBITMQ_HOME'),
  ]),
  WordNode(pos=(940, 958), word='--strip-components'),
  WordNode(pos=(959, 960), word='1'),
])


3203) rm -rf "$RABBITMQ_PATH"*

CommandNode(pos=(963, 987), parts=[
  WordNode(pos=(963, 965), word='rm'),
  WordNode(pos=(966, 969), word='-rf'),
  WordNode(pos=(970, 987), word='$RABBITMQ_PATH*', parts=[
    ParameterNode(pos=(971, 985), value='RABBITMQ_PATH'),
  ]),
])


3204) grep -qE '^SYS_PREFIX=\$\{RABBITMQ_HOME\}$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(990, 1073), parts=[
  WordNode(pos=(990, 994), word='grep'),
  WordNode(pos=(995, 998), word='-qE'),
  WordNode(pos=(999, 1033), word='^SYS_PREFIX=\\$\\{RABBITMQ_HOME\\}$'),
  WordNode(pos=(1034, 1073), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1035, 1049), value='RABBITMQ_HOME'),
  ]),
])


3205) sed -i 's/^SYS_PREFIX=.*$/SYS_PREFIX=/' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1076, 1155), parts=[
  WordNode(pos=(1076, 1079), word='sed'),
  WordNode(pos=(1080, 1082), word='-i'),
  WordNode(pos=(1083, 1115), word='s/^SYS_PREFIX=.*$/SYS_PREFIX=/'),
  WordNode(pos=(1116, 1155), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1117, 1131), value='RABBITMQ_HOME'),
  ]),
])


3206) grep -qE '^SYS_PREFIX=$' "$RABBITMQ_HOME/sbin/rabbitmq-defaults"

CommandNode(pos=(1158, 1222), parts=[
  WordNode(pos=(1158, 1162), word='grep'),
  WordNode(pos=(1163, 1166), word='-qE'),
  WordNode(pos=(1167, 1182), word='^SYS_PREFIX=$'),
  WordNode(pos=(1183, 1222), word='$RABBITMQ_HOME/sbin/rabbitmq-defaults', parts=[
    ParameterNode(pos=(1184, 1198), value='RABBITMQ_HOME'),
  ]),
])


3207) chown -R rabbitmq:rabbitmq "$RABBITMQ_HOME"

CommandNode(pos=(1225, 1268), parts=[
  WordNode(pos=(1225, 1230), word='chown'),
  WordNode(pos=(1231, 1233), word='-R'),
  WordNode(pos=(1234, 1251), word='rabbitmq:rabbitmq'),
  WordNode(pos=(1252, 1268), word='$RABBITMQ_HOME', parts=[
    ParameterNode(pos=(1253, 1267), value='RABBITMQ_HOME'),
  ]),
])


3208) apt-mark manual $savedAptMark

CommandNode(pos=(1305, 1334), parts=[
  WordNode(pos=(1305, 1313), word='apt-mark'),
  WordNode(pos=(1314, 1320), word='manual'),
  WordNode(pos=(1321, 1334), word='$savedAptMark', parts=[
    ParameterNode(pos=(1321, 1334), value='savedAptMark'),
  ]),
])


3209) [ ! -e "$RABBITMQ_DATA_DIR/.erlang.cookie" ]

CommandNode(pos=(1417, 1461), parts=[
  WordNode(pos=(1417, 1418), word='['),
  WordNode(pos=(1419, 1420), word='!'),
  WordNode(pos=(1421, 1423), word='-e'),
  WordNode(pos=(1424, 1459), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1425, 1443), value='RABBITMQ_DATA_DIR'),
  ]),
  WordNode(pos=(1460, 1461), word=']'),
])


3210) rm "$RABBITMQ_DATA_DIR/.erlang.cookie"

CommandNode(pos=(1576, 1614), parts=[
  WordNode(pos=(1576, 1578), word='rm'),
  WordNode(pos=(1579, 1614), word='$RABBITMQ_DATA_DIR/.erlang.cookie', parts=[
    ParameterNode(pos=(1580, 1598), value='RABBITMQ_DATA_DIR'),
  ]),
])


3211) apt-get install -y   $PHPIZE_DEPS   ca-certificates   curl   xz-utils  --no-install-recommends

CommandNode(pos=(18, 112), parts=[
  WordNode(pos=(18, 25), word='apt-get'),
  WordNode(pos=(26, 33), word='install'),
  WordNode(pos=(34, 36), word='-y'),
  WordNode(pos=(39, 51), word='$PHPIZE_DEPS', parts=[
    ParameterNode(pos=(39, 51), value='PHPIZE_DEPS'),
  ]),
  WordNode(pos=(54, 69), word='ca-certificates'),
  WordNode(pos=(72, 76), word='curl'),
  WordNode(pos=(79, 87), word='xz-utils'),
  WordNode(pos=(89, 112), word='--no-install-recommends'),
])


3212) mkdir -p "$PHP_INI_DIR/conf.d"

CommandNode(pos=(11, 41), parts=[
  WordNode(pos=(11, 16), word='mkdir'),
  WordNode(pos=(17, 19), word='-p'),
  WordNode(pos=(20, 41), word='$PHP_INI_DIR/conf.d', parts=[
    ParameterNode(pos=(21, 33), value='PHP_INI_DIR'),
  ]),
])


3213) fetchDeps="$fetchDeps    dirmngr    gnupg   "

CommandNode(pos=(75, 120), parts=[
  AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
    ParameterNode(pos=(86, 96), value='fetchDeps'),
  ]),
])


3214) apt-get install -y --no-install-recommends $fetchDeps

CommandNode(pos=(145, 198), parts=[
  WordNode(pos=(145, 152), word='apt-get'),
  WordNode(pos=(153, 160), word='install'),
  WordNode(pos=(161, 163), word='-y'),
  WordNode(pos=(164, 187), word='--no-install-recommends'),
  WordNode(pos=(188, 198), word='$fetchDeps', parts=[
    ParameterNode(pos=(188, 198), value='fetchDeps'),
  ]),
])


3215) wget -O php.tar.xz "$PHP_URL"

CommandNode(pos=(267, 296), parts=[
  WordNode(pos=(267, 271), word='wget'),
  WordNode(pos=(272, 274), word='-O'),
  WordNode(pos=(275, 285), word='php.tar.xz'),
  WordNode(pos=(286, 296), word='$PHP_URL', parts=[
    ParameterNode(pos=(287, 295), value='PHP_URL'),
  ]),
])


3216) [ -n "$PHP_SHA256" ]

CommandNode(pos=(303, 323), parts=[
  WordNode(pos=(303, 304), word='['),
  WordNode(pos=(305, 307), word='-n'),
  WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
    ParameterNode(pos=(309, 320), value='PHP_SHA256'),
  ]),
  WordNode(pos=(322, 323), word=']'),
])


3217) echo "$PHP_SHA256 *php.tar.xz"

CommandNode(pos=(332, 362), parts=[
  WordNode(pos=(332, 336), word='echo'),
  WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
    ParameterNode(pos=(338, 349), value='PHP_SHA256'),
  ]),
])


3218) [ -n "$PHP_MD5" ]

CommandNode(pos=(390, 407), parts=[
  WordNode(pos=(390, 391), word='['),
  WordNode(pos=(392, 394), word='-n'),
  WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
    ParameterNode(pos=(396, 404), value='PHP_MD5'),
  ]),
  WordNode(pos=(406, 407), word=']'),
])


3219) echo "$PHP_MD5 *php.tar.xz"

CommandNode(pos=(416, 443), parts=[
  WordNode(pos=(416, 420), word='echo'),
  WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
    ParameterNode(pos=(422, 430), value='PHP_MD5'),
  ]),
])


3220) [ -n "$PHP_ASC_URL" ]

CommandNode(pos=(469, 490), parts=[
  WordNode(pos=(469, 470), word='['),
  WordNode(pos=(471, 473), word='-n'),
  WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
  ]),
  WordNode(pos=(489, 490), word=']'),
])


3221) wget -O php.tar.xz.asc "$PHP_ASC_URL"

CommandNode(pos=(499, 536), parts=[
  WordNode(pos=(499, 503), word='wget'),
  WordNode(pos=(504, 506), word='-O'),
  WordNode(pos=(507, 521), word='php.tar.xz.asc'),
  WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
    ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
  ]),
])


3222) set -xe;   fetchDeps='   wget  ';  if ! command -v gpg > /dev/null; then   fetchDeps="$fetchDeps    dirmngr    gnupg   ";  fi;  apt-get update;  apt-get install -y --no-install-recommends $fetchDeps;  rm -rf /var/lib/apt/lists/*;   mkdir -p /usr/src;  cd /usr/src;   wget -O php.tar.xz "$PHP_URL";   if [ -n "$PHP_SHA256" ]; then   echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -;  fi;  if [ -n "$PHP_MD5" ]; then   echo "$PHP_MD5 *php.tar.xz" | md5sum -c -;  fi;   if [ -n "$PHP_ASC_URL" ]; then   wget -O php.tar.xz.asc "$PHP_ASC_URL";   export GNUPGHOME="$(mktemp -d)";   for key in $GPG_KEYS; do    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";   done;   gpg --batch --verify php.tar.xz.asc php.tar.xz;   command -v gpgconf > /dev/null && gpgconf --kill all;   rm -rf "$GNUPGHOME";  fi;   apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

ListNode(pos=(0, 905), parts=[
  CommandNode(pos=(0, 7), parts=[
    WordNode(pos=(0, 3), word='set'),
    WordNode(pos=(4, 7), word='-xe'),
  ]),
  OperatorNode(op=';', pos=(7, 8)),
  CommandNode(pos=(11, 32), parts=[
    AssignmentNode(pos=(11, 32), word='fetchDeps=   wget  '),
  ]),
  OperatorNode(op=';', pos=(32, 33)),
  CompoundNode(list=[
    IfNode(pos=(35, 125), parts=[
      ReservedwordNode(pos=(35, 37), word='if'),
      ListNode(pos=(38, 67), parts=[
          PipelineNode(pos=(38, 66), parts=[
            ReservedwordNode(pos=(38, 39), word='!'),
            CommandNode(pos=(40, 66), parts=[
              WordNode(pos=(40, 47), word='command'),
              WordNode(pos=(48, 50), word='-v'),
              WordNode(pos=(51, 54), word='gpg'),
              RedirectNode(output=
                WordNode(pos=(57, 66), word='/dev/null'), pos=(55, 66), type='>'),
            ]),
          ]),
          OperatorNode(op=';', pos=(66, 67)),
        ]),
      ReservedwordNode(pos=(68, 72), word='then'),
      ListNode(pos=(75, 121), parts=[
          CommandNode(pos=(75, 120), parts=[
            AssignmentNode(pos=(75, 120), word='fetchDeps=$fetchDeps    dirmngr    gnupg   ', parts=[
              ParameterNode(pos=(86, 96), value='fetchDeps'),
            ]),
          ]),
          OperatorNode(op=';', pos=(120, 121)),
        ]),
      ReservedwordNode(pos=(123, 125), word='fi'),
    ]),
  ], pos=(35, 125)),
  OperatorNode(op=';', pos=(125, 126)),
  CommandNode(pos=(128, 142), parts=[
    WordNode(pos=(128, 135), word='apt-get'),
    WordNode(pos=(136, 142), word='update'),
  ]),
  OperatorNode(op=';', pos=(142, 143)),
  CommandNode(pos=(145, 198), parts=[
    WordNode(pos=(145, 152), word='apt-get'),
    WordNode(pos=(153, 160), word='install'),
    WordNode(pos=(161, 163), word='-y'),
    WordNode(pos=(164, 187), word='--no-install-recommends'),
    WordNode(pos=(188, 198), word='$fetchDeps', parts=[
      ParameterNode(pos=(188, 198), value='fetchDeps'),
    ]),
  ]),
  OperatorNode(op=';', pos=(198, 199)),
  CommandNode(pos=(201, 228), parts=[
    WordNode(pos=(201, 203), word='rm'),
    WordNode(pos=(204, 207), word='-rf'),
    WordNode(pos=(208, 228), word='/var/lib/apt/lists/*'),
  ]),
  OperatorNode(op=';', pos=(228, 229)),
  CommandNode(pos=(232, 249), parts=[
    WordNode(pos=(232, 237), word='mkdir'),
    WordNode(pos=(238, 240), word='-p'),
    WordNode(pos=(241, 249), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(249, 250)),
  CommandNode(pos=(252, 263), parts=[
    WordNode(pos=(252, 254), word='cd'),
    WordNode(pos=(255, 263), word='/usr/src'),
  ]),
  OperatorNode(op=';', pos=(263, 264)),
  CommandNode(pos=(267, 296), parts=[
    WordNode(pos=(267, 271), word='wget'),
    WordNode(pos=(272, 274), word='-O'),
    WordNode(pos=(275, 285), word='php.tar.xz'),
    WordNode(pos=(286, 296), word='$PHP_URL', parts=[
      ParameterNode(pos=(287, 295), value='PHP_URL'),
    ]),
  ]),
  OperatorNode(op=';', pos=(296, 297)),
  CompoundNode(list=[
    IfNode(pos=(300, 384), parts=[
      ReservedwordNode(pos=(300, 302), word='if'),
      ListNode(pos=(303, 324), parts=[
          CommandNode(pos=(303, 323), parts=[
            WordNode(pos=(303, 304), word='['),
            WordNode(pos=(305, 307), word='-n'),
            WordNode(pos=(308, 321), word='$PHP_SHA256', parts=[
              ParameterNode(pos=(309, 320), value='PHP_SHA256'),
            ]),
            WordNode(pos=(322, 323), word=']'),
          ]),
          OperatorNode(op=';', pos=(323, 324)),
        ]),
      ReservedwordNode(pos=(325, 329), word='then'),
      ListNode(pos=(332, 380), parts=[
          PipelineNode(pos=(332, 379), parts=[
            CommandNode(pos=(332, 362), parts=[
              WordNode(pos=(332, 336), word='echo'),
              WordNode(pos=(337, 362), word='$PHP_SHA256 *php.tar.xz', parts=[
                ParameterNode(pos=(338, 349), value='PHP_SHA256'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(363, 364)),
            CommandNode(pos=(365, 379), parts=[
              WordNode(pos=(365, 374), word='sha256sum'),
              WordNode(pos=(375, 377), word='-c'),
              WordNode(pos=(378, 379), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(379, 380)),
        ]),
      ReservedwordNode(pos=(382, 384), word='fi'),
    ]),
  ], pos=(300, 384)),
  OperatorNode(op=';', pos=(384, 385)),
  CompoundNode(list=[
    IfNode(pos=(387, 462), parts=[
      ReservedwordNode(pos=(387, 389), word='if'),
      ListNode(pos=(390, 408), parts=[
          CommandNode(pos=(390, 407), parts=[
            WordNode(pos=(390, 391), word='['),
            WordNode(pos=(392, 394), word='-n'),
            WordNode(pos=(395, 405), word='$PHP_MD5', parts=[
              ParameterNode(pos=(396, 404), value='PHP_MD5'),
            ]),
            WordNode(pos=(406, 407), word=']'),
          ]),
          OperatorNode(op=';', pos=(407, 408)),
        ]),
      ReservedwordNode(pos=(409, 413), word='then'),
      ListNode(pos=(416, 458), parts=[
          PipelineNode(pos=(416, 457), parts=[
            CommandNode(pos=(416, 443), parts=[
              WordNode(pos=(416, 420), word='echo'),
              WordNode(pos=(421, 443), word='$PHP_MD5 *php.tar.xz', parts=[
                ParameterNode(pos=(422, 430), value='PHP_MD5'),
              ]),
            ]),
            PipeNode(pipe='|', pos=(444, 445)),
            CommandNode(pos=(446, 457), parts=[
              WordNode(pos=(446, 452), word='md5sum'),
              WordNode(pos=(453, 455), word='-c'),
              WordNode(pos=(456, 457), word='-'),
            ]),
          ]),
          OperatorNode(op=';', pos=(457, 458)),
        ]),
      ReservedwordNode(pos=(460, 462), word='fi'),
    ]),
  ], pos=(387, 462)),
  OperatorNode(op=';', pos=(462, 463)),
  CompoundNode(list=[
    IfNode(pos=(466, 814), parts=[
      ReservedwordNode(pos=(466, 468), word='if'),
      ListNode(pos=(469, 491), parts=[
          CommandNode(pos=(469, 490), parts=[
            WordNode(pos=(469, 470), word='['),
            WordNode(pos=(471, 473), word='-n'),
            WordNode(pos=(474, 488), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(475, 487), value='PHP_ASC_URL'),
            ]),
            WordNode(pos=(489, 490), word=']'),
          ]),
          OperatorNode(op=';', pos=(490, 491)),
        ]),
      ReservedwordNode(pos=(492, 496), word='then'),
      ListNode(pos=(499, 810), parts=[
          CommandNode(pos=(499, 536), parts=[
            WordNode(pos=(499, 503), word='wget'),
            WordNode(pos=(504, 506), word='-O'),
            WordNode(pos=(507, 521), word='php.tar.xz.asc'),
            WordNode(pos=(522, 536), word='$PHP_ASC_URL', parts=[
              ParameterNode(pos=(523, 535), value='PHP_ASC_URL'),
            ]),
          ]),
          OperatorNode(op=';', pos=(536, 537)),
          CommandNode(pos=(540, 571), parts=[
            WordNode(pos=(540, 546), word='export'),
            WordNode(pos=(547, 571), word='GNUPGHOME=$(mktemp -d)', parts=[
              CommandsubstitutionNode(command=
                CommandNode(pos=(560, 569), parts=[
                  WordNode(pos=(560, 566), word='mktemp'),
                  WordNode(pos=(567, 569), word='-d'),
                ]), pos=(558, 570)),
            ]),
          ]),
          OperatorNode(op=';', pos=(571, 572)),
          CompoundNode(list=[
            ForNode(pos=(575, 680), parts=[
              ReservedwordNode(pos=(575, 578), word='for'),
              WordNode(pos=(579, 582), word='key'),
              ReservedwordNode(pos=(583, 585), word='in'),
              WordNode(pos=(586, 595), word='$GPG_KEYS', parts=[
                ParameterNode(pos=(586, 595), value='GPG_KEYS'),
              ]),
              ReservedwordNode(pos=(595, 596), word=';'),
              ReservedwordNode(pos=(597, 599), word='do'),
              ListNode(pos=(603, 673), parts=[
                  CommandNode(pos=(603, 672), parts=[
                    WordNode(pos=(603, 606), word='gpg'),
                    WordNode(pos=(607, 614), word='--batch'),
                    WordNode(pos=(615, 626), word='--keyserver'),
                    WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
                    WordNode(pos=(654, 665), word='--recv-keys'),
                    WordNode(pos=(666, 672), word='$key', parts=[
                      ParameterNode(pos=(667, 671), value='key'),
                    ]),
                  ]),
                  OperatorNode(op=';', pos=(672, 673)),
                ]),
              ReservedwordNode(pos=(676, 680), word='done'),
            ]),
          ], pos=(575, 680)),
          OperatorNode(op=';', pos=(680, 681)),
          CommandNode(pos=(684, 730), parts=[
            WordNode(pos=(684, 687), word='gpg'),
            WordNode(pos=(688, 695), word='--batch'),
            WordNode(pos=(696, 704), word='--verify'),
            WordNode(pos=(705, 719), word='php.tar.xz.asc'),
            WordNode(pos=(720, 730), word='php.tar.xz'),
          ]),
          OperatorNode(op=';', pos=(730, 731)),
          CommandNode(pos=(734, 764), parts=[
            WordNode(pos=(734, 741), word='command'),
            WordNode(pos=(742, 744), word='-v'),
            WordNode(pos=(745, 752), word='gpgconf'),
            RedirectNode(output=
              WordNode(pos=(755, 764), word='/dev/null'), pos=(753, 764), type='>'),
          ]),
          OperatorNode(op='&&', pos=(765, 767)),
          CommandNode(pos=(768, 786), parts=[
            WordNode(pos=(768, 775), word='gpgconf'),
            WordNode(pos=(776, 782), word='--kill'),
            WordNode(pos=(783, 786), word='all'),
          ]),
          OperatorNode(op=';', pos=(786, 787)),
          CommandNode(pos=(790, 809), parts=[
            WordNode(pos=(790, 792), word='rm'),
            WordNode(pos=(793, 796), word='-rf'),
            WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
              ParameterNode(pos=(798, 808), value='GNUPGHOME'),
            ]),
          ]),
          OperatorNode(op=';', pos=(809, 810)),
        ]),
      ReservedwordNode(pos=(812, 814), word='fi'),
    ]),
  ], pos=(466, 814)),
  OperatorNode(op=';', pos=(814, 815)),
  CommandNode(pos=(818, 905), parts=[
    WordNode(pos=(818, 825), word='apt-get'),
    WordNode(pos=(826, 831), word='purge'),
    WordNode(pos=(832, 834), word='-y'),
    WordNode(pos=(835, 848), word='--auto-remove'),
    WordNode(pos=(849, 851), word='-o'),
    WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
    WordNode(pos=(895, 905), word='$fetchDeps', parts=[
      ParameterNode(pos=(895, 905), value='fetchDeps'),
    ]),
  ]),
])


3223) gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"

CommandNode(pos=(603, 672), parts=[
  WordNode(pos=(603, 606), word='gpg'),
  WordNode(pos=(607, 614), word='--batch'),
  WordNode(pos=(615, 626), word='--keyserver'),
  WordNode(pos=(627, 653), word='ha.pool.sks-keyservers.net'),
  WordNode(pos=(654, 665), word='--recv-keys'),
  WordNode(pos=(666, 672), word='$key', parts=[
    ParameterNode(pos=(667, 671), value='key'),
  ]),
])


3224) rm -rf "$GNUPGHOME"

CommandNode(pos=(790, 809), parts=[
  WordNode(pos=(790, 792), word='rm'),
  WordNode(pos=(793, 796), word='-rf'),
  WordNode(pos=(797, 809), word='$GNUPGHOME', parts=[
    ParameterNode(pos=(798, 808), value='GNUPGHOME'),
  ]),
])


3225) apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

CommandNode(pos=(818, 905), parts=[
  WordNode(pos=(818, 825), word='apt-get'),
  WordNode(pos=(826, 831), word='purge'),
  WordNode(pos=(832, 834), word='-y'),
  WordNode(pos=(835, 848), word='--auto-remove'),
  WordNode(pos=(849, 851), word='-o'),
  WordNode(pos=(852, 894), word='APT::AutoRemove::RecommendsImportant=false'),
  WordNode(pos=(895, 905), word='$fetchDeps', parts=[
    ParameterNode(pos=(895, 905), value='fetchDeps'),
  ]),
])


3226) [ "$JAVA_HOME" = "$(docker-java-home)" ]

CommandNode(pos=(128, 168), parts=[
  WordNode(pos=(128, 129), word='['),
  WordNode(pos=(130, 142), word='$JAVA_HOME', parts=[
    ParameterNode(pos=(131, 141), value='JAVA_HOME'),
  ]),
  WordNode(pos=(143, 144), word='='),
  WordNode(pos=(145, 166), word='$(docker-java-home)', parts=[
    CommandsubstitutionNode(command=
      CommandNode(pos=(148, 164), parts=[
        WordNode(pos=(148, 164), word='docker-java-home'),
      ]), pos=(146, 165)),
  ]),
  WordNode(pos=(167, 168), word=']'),
])


3227) apt-get install -y --no-install-recommends $buildDeps

CommandNode(pos=(612, 665), parts=[
  WordNode(pos=(612, 619), word='apt-get'),
  WordNode(pos=(620, 627), word='install'),
  WordNode(pos=(628, 630), word='-y'),
  WordNode(pos=(631, 654), word='--no-install-recommends'),
  WordNode(pos=(655, 665), word='$buildDeps', parts=[
    ParameterNode(pos=(655, 665), value='buildDeps'),
  ]),
])


3228) curl -SL "http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz" -o nginx.tar.gz

CommandNode(pos=(701, 781), parts=[
  WordNode(pos=(701, 705), word='curl'),
  WordNode(pos=(706, 709), word='-SL'),
  WordNode(pos=(710, 765), word='http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz', parts=[
    ParameterNode(pos=(743, 757), value='NGINX_VERSION'),
  ]),
  WordNode(pos=(766, 768), word='-o'),
  WordNode(pos=(769, 781), word='nginx.tar.gz'),
])


3229) curl -SL "http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc" -o nginx.tar.gz.asc

CommandNode(pos=(786, 874), parts=[
  WordNode(pos=(786, 790), word='curl'),
  WordNode(pos=(791, 794), word='-SL'),
  WordNode(pos=(795, 854), word='http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc', parts=[
    ParameterNode(pos=(828, 842), value='NGINX_VERSION'),
  ]),
  WordNode(pos=(855, 857), word='-o'),
  WordNode(pos=(858, 874), word='nginx.tar.gz.asc'),
])


3230) apt-get purge -y --auto-remove $buildDeps

CommandNode(pos=(1919, 1960), parts=[
  WordNode(pos=(1919, 1926), word='apt-get'),
  WordNode(pos=(1927, 1932), word='purge'),
  WordNode(pos=(1933, 1935), word='-y'),
  WordNode(pos=(1936, 1949), word='--auto-remove'),
  WordNode(pos=(1950, 1960), word='$buildDeps', parts=[
    ParameterNode(pos=(1950, 1960), value='buildDeps'),
  ]),
])


